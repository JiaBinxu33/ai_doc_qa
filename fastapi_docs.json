[
  {
    "url": "https://fastapi.tiangolo.com/tutorial/body-nested-models/",
    "title": "Body - Nested Models¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nBody - Nested Models\nTable of contents\nList fields\nList fields with type parameter\nImport typing's\nList\nDeclare a\nlist\nwith a type parameter\nSet types\nNested Models\nDefine a submodel\nUse the submodel as a type\nSpecial types and validation\nAttributes with lists of submodels\nDeeply nested models\nBodies of pure lists\nEditor support everywhere\nBodies of arbitrary\ndict\ns\nRecap\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nList fields\nList fields with type parameter\nImport typing's\nList\nDeclare a\nlist\nwith a type parameter\nSet types\nNested Models\nDefine a submodel\nUse the submodel as a type\nSpecial types and validation\nAttributes with lists of submodels\nDeeply nested models\nBodies of pure lists\nEditor support everywhere\nBodies of arbitrary\ndict\ns\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nBody - Nested Models\n¶\nWith\nFastAPI\n, you can define, validate, document, and use arbitrarily deeply nested models (thanks to Pydantic).\nList fields\n¶\nYou can define an attribute to be a subtype. For example, a Python\nlist\n:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nlist\n=\n[]\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nlist\n=\n[]\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nThis will make\ntags\nbe a list, although it doesn't declare the type of the elements of the list.\nList fields with type parameter\n¶\nBut Python has a specific way to declare lists with internal types, or \"type parameters\":\nImport typing's\nList\n¶\nIn Python 3.9 and above you can use the standard\nlist\nto declare these type annotations as we'll see below. 💡\nBut in Python versions before 3.9 (3.6 and above), you first need to import\nList\nfrom standard Python's\ntyping\nmodule:\nPython 3.8+\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.10+\nPython 3.9+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nDeclare a\nlist\nwith a type parameter\n¶\nTo declare types that have type parameters (internal types), like\nlist\n,\ndict\n,\ntuple\n:\nIf you are in a Python version lower than 3.9, import their equivalent version from the\ntyping\nmodule\nPass the internal type(s) as \"type parameters\" using square brackets:\n[\nand\n]\nIn Python 3.9 it would be:\nmy_list\n:\nlist\n[\nstr\n]\nIn versions of Python before 3.9, it would be:\nfrom\ntyping\nimport\nList\nmy_list\n:\nList\n[\nstr\n]\nThat's all standard Python syntax for type declarations.\nUse that same standard syntax for model attributes with internal types.\nSo, in our example, we can make\ntags\nbe specifically a \"list of strings\":\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nSet types\n¶\nBut then we think about it, and realize that tags shouldn't repeat, they would probably be unique strings.\nAnd Python has a special data type for sets of unique items, the\nset\n.\nThen we can declare\ntags\nas a set of strings:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nSet\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nSet\n[\nstr\n]\n=\nset\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nWith this, even if you receive a request with duplicate data, it will be converted to a set of unique items.\nAnd whenever you output that data, even if the source had duplicates, it will be output as a set of unique items.\nAnd it will be annotated / documented accordingly too.\nNested Models\n¶\nEach attribute of a Pydantic model has a type.\nBut that type can itself be another Pydantic model.\nSo, you can declare deeply nested JSON \"objects\" with specific attribute names, types and validations.\nAll that, arbitrarily nested.\nDefine a submodel\n¶\nFor example, we can define an\nImage\nmodel:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nstr\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\nimage\n:\nImage\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nstr\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\nimage\n:\nUnion\n[\nImage\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nSet\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nstr\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nSet\n[\nstr\n]\n=\nset\n()\nimage\n:\nUnion\n[\nImage\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nUse the submodel as a type\n¶\nAnd then we can use it as the type of an attribute:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nstr\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\nimage\n:\nImage\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nstr\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\nimage\n:\nUnion\n[\nImage\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nSet\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nstr\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nSet\n[\nstr\n]\n=\nset\n()\nimage\n:\nUnion\n[\nImage\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nThis would mean that\nFastAPI\nwould expect a body similar to:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"The pretender\"\n,\n\"price\"\n:\n42.0\n,\n\"tax\"\n:\n3.2\n,\n\"tags\"\n:\n[\n\"rock\"\n,\n\"metal\"\n,\n\"bar\"\n],\n\"image\"\n:\n{\n\"url\"\n:\n\"http://example.com/baz.jpg\"\n,\n\"name\"\n:\n\"The Foo live\"\n}\n}\nAgain, doing just that declaration, with\nFastAPI\nyou get:\nEditor support (completion, etc.), even for nested models\nData conversion\nData validation\nAutomatic documentation\nSpecial types and validation\n¶\nApart from normal singular types like\nstr\n,\nint\n,\nfloat\n, etc. you can use more complex singular types that inherit from\nstr\n.\nTo see all the options you have, checkout\nPydantic's Type Overview\n. You will see some examples in the next chapter.\nFor example, as in the\nImage\nmodel we have a\nurl\nfield, we can declare it to be an instance of Pydantic's\nHttpUrl\ninstead of a\nstr\n:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nHttpUrl\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\nimage\n:\nImage\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nHttpUrl\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\nimage\n:\nUnion\n[\nImage\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nSet\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nHttpUrl\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nSet\n[\nstr\n]\n=\nset\n()\nimage\n:\nUnion\n[\nImage\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nThe string will be checked to be a valid URL, and documented in JSON Schema / OpenAPI as such.\nAttributes with lists of submodels\n¶\nYou can also use Pydantic models as subtypes of\nlist\n,\nset\n, etc.:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nHttpUrl\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\nimages\n:\nlist\n[\nImage\n]\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nHttpUrl\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\nimages\n:\nUnion\n[\nlist\n[\nImage\n],\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nList\n,\nSet\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nHttpUrl\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nSet\n[\nstr\n]\n=\nset\n()\nimages\n:\nUnion\n[\nList\n[\nImage\n],\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nThis will expect (convert, validate, document, etc.) a JSON body like:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"The pretender\"\n,\n\"price\"\n:\n42.0\n,\n\"tax\"\n:\n3.2\n,\n\"tags\"\n:\n[\n\"rock\"\n,\n\"metal\"\n,\n\"bar\"\n],\n\"images\"\n:\n[\n{\n\"url\"\n:\n\"http://example.com/baz.jpg\"\n,\n\"name\"\n:\n\"The Foo live\"\n},\n{\n\"url\"\n:\n\"http://example.com/dave.jpg\"\n,\n\"name\"\n:\n\"The Baz\"\n}\n]\n}\nInfo\nNotice how the\nimages\nkey now has a list of image objects.\nDeeply nested models\n¶\nYou can define arbitrarily deeply nested models:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nHttpUrl\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\nimages\n:\nlist\n[\nImage\n]\n|\nNone\n=\nNone\nclass\nOffer\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\nitems\n:\nlist\n[\nItem\n]\n@app\n.\npost\n(\n\"/offers/\"\n)\nasync\ndef\ncreate_offer\n(\noffer\n:\nOffer\n):\nreturn\noffer\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nHttpUrl\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\nimages\n:\nUnion\n[\nlist\n[\nImage\n],\nNone\n]\n=\nNone\nclass\nOffer\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\nitems\n:\nlist\n[\nItem\n]\n@app\n.\npost\n(\n\"/offers/\"\n)\nasync\ndef\ncreate_offer\n(\noffer\n:\nOffer\n):\nreturn\noffer\nfrom\ntyping\nimport\nList\n,\nSet\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nHttpUrl\nname\n:\nstr\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nSet\n[\nstr\n]\n=\nset\n()\nimages\n:\nUnion\n[\nList\n[\nImage\n],\nNone\n]\n=\nNone\nclass\nOffer\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\nitems\n:\nList\n[\nItem\n]\n@app\n.\npost\n(\n\"/offers/\"\n)\nasync\ndef\ncreate_offer\n(\noffer\n:\nOffer\n):\nreturn\noffer\nInfo\nNotice how\nOffer\nhas a list of\nItem\ns, which in turn have an optional list of\nImage\ns\nBodies of pure lists\n¶\nIf the top level value of the JSON body you expect is a JSON\narray\n(a Python\nlist\n), you can declare the type in the parameter of the function, the same as in Pydantic models:\nimages\n:\nList\n[\nImage\n]\nor in Python 3.9 and above:\nimages\n:\nlist\n[\nImage\n]\nas in:\nPython 3.9+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nHttpUrl\nname\n:\nstr\n@app\n.\npost\n(\n\"/images/multiple/\"\n)\nasync\ndef\ncreate_multiple_images\n(\nimages\n:\nlist\n[\nImage\n]):\nreturn\nimages\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nImage\n(\nBaseModel\n):\nurl\n:\nHttpUrl\nname\n:\nstr\n@app\n.\npost\n(\n\"/images/multiple/\"\n)\nasync\ndef\ncreate_multiple_images\n(\nimages\n:\nList\n[\nImage\n]):\nreturn\nimages\nEditor support everywhere\n¶\nAnd you get editor support everywhere.\nEven for items inside of lists:\nYou couldn't get this kind of editor support if you were working directly with\ndict\ninstead of Pydantic models.\nBut you don't have to worry about them either, incoming dicts are converted automatically and your output is converted automatically to JSON too.\nBodies of arbitrary\ndict\ns\n¶\nYou can also declare a body as a\ndict\nwith keys of some type and values of some other type.\nThis way, you don't have to know beforehand what the valid field/attribute names are (as would be the case with Pydantic models).\nThis would be useful if you want to receive keys that you don't already know.\nAnother useful case is when you want to have keys of another type (e.g.,\nint\n).\nThat's what we are going to see here.\nIn this case, you would accept any\ndict\nas long as it has\nint\nkeys with\nfloat\nvalues:\nPython 3.9+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/index-weights/\"\n)\nasync\ndef\ncreate_index_weights\n(\nweights\n:\ndict\n[\nint\n,\nfloat\n]):\nreturn\nweights\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nDict\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/index-weights/\"\n)\nasync\ndef\ncreate_index_weights\n(\nweights\n:\nDict\n[\nint\n,\nfloat\n]):\nreturn\nweights\nTip\nKeep in mind that JSON only supports\nstr\nas keys.\nBut Pydantic has automatic data conversion.\nThis means that, even though your API clients can only send strings as keys, as long as those strings contain pure integers, Pydantic will convert them and validate them.\nAnd the\ndict\nyou receive as\nweights\nwill actually have\nint\nkeys and\nfloat\nvalues.\nRecap\n¶\nWith\nFastAPI\nyou have the maximum flexibility provided by Pydantic models, while keeping your code simple, short and elegant.\nBut with all the benefits:\nEditor support (completion everywhere!)\nData conversion (a.k.a. parsing / serialization)\nData validation\nSchema documentation\nAutomatic docs\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/virtual-environments/",
    "title": "Virtual Environments¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nVirtual Environments\nTable of contents\nCreate a Project\nCreate a Virtual Environment\nActivate the Virtual Environment\nCheck the Virtual Environment is Active\nUpgrade\npip\nAdd\n.gitignore\nInstall Packages\nInstall Packages Directly\nInstall from\nrequirements.txt\nRun Your Program\nConfigure Your Editor\nDeactivate the Virtual Environment\nReady to Work\nWhy Virtual Environments\nThe Problem\nWhere are Packages Installed\nWhat are Virtual Environments\nWhat Does Activating a Virtual Environment Mean\nChecking a Virtual Environment\nWhy Deactivate a Virtual Environment\nAlternatives\nConclusion\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nCreate a Project\nCreate a Virtual Environment\nActivate the Virtual Environment\nCheck the Virtual Environment is Active\nUpgrade\npip\nAdd\n.gitignore\nInstall Packages\nInstall Packages Directly\nInstall from\nrequirements.txt\nRun Your Program\nConfigure Your Editor\nDeactivate the Virtual Environment\nReady to Work\nWhy Virtual Environments\nThe Problem\nWhere are Packages Installed\nWhat are Virtual Environments\nWhat Does Activating a Virtual Environment Mean\nChecking a Virtual Environment\nWhy Deactivate a Virtual Environment\nAlternatives\nConclusion\nFastAPI\nLearn\nVirtual Environments\n¶\nWhen you work in Python projects you probably should use a\nvirtual environment\n(or a similar mechanism) to isolate the packages you install for each project.\nInfo\nIf you already know about virtual environments, how to create them and use them, you might want to skip this section. 🤓\nTip\nA\nvirtual environment\nis different than an\nenvironment variable\n.\nAn\nenvironment variable\nis a variable in the system that can be used by programs.\nA\nvirtual environment\nis a directory with some files in it.\nInfo\nThis page will teach you how to use\nvirtual environments\nand how they work.\nIf you are ready to adopt a\ntool that manages everything\nfor you (including installing Python), try\nuv\n.\nCreate a Project\n¶\nFirst, create a directory for your project.\nWhat I normally do is that I create a directory named\ncode\ninside my home/user directory.\nAnd inside of that I create one directory per project.\n// Go to the home directory\n$\ncd\n// Create a directory for all your code projects\n$\nmkdir\ncode\n// Enter into that code directory\n$\ncd\ncode\n// Create a directory for this project\n$\nmkdir\nawesome-project\n// Enter into that project directory\n$\ncd\nawesome-project\nCreate a Virtual Environment\n¶\nWhen you start working on a Python project\nfor the first time\n, create a virtual environment\ninside your project\n.\nTip\nYou only need to do this\nonce per project\n, not every time you work.\nvenv\nuv\nTo create a virtual environment, you can use the\nvenv\nmodule that comes with Python.\n$\npython\n-m\nvenv\n.venv\nWhat that command means\npython\n: use the program called\npython\n-m\n: call a module as a script, we'll tell it which module next\nvenv\n: use the module called\nvenv\nthat normally comes installed with Python\n.venv\n: create the virtual environment in the new directory\n.venv\nIf you have\nuv\ninstalled, you can use it to create a virtual environment.\n$\nuv\nvenv\nTip\nBy default,\nuv\nwill create a virtual environment in a directory called\n.venv\n.\nBut you could customize it passing an additional argument with the directory name.\nThat command creates a new virtual environment in a directory called\n.venv\n.\n.venv\nor other name\nYou could create the virtual environment in a different directory, but there's a convention of calling it\n.venv\n.\nActivate the Virtual Environment\n¶\nActivate the new virtual environment so that any Python command you run or package you install uses it.\nTip\nDo this\nevery time\nyou start a\nnew terminal session\nto work on the project.\nLinux, macOS\nWindows PowerShell\nWindows Bash\n$\nsource\n.venv/bin/activate\n$\n.venv\n\\S\ncripts\n\\A\nctivate.ps1\nOr if you use Bash for Windows (e.g.\nGit Bash\n):\n$\nsource\n.venv/Scripts/activate\nTip\nEvery time you install a\nnew package\nin that environment,\nactivate\nthe environment again.\nThis makes sure that if you use a\nterminal (\nCLI\n) program\ninstalled by that package, you use the one from your virtual environment and not any other that could be installed globally, probably with a different version than what you need.\nCheck the Virtual Environment is Active\n¶\nCheck that the virtual environment is active (the previous command worked).\nTip\nThis is\noptional\n, but it's a good way to\ncheck\nthat everything is working as expected and you are using the virtual environment you intended.\nLinux, macOS, Windows Bash\nWindows PowerShell\n$\nwhich\npython\n/home/user/code/awesome-project/.venv/bin/python\nIf it shows the\npython\nbinary at\n.venv/bin/python\n, inside of your project (in this case\nawesome-project\n), then it worked. 🎉\n$\nGet-Command\npython\nC:\\Users\\user\\code\\awesome-project\\.venv\\Scripts\\python\nIf it shows the\npython\nbinary at\n.venv\\Scripts\\python\n, inside of your project (in this case\nawesome-project\n), then it worked. 🎉\nUpgrade\npip\n¶\nTip\nIf you use\nuv\nyou would use it to install things instead of\npip\n, so you don't need to upgrade\npip\n. 😎\nIf you are using\npip\nto install packages (it comes by default with Python), you should\nupgrade\nit to the latest version.\nMany exotic errors while installing a package are solved by just upgrading\npip\nfirst.\nTip\nYou would normally do this\nonce\n, right after you create the virtual environment.\nMake sure the virtual environment is active (with the command above) and then run:\n$\npython\n-m\npip\ninstall\n--upgrade\npip\n---> 100%\nAdd\n.gitignore\n¶\nIf you are using\nGit\n(you should), add a\n.gitignore\nfile to exclude everything in your\n.venv\nfrom Git.\nTip\nIf you used\nuv\nto create the virtual environment, it already did this for you, you can skip this step. 😎\nTip\nDo this\nonce\n, right after you create the virtual environment.\n$\necho\n\"*\"\n>\n.venv/.gitignore\nWhat that command means\necho \"*\"\n: will \"print\" the text\n*\nin the terminal (the next part changes that a bit)\n>\n: anything printed to the terminal by the command to the left of\n>\nshould not be printed but instead written to the file that goes to the right of\n>\n.gitignore\n: the name of the file where the text should be written\nAnd\n*\nfor Git means \"everything\". So, it will ignore everything in the\n.venv\ndirectory.\nThat command will create a file\n.gitignore\nwith the content:\n*\nInstall Packages\n¶\nAfter activating the environment, you can install packages in it.\nTip\nDo this\nonce\nwhen installing or upgrading the packages your project needs.\nIf you need to upgrade a version or add a new package you would\ndo this again\n.\nInstall Packages Directly\n¶\nIf you're in a hurry and don't want to use a file to declare your project's package requirements, you can install them directly.\nTip\nIt's a (very) good idea to put the packages and versions your program needs in a file (for example\nrequirements.txt\nor\npyproject.toml\n).\npip\nuv\n$\npip\ninstall\n\"fastapi[standard]\"\n---> 100%\nIf you have\nuv\n:\n$\nuv\npip\ninstall\n\"fastapi[standard]\"\n---> 100%\nInstall from\nrequirements.txt\n¶\nIf you have a\nrequirements.txt\n, you can now use it to install its packages.\npip\nuv\n$\npip\ninstall\n-r\nrequirements.txt\n---> 100%\nIf you have\nuv\n:\n$\nuv\npip\ninstall\n-r\nrequirements.txt\n---> 100%\nrequirements.txt\nA\nrequirements.txt\nwith some packages could look like:\nfastapi[standard]==0.113.0\npydantic==2.8.0\nRun Your Program\n¶\nAfter you activated the virtual environment, you can run your program, and it will use the Python inside of your virtual environment with the packages you installed there.\n$\npython\nmain.py\nHello World\nConfigure Your Editor\n¶\nYou would probably use an editor, make sure you configure it to use the same virtual environment you created (it will probably autodetect it) so that you can get autocompletion and inline errors.\nFor example:\nVS Code\nPyCharm\nTip\nYou normally have to do this only\nonce\n, when you create the virtual environment.\nDeactivate the Virtual Environment\n¶\nOnce you are done working on your project you can\ndeactivate\nthe virtual environment.\n$\ndeactivate\nThis way, when you run\npython\nit won't try to run it from that virtual environment with the packages installed there.\nReady to Work\n¶\nNow you're ready to start working on your project.\nTip\nDo you want to understand what's all that above?\nContinue reading. 👇🤓\nWhy Virtual Environments\n¶\nTo work with FastAPI you need to install\nPython\n.\nAfter that, you would need to\ninstall\nFastAPI and any other\npackages\nyou want to use.\nTo install packages you would normally use the\npip\ncommand that comes with Python (or similar alternatives).\nNevertheless, if you just use\npip\ndirectly, the packages would be installed in your\nglobal Python environment\n(the global installation of Python).\nThe Problem\n¶\nSo, what's the problem with installing packages in the global Python environment?\nAt some point, you will probably end up writing many different programs that depend on\ndifferent packages\n. And some of these projects you work on will depend on\ndifferent versions\nof the same package. 😱\nFor example, you could create a project called\nphilosophers-stone\n, this program depends on another package called\nharry\n, using the version\n1\n. So, you need to install\nharry\n.\nflowchart LR\n    stone(philosophers-stone) -->|requires| harry-1[harry v1]\nThen, at some point later, you create another project called\nprisoner-of-azkaban\n, and this project also depends on\nharry\n, but this project needs\nharry\nversion\n3\n.\nflowchart LR\n    azkaban(prisoner-of-azkaban) --> |requires| harry-3[harry v3]\nBut now the problem is, if you install the packages globally (in the global environment) instead of in a local\nvirtual environment\n, you will have to choose which version of\nharry\nto install.\nIf you want to run\nphilosophers-stone\nyou will need to first install\nharry\nversion\n1\n, for example with:\n$\npip\ninstall\n\"harry==1\"\nAnd then you would end up with\nharry\nversion\n1\ninstalled in your global Python environment.\nflowchart LR\n    subgraph global[global env]\n        harry-1[harry v1]\n    end\n    subgraph stone-project[philosophers-stone project]\n        stone(philosophers-stone) -->|requires| harry-1\n    end\nBut then if you want to run\nprisoner-of-azkaban\n, you will need to uninstall\nharry\nversion\n1\nand install\nharry\nversion\n3\n(or just installing version\n3\nwould automatically uninstall version\n1\n).\n$\npip\ninstall\n\"harry==3\"\nAnd then you would end up with\nharry\nversion\n3\ninstalled in your global Python environment.\nAnd if you try to run\nphilosophers-stone\nagain, there's a chance it would\nnot work\nbecause it needs\nharry\nversion\n1\n.\nflowchart LR\n    subgraph global[global env]\n        harry-1[<strike>harry v1</strike>]\n        style harry-1 fill:#ccc,stroke-dasharray: 5 5\n        harry-3[harry v3]\n    end\n    subgraph stone-project[philosophers-stone project]\n        stone(philosophers-stone) -.-x|⛔️| harry-1\n    end\n    subgraph azkaban-project[prisoner-of-azkaban project]\n        azkaban(prisoner-of-azkaban) --> |requires| harry-3\n    end\nTip\nIt's very common in Python packages to try the best to\navoid breaking changes\nin\nnew versions\n, but it's better to be safe, and install newer versions intentionally and when you can run the tests to check everything is working correctly.\nNow, imagine that with\nmany\nother\npackages\nthat all your\nprojects depend on\n. That's very difficult to manage. And you would probably end up running some projects with some\nincompatible versions\nof the packages, and not knowing why something isn't working.\nAlso, depending on your operating system (e.g. Linux, Windows, macOS), it could have come with Python already installed. And in that case it probably had some packages pre-installed with some specific versions\nneeded by your system\n. If you install packages in the global Python environment, you could end up\nbreaking\nsome of the programs that came with your operating system.\nWhere are Packages Installed\n¶\nWhen you install Python, it creates some directories with some files in your computer.\nSome of these directories are the ones in charge of having all the packages you install.\nWhen you run:\n// Don't run this now, it's just an example 🤓\n$\npip\ninstall\n\"fastapi[standard]\"\n---> 100%\nThat will download a compressed file with the FastAPI code, normally from\nPyPI\n.\nIt will also\ndownload\nfiles for other packages that FastAPI depends on.\nThen it will\nextract\nall those files and put them in a directory in your computer.\nBy default, it will put those files downloaded and extracted in the directory that comes with your Python installation, that's the\nglobal environment\n.\nWhat are Virtual Environments\n¶\nThe solution to the problems of having all the packages in the global environment is to use a\nvirtual environment for each project\nyou work on.\nA virtual environment is a\ndirectory\n, very similar to the global one, where you can install the packages for a project.\nThis way, each project will have its own virtual environment (\n.venv\ndirectory) with its own packages.\nflowchart TB\n    subgraph stone-project[philosophers-stone project]\n        stone(philosophers-stone) --->|requires| harry-1\n        subgraph venv1[.venv]\n            harry-1[harry v1]\n        end\n    end\n    subgraph azkaban-project[prisoner-of-azkaban project]\n        azkaban(prisoner-of-azkaban) --->|requires| harry-3\n        subgraph venv2[.venv]\n            harry-3[harry v3]\n        end\n    end\n    stone-project ~~~ azkaban-project\nWhat Does Activating a Virtual Environment Mean\n¶\nWhen you activate a virtual environment, for example with:\nLinux, macOS\nWindows PowerShell\nWindows Bash\n$\nsource\n.venv/bin/activate\n$\n.venv\n\\S\ncripts\n\\A\nctivate.ps1\nOr if you use Bash for Windows (e.g.\nGit Bash\n):\n$\nsource\n.venv/Scripts/activate\nThat command will create or modify some\nenvironment variables\nthat will be available for the next commands.\nOne of those variables is the\nPATH\nvariable.\nTip\nYou can learn more about the\nPATH\nenvironment variable in the\nEnvironment Variables\nsection.\nActivating a virtual environment adds its path\n.venv/bin\n(on Linux and macOS) or\n.venv\\Scripts\n(on Windows) to the\nPATH\nenvironment variable.\nLet's say that before activating the environment, the\nPATH\nvariable looked like this:\nLinux, macOS\nWindows\n/usr/bin:/bin:/usr/sbin:/sbin\nThat means that the system would look for programs in:\n/usr/bin\n/bin\n/usr/sbin\n/sbin\nC:\\Windows\\System32\nThat means that the system would look for programs in:\nC:\\Windows\\System32\nAfter activating the virtual environment, the\nPATH\nvariable would look something like this:\nLinux, macOS\nWindows\n/home/user/code/awesome-project/.venv/bin:/usr/bin:/bin:/usr/sbin:/sbin\nThat means that the system will now start looking first for programs in:\n/home/user/code/awesome-project/.venv/bin\nbefore looking in the other directories.\nSo, when you type\npython\nin the terminal, the system will find the Python program in\n/home/user/code/awesome-project/.venv/bin/python\nand use that one.\nC:\\Users\\user\\code\\awesome-project\\.venv\\Scripts;C:\\Windows\\System32\nThat means that the system will now start looking first for programs in:\nC:\\Users\\user\\code\\awesome-project\\.venv\\Scripts\nbefore looking in the other directories.\nSo, when you type\npython\nin the terminal, the system will find the Python program in\nC:\\Users\\user\\code\\awesome-project\\.venv\\Scripts\\python\nand use that one.\nAn important detail is that it will put the virtual environment path at the\nbeginning\nof the\nPATH\nvariable. The system will find it\nbefore\nfinding any other Python available. This way, when you run\npython\n, it will use the Python\nfrom the virtual environment\ninstead of any other\npython\n(for example, a\npython\nfrom a global environment).\nActivating a virtual environment also changes a couple of other things, but this is one of the most important things it does.\nChecking a Virtual Environment\n¶\nWhen you check if a virtual environment is active, for example with:\nLinux, macOS, Windows Bash\nWindows PowerShell\n$\nwhich\npython\n/home/user/code/awesome-project/.venv/bin/python\n$\nGet-Command\npython\nC:\\Users\\user\\code\\awesome-project\\.venv\\Scripts\\python\nThat means that the\npython\nprogram that will be used is the one\nin the virtual environment\n.\nYou use\nwhich\nin Linux and macOS and\nGet-Command\nin Windows PowerShell.\nThe way that command works is that it will go and check in the\nPATH\nenvironment variable, going through\neach path in order\n, looking for the program called\npython\n. Once it finds it, it will\nshow you the path\nto that program.\nThe most important part is that when you call\npython\n, that is the exact \"\npython\n\" that will be executed.\nSo, you can confirm if you are in the correct virtual environment.\nTip\nIt's easy to activate one virtual environment, get one Python, and then\ngo to another project\n.\nAnd the second project\nwouldn't work\nbecause you are using the\nincorrect Python\n, from a virtual environment for another project.\nIt's useful being able to check what\npython\nis being used. 🤓\nWhy Deactivate a Virtual Environment\n¶\nFor example, you could be working on a project\nphilosophers-stone\n,\nactivate that virtual environment\n, install packages and work with that environment.\nAnd then you want to work on\nanother project\nprisoner-of-azkaban\n.\nYou go to that project:\n$\ncd\n~/code/prisoner-of-azkaban\nIf you don't deactivate the virtual environment for\nphilosophers-stone\n, when you run\npython\nin the terminal, it will try to use the Python from\nphilosophers-stone\n.\n$\ncd\n~/code/prisoner-of-azkaban\n$\npython\nmain.py\n// Error importing sirius, it's not installed 😱\nTraceback (most recent call last):\nFile \"main.py\", line 1, in <module>\nimport sirius\nBut if you deactivate the virtual environment and activate the new one for\nprisoner-of-askaban\nthen when you run\npython\nit will use the Python from the virtual environment in\nprisoner-of-azkaban\n.\n$\ncd\n~/code/prisoner-of-azkaban\n// You don't need to be in the old directory to deactivate, you can do it wherever you are, even after going to the other project 😎\n$\ndeactivate\n// Activate the virtual environment in prisoner-of-azkaban/.venv 🚀\n$\nsource\n.venv/bin/activate\n// Now when you run python, it will find the package sirius installed in this virtual environment ✨\n$\npython\nmain.py\nI solemnly swear 🐺\nAlternatives\n¶\nThis is a simple guide to get you started and teach you how everything works\nunderneath\n.\nThere are many\nalternatives\nto managing virtual environments, package dependencies (requirements), projects.\nOnce you are ready and want to use a tool to\nmanage the entire project\n, packages dependencies, virtual environments, etc. I would suggest you try\nuv\n.\nuv\ncan do a lot of things, it can:\nInstall Python\nfor you, including different versions\nManage the\nvirtual environment\nfor your projects\nInstall\npackages\nManage package\ndependencies and versions\nfor your project\nMake sure you have an\nexact\nset of packages and versions to install, including their dependencies, so that you can be sure that you can run your project in production exactly the same as in your computer while developing, this is called\nlocking\nAnd many other things\nConclusion\n¶\nIf you read and understood all this, now\nyou know much more\nabout virtual environments than many developers out there. 🤓\nKnowing these details will most probably be useful in a future time when you are debugging something that seems complex, but you will know\nhow it all works underneath\n. 😎\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/first-steps/",
    "title": "First Steps¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nFirst Steps\nTable of contents\nCheck it\nInteractive API docs\nAlternative API docs\nOpenAPI\n\"Schema\"\nAPI \"schema\"\nData \"schema\"\nOpenAPI and JSON Schema\nCheck the\nopenapi.json\nWhat is OpenAPI for\nRecap, step by step\nStep 1: import\nFastAPI\nStep 2: create a\nFastAPI\n\"instance\"\nStep 3: create a\npath operation\nPath\nOperation\nDefine a\npath operation decorator\nStep 4: define the\npath operation function\nStep 5: return the content\nRecap\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nCheck it\nInteractive API docs\nAlternative API docs\nOpenAPI\n\"Schema\"\nAPI \"schema\"\nData \"schema\"\nOpenAPI and JSON Schema\nCheck the\nopenapi.json\nWhat is OpenAPI for\nRecap, step by step\nStep 1: import\nFastAPI\nStep 2: create a\nFastAPI\n\"instance\"\nStep 3: create a\npath operation\nPath\nOperation\nDefine a\npath operation decorator\nStep 4: define the\npath operation function\nStep 5: return the content\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nFirst Steps\n¶\nThe simplest FastAPI file could look like this:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nCopy that to a file\nmain.py\n.\nRun the live server:\n$\n<font\ncolor\n=\n\"#4E9A06\"\n>fastapi</font>\ndev\n<u\nstyle\n=\n\"text-decoration-style:solid\"\n>main.py</u>\n<span style=\"background-color:#009485\"><font color=\"#D3D7CF\"> FastAPI </font></span>  Starting development server 🚀\nSearching for package file structure from directories\nwith <font color=\"#3465A4\">__init__.py</font> files\nImporting from <font color=\"#75507B\">/home/user/code/</font><font color=\"#AD7FA8\">awesomeapp</font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> module </font></span>  🐍 main.py\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> code </font></span>  Importing the FastAPI app object from the module with\nthe following code:\n<u style=\"text-decoration-style:solid\">from </u><u style=\"text-decoration-style:solid\"><b>main</b></u><u style=\"text-decoration-style:solid\"> import </u><u style=\"text-decoration-style:solid\"><b>app</b></u>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> app </font></span>  Using import string: <font color=\"#3465A4\">main:app</font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> server </font></span>  Server started at <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://127.0.0.1:8000</u></font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> server </font></span>  Documentation at <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://127.0.0.1:8000/docs</u></font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> tip </font></span>  Running in development mode, for production use:\n<b>fastapi run</b>\nLogs:\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Will watch for changes in these directories:\n<b>[</b><font color=\"#4E9A06\">&apos;/home/user/code/awesomeapp&apos;</font><b>]</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Uvicorn running on <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://127.0.0.1:8000</u></font> <b>(</b>Press CTRL+C\nto quit<b>)</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Started reloader process <b>[</b><font color=\"#34E2E2\"><b>383138</b></font><b>]</b> using WatchFiles\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Started server process <b>[</b><font color=\"#34E2E2\"><b>383153</b></font><b>]</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Waiting for application startup.\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Application startup complete.\nIn the output, there's a line with something like:\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nThat line shows the URL where your app is being served, in your local machine.\nCheck it\n¶\nOpen your browser at\nhttp://127.0.0.1:8000\n.\nYou will see the JSON response as:\n{\n\"message\"\n:\n\"Hello World\"\n}\nInteractive API docs\n¶\nNow go to\nhttp://127.0.0.1:8000/docs\n.\nYou will see the automatic interactive API documentation (provided by\nSwagger UI\n):\nAlternative API docs\n¶\nAnd now, go to\nhttp://127.0.0.1:8000/redoc\n.\nYou will see the alternative automatic documentation (provided by\nReDoc\n):\nOpenAPI\n¶\nFastAPI\ngenerates a \"schema\" with all your API using the\nOpenAPI\nstandard for defining APIs.\n\"Schema\"\n¶\nA \"schema\" is a definition or description of something. Not the code that implements it, but just an abstract description.\nAPI \"schema\"\n¶\nIn this case,\nOpenAPI\nis a specification that dictates how to define a schema of your API.\nThis schema definition includes your API paths, the possible parameters they take, etc.\nData \"schema\"\n¶\nThe term \"schema\" might also refer to the shape of some data, like a JSON content.\nIn that case, it would mean the JSON attributes, and data types they have, etc.\nOpenAPI and JSON Schema\n¶\nOpenAPI defines an API schema for your API. And that schema includes definitions (or \"schemas\") of the data sent and received by your API using\nJSON Schema\n, the standard for JSON data schemas.\nCheck the\nopenapi.json\n¶\nIf you are curious about how the raw OpenAPI schema looks like, FastAPI automatically generates a JSON (schema) with the descriptions of all your API.\nYou can see it directly at:\nhttp://127.0.0.1:8000/openapi.json\n.\nIt will show a JSON starting with something like:\n{\n\"openapi\"\n:\n\"3.1.0\"\n,\n\"info\"\n:\n{\n\"title\"\n:\n\"FastAPI\"\n,\n\"version\"\n:\n\"0.1.0\"\n},\n\"paths\"\n:\n{\n\"/items/\"\n:\n{\n\"get\"\n:\n{\n\"responses\"\n:\n{\n\"200\"\n:\n{\n\"description\"\n:\n\"Successful Response\"\n,\n\"content\"\n:\n{\n\"application/json\"\n:\n{\n...\nWhat is OpenAPI for\n¶\nThe OpenAPI schema is what powers the two interactive documentation systems included.\nAnd there are dozens of alternatives, all based on OpenAPI. You could easily add any of those alternatives to your application built with\nFastAPI\n.\nYou could also use it to generate code automatically, for clients that communicate with your API. For example, frontend, mobile or IoT applications.\nRecap, step by step\n¶\nStep 1: import\nFastAPI\n¶\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nFastAPI\nis a Python class that provides all the functionality for your API.\nTechnical Details\nFastAPI\nis a class that inherits directly from\nStarlette\n.\nYou can use all the\nStarlette\nfunctionality with\nFastAPI\ntoo.\nStep 2: create a\nFastAPI\n\"instance\"\n¶\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nHere the\napp\nvariable will be an \"instance\" of the class\nFastAPI\n.\nThis will be the main point of interaction to create all your API.\nStep 3: create a\npath operation\n¶\nPath\n¶\n\"Path\" here refers to the last part of the URL starting from the first\n/\n.\nSo, in a URL like:\nhttps://example.com/items/foo\n...the path would be:\n/items/foo\nInfo\nA \"path\" is also commonly called an \"endpoint\" or a \"route\".\nWhile building an API, the \"path\" is the main way to separate \"concerns\" and \"resources\".\nOperation\n¶\n\"Operation\" here refers to one of the HTTP \"methods\".\nOne of:\nPOST\nGET\nPUT\nDELETE\n...and the more exotic ones:\nOPTIONS\nHEAD\nPATCH\nTRACE\nIn the HTTP protocol, you can communicate to each path using one (or more) of these \"methods\".\nWhen building APIs, you normally use these specific HTTP methods to perform a specific action.\nNormally you use:\nPOST\n: to create data.\nGET\n: to read data.\nPUT\n: to update data.\nDELETE\n: to delete data.\nSo, in OpenAPI, each of the HTTP methods is called an \"operation\".\nWe are going to call them \"\noperations\n\" too.\nDefine a\npath operation decorator\n¶\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nThe\n@app.get(\"/\")\ntells\nFastAPI\nthat the function right below is in charge of handling requests that go to:\nthe path\n/\nusing a\nget\noperation\n@decorator\nInfo\nThat\n@something\nsyntax in Python is called a \"decorator\".\nYou put it on top of a function. Like a pretty decorative hat (I guess that's where the term came from).\nA \"decorator\" takes the function below and does something with it.\nIn our case, this decorator tells\nFastAPI\nthat the function below corresponds to the\npath\n/\nwith an\noperation\nget\n.\nIt is the \"\npath operation decorator\n\".\nYou can also use the other operations:\n@app.post()\n@app.put()\n@app.delete()\nAnd the more exotic ones:\n@app.options()\n@app.head()\n@app.patch()\n@app.trace()\nTip\nYou are free to use each operation (HTTP method) as you wish.\nFastAPI\ndoesn't enforce any specific meaning.\nThe information here is presented as a guideline, not a requirement.\nFor example, when using GraphQL you normally perform all the actions using only\nPOST\noperations.\nStep 4: define the\npath operation function\n¶\nThis is our \"\npath operation function\n\":\npath\n: is\n/\n.\noperation\n: is\nget\n.\nfunction\n: is the function below the \"decorator\" (below\n@app.get(\"/\")\n).\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nThis is a Python function.\nIt will be called by\nFastAPI\nwhenever it receives a request to the URL \"\n/\n\" using a\nGET\noperation.\nIn this case, it is an\nasync\nfunction.\nYou could also define it as a normal function instead of\nasync def\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nNote\nIf you don't know the difference, check the\nAsync:\n\"In a hurry?\"\n.\nStep 5: return the content\n¶\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nYou can return a\ndict\n,\nlist\n, singular values as\nstr\n,\nint\n, etc.\nYou can also return Pydantic models (you'll see more about that later).\nThere are many other objects and models that will be automatically converted to JSON (including ORMs, etc). Try using your favorite ones, it's highly probable that they are already supported.\nRecap\n¶\nImport\nFastAPI\n.\nCreate an\napp\ninstance.\nWrite a\npath operation decorator\nusing decorators like\n@app.get(\"/\")\n.\nDefine a\npath operation function\n; for example,\ndef root(): ...\n.\nRun the development server using the command\nfastapi dev\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/header-param-models/",
    "title": "Header Parameter Models¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nHeader Parameter Models\nTable of contents\nHeader Parameters with a Pydantic Model\nCheck the Docs\nForbid Extra Headers\nDisable Convert Underscores\nSummary\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nHeader Parameters with a Pydantic Model\nCheck the Docs\nForbid Extra Headers\nDisable Convert Underscores\nSummary\nFastAPI\nLearn\nTutorial - User Guide\nHeader Parameter Models\n¶\nIf you have a group of related\nheader parameters\n, you can create a\nPydantic model\nto declare them.\nThis would allow you to\nre-use the model\nin\nmultiple places\nand also to declare validations and metadata for all the parameters at once. 😎\nNote\nThis is supported since FastAPI version\n0.115.0\n. 🤓\nHeader Parameters with a Pydantic Model\n¶\nDeclare the\nheader parameters\nthat you need in a\nPydantic model\n, and then declare the parameter as\nHeader\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nstr\n|\nNone\n=\nNone\ntraceparent\n:\nstr\n|\nNone\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nAnnotated\n[\nCommonHeaders\n,\nHeader\n()]):\nreturn\nheaders\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntraceparent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nAnnotated\n[\nCommonHeaders\n,\nHeader\n()]):\nreturn\nheaders\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntraceparent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nx_tag\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nAnnotated\n[\nCommonHeaders\n,\nHeader\n()]):\nreturn\nheaders\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nstr\n|\nNone\n=\nNone\ntraceparent\n:\nstr\n|\nNone\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nCommonHeaders\n=\nHeader\n()):\nreturn\nheaders\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntraceparent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nCommonHeaders\n=\nHeader\n()):\nreturn\nheaders\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntraceparent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nx_tag\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nCommonHeaders\n=\nHeader\n()):\nreturn\nheaders\nFastAPI\nwill\nextract\nthe data for\neach field\nfrom the\nheaders\nin the request and give you the Pydantic model you defined.\nCheck the Docs\n¶\nYou can see the required headers in the docs UI at\n/docs\n:\nForbid Extra Headers\n¶\nIn some special use cases (probably not very common), you might want to\nrestrict\nthe headers that you want to receive.\nYou can use Pydantic's model configuration to\nforbid\nany\nextra\nfields:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nstr\n|\nNone\n=\nNone\ntraceparent\n:\nstr\n|\nNone\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nAnnotated\n[\nCommonHeaders\n,\nHeader\n()]):\nreturn\nheaders\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntraceparent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nAnnotated\n[\nCommonHeaders\n,\nHeader\n()]):\nreturn\nheaders\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntraceparent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nx_tag\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nAnnotated\n[\nCommonHeaders\n,\nHeader\n()]):\nreturn\nheaders\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nstr\n|\nNone\n=\nNone\ntraceparent\n:\nstr\n|\nNone\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nCommonHeaders\n=\nHeader\n()):\nreturn\nheaders\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntraceparent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nCommonHeaders\n=\nHeader\n()):\nreturn\nheaders\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntraceparent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nx_tag\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nCommonHeaders\n=\nHeader\n()):\nreturn\nheaders\nIf a client tries to send some\nextra headers\n, they will receive an\nerror\nresponse.\nFor example, if the client tries to send a\ntool\nheader with a value of\nplumbus\n, they will receive an\nerror\nresponse telling them that the header parameter\ntool\nis not allowed:\n{\n\"detail\"\n:\n[\n{\n\"type\"\n:\n\"extra_forbidden\"\n,\n\"loc\"\n:\n[\n\"header\"\n,\n\"tool\"\n],\n\"msg\"\n:\n\"Extra inputs are not permitted\"\n,\n\"input\"\n:\n\"plumbus\"\n,\n}\n]\n}\nDisable Convert Underscores\n¶\nThe same way as with regular header parameters, when you have underscore characters in the parameter names, they are\nautomatically converted to hyphens\n.\nFor example, if you have a header parameter\nsave_data\nin the code, the expected HTTP header will be\nsave-data\n, and it will show up like that in the docs.\nIf for some reason you need to disable this automatic conversion, you can do it as well for Pydantic models for header parameters.\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nstr\n|\nNone\n=\nNone\ntraceparent\n:\nstr\n|\nNone\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nAnnotated\n[\nCommonHeaders\n,\nHeader\n(\nconvert_underscores\n=\nFalse\n)],\n):\nreturn\nheaders\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntraceparent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nAnnotated\n[\nCommonHeaders\n,\nHeader\n(\nconvert_underscores\n=\nFalse\n)],\n):\nreturn\nheaders\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntraceparent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nx_tag\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nAnnotated\n[\nCommonHeaders\n,\nHeader\n(\nconvert_underscores\n=\nFalse\n)],\n):\nreturn\nheaders\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nstr\n|\nNone\n=\nNone\ntraceparent\n:\nstr\n|\nNone\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nCommonHeaders\n=\nHeader\n(\nconvert_underscores\n=\nFalse\n)):\nreturn\nheaders\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntraceparent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nCommonHeaders\n=\nHeader\n(\nconvert_underscores\n=\nFalse\n)):\nreturn\nheaders\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntraceparent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nx_tag\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nCommonHeaders\n=\nHeader\n(\nconvert_underscores\n=\nFalse\n)):\nreturn\nheaders\nWarning\nBefore setting\nconvert_underscores\nto\nFalse\n, bear in mind that some HTTP proxies and servers disallow the usage of headers with underscores.\nSummary\n¶\nYou can use\nPydantic models\nto declare\nheaders\nin\nFastAPI\n. 😎\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/encoder/",
    "title": "JSON Compatible Encoder¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nJSON Compatible Encoder\nTable of contents\nUsing the\njsonable_encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUsing the\njsonable_encoder\nFastAPI\nLearn\nTutorial - User Guide\nJSON Compatible Encoder\n¶\nThere are some cases where you might need to convert a data type (like a Pydantic model) to something compatible with JSON (like a\ndict\n,\nlist\n, etc).\nFor example, if you need to store it in a database.\nFor that,\nFastAPI\nprovides a\njsonable_encoder()\nfunction.\nUsing the\njsonable_encoder\n¶\nLet's imagine that you have a database\nfake_db\nthat only receives JSON compatible data.\nFor example, it doesn't receive\ndatetime\nobjects, as those are not compatible with JSON.\nSo, a\ndatetime\nobject would have to be converted to a\nstr\ncontaining the data in\nISO format\n.\nThe same way, this database wouldn't receive a Pydantic model (an object with attributes), only a\ndict\n.\nYou can use\njsonable_encoder\nfor that.\nIt receives an object, like a Pydantic model, and returns a JSON compatible version:\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\nfake_db\n=\n{}\nclass\nItem\n(\nBaseModel\n):\ntitle\n:\nstr\ntimestamp\n:\ndatetime\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{id}\n\"\n)\ndef\nupdate_item\n(\nid\n:\nstr\n,\nitem\n:\nItem\n):\njson_compatible_item_data\n=\njsonable_encoder\n(\nitem\n)\nfake_db\n[\nid\n]\n=\njson_compatible_item_data\n🤓 Other versions and variants\nPython 3.8+\nfrom\ndatetime\nimport\ndatetime\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\nfake_db\n=\n{}\nclass\nItem\n(\nBaseModel\n):\ntitle\n:\nstr\ntimestamp\n:\ndatetime\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{id}\n\"\n)\ndef\nupdate_item\n(\nid\n:\nstr\n,\nitem\n:\nItem\n):\njson_compatible_item_data\n=\njsonable_encoder\n(\nitem\n)\nfake_db\n[\nid\n]\n=\njson_compatible_item_data\nIn this example, it would convert the Pydantic model to a\ndict\n, and the\ndatetime\nto a\nstr\n.\nThe result of calling it is something that can be encoded with the Python standard\njson.dumps()\n.\nIt doesn't return a large\nstr\ncontaining the data in JSON format (as a string). It returns a Python standard data structure (e.g. a\ndict\n) with values and sub-values that are all compatible with JSON.\nNote\njsonable_encoder\nis actually used by\nFastAPI\ninternally to convert data. But it is useful in many other scenarios.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/custom-response/",
    "title": "Custom Response - HTML, Stream, File, others¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nCustom Response - HTML, Stream, File, others\nTable of contents\nUse\nORJSONResponse\nHTML Response\nReturn a\nResponse\nDocument in OpenAPI and override\nResponse\nReturn an\nHTMLResponse\ndirectly\nAvailable responses\nResponse\nHTMLResponse\nPlainTextResponse\nJSONResponse\nORJSONResponse\nUJSONResponse\nRedirectResponse\nStreamingResponse\nUsing\nStreamingResponse\nwith file-like objects\nFileResponse\nCustom response class\nDefault response class\nAdditional documentation\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUse\nORJSONResponse\nHTML Response\nReturn a\nResponse\nDocument in OpenAPI and override\nResponse\nReturn an\nHTMLResponse\ndirectly\nAvailable responses\nResponse\nHTMLResponse\nPlainTextResponse\nJSONResponse\nORJSONResponse\nUJSONResponse\nRedirectResponse\nStreamingResponse\nUsing\nStreamingResponse\nwith file-like objects\nFileResponse\nCustom response class\nDefault response class\nAdditional documentation\nFastAPI\nLearn\nAdvanced User Guide\nCustom Response - HTML, Stream, File, others\n¶\nBy default,\nFastAPI\nwill return the responses using\nJSONResponse\n.\nYou can override it by returning a\nResponse\ndirectly as seen in\nReturn a Response directly\n.\nBut if you return a\nResponse\ndirectly (or any subclass, like\nJSONResponse\n), the data won't be automatically converted (even if you declare a\nresponse_model\n), and the documentation won't be automatically generated (for example, including the specific \"media type\", in the HTTP header\nContent-Type\nas part of the generated OpenAPI).\nBut you can also declare the\nResponse\nthat you want to be used (e.g. any\nResponse\nsubclass), in the\npath operation decorator\nusing the\nresponse_class\nparameter.\nThe contents that you return from your\npath operation function\nwill be put inside of that\nResponse\n.\nAnd if that\nResponse\nhas a JSON media type (\napplication/json\n), like is the case with the\nJSONResponse\nand\nUJSONResponse\n, the data you return will be automatically converted (and filtered) with any Pydantic\nresponse_model\nthat you declared in the\npath operation decorator\n.\nNote\nIf you use a response class with no media type, FastAPI will expect your response to have no content, so it will not document the response format in its generated OpenAPI docs.\nUse\nORJSONResponse\n¶\nFor example, if you are squeezing performance, you can install and use\norjson\nand set the response to be\nORJSONResponse\n.\nImport the\nResponse\nclass (sub-class) you want to use and declare it in the\npath operation decorator\n.\nFor large responses, returning a\nResponse\ndirectly is much faster than returning a dictionary.\nThis is because by default, FastAPI will inspect every item inside and make sure it is serializable as JSON, using the same\nJSON Compatible Encoder\nexplained in the tutorial. This is what allows you to return\narbitrary objects\n, for example database models.\nBut if you are certain that the content that you are returning is\nserializable with JSON\n, you can pass it directly to the response class and avoid the extra overhead that FastAPI would have by passing your return content through the\njsonable_encoder\nbefore passing it to the response class.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nORJSONResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_class\n=\nORJSONResponse\n)\nasync\ndef\nread_items\n():\nreturn\nORJSONResponse\n([{\n\"item_id\"\n:\n\"Foo\"\n}])\nInfo\nThe parameter\nresponse_class\nwill also be used to define the \"media type\" of the response.\nIn this case, the HTTP header\nContent-Type\nwill be set to\napplication/json\n.\nAnd it will be documented as such in OpenAPI.\nTip\nThe\nORJSONResponse\nis only available in FastAPI, not in Starlette.\nHTML Response\n¶\nTo return a response with HTML directly from\nFastAPI\n, use\nHTMLResponse\n.\nImport\nHTMLResponse\n.\nPass\nHTMLResponse\nas the parameter\nresponse_class\nof your\npath operation decorator\n.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_class\n=\nHTMLResponse\n)\nasync\ndef\nread_items\n():\nreturn\n\"\"\"\n<html>\n<head>\n<title>Some HTML in here</title>\n</head>\n<body>\n<h1>Look ma! HTML!</h1>\n</body>\n</html>\n\"\"\"\nInfo\nThe parameter\nresponse_class\nwill also be used to define the \"media type\" of the response.\nIn this case, the HTTP header\nContent-Type\nwill be set to\ntext/html\n.\nAnd it will be documented as such in OpenAPI.\nReturn a\nResponse\n¶\nAs seen in\nReturn a Response directly\n, you can also override the response directly in your\npath operation\n, by returning it.\nThe same example from above, returning an\nHTMLResponse\n, could look like:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nhtml_content\n=\n\"\"\"\n<html>\n<head>\n<title>Some HTML in here</title>\n</head>\n<body>\n<h1>Look ma! HTML!</h1>\n</body>\n</html>\n\"\"\"\nreturn\nHTMLResponse\n(\ncontent\n=\nhtml_content\n,\nstatus_code\n=\n200\n)\nWarning\nA\nResponse\nreturned directly by your\npath operation function\nwon't be documented in OpenAPI (for example, the\nContent-Type\nwon't be documented) and won't be visible in the automatic interactive docs.\nInfo\nOf course, the actual\nContent-Type\nheader, status code, etc, will come from the\nResponse\nobject you returned.\nDocument in OpenAPI and override\nResponse\n¶\nIf you want to override the response from inside of the function but at the same time document the \"media type\" in OpenAPI, you can use the\nresponse_class\nparameter AND return a\nResponse\nobject.\nThe\nresponse_class\nwill then be used only to document the OpenAPI\npath operation\n, but your\nResponse\nwill be used as is.\nReturn an\nHTMLResponse\ndirectly\n¶\nFor example, it could be something like:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\ndef\ngenerate_html_response\n():\nhtml_content\n=\n\"\"\"\n<html>\n<head>\n<title>Some HTML in here</title>\n</head>\n<body>\n<h1>Look ma! HTML!</h1>\n</body>\n</html>\n\"\"\"\nreturn\nHTMLResponse\n(\ncontent\n=\nhtml_content\n,\nstatus_code\n=\n200\n)\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_class\n=\nHTMLResponse\n)\nasync\ndef\nread_items\n():\nreturn\ngenerate_html_response\n()\nIn this example, the function\ngenerate_html_response()\nalready generates and returns a\nResponse\ninstead of returning the HTML in a\nstr\n.\nBy returning the result of calling\ngenerate_html_response()\n, you are already returning a\nResponse\nthat will override the default\nFastAPI\nbehavior.\nBut as you passed the\nHTMLResponse\nin the\nresponse_class\ntoo,\nFastAPI\nwill know how to document it in OpenAPI and the interactive docs as HTML with\ntext/html\n:\nAvailable responses\n¶\nHere are some of the available responses.\nKeep in mind that you can use\nResponse\nto return anything else, or even create a custom sub-class.\nTechnical Details\nYou could also use\nfrom starlette.responses import HTMLResponse\n.\nFastAPI\nprovides the same\nstarlette.responses\nas\nfastapi.responses\njust as a convenience for you, the developer. But most of the available responses come directly from Starlette.\nResponse\n¶\nThe main\nResponse\nclass, all the other responses inherit from it.\nYou can return it directly.\nIt accepts the following parameters:\ncontent\n- A\nstr\nor\nbytes\n.\nstatus_code\n- An\nint\nHTTP status code.\nheaders\n- A\ndict\nof strings.\nmedia_type\n- A\nstr\ngiving the media type. E.g.\n\"text/html\"\n.\nFastAPI (actually Starlette) will automatically include a Content-Length header. It will also include a Content-Type header, based on the\nmedia_type\nand appending a charset for text types.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/legacy/\"\n)\ndef\nget_legacy_data\n():\ndata\n=\n\"\"\"<?xml version=\"1.0\"?>\n<shampoo>\n<Header>\nApply shampoo here.\n</Header>\n<Body>\nYou'll have to use soap here.\n</Body>\n</shampoo>\n\"\"\"\nreturn\nResponse\n(\ncontent\n=\ndata\n,\nmedia_type\n=\n\"application/xml\"\n)\nHTMLResponse\n¶\nTakes some text or bytes and returns an HTML response, as you read above.\nPlainTextResponse\n¶\nTakes some text or bytes and returns a plain text response.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nPlainTextResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n,\nresponse_class\n=\nPlainTextResponse\n)\nasync\ndef\nmain\n():\nreturn\n\"Hello World\"\nJSONResponse\n¶\nTakes some data and returns an\napplication/json\nencoded response.\nThis is the default response used in\nFastAPI\n, as you read above.\nORJSONResponse\n¶\nA fast alternative JSON response using\norjson\n, as you read above.\nInfo\nThis requires installing\norjson\nfor example with\npip install orjson\n.\nUJSONResponse\n¶\nAn alternative JSON response using\nujson\n.\nInfo\nThis requires installing\nujson\nfor example with\npip install ujson\n.\nWarning\nujson\nis less careful than Python's built-in implementation in how it handles some edge-cases.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nUJSONResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_class\n=\nUJSONResponse\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n}]\nTip\nIt's possible that\nORJSONResponse\nmight be a faster alternative.\nRedirectResponse\n¶\nReturns an HTTP redirect. Uses a 307 status code (Temporary Redirect) by default.\nYou can return a\nRedirectResponse\ndirectly:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nRedirectResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/typer\"\n)\nasync\ndef\nredirect_typer\n():\nreturn\nRedirectResponse\n(\n\"https://typer.tiangolo.com\"\n)\nOr you can use it in the\nresponse_class\nparameter:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nRedirectResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/fastapi\"\n,\nresponse_class\n=\nRedirectResponse\n)\nasync\ndef\nredirect_fastapi\n():\nreturn\n\"https://fastapi.tiangolo.com\"\nIf you do that, then you can return the URL directly from your\npath operation\nfunction.\nIn this case, the\nstatus_code\nused will be the default one for the\nRedirectResponse\n, which is\n307\n.\nYou can also use the\nstatus_code\nparameter combined with the\nresponse_class\nparameter:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nRedirectResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/pydantic\"\n,\nresponse_class\n=\nRedirectResponse\n,\nstatus_code\n=\n302\n)\nasync\ndef\nredirect_pydantic\n():\nreturn\n\"https://docs.pydantic.dev/\"\nStreamingResponse\n¶\nTakes an async generator or a normal generator/iterator and streams the response body.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nStreamingResponse\napp\n=\nFastAPI\n()\nasync\ndef\nfake_video_streamer\n():\nfor\ni\nin\nrange\n(\n10\n):\nyield\nb\n\"some fake video bytes\"\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\nreturn\nStreamingResponse\n(\nfake_video_streamer\n())\nUsing\nStreamingResponse\nwith file-like objects\n¶\nIf you have a\nfile-like\nobject (e.g. the object returned by\nopen()\n), you can create a generator function to iterate over that file-like object.\nThat way, you don't have to read it all first in memory, and you can pass that generator function to the\nStreamingResponse\n, and return it.\nThis includes many libraries to interact with cloud storage, video processing, and others.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nStreamingResponse\nsome_file_path\n=\n\"large-video-file.mp4\"\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\ndef\nmain\n():\ndef\niterfile\n():\n# (1)\nwith\nopen\n(\nsome_file_path\n,\nmode\n=\n\"rb\"\n)\nas\nfile_like\n:\n# (2)\nyield from\nfile_like\n# (3)\nreturn\nStreamingResponse\n(\niterfile\n(),\nmedia_type\n=\n\"video/mp4\"\n)\nThis is the generator function. It's a \"generator function\" because it contains\nyield\nstatements inside.\nBy using a\nwith\nblock, we make sure that the file-like object is closed after the generator function is done. So, after it finishes sending the response.\nThis\nyield from\ntells the function to iterate over that thing named\nfile_like\n. And then, for each part iterated, yield that part as coming from this generator function (\niterfile\n).\nSo, it is a generator function that transfers the \"generating\" work to something else internally.\nBy doing it this way, we can put it in a\nwith\nblock, and that way, ensure that the file-like object is closed after finishing.\nTip\nNotice that here as we are using standard\nopen()\nthat doesn't support\nasync\nand\nawait\n, we declare the path operation with normal\ndef\n.\nFileResponse\n¶\nAsynchronously streams a file as the response.\nTakes a different set of arguments to instantiate than the other response types:\npath\n- The file path to the file to stream.\nheaders\n- Any custom headers to include, as a dictionary.\nmedia_type\n- A string giving the media type. If unset, the filename or path will be used to infer a media type.\nfilename\n- If set, this will be included in the response\nContent-Disposition\n.\nFile responses will include appropriate\nContent-Length\n,\nLast-Modified\nand\nETag\nheaders.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nFileResponse\nsome_file_path\n=\n\"large-video-file.mp4\"\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\nreturn\nFileResponse\n(\nsome_file_path\n)\nYou can also use the\nresponse_class\nparameter:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nFileResponse\nsome_file_path\n=\n\"large-video-file.mp4\"\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n,\nresponse_class\n=\nFileResponse\n)\nasync\ndef\nmain\n():\nreturn\nsome_file_path\nIn this case, you can return the file path directly from your\npath operation\nfunction.\nCustom response class\n¶\nYou can create your own custom response class, inheriting from\nResponse\nand using it.\nFor example, let's say that you want to use\norjson\n, but with some custom settings not used in the included\nORJSONResponse\nclass.\nLet's say you want it to return indented and formatted JSON, so you want to use the orjson option\norjson.OPT_INDENT_2\n.\nYou could create a\nCustomORJSONResponse\n. The main thing you have to do is create a\nResponse.render(content)\nmethod that returns the content as\nbytes\n:\nPython 3.8+\nfrom\ntyping\nimport\nAny\nimport\norjson\nfrom\nfastapi\nimport\nFastAPI\n,\nResponse\napp\n=\nFastAPI\n()\nclass\nCustomORJSONResponse\n(\nResponse\n):\nmedia_type\n=\n\"application/json\"\ndef\nrender\n(\nself\n,\ncontent\n:\nAny\n)\n->\nbytes\n:\nassert\norjson\nis\nnot\nNone\n,\n\"orjson must be installed\"\nreturn\norjson\n.\ndumps\n(\ncontent\n,\noption\n=\norjson\n.\nOPT_INDENT_2\n)\n@app\n.\nget\n(\n\"/\"\n,\nresponse_class\n=\nCustomORJSONResponse\n)\nasync\ndef\nmain\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nNow instead of returning:\n{\n\"message\"\n:\n\"Hello World\"\n}\n...this response will return:\n{\n\"message\"\n:\n\"Hello World\"\n}\nOf course, you will probably find much better ways to take advantage of this than formatting JSON. 😉\nDefault response class\n¶\nWhen creating a\nFastAPI\nclass instance or an\nAPIRouter\nyou can specify which response class to use by default.\nThe parameter that defines this is\ndefault_response_class\n.\nIn the example below,\nFastAPI\nwill use\nORJSONResponse\nby default, in all\npath operations\n, instead of\nJSONResponse\n.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nORJSONResponse\napp\n=\nFastAPI\n(\ndefault_response_class\n=\nORJSONResponse\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n}]\nTip\nYou can still override\nresponse_class\nin\npath operations\nas before.\nAdditional documentation\n¶\nYou can also declare the media type and many other details in OpenAPI using\nresponses\n:\nAdditional Responses in OpenAPI\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/websockets/",
    "title": "WebSockets¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nWebSockets\nTable of contents\nInstall\nwebsockets\nWebSockets client\nIn production\nCreate a\nwebsocket\nAwait for messages and send messages\nTry it\nUsing\nDepends\nand others\nTry the WebSockets with dependencies\nHandling disconnections and multiple clients\nMore info\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nInstall\nwebsockets\nWebSockets client\nIn production\nCreate a\nwebsocket\nAwait for messages and send messages\nTry it\nUsing\nDepends\nand others\nTry the WebSockets with dependencies\nHandling disconnections and multiple clients\nMore info\nFastAPI\nLearn\nAdvanced User Guide\nWebSockets\n¶\nYou can use\nWebSockets\nwith\nFastAPI\n.\nInstall\nwebsockets\n¶\nMake sure you create a\nvirtual environment\n, activate it, and install\nwebsockets\n(a Python library that makes it easy to use the \"WebSocket\" protocol):\n$\npip\ninstall\nwebsockets\n---> 100%\nWebSockets client\n¶\nIn production\n¶\nIn your production system, you probably have a frontend created with a modern framework like React, Vue.js or Angular.\nAnd to communicate using WebSockets with your backend you would probably use your frontend's utilities.\nOr you might have a native mobile application that communicates with your WebSocket backend directly, in native code.\nOr you might have any other way to communicate with the WebSocket endpoint.\nBut for this example, we'll use a very simple HTML document with some JavaScript, all inside a long string.\nThis, of course, is not optimal and you wouldn't use it for production.\nIn production you would have one of the options above.\nBut it's the simplest way to focus on the server-side of WebSockets and have a working example:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nWebSocket\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\nhtml\n=\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<title>Chat</title>\n</head>\n<body>\n<h1>WebSocket Chat</h1>\n<form action=\"\" onsubmit=\"sendMessage(event)\">\n<input type=\"text\" id=\"messageText\" autocomplete=\"off\"/>\n<button>Send</button>\n</form>\n<ul id='messages'>\n</ul>\n<script>\nvar ws = new WebSocket(\"ws://localhost:8000/ws\");\nws.onmessage = function(event) {\nvar messages = document.getElementById('messages')\nvar message = document.createElement('li')\nvar content = document.createTextNode(event.data)\nmessage.appendChild(content)\nmessages.appendChild(message)\n};\nfunction sendMessage(event) {\nvar input = document.getElementById(\"messageText\")\nws.send(input.value)\ninput.value = ''\nevent.preventDefault()\n}\n</script>\n</body>\n</html>\n\"\"\"\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nget\n():\nreturn\nHTMLResponse\n(\nhtml\n)\n@app\n.\nwebsocket\n(\n\"/ws\"\n)\nasync\ndef\nwebsocket_endpoint\n(\nwebsocket\n:\nWebSocket\n):\nawait\nwebsocket\n.\naccept\n()\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Message text was:\n{\ndata\n}\n\"\n)\nCreate a\nwebsocket\n¶\nIn your\nFastAPI\napplication, create a\nwebsocket\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nWebSocket\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\nhtml\n=\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<title>Chat</title>\n</head>\n<body>\n<h1>WebSocket Chat</h1>\n<form action=\"\" onsubmit=\"sendMessage(event)\">\n<input type=\"text\" id=\"messageText\" autocomplete=\"off\"/>\n<button>Send</button>\n</form>\n<ul id='messages'>\n</ul>\n<script>\nvar ws = new WebSocket(\"ws://localhost:8000/ws\");\nws.onmessage = function(event) {\nvar messages = document.getElementById('messages')\nvar message = document.createElement('li')\nvar content = document.createTextNode(event.data)\nmessage.appendChild(content)\nmessages.appendChild(message)\n};\nfunction sendMessage(event) {\nvar input = document.getElementById(\"messageText\")\nws.send(input.value)\ninput.value = ''\nevent.preventDefault()\n}\n</script>\n</body>\n</html>\n\"\"\"\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nget\n():\nreturn\nHTMLResponse\n(\nhtml\n)\n@app\n.\nwebsocket\n(\n\"/ws\"\n)\nasync\ndef\nwebsocket_endpoint\n(\nwebsocket\n:\nWebSocket\n):\nawait\nwebsocket\n.\naccept\n()\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Message text was:\n{\ndata\n}\n\"\n)\nTechnical Details\nYou could also use\nfrom starlette.websockets import WebSocket\n.\nFastAPI\nprovides the same\nWebSocket\ndirectly just as a convenience for you, the developer. But it comes directly from Starlette.\nAwait for messages and send messages\n¶\nIn your WebSocket route you can\nawait\nfor messages and send messages.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nWebSocket\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\nhtml\n=\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<title>Chat</title>\n</head>\n<body>\n<h1>WebSocket Chat</h1>\n<form action=\"\" onsubmit=\"sendMessage(event)\">\n<input type=\"text\" id=\"messageText\" autocomplete=\"off\"/>\n<button>Send</button>\n</form>\n<ul id='messages'>\n</ul>\n<script>\nvar ws = new WebSocket(\"ws://localhost:8000/ws\");\nws.onmessage = function(event) {\nvar messages = document.getElementById('messages')\nvar message = document.createElement('li')\nvar content = document.createTextNode(event.data)\nmessage.appendChild(content)\nmessages.appendChild(message)\n};\nfunction sendMessage(event) {\nvar input = document.getElementById(\"messageText\")\nws.send(input.value)\ninput.value = ''\nevent.preventDefault()\n}\n</script>\n</body>\n</html>\n\"\"\"\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nget\n():\nreturn\nHTMLResponse\n(\nhtml\n)\n@app\n.\nwebsocket\n(\n\"/ws\"\n)\nasync\ndef\nwebsocket_endpoint\n(\nwebsocket\n:\nWebSocket\n):\nawait\nwebsocket\n.\naccept\n()\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Message text was:\n{\ndata\n}\n\"\n)\nYou can receive and send binary, text, and JSON data.\nTry it\n¶\nIf your file is named\nmain.py\n, run your application with:\n$\nfastapi\ndev\nmain.py\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nOpen your browser at\nhttp://127.0.0.1:8000\n.\nYou will see a simple page like:\nYou can type messages in the input box, and send them:\nAnd your\nFastAPI\napplication with WebSockets will respond back:\nYou can send (and receive) many messages:\nAnd all of them will use the same WebSocket connection.\nUsing\nDepends\nand others\n¶\nIn WebSocket endpoints you can import from\nfastapi\nand use:\nDepends\nSecurity\nCookie\nHeader\nPath\nQuery\nThey work the same way as for other FastAPI endpoints/\npath operations\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\n(\nCookie\n,\nDepends\n,\nFastAPI\n,\nQuery\n,\nWebSocket\n,\nWebSocketException\n,\nstatus\n,\n)\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\nhtml\n=\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<title>Chat</title>\n</head>\n<body>\n<h1>WebSocket Chat</h1>\n<form action=\"\" onsubmit=\"sendMessage(event)\">\n<label>Item ID: <input type=\"text\" id=\"itemId\" autocomplete=\"off\" value=\"foo\"/></label>\n<label>Token: <input type=\"text\" id=\"token\" autocomplete=\"off\" value=\"some-key-token\"/></label>\n<button onclick=\"connect(event)\">Connect</button>\n<hr>\n<label>Message: <input type=\"text\" id=\"messageText\" autocomplete=\"off\"/></label>\n<button>Send</button>\n</form>\n<ul id='messages'>\n</ul>\n<script>\nvar ws = null;\nfunction connect(event) {\nvar itemId = document.getElementById(\"itemId\")\nvar token = document.getElementById(\"token\")\nws = new WebSocket(\"ws://localhost:8000/items/\" + itemId.value + \"/ws?token=\" + token.value);\nws.onmessage = function(event) {\nvar messages = document.getElementById('messages')\nvar message = document.createElement('li')\nvar content = document.createTextNode(event.data)\nmessage.appendChild(content)\nmessages.appendChild(message)\n};\nevent.preventDefault()\n}\nfunction sendMessage(event) {\nvar input = document.getElementById(\"messageText\")\nws.send(input.value)\ninput.value = ''\nevent.preventDefault()\n}\n</script>\n</body>\n</html>\n\"\"\"\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nget\n():\nreturn\nHTMLResponse\n(\nhtml\n)\nasync\ndef\nget_cookie_or_token\n(\nwebsocket\n:\nWebSocket\n,\nsession\n:\nAnnotated\n[\nstr\n|\nNone\n,\nCookie\n()]\n=\nNone\n,\ntoken\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n()]\n=\nNone\n,\n):\nif\nsession\nis\nNone\nand\ntoken\nis\nNone\n:\nraise\nWebSocketException\n(\ncode\n=\nstatus\n.\nWS_1008_POLICY_VIOLATION\n)\nreturn\nsession\nor\ntoken\n@app\n.\nwebsocket\n(\n\"/items/\n{item_id}\n/ws\"\n)\nasync\ndef\nwebsocket_endpoint\n(\n*\n,\nwebsocket\n:\nWebSocket\n,\nitem_id\n:\nstr\n,\nq\n:\nint\n|\nNone\n=\nNone\n,\ncookie_or_token\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_cookie_or_token\n)],\n):\nawait\nwebsocket\n.\naccept\n()\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Session cookie or query token value is:\n{\ncookie_or_token\n}\n\"\n)\nif\nq\nis\nnot\nNone\n:\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Query parameter q is:\n{\nq\n}\n\"\n)\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Message text was:\n{\ndata\n}\n, for item ID:\n{\nitem_id\n}\n\"\n)\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\n(\nCookie\n,\nDepends\n,\nFastAPI\n,\nQuery\n,\nWebSocket\n,\nWebSocketException\n,\nstatus\n,\n)\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\nhtml\n=\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<title>Chat</title>\n</head>\n<body>\n<h1>WebSocket Chat</h1>\n<form action=\"\" onsubmit=\"sendMessage(event)\">\n<label>Item ID: <input type=\"text\" id=\"itemId\" autocomplete=\"off\" value=\"foo\"/></label>\n<label>Token: <input type=\"text\" id=\"token\" autocomplete=\"off\" value=\"some-key-token\"/></label>\n<button onclick=\"connect(event)\">Connect</button>\n<hr>\n<label>Message: <input type=\"text\" id=\"messageText\" autocomplete=\"off\"/></label>\n<button>Send</button>\n</form>\n<ul id='messages'>\n</ul>\n<script>\nvar ws = null;\nfunction connect(event) {\nvar itemId = document.getElementById(\"itemId\")\nvar token = document.getElementById(\"token\")\nws = new WebSocket(\"ws://localhost:8000/items/\" + itemId.value + \"/ws?token=\" + token.value);\nws.onmessage = function(event) {\nvar messages = document.getElementById('messages')\nvar message = document.createElement('li')\nvar content = document.createTextNode(event.data)\nmessage.appendChild(content)\nmessages.appendChild(message)\n};\nevent.preventDefault()\n}\nfunction sendMessage(event) {\nvar input = document.getElementById(\"messageText\")\nws.send(input.value)\ninput.value = ''\nevent.preventDefault()\n}\n</script>\n</body>\n</html>\n\"\"\"\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nget\n():\nreturn\nHTMLResponse\n(\nhtml\n)\nasync\ndef\nget_cookie_or_token\n(\nwebsocket\n:\nWebSocket\n,\nsession\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nCookie\n()]\n=\nNone\n,\ntoken\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n()]\n=\nNone\n,\n):\nif\nsession\nis\nNone\nand\ntoken\nis\nNone\n:\nraise\nWebSocketException\n(\ncode\n=\nstatus\n.\nWS_1008_POLICY_VIOLATION\n)\nreturn\nsession\nor\ntoken\n@app\n.\nwebsocket\n(\n\"/items/\n{item_id}\n/ws\"\n)\nasync\ndef\nwebsocket_endpoint\n(\n*\n,\nwebsocket\n:\nWebSocket\n,\nitem_id\n:\nstr\n,\nq\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\n,\ncookie_or_token\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_cookie_or_token\n)],\n):\nawait\nwebsocket\n.\naccept\n()\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Session cookie or query token value is:\n{\ncookie_or_token\n}\n\"\n)\nif\nq\nis\nnot\nNone\n:\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Query parameter q is:\n{\nq\n}\n\"\n)\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Message text was:\n{\ndata\n}\n, for item ID:\n{\nitem_id\n}\n\"\n)\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\n(\nCookie\n,\nDepends\n,\nFastAPI\n,\nQuery\n,\nWebSocket\n,\nWebSocketException\n,\nstatus\n,\n)\nfrom\nfastapi.responses\nimport\nHTMLResponse\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nhtml\n=\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<title>Chat</title>\n</head>\n<body>\n<h1>WebSocket Chat</h1>\n<form action=\"\" onsubmit=\"sendMessage(event)\">\n<label>Item ID: <input type=\"text\" id=\"itemId\" autocomplete=\"off\" value=\"foo\"/></label>\n<label>Token: <input type=\"text\" id=\"token\" autocomplete=\"off\" value=\"some-key-token\"/></label>\n<button onclick=\"connect(event)\">Connect</button>\n<hr>\n<label>Message: <input type=\"text\" id=\"messageText\" autocomplete=\"off\"/></label>\n<button>Send</button>\n</form>\n<ul id='messages'>\n</ul>\n<script>\nvar ws = null;\nfunction connect(event) {\nvar itemId = document.getElementById(\"itemId\")\nvar token = document.getElementById(\"token\")\nws = new WebSocket(\"ws://localhost:8000/items/\" + itemId.value + \"/ws?token=\" + token.value);\nws.onmessage = function(event) {\nvar messages = document.getElementById('messages')\nvar message = document.createElement('li')\nvar content = document.createTextNode(event.data)\nmessage.appendChild(content)\nmessages.appendChild(message)\n};\nevent.preventDefault()\n}\nfunction sendMessage(event) {\nvar input = document.getElementById(\"messageText\")\nws.send(input.value)\ninput.value = ''\nevent.preventDefault()\n}\n</script>\n</body>\n</html>\n\"\"\"\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nget\n():\nreturn\nHTMLResponse\n(\nhtml\n)\nasync\ndef\nget_cookie_or_token\n(\nwebsocket\n:\nWebSocket\n,\nsession\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nCookie\n()]\n=\nNone\n,\ntoken\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n()]\n=\nNone\n,\n):\nif\nsession\nis\nNone\nand\ntoken\nis\nNone\n:\nraise\nWebSocketException\n(\ncode\n=\nstatus\n.\nWS_1008_POLICY_VIOLATION\n)\nreturn\nsession\nor\ntoken\n@app\n.\nwebsocket\n(\n\"/items/\n{item_id}\n/ws\"\n)\nasync\ndef\nwebsocket_endpoint\n(\n*\n,\nwebsocket\n:\nWebSocket\n,\nitem_id\n:\nstr\n,\nq\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\n,\ncookie_or_token\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_cookie_or_token\n)],\n):\nawait\nwebsocket\n.\naccept\n()\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Session cookie or query token value is:\n{\ncookie_or_token\n}\n\"\n)\nif\nq\nis\nnot\nNone\n:\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Query parameter q is:\n{\nq\n}\n\"\n)\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Message text was:\n{\ndata\n}\n, for item ID:\n{\nitem_id\n}\n\"\n)\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\n(\nCookie\n,\nDepends\n,\nFastAPI\n,\nQuery\n,\nWebSocket\n,\nWebSocketException\n,\nstatus\n,\n)\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\nhtml\n=\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<title>Chat</title>\n</head>\n<body>\n<h1>WebSocket Chat</h1>\n<form action=\"\" onsubmit=\"sendMessage(event)\">\n<label>Item ID: <input type=\"text\" id=\"itemId\" autocomplete=\"off\" value=\"foo\"/></label>\n<label>Token: <input type=\"text\" id=\"token\" autocomplete=\"off\" value=\"some-key-token\"/></label>\n<button onclick=\"connect(event)\">Connect</button>\n<hr>\n<label>Message: <input type=\"text\" id=\"messageText\" autocomplete=\"off\"/></label>\n<button>Send</button>\n</form>\n<ul id='messages'>\n</ul>\n<script>\nvar ws = null;\nfunction connect(event) {\nvar itemId = document.getElementById(\"itemId\")\nvar token = document.getElementById(\"token\")\nws = new WebSocket(\"ws://localhost:8000/items/\" + itemId.value + \"/ws?token=\" + token.value);\nws.onmessage = function(event) {\nvar messages = document.getElementById('messages')\nvar message = document.createElement('li')\nvar content = document.createTextNode(event.data)\nmessage.appendChild(content)\nmessages.appendChild(message)\n};\nevent.preventDefault()\n}\nfunction sendMessage(event) {\nvar input = document.getElementById(\"messageText\")\nws.send(input.value)\ninput.value = ''\nevent.preventDefault()\n}\n</script>\n</body>\n</html>\n\"\"\"\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nget\n():\nreturn\nHTMLResponse\n(\nhtml\n)\nasync\ndef\nget_cookie_or_token\n(\nwebsocket\n:\nWebSocket\n,\nsession\n:\nstr\n|\nNone\n=\nCookie\n(\ndefault\n=\nNone\n),\ntoken\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n),\n):\nif\nsession\nis\nNone\nand\ntoken\nis\nNone\n:\nraise\nWebSocketException\n(\ncode\n=\nstatus\n.\nWS_1008_POLICY_VIOLATION\n)\nreturn\nsession\nor\ntoken\n@app\n.\nwebsocket\n(\n\"/items/\n{item_id}\n/ws\"\n)\nasync\ndef\nwebsocket_endpoint\n(\nwebsocket\n:\nWebSocket\n,\nitem_id\n:\nstr\n,\nq\n:\nint\n|\nNone\n=\nNone\n,\ncookie_or_token\n:\nstr\n=\nDepends\n(\nget_cookie_or_token\n),\n):\nawait\nwebsocket\n.\naccept\n()\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Session cookie or query token value is:\n{\ncookie_or_token\n}\n\"\n)\nif\nq\nis\nnot\nNone\n:\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Query parameter q is:\n{\nq\n}\n\"\n)\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Message text was:\n{\ndata\n}\n, for item ID:\n{\nitem_id\n}\n\"\n)\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\n(\nCookie\n,\nDepends\n,\nFastAPI\n,\nQuery\n,\nWebSocket\n,\nWebSocketException\n,\nstatus\n,\n)\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\nhtml\n=\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<title>Chat</title>\n</head>\n<body>\n<h1>WebSocket Chat</h1>\n<form action=\"\" onsubmit=\"sendMessage(event)\">\n<label>Item ID: <input type=\"text\" id=\"itemId\" autocomplete=\"off\" value=\"foo\"/></label>\n<label>Token: <input type=\"text\" id=\"token\" autocomplete=\"off\" value=\"some-key-token\"/></label>\n<button onclick=\"connect(event)\">Connect</button>\n<hr>\n<label>Message: <input type=\"text\" id=\"messageText\" autocomplete=\"off\"/></label>\n<button>Send</button>\n</form>\n<ul id='messages'>\n</ul>\n<script>\nvar ws = null;\nfunction connect(event) {\nvar itemId = document.getElementById(\"itemId\")\nvar token = document.getElementById(\"token\")\nws = new WebSocket(\"ws://localhost:8000/items/\" + itemId.value + \"/ws?token=\" + token.value);\nws.onmessage = function(event) {\nvar messages = document.getElementById('messages')\nvar message = document.createElement('li')\nvar content = document.createTextNode(event.data)\nmessage.appendChild(content)\nmessages.appendChild(message)\n};\nevent.preventDefault()\n}\nfunction sendMessage(event) {\nvar input = document.getElementById(\"messageText\")\nws.send(input.value)\ninput.value = ''\nevent.preventDefault()\n}\n</script>\n</body>\n</html>\n\"\"\"\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nget\n():\nreturn\nHTMLResponse\n(\nhtml\n)\nasync\ndef\nget_cookie_or_token\n(\nwebsocket\n:\nWebSocket\n,\nsession\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nCookie\n(\ndefault\n=\nNone\n),\ntoken\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n),\n):\nif\nsession\nis\nNone\nand\ntoken\nis\nNone\n:\nraise\nWebSocketException\n(\ncode\n=\nstatus\n.\nWS_1008_POLICY_VIOLATION\n)\nreturn\nsession\nor\ntoken\n@app\n.\nwebsocket\n(\n\"/items/\n{item_id}\n/ws\"\n)\nasync\ndef\nwebsocket_endpoint\n(\nwebsocket\n:\nWebSocket\n,\nitem_id\n:\nstr\n,\nq\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\n,\ncookie_or_token\n:\nstr\n=\nDepends\n(\nget_cookie_or_token\n),\n):\nawait\nwebsocket\n.\naccept\n()\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Session cookie or query token value is:\n{\ncookie_or_token\n}\n\"\n)\nif\nq\nis\nnot\nNone\n:\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Query parameter q is:\n{\nq\n}\n\"\n)\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Message text was:\n{\ndata\n}\n, for item ID:\n{\nitem_id\n}\n\"\n)\nInfo\nAs this is a WebSocket it doesn't really make sense to raise an\nHTTPException\n, instead we raise a\nWebSocketException\n.\nYou can use a closing code from the\nvalid codes defined in the specification\n.\nTry the WebSockets with dependencies\n¶\nIf your file is named\nmain.py\n, run your application with:\n$\nfastapi\ndev\nmain.py\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nOpen your browser at\nhttp://127.0.0.1:8000\n.\nThere you can set:\nThe \"Item ID\", used in the path.\nThe \"Token\" used as a query parameter.\nTip\nNotice that the query\ntoken\nwill be handled by a dependency.\nWith that you can connect the WebSocket and then send and receive messages:\nHandling disconnections and multiple clients\n¶\nWhen a WebSocket connection is closed, the\nawait websocket.receive_text()\nwill raise a\nWebSocketDisconnect\nexception, which you can then catch and handle like in this example.\nPython 3.9+\nfrom\nfastapi\nimport\nFastAPI\n,\nWebSocket\n,\nWebSocketDisconnect\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\nhtml\n=\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<title>Chat</title>\n</head>\n<body>\n<h1>WebSocket Chat</h1>\n<h2>Your ID: <span id=\"ws-id\"></span></h2>\n<form action=\"\" onsubmit=\"sendMessage(event)\">\n<input type=\"text\" id=\"messageText\" autocomplete=\"off\"/>\n<button>Send</button>\n</form>\n<ul id='messages'>\n</ul>\n<script>\nvar client_id = Date.now()\ndocument.querySelector(\"#ws-id\").textContent = client_id;\nvar ws = new WebSocket(`ws://localhost:8000/ws/$\n{client_id}\n`);\nws.onmessage = function(event) {\nvar messages = document.getElementById('messages')\nvar message = document.createElement('li')\nvar content = document.createTextNode(event.data)\nmessage.appendChild(content)\nmessages.appendChild(message)\n};\nfunction sendMessage(event) {\nvar input = document.getElementById(\"messageText\")\nws.send(input.value)\ninput.value = ''\nevent.preventDefault()\n}\n</script>\n</body>\n</html>\n\"\"\"\nclass\nConnectionManager\n:\ndef\n__init__\n(\nself\n):\nself\n.\nactive_connections\n:\nlist\n[\nWebSocket\n]\n=\n[]\nasync\ndef\nconnect\n(\nself\n,\nwebsocket\n:\nWebSocket\n):\nawait\nwebsocket\n.\naccept\n()\nself\n.\nactive_connections\n.\nappend\n(\nwebsocket\n)\ndef\ndisconnect\n(\nself\n,\nwebsocket\n:\nWebSocket\n):\nself\n.\nactive_connections\n.\nremove\n(\nwebsocket\n)\nasync\ndef\nsend_personal_message\n(\nself\n,\nmessage\n:\nstr\n,\nwebsocket\n:\nWebSocket\n):\nawait\nwebsocket\n.\nsend_text\n(\nmessage\n)\nasync\ndef\nbroadcast\n(\nself\n,\nmessage\n:\nstr\n):\nfor\nconnection\nin\nself\n.\nactive_connections\n:\nawait\nconnection\n.\nsend_text\n(\nmessage\n)\nmanager\n=\nConnectionManager\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nget\n():\nreturn\nHTMLResponse\n(\nhtml\n)\n@app\n.\nwebsocket\n(\n\"/ws/\n{client_id}\n\"\n)\nasync\ndef\nwebsocket_endpoint\n(\nwebsocket\n:\nWebSocket\n,\nclient_id\n:\nint\n):\nawait\nmanager\n.\nconnect\n(\nwebsocket\n)\ntry\n:\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nmanager\n.\nsend_personal_message\n(\nf\n\"You wrote:\n{\ndata\n}\n\"\n,\nwebsocket\n)\nawait\nmanager\n.\nbroadcast\n(\nf\n\"Client #\n{\nclient_id\n}\nsays:\n{\ndata\n}\n\"\n)\nexcept\nWebSocketDisconnect\n:\nmanager\n.\ndisconnect\n(\nwebsocket\n)\nawait\nmanager\n.\nbroadcast\n(\nf\n\"Client #\n{\nclient_id\n}\nleft the chat\"\n)\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\n,\nWebSocket\n,\nWebSocketDisconnect\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\nhtml\n=\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<title>Chat</title>\n</head>\n<body>\n<h1>WebSocket Chat</h1>\n<h2>Your ID: <span id=\"ws-id\"></span></h2>\n<form action=\"\" onsubmit=\"sendMessage(event)\">\n<input type=\"text\" id=\"messageText\" autocomplete=\"off\"/>\n<button>Send</button>\n</form>\n<ul id='messages'>\n</ul>\n<script>\nvar client_id = Date.now()\ndocument.querySelector(\"#ws-id\").textContent = client_id;\nvar ws = new WebSocket(`ws://localhost:8000/ws/$\n{client_id}\n`);\nws.onmessage = function(event) {\nvar messages = document.getElementById('messages')\nvar message = document.createElement('li')\nvar content = document.createTextNode(event.data)\nmessage.appendChild(content)\nmessages.appendChild(message)\n};\nfunction sendMessage(event) {\nvar input = document.getElementById(\"messageText\")\nws.send(input.value)\ninput.value = ''\nevent.preventDefault()\n}\n</script>\n</body>\n</html>\n\"\"\"\nclass\nConnectionManager\n:\ndef\n__init__\n(\nself\n):\nself\n.\nactive_connections\n:\nList\n[\nWebSocket\n]\n=\n[]\nasync\ndef\nconnect\n(\nself\n,\nwebsocket\n:\nWebSocket\n):\nawait\nwebsocket\n.\naccept\n()\nself\n.\nactive_connections\n.\nappend\n(\nwebsocket\n)\ndef\ndisconnect\n(\nself\n,\nwebsocket\n:\nWebSocket\n):\nself\n.\nactive_connections\n.\nremove\n(\nwebsocket\n)\nasync\ndef\nsend_personal_message\n(\nself\n,\nmessage\n:\nstr\n,\nwebsocket\n:\nWebSocket\n):\nawait\nwebsocket\n.\nsend_text\n(\nmessage\n)\nasync\ndef\nbroadcast\n(\nself\n,\nmessage\n:\nstr\n):\nfor\nconnection\nin\nself\n.\nactive_connections\n:\nawait\nconnection\n.\nsend_text\n(\nmessage\n)\nmanager\n=\nConnectionManager\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nget\n():\nreturn\nHTMLResponse\n(\nhtml\n)\n@app\n.\nwebsocket\n(\n\"/ws/\n{client_id}\n\"\n)\nasync\ndef\nwebsocket_endpoint\n(\nwebsocket\n:\nWebSocket\n,\nclient_id\n:\nint\n):\nawait\nmanager\n.\nconnect\n(\nwebsocket\n)\ntry\n:\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nmanager\n.\nsend_personal_message\n(\nf\n\"You wrote:\n{\ndata\n}\n\"\n,\nwebsocket\n)\nawait\nmanager\n.\nbroadcast\n(\nf\n\"Client #\n{\nclient_id\n}\nsays:\n{\ndata\n}\n\"\n)\nexcept\nWebSocketDisconnect\n:\nmanager\n.\ndisconnect\n(\nwebsocket\n)\nawait\nmanager\n.\nbroadcast\n(\nf\n\"Client #\n{\nclient_id\n}\nleft the chat\"\n)\nTo try it out:\nOpen the app with several browser tabs.\nWrite messages from them.\nThen close one of the tabs.\nThat will raise the\nWebSocketDisconnect\nexception, and all the other clients will receive a message like:\nClient #1596980209979 left the chat\nTip\nThe app above is a minimal and simple example to demonstrate how to handle and broadcast messages to several WebSocket connections.\nBut keep in mind that, as everything is handled in memory, in a single list, it will only work while the process is running, and will only work with a single process.\nIf you need something easy to integrate with FastAPI but that is more robust, supported by Redis, PostgreSQL or others, check\nencode/broadcaster\n.\nMore info\n¶\nTo learn more about the options, check Starlette's documentation for:\nThe\nWebSocket\nclass\n.\nClass-based WebSocket handling\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/additional-status-codes/",
    "title": "Additional Status Codes¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nAdditional Status Codes\nTable of contents\nAdditional status codes\nOpenAPI and API docs\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAdditional status codes\nOpenAPI and API docs\nFastAPI\nLearn\nAdvanced User Guide\nAdditional Status Codes\n¶\nBy default,\nFastAPI\nwill return the responses using a\nJSONResponse\n, putting the content you return from your\npath operation\ninside of that\nJSONResponse\n.\nIt will use the default status code or the one you set in your\npath operation\n.\nAdditional status codes\n¶\nIf you want to return additional status codes apart from the main one, you can do that by returning a\nResponse\ndirectly, like a\nJSONResponse\n, and set the additional status code directly.\nFor example, let's say that you want to have a\npath operation\nthat allows to update items, and returns HTTP status codes of 200 \"OK\" when successful.\nBut you also want it to accept new items. And when the items didn't exist before, it creates them, and returns an HTTP status code of 201 \"Created\".\nTo achieve that, import\nJSONResponse\n, and return your content there directly, setting the\nstatus_code\nthat you want:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\n,\nstatus\nfrom\nfastapi.responses\nimport\nJSONResponse\napp\n=\nFastAPI\n()\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Fighters\"\n,\n\"size\"\n:\n6\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Tenders\"\n,\n\"size\"\n:\n3\n}}\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupsert_item\n(\nitem_id\n:\nstr\n,\nname\n:\nAnnotated\n[\nstr\n|\nNone\n,\nBody\n()]\n=\nNone\n,\nsize\n:\nAnnotated\n[\nint\n|\nNone\n,\nBody\n()]\n=\nNone\n,\n):\nif\nitem_id\nin\nitems\n:\nitem\n=\nitems\n[\nitem_id\n]\nitem\n[\n\"name\"\n]\n=\nname\nitem\n[\n\"size\"\n]\n=\nsize\nreturn\nitem\nelse\n:\nitem\n=\n{\n\"name\"\n:\nname\n,\n\"size\"\n:\nsize\n}\nitems\n[\nitem_id\n]\n=\nitem\nreturn\nJSONResponse\n(\nstatus_code\n=\nstatus\n.\nHTTP_201_CREATED\n,\ncontent\n=\nitem\n)\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\n,\nstatus\nfrom\nfastapi.responses\nimport\nJSONResponse\napp\n=\nFastAPI\n()\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Fighters\"\n,\n\"size\"\n:\n6\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Tenders\"\n,\n\"size\"\n:\n3\n}}\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupsert_item\n(\nitem_id\n:\nstr\n,\nname\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nBody\n()]\n=\nNone\n,\nsize\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nBody\n()]\n=\nNone\n,\n):\nif\nitem_id\nin\nitems\n:\nitem\n=\nitems\n[\nitem_id\n]\nitem\n[\n\"name\"\n]\n=\nname\nitem\n[\n\"size\"\n]\n=\nsize\nreturn\nitem\nelse\n:\nitem\n=\n{\n\"name\"\n:\nname\n,\n\"size\"\n:\nsize\n}\nitems\n[\nitem_id\n]\n=\nitem\nreturn\nJSONResponse\n(\nstatus_code\n=\nstatus\n.\nHTTP_201_CREATED\n,\ncontent\n=\nitem\n)\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\n,\nstatus\nfrom\nfastapi.responses\nimport\nJSONResponse\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Fighters\"\n,\n\"size\"\n:\n6\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Tenders\"\n,\n\"size\"\n:\n3\n}}\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupsert_item\n(\nitem_id\n:\nstr\n,\nname\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nBody\n()]\n=\nNone\n,\nsize\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nBody\n()]\n=\nNone\n,\n):\nif\nitem_id\nin\nitems\n:\nitem\n=\nitems\n[\nitem_id\n]\nitem\n[\n\"name\"\n]\n=\nname\nitem\n[\n\"size\"\n]\n=\nsize\nreturn\nitem\nelse\n:\nitem\n=\n{\n\"name\"\n:\nname\n,\n\"size\"\n:\nsize\n}\nitems\n[\nitem_id\n]\n=\nitem\nreturn\nJSONResponse\n(\nstatus_code\n=\nstatus\n.\nHTTP_201_CREATED\n,\ncontent\n=\nitem\n)\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\n,\nstatus\nfrom\nfastapi.responses\nimport\nJSONResponse\napp\n=\nFastAPI\n()\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Fighters\"\n,\n\"size\"\n:\n6\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Tenders\"\n,\n\"size\"\n:\n3\n}}\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupsert_item\n(\nitem_id\n:\nstr\n,\nname\n:\nstr\n|\nNone\n=\nBody\n(\ndefault\n=\nNone\n),\nsize\n:\nint\n|\nNone\n=\nBody\n(\ndefault\n=\nNone\n),\n):\nif\nitem_id\nin\nitems\n:\nitem\n=\nitems\n[\nitem_id\n]\nitem\n[\n\"name\"\n]\n=\nname\nitem\n[\n\"size\"\n]\n=\nsize\nreturn\nitem\nelse\n:\nitem\n=\n{\n\"name\"\n:\nname\n,\n\"size\"\n:\nsize\n}\nitems\n[\nitem_id\n]\n=\nitem\nreturn\nJSONResponse\n(\nstatus_code\n=\nstatus\n.\nHTTP_201_CREATED\n,\ncontent\n=\nitem\n)\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\n,\nstatus\nfrom\nfastapi.responses\nimport\nJSONResponse\napp\n=\nFastAPI\n()\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Fighters\"\n,\n\"size\"\n:\n6\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Tenders\"\n,\n\"size\"\n:\n3\n}}\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupsert_item\n(\nitem_id\n:\nstr\n,\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nBody\n(\ndefault\n=\nNone\n),\nsize\n:\nUnion\n[\nint\n,\nNone\n]\n=\nBody\n(\ndefault\n=\nNone\n),\n):\nif\nitem_id\nin\nitems\n:\nitem\n=\nitems\n[\nitem_id\n]\nitem\n[\n\"name\"\n]\n=\nname\nitem\n[\n\"size\"\n]\n=\nsize\nreturn\nitem\nelse\n:\nitem\n=\n{\n\"name\"\n:\nname\n,\n\"size\"\n:\nsize\n}\nitems\n[\nitem_id\n]\n=\nitem\nreturn\nJSONResponse\n(\nstatus_code\n=\nstatus\n.\nHTTP_201_CREATED\n,\ncontent\n=\nitem\n)\nWarning\nWhen you return a\nResponse\ndirectly, like in the example above, it will be returned directly.\nIt won't be serialized with a model, etc.\nMake sure it has the data you want it to have, and that the values are valid JSON (if you are using\nJSONResponse\n).\nTechnical Details\nYou could also use\nfrom starlette.responses import JSONResponse\n.\nFastAPI\nprovides the same\nstarlette.responses\nas\nfastapi.responses\njust as a convenience for you, the developer. But most of the available responses come directly from Starlette. The same with\nstatus\n.\nOpenAPI and API docs\n¶\nIf you return additional status codes and responses directly, they won't be included in the OpenAPI schema (the API docs), because FastAPI doesn't have a way to know beforehand what you are going to return.\nBut you can document that in your code, using:\nAdditional Responses\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/alternatives/",
    "title": "Alternatives, Inspiration and Comparisons¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nAlternatives, Inspiration and Comparisons\nTable of contents\nIntro\nPrevious tools\nDjango\nDjango REST Framework\nFlask\nRequests\nSwagger / OpenAPI\nFlask REST frameworks\nMarshmallow\nWebargs\nAPISpec\nFlask-apispec\nNestJS (and Angular)\nSanic\nFalcon\nMolten\nHug\nAPIStar (<= 0.5)\nUsed by\nFastAPI\nPydantic\nStarlette\nUvicorn\nBenchmarks and speed\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nIntro\nPrevious tools\nDjango\nDjango REST Framework\nFlask\nRequests\nSwagger / OpenAPI\nFlask REST frameworks\nMarshmallow\nWebargs\nAPISpec\nFlask-apispec\nNestJS (and Angular)\nSanic\nFalcon\nMolten\nHug\nAPIStar (<= 0.5)\nUsed by\nFastAPI\nPydantic\nStarlette\nUvicorn\nBenchmarks and speed\nFastAPI\nAbout\nAlternatives, Inspiration and Comparisons\n¶\nWhat inspired\nFastAPI\n, how it compares to alternatives and what it learned from them.\nIntro\n¶\nFastAPI\nwouldn't exist if not for the previous work of others.\nThere have been many tools created before that have helped inspire its creation.\nI have been avoiding the creation of a new framework for several years. First I tried to solve all the features covered by\nFastAPI\nusing many different frameworks, plug-ins, and tools.\nBut at some point, there was no other option than creating something that provided all these features, taking the best ideas from previous tools, and combining them in the best way possible, using language features that weren't even available before (Python 3.6+ type hints).\nPrevious tools\n¶\nDjango\n¶\nIt's the most popular Python framework and is widely trusted. It is used to build systems like Instagram.\nIt's relatively tightly coupled with relational databases (like MySQL or PostgreSQL), so, having a NoSQL database (like Couchbase, MongoDB, Cassandra, etc) as the main store engine is not very easy.\nIt was created to generate the HTML in the backend, not to create APIs used by a modern frontend (like React, Vue.js and Angular) or by other systems (like\nIoT\ndevices) communicating with it.\nDjango REST Framework\n¶\nDjango REST framework was created to be a flexible toolkit for building Web APIs using Django underneath, to improve its API capabilities.\nIt is used by many companies including Mozilla, Red Hat and Eventbrite.\nIt was one of the first examples of\nautomatic API documentation\n, and this was specifically one of the first ideas that inspired \"the search for\"\nFastAPI\n.\nNote\nDjango REST Framework was created by Tom Christie. The same creator of Starlette and Uvicorn, on which\nFastAPI\nis based.\nInspired\nFastAPI\nto\nHave an automatic API documentation web user interface.\nFlask\n¶\nFlask is a \"microframework\", it doesn't include database integrations nor many of the things that come by default in Django.\nThis simplicity and flexibility allow doing things like using NoSQL databases as the main data storage system.\nAs it is very simple, it's relatively intuitive to learn, although the documentation gets somewhat technical at some points.\nIt is also commonly used for other applications that don't necessarily need a database, user management, or any of the many features that come pre-built in Django. Although many of these features can be added with plug-ins.\nThis decoupling of parts, and being a \"microframework\" that could be extended to cover exactly what is needed was a key feature that I wanted to keep.\nGiven the simplicity of Flask, it seemed like a good match for building APIs. The next thing to find was a \"Django REST Framework\" for Flask.\nInspired\nFastAPI\nto\nBe a micro-framework. Making it easy to mix and match the tools and parts needed.\nHave a simple and easy to use routing system.\nRequests\n¶\nFastAPI\nis not actually an alternative to\nRequests\n. Their scope is very different.\nIt would actually be common to use Requests\ninside\nof a FastAPI application.\nBut still, FastAPI got quite some inspiration from Requests.\nRequests\nis a library to\ninteract\nwith APIs (as a client), while\nFastAPI\nis a library to\nbuild\nAPIs (as a server).\nThey are, more or less, at opposite ends, complementing each other.\nRequests has a very simple and intuitive design, it's very easy to use, with sensible defaults. But at the same time, it's very powerful and customizable.\nThat's why, as said in the official website:\nRequests is one of the most downloaded Python packages of all time\nThe way you use it is very simple. For example, to do a\nGET\nrequest, you would write:\nresponse\n=\nrequests\n.\nget\n(\n\"http://example.com/some/url\"\n)\nThe FastAPI counterpart API\npath operation\ncould look like:\n@app\n.\nget\n(\n\"/some/url\"\n)\ndef\nread_url\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nSee the similarities in\nrequests.get(...)\nand\n@app.get(...)\n.\nInspired\nFastAPI\nto\nHave a simple and intuitive API.\nUse HTTP method names (operations) directly, in a straightforward and intuitive way.\nHave sensible defaults, but powerful customizations.\nSwagger\n/\nOpenAPI\n¶\nThe main feature I wanted from Django REST Framework was the automatic API documentation.\nThen I found that there was a standard to document APIs, using JSON (or YAML, an extension of JSON) called Swagger.\nAnd there was a web user interface for Swagger APIs already created. So, being able to generate Swagger documentation for an API would allow using this web user interface automatically.\nAt some point, Swagger was given to the Linux Foundation, to be renamed OpenAPI.\nThat's why when talking about version 2.0 it's common to say \"Swagger\", and for version 3+ \"OpenAPI\".\nInspired\nFastAPI\nto\nAdopt and use an open standard for API specifications, instead of a custom schema.\nAnd integrate standards-based user interface tools:\nSwagger UI\nReDoc\nThese two were chosen for being fairly popular and stable, but doing a quick search, you could find dozens of alternative user interfaces for OpenAPI (that you can use with\nFastAPI\n).\nFlask REST frameworks\n¶\nThere are several Flask REST frameworks, but after investing the time and work into investigating them, I found that many are discontinued or abandoned, with several standing issues that made them unfit.\nMarshmallow\n¶\nOne of the main features needed by API systems is data \"\nserialization\n\" which is taking data from the code (Python) and converting it into something that can be sent through the network. For example, converting an object containing data from a database into a JSON object. Converting\ndatetime\nobjects into strings, etc.\nAnother big feature needed by APIs is data validation, making sure that the data is valid, given certain parameters. For example, that some field is an\nint\n, and not some random string. This is especially useful for incoming data.\nWithout a data validation system, you would have to do all the checks by hand, in code.\nThese features are what Marshmallow was built to provide. It is a great library, and I have used it a lot before.\nBut it was created before there existed Python type hints. So, to define every\nschema\nyou need to use specific utils and classes provided by Marshmallow.\nInspired\nFastAPI\nto\nUse code to define \"schemas\" that provide data types and validation, automatically.\nWebargs\n¶\nAnother big feature required by APIs is\nparsing\ndata from incoming requests.\nWebargs is a tool that was made to provide that on top of several frameworks, including Flask.\nIt uses Marshmallow underneath to do the data validation. And it was created by the same developers.\nIt's a great tool and I have used it a lot too, before having\nFastAPI\n.\nInfo\nWebargs was created by the same Marshmallow developers.\nInspired\nFastAPI\nto\nHave automatic validation of incoming request data.\nAPISpec\n¶\nMarshmallow and Webargs provide validation, parsing and serialization as plug-ins.\nBut documentation is still missing. Then APISpec was created.\nIt is a plug-in for many frameworks (and there's a plug-in for Starlette too).\nThe way it works is that you write the definition of the schema using YAML format inside the docstring of each function handling a route.\nAnd it generates OpenAPI schemas.\nThat's how it works in Flask, Starlette, Responder, etc.\nBut then, we have again the problem of having a micro-syntax, inside of a Python string (a big YAML).\nThe editor can't help much with that. And if we modify parameters or Marshmallow schemas and forget to also modify that YAML docstring, the generated schema would be obsolete.\nInfo\nAPISpec was created by the same Marshmallow developers.\nInspired\nFastAPI\nto\nSupport the open standard for APIs, OpenAPI.\nFlask-apispec\n¶\nIt's a Flask plug-in, that ties together Webargs, Marshmallow and APISpec.\nIt uses the information from Webargs and Marshmallow to automatically generate OpenAPI schemas, using APISpec.\nIt's a great tool, very underrated. It should be way more popular than many Flask plug-ins out there. It might be due to its documentation being too concise and abstract.\nThis solved having to write YAML (another syntax) inside of Python docstrings.\nThis combination of Flask, Flask-apispec with Marshmallow and Webargs was my favorite backend stack until building\nFastAPI\n.\nUsing it led to the creation of several Flask full-stack generators. These are the main stacks I (and several external teams) have been using up to now:\nhttps://github.com/tiangolo/full-stack\nhttps://github.com/tiangolo/full-stack-flask-couchbase\nhttps://github.com/tiangolo/full-stack-flask-couchdb\nAnd these same full-stack generators were the base of the\nFastAPI\nProject Generators\n.\nInfo\nFlask-apispec was created by the same Marshmallow developers.\nInspired\nFastAPI\nto\nGenerate the OpenAPI schema automatically, from the same code that defines serialization and validation.\nNestJS\n(and\nAngular\n)\n¶\nThis isn't even Python, NestJS is a JavaScript (TypeScript) NodeJS framework inspired by Angular.\nIt achieves something somewhat similar to what can be done with Flask-apispec.\nIt has an integrated dependency injection system, inspired by Angular 2. It requires pre-registering the \"injectables\" (like all the other dependency injection systems I know), so, it adds to the verbosity and code repetition.\nAs the parameters are described with TypeScript types (similar to Python type hints), editor support is quite good.\nBut as TypeScript data is not preserved after compilation to JavaScript, it cannot rely on the types to define validation, serialization and documentation at the same time. Due to this and some design decisions, to get validation, serialization and automatic schema generation, it's needed to add decorators in many places. So, it becomes quite verbose.\nIt can't handle nested models very well. So, if the JSON body in the request is a JSON object that has inner fields that in turn are nested JSON objects, it cannot be properly documented and validated.\nInspired\nFastAPI\nto\nUse Python types to have great editor support.\nHave a powerful dependency injection system. Find a way to minimize code repetition.\nSanic\n¶\nIt was one of the first extremely fast Python frameworks based on\nasyncio\n. It was made to be very similar to Flask.\nTechnical Details\nIt used\nuvloop\ninstead of the default Python\nasyncio\nloop. That's what made it so fast.\nIt clearly inspired Uvicorn and Starlette, that are currently faster than Sanic in open benchmarks.\nInspired\nFastAPI\nto\nFind a way to have a crazy performance.\nThat's why\nFastAPI\nis based on Starlette, as it is the fastest framework available (tested by third-party benchmarks).\nFalcon\n¶\nFalcon is another high performance Python framework, it is designed to be minimal, and work as the foundation of other frameworks like Hug.\nIt is designed to have functions that receive two parameters, one \"request\" and one \"response\". Then you \"read\" parts from the request, and \"write\" parts to the response. Because of this design, it is not possible to declare request parameters and bodies with standard Python type hints as function parameters.\nSo, data validation, serialization, and documentation, have to be done in code, not automatically. Or they have to be implemented as a framework on top of Falcon, like Hug. This same distinction happens in other frameworks that are inspired by Falcon's design, of having one request object and one response object as parameters.\nInspired\nFastAPI\nto\nFind ways to get great performance.\nAlong with Hug (as Hug is based on Falcon) inspired\nFastAPI\nto declare a\nresponse\nparameter in functions.\nAlthough in FastAPI it's optional, and is used mainly to set headers, cookies, and alternative status codes.\nMolten\n¶\nI discovered Molten in the first stages of building\nFastAPI\n. And it has quite similar ideas:\nBased on Python type hints.\nValidation and documentation from these types.\nDependency Injection system.\nIt doesn't use a data validation, serialization and documentation third-party library like Pydantic, it has its own. So, these data type definitions would not be reusable as easily.\nIt requires a little bit more verbose configurations. And as it is based on WSGI (instead of ASGI), it is not designed to take advantage of the high performance provided by tools like Uvicorn, Starlette and Sanic.\nThe dependency injection system requires pre-registration of the dependencies and the dependencies are solved based on the declared types. So, it's not possible to declare more than one \"component\" that provides a certain type.\nRoutes are declared in a single place, using functions declared in other places (instead of using decorators that can be placed right on top of the function that handles the endpoint). This is closer to how Django does it than to how Flask (and Starlette) does it. It separates in the code things that are relatively tightly coupled.\nInspired\nFastAPI\nto\nDefine extra validations for data types using the \"default\" value of model attributes. This improves editor support, and it was not available in Pydantic before.\nThis actually inspired updating parts of Pydantic, to support the same validation declaration style (all this functionality is now already available in Pydantic).\nHug\n¶\nHug was one of the first frameworks to implement the declaration of API parameter types using Python type hints. This was a great idea that inspired other tools to do the same.\nIt used custom types in its declarations instead of standard Python types, but it was still a huge step forward.\nIt also was one of the first frameworks to generate a custom schema declaring the whole API in JSON.\nIt was not based on a standard like OpenAPI and JSON Schema. So it wouldn't be straightforward to integrate it with other tools, like Swagger UI. But again, it was a very innovative idea.\nIt has an interesting, uncommon feature: using the same framework, it's possible to create APIs and also CLIs.\nAs it is based on the previous standard for synchronous Python web frameworks (WSGI), it can't handle Websockets and other things, although it still has high performance too.\nInfo\nHug was created by Timothy Crosley, the same creator of\nisort\n, a great tool to automatically sort imports in Python files.\nIdeas inspiring\nFastAPI\nHug inspired parts of APIStar, and was one of the tools I found most promising, alongside APIStar.\nHug helped inspiring\nFastAPI\nto use Python type hints to declare parameters, and to generate a schema defining the API automatically.\nHug inspired\nFastAPI\nto declare a\nresponse\nparameter in functions to set headers and cookies.\nAPIStar\n(<= 0.5)\n¶\nRight before deciding to build\nFastAPI\nI found\nAPIStar\nserver. It had almost everything I was looking for and had a great design.\nIt was one of the first implementations of a framework using Python type hints to declare parameters and requests that I ever saw (before NestJS and Molten). I found it more or less at the same time as Hug. But APIStar used the OpenAPI standard.\nIt had automatic data validation, data serialization and OpenAPI schema generation based on the same type hints in several places.\nBody schema definitions didn't use the same Python type hints like Pydantic, it was a bit more similar to Marshmallow, so, editor support wouldn't be as good, but still, APIStar was the best available option.\nIt had the best performance benchmarks at the time (only surpassed by Starlette).\nAt first, it didn't have an automatic API documentation web UI, but I knew I could add Swagger UI to it.\nIt had a dependency injection system. It required pre-registration of components, as other tools discussed above. But still, it was a great feature.\nI was never able to use it in a full project, as it didn't have security integration, so, I couldn't replace all the features I was having with the full-stack generators based on Flask-apispec. I had in my backlog of projects to create a pull request adding that functionality.\nBut then, the project's focus shifted.\nIt was no longer an API web framework, as the creator needed to focus on Starlette.\nNow APIStar is a set of tools to validate OpenAPI specifications, not a web framework.\nInfo\nAPIStar was created by Tom Christie. The same guy that created:\nDjango REST Framework\nStarlette (in which\nFastAPI\nis based)\nUvicorn (used by Starlette and\nFastAPI\n)\nInspired\nFastAPI\nto\nExist.\nThe idea of declaring multiple things (data validation, serialization and documentation) with the same Python types, that at the same time provided great editor support, was something I considered a brilliant idea.\nAnd after searching for a long time for a similar framework and testing many different alternatives, APIStar was the best option available.\nThen APIStar stopped to exist as a server and Starlette was created, and was a new better foundation for such a system. That was the final inspiration to build\nFastAPI\n.\nI consider\nFastAPI\na \"spiritual successor\" to APIStar, while improving and increasing the features, typing system, and other parts, based on the learnings from all these previous tools.\nUsed by\nFastAPI\n¶\nPydantic\n¶\nPydantic is a library to define data validation, serialization and documentation (using JSON Schema) based on Python type hints.\nThat makes it extremely intuitive.\nIt is comparable to Marshmallow. Although it's faster than Marshmallow in benchmarks. And as it is based on the same Python type hints, the editor support is great.\nFastAPI\nuses it to\nHandle all the data validation, data serialization and automatic model documentation (based on JSON Schema).\nFastAPI\nthen takes that JSON Schema data and puts it in OpenAPI, apart from all the other things it does.\nStarlette\n¶\nStarlette is a lightweight\nASGI\nframework/toolkit, which is ideal for building high-performance asyncio services.\nIt is very simple and intuitive. It's designed to be easily extensible, and have modular components.\nIt has:\nSeriously impressive performance.\nWebSocket support.\nIn-process background tasks.\nStartup and shutdown events.\nTest client built on HTTPX.\nCORS, GZip, Static Files, Streaming responses.\nSession and Cookie support.\n100% test coverage.\n100% type annotated codebase.\nFew hard dependencies.\nStarlette is currently the fastest Python framework tested. Only surpassed by Uvicorn, which is not a framework, but a server.\nStarlette provides all the basic web microframework functionality.\nBut it doesn't provide automatic data validation, serialization or documentation.\nThat's one of the main things that\nFastAPI\nadds on top, all based on Python type hints (using Pydantic). That, plus the dependency injection system, security utilities, OpenAPI schema generation, etc.\nTechnical Details\nASGI is a new \"standard\" being developed by Django core team members. It is still not a \"Python standard\" (a PEP), although they are in the process of doing that.\nNevertheless, it is already being used as a \"standard\" by several tools. This greatly improves interoperability, as you could switch Uvicorn for any other ASGI server (like Daphne or Hypercorn), or you could add ASGI compatible tools, like\npython-socketio\n.\nFastAPI\nuses it to\nHandle all the core web parts. Adding features on top.\nThe class\nFastAPI\nitself inherits directly from the class\nStarlette\n.\nSo, anything that you can do with Starlette, you can do it directly with\nFastAPI\n, as it is basically Starlette on steroids.\nUvicorn\n¶\nUvicorn is a lightning-fast ASGI server, built on uvloop and httptools.\nIt is not a web framework, but a server. For example, it doesn't provide tools for routing by paths. That's something that a framework like Starlette (or\nFastAPI\n) would provide on top.\nIt is the recommended server for Starlette and\nFastAPI\n.\nFastAPI\nrecommends it as\nThe main web server to run\nFastAPI\napplications.\nYou can also use the\n--workers\ncommand line option to have an asynchronous multi-process server.\nCheck more details in the\nDeployment\nsection.\nBenchmarks and speed\n¶\nTo understand, compare, and see the difference between Uvicorn, Starlette and FastAPI, check the section about\nBenchmarks\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/dataclasses/",
    "title": "Using Dataclasses¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nUsing Dataclasses\nTable of contents\nDataclasses in\nresponse_model\nDataclasses in Nested Data Structures\nLearn More\nVersion\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nDataclasses in\nresponse_model\nDataclasses in Nested Data Structures\nLearn More\nVersion\nFastAPI\nLearn\nAdvanced User Guide\nUsing Dataclasses\n¶\nFastAPI is built on top of\nPydantic\n, and I have been showing you how to use Pydantic models to declare requests and responses.\nBut FastAPI also supports using\ndataclasses\nthe same way:\nPython 3.8+\nfrom\ndataclasses\nimport\ndataclass\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n@dataclass\nclass\nItem\n:\nname\n:\nstr\nprice\n:\nfloat\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\nThis is still supported thanks to\nPydantic\n, as it has\ninternal support for\ndataclasses\n.\nSo, even with the code above that doesn't use Pydantic explicitly, FastAPI is using Pydantic to convert those standard dataclasses to Pydantic's own flavor of dataclasses.\nAnd of course, it supports the same:\ndata validation\ndata serialization\ndata documentation, etc.\nThis works the same way as with Pydantic models. And it is actually achieved in the same way underneath, using Pydantic.\nInfo\nKeep in mind that dataclasses can't do everything Pydantic models can do.\nSo, you might still need to use Pydantic models.\nBut if you have a bunch of dataclasses laying around, this is a nice trick to use them to power a web API using FastAPI. 🤓\nDataclasses in\nresponse_model\n¶\nYou can also use\ndataclasses\nin the\nresponse_model\nparameter:\nPython 3.8+\nfrom\ndataclasses\nimport\ndataclass\n,\nfield\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n@dataclass\nclass\nItem\n:\nname\n:\nstr\nprice\n:\nfloat\ntags\n:\nList\n[\nstr\n]\n=\nfield\n(\ndefault_factory\n=\nlist\n)\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/next\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_next_item\n():\nreturn\n{\n\"name\"\n:\n\"Island In The Moon\"\n,\n\"price\"\n:\n12.99\n,\n\"description\"\n:\n\"A place to be playin' and havin' fun\"\n,\n\"tags\"\n:\n[\n\"breater\"\n],\n}\nThe dataclass will be automatically converted to a Pydantic dataclass.\nThis way, its schema will show up in the API docs user interface:\nDataclasses in Nested Data Structures\n¶\nYou can also combine\ndataclasses\nwith other type annotations to make nested data structures.\nIn some cases, you might still have to use Pydantic's version of\ndataclasses\n. For example, if you have errors with the automatically generated API documentation.\nIn that case, you can simply swap the standard\ndataclasses\nwith\npydantic.dataclasses\n, which is a drop-in replacement:\nPython 3.8+\nfrom\ndataclasses\nimport\nfield\n# (1)\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic.dataclasses\nimport\ndataclass\n# (2)\n@dataclass\nclass\nItem\n:\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@dataclass\nclass\nAuthor\n:\nname\n:\nstr\nitems\n:\nList\n[\nItem\n]\n=\nfield\n(\ndefault_factory\n=\nlist\n)\n# (3)\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/authors/\n{author_id}\n/items/\"\n,\nresponse_model\n=\nAuthor\n)\n# (4)\nasync\ndef\ncreate_author_items\n(\nauthor_id\n:\nstr\n,\nitems\n:\nList\n[\nItem\n]):\n# (5)\nreturn\n{\n\"name\"\n:\nauthor_id\n,\n\"items\"\n:\nitems\n}\n# (6)\n@app\n.\nget\n(\n\"/authors/\"\n,\nresponse_model\n=\nList\n[\nAuthor\n])\n# (7)\ndef\nget_authors\n():\n# (8)\nreturn\n[\n# (9)\n{\n\"name\"\n:\n\"Breaters\"\n,\n\"items\"\n:\n[\n{\n\"name\"\n:\n\"Island In The Moon\"\n,\n\"description\"\n:\n\"A place to be playin' and havin' fun\"\n,\n},\n{\n\"name\"\n:\n\"Holy Buddies\"\n},\n],\n},\n{\n\"name\"\n:\n\"System of an Up\"\n,\n\"items\"\n:\n[\n{\n\"name\"\n:\n\"Salt\"\n,\n\"description\"\n:\n\"The kombucha mushroom people's favorite\"\n,\n},\n{\n\"name\"\n:\n\"Pad Thai\"\n},\n{\n\"name\"\n:\n\"Lonely Night\"\n,\n\"description\"\n:\n\"The mostests lonliest nightiest of allest\"\n,\n},\n],\n},\n]\nWe still import\nfield\nfrom standard\ndataclasses\n.\npydantic.dataclasses\nis a drop-in replacement for\ndataclasses\n.\nThe\nAuthor\ndataclass includes a list of\nItem\ndataclasses.\nThe\nAuthor\ndataclass is used as the\nresponse_model\nparameter.\nYou can use other standard type annotations with dataclasses as the request body.\nIn this case, it's a list of\nItem\ndataclasses.\nHere we are returning a dictionary that contains\nitems\nwhich is a list of dataclasses.\nFastAPI is still capable of\nserializing\nthe data to JSON.\nHere the\nresponse_model\nis using a type annotation of a list of\nAuthor\ndataclasses.\nAgain, you can combine\ndataclasses\nwith standard type annotations.\nNotice that this\npath operation function\nuses regular\ndef\ninstead of\nasync def\n.\nAs always, in FastAPI you can combine\ndef\nand\nasync def\nas needed.\nIf you need a refresher about when to use which, check out the section\n\"In a hurry?\"\nin the docs about\nasync\nand\nawait\n.\nThis\npath operation function\nis not returning dataclasses (although it could), but a list of dictionaries with internal data.\nFastAPI will use the\nresponse_model\nparameter (that includes dataclasses) to convert the response.\nYou can combine\ndataclasses\nwith other type annotations in many different combinations to form complex data structures.\nCheck the in-code annotation tips above to see more specific details.\nLearn More\n¶\nYou can also combine\ndataclasses\nwith other Pydantic models, inherit from them, include them in your own models, etc.\nTo learn more, check the\nPydantic docs about dataclasses\n.\nVersion\n¶\nThis is available since FastAPI version\n0.67.0\n. 🔖\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/how-to/configure-swagger-ui/",
    "title": "Configure Swagger UI¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nConfigure Swagger UI\nTable of contents\nDisable Syntax Highlighting\nChange the Theme\nChange Default Swagger UI Parameters\nOther Swagger UI Parameters\nJavaScript-only settings\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nDisable Syntax Highlighting\nChange the Theme\nChange Default Swagger UI Parameters\nOther Swagger UI Parameters\nJavaScript-only settings\nFastAPI\nLearn\nHow To - Recipes\nConfigure Swagger UI\n¶\nYou can configure some extra\nSwagger UI parameters\n.\nTo configure them, pass the\nswagger_ui_parameters\nargument when creating the\nFastAPI()\napp object or to the\nget_swagger_ui_html()\nfunction.\nswagger_ui_parameters\nreceives a dictionary with the configurations passed to Swagger UI directly.\nFastAPI converts the configurations to\nJSON\nto make them compatible with JavaScript, as that's what Swagger UI needs.\nDisable Syntax Highlighting\n¶\nFor example, you could disable syntax highlighting in Swagger UI.\nWithout changing the settings, syntax highlighting is enabled by default:\nBut you can disable it by setting\nsyntaxHighlight\nto\nFalse\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\nswagger_ui_parameters\n=\n{\n\"syntaxHighlight\"\n:\nFalse\n})\n@app\n.\nget\n(\n\"/users/\n{username}\n\"\n)\nasync\ndef\nread_user\n(\nusername\n:\nstr\n):\nreturn\n{\n\"message\"\n:\nf\n\"Hello\n{\nusername\n}\n\"\n}\n...and then Swagger UI won't show the syntax highlighting anymore:\nChange the Theme\n¶\nThe same way you could set the syntax highlighting theme with the key\n\"syntaxHighlight.theme\"\n(notice that it has a dot in the middle):\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\nswagger_ui_parameters\n=\n{\n\"syntaxHighlight\"\n:\n{\n\"theme\"\n:\n\"obsidian\"\n}})\n@app\n.\nget\n(\n\"/users/\n{username}\n\"\n)\nasync\ndef\nread_user\n(\nusername\n:\nstr\n):\nreturn\n{\n\"message\"\n:\nf\n\"Hello\n{\nusername\n}\n\"\n}\nThat configuration would change the syntax highlighting color theme:\nChange Default Swagger UI Parameters\n¶\nFastAPI includes some default configuration parameters appropriate for most of the use cases.\nIt includes these default configurations:\nPython 3.8+\n# Code above omitted 👆\nswagger_ui_default_parameters\n:\nAnnotated\n[\nDict\n[\nstr\n,\nAny\n],\nDoc\n(\n\"\"\"\nDefault configurations for Swagger UI.\nYou can use it as a template to add any other configurations needed.\n\"\"\"\n),\n]\n=\n{\n\"dom_id\"\n:\n\"#swagger-ui\"\n,\n\"layout\"\n:\n\"BaseLayout\"\n,\n\"deepLinking\"\n:\nTrue\n,\n\"showExtensions\"\n:\nTrue\n,\n\"showCommonExtensions\"\n:\nTrue\n,\n}\n# Code below omitted 👇\n👀 Full file preview\nPython 3.8+\nimport\njson\nfrom\ntyping\nimport\nAny\n,\nDict\n,\nOptional\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\nstarlette.responses\nimport\nHTMLResponse\nfrom\ntyping_extensions\nimport\nAnnotated\n,\nDoc\nswagger_ui_default_parameters\n:\nAnnotated\n[\nDict\n[\nstr\n,\nAny\n],\nDoc\n(\n\"\"\"\nDefault configurations for Swagger UI.\nYou can use it as a template to add any other configurations needed.\n\"\"\"\n),\n]\n=\n{\n\"dom_id\"\n:\n\"#swagger-ui\"\n,\n\"layout\"\n:\n\"BaseLayout\"\n,\n\"deepLinking\"\n:\nTrue\n,\n\"showExtensions\"\n:\nTrue\n,\n\"showCommonExtensions\"\n:\nTrue\n,\n}\ndef\nget_swagger_ui_html\n(\n*\n,\nopenapi_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe OpenAPI URL that Swagger UI should load and use.\nThis is normally done automatically by FastAPI using the default URL\n`/openapi.json`.\n\"\"\"\n),\n],\ntitle\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe HTML `<title>` content, normally shown in the browser tab.\n\"\"\"\n),\n],\nswagger_js_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL to use to load the Swagger UI JavaScript.\nIt is normally set to a CDN URL.\n\"\"\"\n),\n]\n=\n\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui-bundle.js\"\n,\nswagger_css_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL to use to load the Swagger UI CSS.\nIt is normally set to a CDN URL.\n\"\"\"\n),\n]\n=\n\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui.css\"\n,\nswagger_favicon_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL of the favicon to use. It is normally shown in the browser tab.\n\"\"\"\n),\n]\n=\n\"https://fastapi.tiangolo.com/img/favicon.png\"\n,\noauth2_redirect_url\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nThe OAuth2 redirect URL, it is normally automatically handled by FastAPI.\n\"\"\"\n),\n]\n=\nNone\n,\ninit_oauth\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nA dictionary with Swagger UI OAuth2 initialization configurations.\n\"\"\"\n),\n]\n=\nNone\n,\nswagger_ui_parameters\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nConfiguration parameters for Swagger UI.\nIt defaults to [swagger_ui_default_parameters][fastapi.openapi.docs.swagger_ui_default_parameters].\n\"\"\"\n),\n]\n=\nNone\n,\n)\n->\nHTMLResponse\n:\n\"\"\"\nGenerate and return the HTML  that loads Swagger UI for the interactive\nAPI docs (normally served at `/docs`).\nYou would only call this function yourself if you needed to override some parts,\nfor example the URLs to use to load Swagger UI's JavaScript and CSS.\nRead more about it in the\n[FastAPI docs for Configure Swagger UI](https://fastapi.tiangolo.com/how-to/configure-swagger-ui/)\nand the [FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).\n\"\"\"\ncurrent_swagger_ui_parameters\n=\nswagger_ui_default_parameters\n.\ncopy\n()\nif\nswagger_ui_parameters\n:\ncurrent_swagger_ui_parameters\n.\nupdate\n(\nswagger_ui_parameters\n)\nhtml\n=\nf\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"\n{\nswagger_css_url\n}\n\">\n<link rel=\"shortcut icon\" href=\"\n{\nswagger_favicon_url\n}\n\">\n<title>\n{\ntitle\n}\n</title>\n</head>\n<body>\n<div id=\"swagger-ui\">\n</div>\n<script src=\"\n{\nswagger_js_url\n}\n\"></script>\n<!-- `SwaggerUIBundle` is now available on the page -->\n<script>\nconst ui = SwaggerUIBundle(\n{{\nurl: '\n{\nopenapi_url\n}\n',\n\"\"\"\nfor\nkey\n,\nvalue\nin\ncurrent_swagger_ui_parameters\n.\nitems\n():\nhtml\n+=\nf\n\"\n{\njson\n.\ndumps\n(\nkey\n)\n}\n:\n{\njson\n.\ndumps\n(\njsonable_encoder\n(\nvalue\n))\n}\n,\n\\n\n\"\nif\noauth2_redirect_url\n:\nhtml\n+=\nf\n\"oauth2RedirectUrl: window.location.origin + '\n{\noauth2_redirect_url\n}\n',\"\nhtml\n+=\n\"\"\"\npresets: [\nSwaggerUIBundle.presets.apis,\nSwaggerUIBundle.SwaggerUIStandalonePreset\n],\n})\"\"\"\nif\ninit_oauth\n:\nhtml\n+=\nf\n\"\"\"\nui.initOAuth(\n{\njson\n.\ndumps\n(\njsonable_encoder\n(\ninit_oauth\n))\n}\n)\n\"\"\"\nhtml\n+=\n\"\"\"\n</script>\n</body>\n</html>\n\"\"\"\nreturn\nHTMLResponse\n(\nhtml\n)\ndef\nget_redoc_html\n(\n*\n,\nopenapi_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe OpenAPI URL that ReDoc should load and use.\nThis is normally done automatically by FastAPI using the default URL\n`/openapi.json`.\n\"\"\"\n),\n],\ntitle\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe HTML `<title>` content, normally shown in the browser tab.\n\"\"\"\n),\n],\nredoc_js_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL to use to load the ReDoc JavaScript.\nIt is normally set to a CDN URL.\n\"\"\"\n),\n]\n=\n\"https://cdn.jsdelivr.net/npm/redoc@2/bundles/redoc.standalone.js\"\n,\nredoc_favicon_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL of the favicon to use. It is normally shown in the browser tab.\n\"\"\"\n),\n]\n=\n\"https://fastapi.tiangolo.com/img/favicon.png\"\n,\nwith_google_fonts\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nLoad and use Google Fonts.\n\"\"\"\n),\n]\n=\nTrue\n,\n)\n->\nHTMLResponse\n:\n\"\"\"\nGenerate and return the HTML response that loads ReDoc for the alternative\nAPI docs (normally served at `/redoc`).\nYou would only call this function yourself if you needed to override some parts,\nfor example the URLs to use to load ReDoc's JavaScript and CSS.\nRead more about it in the\n[FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).\n\"\"\"\nhtml\n=\nf\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<title>\n{\ntitle\n}\n</title>\n<!-- needed for adaptive design -->\n<meta charset=\"utf-8\"/>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\"\"\"\nif\nwith_google_fonts\n:\nhtml\n+=\n\"\"\"\n<link href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:300,400,700\" rel=\"stylesheet\">\n\"\"\"\nhtml\n+=\nf\n\"\"\"\n<link rel=\"shortcut icon\" href=\"\n{\nredoc_favicon_url\n}\n\">\n<!--\nReDoc doesn't change outer page styles\n-->\n<style>\nbody\n{{\nmargin: 0;\npadding: 0;\n}}\n</style>\n</head>\n<body>\n<noscript>\nReDoc requires Javascript to function. Please enable it to browse the documentation.\n</noscript>\n<redoc spec-url=\"\n{\nopenapi_url\n}\n\"></redoc>\n<script src=\"\n{\nredoc_js_url\n}\n\"> </script>\n</body>\n</html>\n\"\"\"\nreturn\nHTMLResponse\n(\nhtml\n)\ndef\nget_swagger_ui_oauth2_redirect_html\n()\n->\nHTMLResponse\n:\n\"\"\"\nGenerate the HTML response with the OAuth2 redirection for Swagger UI.\nYou normally don't need to use or change this.\n\"\"\"\n# copied from https://github.com/swagger-api/swagger-ui/blob/v4.14.0/dist/oauth2-redirect.html\nhtml\n=\n\"\"\"\n<!doctype html>\n<html lang=\"en-US\">\n<head>\n<title>Swagger UI: OAuth2 Redirect</title>\n</head>\n<body>\n<script>\n'use strict';\nfunction run () {\nvar oauth2 = window.opener.swaggerUIRedirectOauth2;\nvar sentState = oauth2.state;\nvar redirectUrl = oauth2.redirectUrl;\nvar isValid, qp, arr;\nif (/code|token|error/.test(window.location.hash)) {\nqp = window.location.hash.substring(1).replace('?', '&');\n} else {\nqp = location.search.substring(1);\n}\narr = qp.split(\"&\");\narr.forEach(function (v,i,_arr) { _arr[i] = '\"' + v.replace('=', '\":\"') + '\"';});\nqp = qp ? JSON.parse('{' + arr.join() + '}',\nfunction (key, value) {\nreturn key === \"\" ? value : decodeURIComponent(value);\n}\n) :\n{}\n;\nisValid = qp.state === sentState;\nif ((\noauth2.auth.schema.get(\"flow\") === \"accessCode\" ||\noauth2.auth.schema.get(\"flow\") === \"authorizationCode\" ||\noauth2.auth.schema.get(\"flow\") === \"authorization_code\"\n) && !oauth2.auth.code) {\nif (!isValid) {\noauth2.errCb({\nauthId: oauth2.auth.name,\nsource: \"auth\",\nlevel: \"warning\",\nmessage: \"Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server.\"\n});\n}\nif (qp.code) {\ndelete oauth2.state;\noauth2.auth.code = qp.code;\noauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});\n} else {\nlet oauthErrorMsg;\nif (qp.error) {\noauthErrorMsg = \"[\"+qp.error+\"]: \" +\n(qp.error_description ? qp.error_description+ \". \" : \"no accessCode received from the server. \") +\n(qp.error_uri ? \"More info: \"+qp.error_uri : \"\");\n}\noauth2.errCb({\nauthId: oauth2.auth.name,\nsource: \"auth\",\nlevel: \"error\",\nmessage: oauthErrorMsg || \"[Authorization failed]: no accessCode received from the server.\"\n});\n}\n} else {\noauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});\n}\nwindow.close();\n}\nif (document.readyState !== 'loading') {\nrun();\n} else {\ndocument.addEventListener('DOMContentLoaded', function () {\nrun();\n});\n}\n</script>\n</body>\n</html>\n\"\"\"\nreturn\nHTMLResponse\n(\ncontent\n=\nhtml\n)\nYou can override any of them by setting a different value in the argument\nswagger_ui_parameters\n.\nFor example, to disable\ndeepLinking\nyou could pass these settings to\nswagger_ui_parameters\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\nswagger_ui_parameters\n=\n{\n\"deepLinking\"\n:\nFalse\n})\n@app\n.\nget\n(\n\"/users/\n{username}\n\"\n)\nasync\ndef\nread_user\n(\nusername\n:\nstr\n):\nreturn\n{\n\"message\"\n:\nf\n\"Hello\n{\nusername\n}\n\"\n}\nOther Swagger UI Parameters\n¶\nTo see all the other possible configurations you can use, read the official\ndocs for Swagger UI parameters\n.\nJavaScript-only settings\n¶\nSwagger UI also allows other configurations to be\nJavaScript-only\nobjects (for example, JavaScript functions).\nFastAPI also includes these JavaScript-only\npresets\nsettings:\npresets\n:\n[\nSwaggerUIBundle\n.\npresets\n.\napis\n,\nSwaggerUIBundle\n.\nSwaggerUIStandalonePreset\n]\nThese are\nJavaScript\nobjects, not strings, so you can't pass them from Python code directly.\nIf you need to use JavaScript-only configurations like those, you can use one of the methods above. Override all the Swagger UI\npath operation\nand manually write any JavaScript you need.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/security/",
    "title": "Advanced Security¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAdditional Features\nRead the Tutorial first\nFastAPI\nLearn\nAdvanced User Guide\nAdvanced Security\nAdvanced Security\n¶\nAdditional Features\n¶\nThere are some extra features to handle security apart from the ones covered in the\nTutorial - User Guide: Security\n.\nTip\nThe next sections are\nnot necessarily \"advanced\"\n.\nAnd it's possible that for your use case, the solution is in one of them.\nRead the Tutorial first\n¶\nThe next sections assume you already read the main\nTutorial - User Guide: Security\n.\nThey are all based on the same concepts, but allow some extra functionalities.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/environment-variables/",
    "title": "Environment Variables¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nEnvironment Variables\nTable of contents\nCreate and Use Env Vars\nRead env vars in Python\nTypes and Validation\nPATH\nEnvironment Variable\nInstalling Python and Updating the\nPATH\nConclusion\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nCreate and Use Env Vars\nRead env vars in Python\nTypes and Validation\nPATH\nEnvironment Variable\nInstalling Python and Updating the\nPATH\nConclusion\nFastAPI\nLearn\nEnvironment Variables\n¶\nTip\nIf you already know what \"environment variables\" are and how to use them, feel free to skip this.\nAn environment variable (also known as \"\nenv var\n\") is a variable that lives\noutside\nof the Python code, in the\noperating system\n, and could be read by your Python code (or by other programs as well).\nEnvironment variables could be useful for handling application\nsettings\n, as part of the\ninstallation\nof Python, etc.\nCreate and Use Env Vars\n¶\nYou can\ncreate\nand use environment variables in the\nshell (terminal)\n, without needing Python:\nLinux, macOS, Windows Bash\nWindows PowerShell\n// You could create an env var MY_NAME with\n$\nexport\nMY_NAME\n=\n\"Wade Wilson\"\n// Then you could use it with other programs, like\n$\necho\n\"Hello\n$MY_NAME\n\"\nHello Wade Wilson\n// Create an env var MY_NAME\n$\n$Env\n:MY_NAME\n=\n\"Wade Wilson\"\n// Use it with other programs, like\n$\necho\n\"Hello\n$Env\n:MY_NAME\"\nHello Wade Wilson\nRead env vars in Python\n¶\nYou could also create environment variables\noutside\nof Python, in the terminal (or with any other method), and then\nread them in Python\n.\nFor example you could have a file\nmain.py\nwith:\nimport\nos\nname\n=\nos\n.\ngetenv\n(\n\"MY_NAME\"\n,\n\"World\"\n)\nprint\n(\nf\n\"Hello\n{\nname\n}\nfrom Python\"\n)\nTip\nThe second argument to\nos.getenv()\nis the default value to return.\nIf not provided, it's\nNone\nby default, here we provide\n\"World\"\nas the default value to use.\nThen you could call that Python program:\nLinux, macOS, Windows Bash\nWindows PowerShell\n// Here we don't set the env var yet\n$\npython\nmain.py\n// As we didn't set the env var, we get the default value\nHello World from Python\n// But if we create an environment variable first\n$\nexport\nMY_NAME\n=\n\"Wade Wilson\"\n// And then call the program again\n$\npython\nmain.py\n// Now it can read the environment variable\nHello Wade Wilson from Python\n// Here we don't set the env var yet\n$\npython\nmain.py\n// As we didn't set the env var, we get the default value\nHello World from Python\n// But if we create an environment variable first\n$\n$Env\n:MY_NAME\n=\n\"Wade Wilson\"\n// And then call the program again\n$\npython\nmain.py\n// Now it can read the environment variable\nHello Wade Wilson from Python\nAs environment variables can be set outside of the code, but can be read by the code, and don't have to be stored (committed to\ngit\n) with the rest of the files, it's common to use them for configurations or\nsettings\n.\nYou can also create an environment variable only for a\nspecific program invocation\n, that is only available to that program, and only for its duration.\nTo do that, create it right before the program itself, on the same line:\n// Create an env var MY_NAME in line for this program call\n$\nMY_NAME\n=\n\"Wade Wilson\"\npython\nmain.py\n// Now it can read the environment variable\nHello Wade Wilson from Python\n// The env var no longer exists afterwards\n$\npython\nmain.py\nHello World from Python\nTip\nYou can read more about it at\nThe Twelve-Factor App: Config\n.\nTypes and Validation\n¶\nThese environment variables can only handle\ntext strings\n, as they are external to Python and have to be compatible with other programs and the rest of the system (and even with different operating systems, as Linux, Windows, macOS).\nThat means that\nany value\nread in Python from an environment variable\nwill be a\nstr\n, and any conversion to a different type or any validation has to be done in code.\nYou will learn more about using environment variables for handling\napplication settings\nin the\nAdvanced User Guide - Settings and Environment Variables\n.\nPATH\nEnvironment Variable\n¶\nThere is a\nspecial\nenvironment variable called\nPATH\nthat is used by the operating systems (Linux, macOS, Windows) to find programs to run.\nThe value of the variable\nPATH\nis a long string that is made of directories separated by a colon\n:\non Linux and macOS, and by a semicolon\n;\non Windows.\nFor example, the\nPATH\nenvironment variable could look like this:\nLinux, macOS\nWindows\n/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\nThis means that the system should look for programs in the directories:\n/usr/local/bin\n/usr/bin\n/bin\n/usr/sbin\n/sbin\nC:\\Program Files\\Python312\\Scripts;C:\\Program Files\\Python312;C:\\Windows\\System32\nThis means that the system should look for programs in the directories:\nC:\\Program Files\\Python312\\Scripts\nC:\\Program Files\\Python312\nC:\\Windows\\System32\nWhen you type a\ncommand\nin the terminal, the operating system\nlooks for\nthe program in\neach of those directories\nlisted in the\nPATH\nenvironment variable.\nFor example, when you type\npython\nin the terminal, the operating system looks for a program called\npython\nin the\nfirst directory\nin that list.\nIf it finds it, then it will\nuse it\n. Otherwise it keeps looking in the\nother directories\n.\nInstalling Python and Updating the\nPATH\n¶\nWhen you install Python, you might be asked if you want to update the\nPATH\nenvironment variable.\nLinux, macOS\nWindows\nLet's say you install Python and it ends up in a directory\n/opt/custompython/bin\n.\nIf you say yes to update the\nPATH\nenvironment variable, then the installer will add\n/opt/custompython/bin\nto the\nPATH\nenvironment variable.\nIt could look like this:\n/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/custompython/bin\nThis way, when you type\npython\nin the terminal, the system will find the Python program in\n/opt/custompython/bin\n(the last directory) and use that one.\nLet's say you install Python and it ends up in a directory\nC:\\opt\\custompython\\bin\n.\nIf you say yes to update the\nPATH\nenvironment variable, then the installer will add\nC:\\opt\\custompython\\bin\nto the\nPATH\nenvironment variable.\nC:\\Program Files\\Python312\\Scripts;C:\\Program Files\\Python312;C:\\Windows\\System32;C:\\opt\\custompython\\bin\nThis way, when you type\npython\nin the terminal, the system will find the Python program in\nC:\\opt\\custompython\\bin\n(the last directory) and use that one.\nSo, if you type:\n$\npython\nLinux, macOS\nWindows\nThe system will\nfind\nthe\npython\nprogram in\n/opt/custompython/bin\nand run it.\nIt would be roughly equivalent to typing:\n$\n/opt/custompython/bin/python\nThe system will\nfind\nthe\npython\nprogram in\nC:\\opt\\custompython\\bin\\python\nand run it.\nIt would be roughly equivalent to typing:\n$\nC:\n\\o\npt\n\\c\nustompython\n\\b\nin\n\\p\nython\nThis information will be useful when learning about\nVirtual Environments\n.\nConclusion\n¶\nWith this you should have a basic understanding of what\nenvironment variables\nare and how to use them in Python.\nYou can also read more about them in the\nWikipedia for Environment Variable\n.\nIn many cases it's not very obvious how environment variables would be useful and applicable right away. But they keep showing up in many different scenarios when you are developing, so it's good to know about them.\nFor example, you will need this information in the next section, about\nVirtual Environments\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/",
    "title": "Path Parameters and Numeric Validations¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nPath Parameters and Numeric Validations\nTable of contents\nImport\nPath\nDeclare metadata\nOrder the parameters as you need\nOrder the parameters as you need, tricks\nBetter with\nAnnotated\nNumber validations: greater than or equal\nNumber validations: greater than and less than or equal\nNumber validations: floats, greater than and less than\nRecap\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nImport\nPath\nDeclare metadata\nOrder the parameters as you need\nOrder the parameters as you need, tricks\nBetter with\nAnnotated\nNumber validations: greater than or equal\nNumber validations: greater than and less than or equal\nNumber validations: floats, greater than and less than\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nPath Parameters and Numeric Validations\n¶\nIn the same way that you can declare more validations and metadata for query parameters with\nQuery\n, you can declare the same type of validations and metadata for path parameters with\nPath\n.\nImport\nPath\n¶\nFirst, import\nPath\nfrom\nfastapi\n, and import\nAnnotated\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)],\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\nalias\n=\n\"item-query\"\n)]\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)],\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nalias\n=\n\"item-query\"\n)]\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)],\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nalias\n=\n\"item-query\"\n)]\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n),\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\nalias\n=\n\"item-query\"\n),\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n),\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\nalias\n=\n\"item-query\"\n),\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nInfo\nFastAPI added support for\nAnnotated\n(and started recommending it) in version 0.95.0.\nIf you have an older version, you would get errors when trying to use\nAnnotated\n.\nMake sure you\nUpgrade the FastAPI version\nto at least 0.95.1 before using\nAnnotated\n.\nDeclare metadata\n¶\nYou can declare all the same parameters as for\nQuery\n.\nFor example, to declare a\ntitle\nmetadata value for the path parameter\nitem_id\nyou can type:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)],\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\nalias\n=\n\"item-query\"\n)]\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)],\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nalias\n=\n\"item-query\"\n)]\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)],\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nalias\n=\n\"item-query\"\n)]\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n),\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\nalias\n=\n\"item-query\"\n),\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n),\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\nalias\n=\n\"item-query\"\n),\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nNote\nA path parameter is always required as it has to be part of the path. Even if you declared it with\nNone\nor set a default value, it would not affect anything, it would still be always required.\nOrder the parameters as you need\n¶\nTip\nThis is probably not as important or necessary if you use\nAnnotated\n.\nLet's say that you want to declare the query parameter\nq\nas a required\nstr\n.\nAnd you don't need to declare anything else for that parameter, so you don't really need to use\nQuery\n.\nBut you still need to use\nPath\nfor the\nitem_id\npath parameter. And you don't want to use\nAnnotated\nfor some reason.\nPython will complain if you put a value with a \"default\" before a value that doesn't have a \"default\".\nBut you can re-order them, and have the value without a default (the query parameter\nq\n) first.\nIt doesn't matter for\nFastAPI\n. It will detect the parameters by their names, types and default declarations (\nQuery\n,\nPath\n, etc), it doesn't care about the order.\nSo, you can declare your function as:\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n,\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n,\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)]\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n,\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)]\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nBut keep in mind that if you use\nAnnotated\n, you won't have this problem, it won't matter as you're not using the function parameter default values for\nQuery()\nor\nPath()\n.\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n,\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)]\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n,\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)]\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n,\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nOrder the parameters as you need, tricks\n¶\nTip\nThis is probably not as important or necessary if you use\nAnnotated\n.\nHere's a\nsmall trick\nthat can be handy, but you won't need it often.\nIf you want to:\ndeclare the\nq\nquery parameter without a\nQuery\nnor any default value\ndeclare the path parameter\nitem_id\nusing\nPath\nhave them in a different order\nnot use\nAnnotated\n...Python has a little special syntax for that.\nPass\n*\n, as the first parameter of the function.\nPython won't do anything with that\n*\n, but it will know that all the following parameters should be called as keyword arguments (key-value pairs), also known as\nkwargs\n. Even if they don't have a default value.\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\n*\n,\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n),\nq\n:\nstr\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)],\nq\n:\nstr\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)],\nq\n:\nstr\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nBetter with\nAnnotated\n¶\nKeep in mind that if you use\nAnnotated\n, as you are not using function parameter default values, you won't have this problem, and you probably won't need to use\n*\n.\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)],\nq\n:\nstr\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)],\nq\n:\nstr\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\n*\n,\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n),\nq\n:\nstr\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nNumber validations: greater than or equal\n¶\nWith\nQuery\nand\nPath\n(and others you'll see later) you can declare number constraints.\nHere, with\nge=1\n,\nitem_id\nwill need to be an integer number \"\ng\nreater than or\ne\nqual\" to\n1\n.\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\nge\n=\n1\n)],\nq\n:\nstr\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\nge\n=\n1\n)],\nq\n:\nstr\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\n*\n,\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\nge\n=\n1\n),\nq\n:\nstr\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nNumber validations: greater than and less than or equal\n¶\nThe same applies for:\ngt\n:\ng\nreater\nt\nhan\nle\n:\nl\ness than or\ne\nqual\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\ngt\n=\n0\n,\nle\n=\n1000\n)],\nq\n:\nstr\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\ngt\n=\n0\n,\nle\n=\n1000\n)],\nq\n:\nstr\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\n*\n,\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\ngt\n=\n0\n,\nle\n=\n1000\n),\nq\n:\nstr\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nNumber validations: floats, greater than and less than\n¶\nNumber validations also work for\nfloat\nvalues.\nHere's where it becomes important to be able to declare\ngt\nand not just\nge\n. As with it you can require, for example, that a value must be greater than\n0\n, even if it is less than\n1\n.\nSo,\n0.5\nwould be a valid value. But\n0.0\nor\n0\nwould not.\nAnd the same for\nlt\n.\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\n*\n,\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\nge\n=\n0\n,\nle\n=\n1000\n)],\nq\n:\nstr\n,\nsize\n:\nAnnotated\n[\nfloat\n,\nQuery\n(\ngt\n=\n0\n,\nlt\n=\n10.5\n)],\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nif\nsize\n:\nresults\n.\nupdate\n({\n\"size\"\n:\nsize\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\n*\n,\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\nge\n=\n0\n,\nle\n=\n1000\n)],\nq\n:\nstr\n,\nsize\n:\nAnnotated\n[\nfloat\n,\nQuery\n(\ngt\n=\n0\n,\nlt\n=\n10.5\n)],\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nif\nsize\n:\nresults\n.\nupdate\n({\n\"size\"\n:\nsize\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\n*\n,\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\nge\n=\n0\n,\nle\n=\n1000\n),\nq\n:\nstr\n,\nsize\n:\nfloat\n=\nQuery\n(\ngt\n=\n0\n,\nlt\n=\n10.5\n),\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nif\nsize\n:\nresults\n.\nupdate\n({\n\"size\"\n:\nsize\n})\nreturn\nresults\nRecap\n¶\nWith\nQuery\n,\nPath\n(and others you haven't seen yet) you can declare metadata and string validations in the same ways as with\nQuery Parameters and String Validations\n.\nAnd you can also declare numeric validations:\ngt\n:\ng\nreater\nt\nhan\nge\n:\ng\nreater than or\ne\nqual\nlt\n:\nl\ness\nt\nhan\nle\n:\nl\ness than or\ne\nqual\nInfo\nQuery\n,\nPath\n, and other classes you will see later are subclasses of a common\nParam\nclass.\nAll of them share the same parameters for additional validation and metadata you have seen.\nTechnical Details\nWhen you import\nQuery\n,\nPath\nand others from\nfastapi\n, they are actually functions.\nThat when called, return instances of classes of the same name.\nSo, you import\nQuery\n, which is a function. And when you call it, it returns an instance of a class also named\nQuery\n.\nThese functions are there (instead of just using the classes directly) so that your editor doesn't mark errors about their types.\nThat way you can use your normal editor and coding tools without having to add custom configurations to disregard those errors.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/body/",
    "title": "Request Body¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nRequest Body\nTable of contents\nImport Pydantic's\nBaseModel\nCreate your data model\nDeclare it as a parameter\nResults\nAutomatic docs\nEditor support\nUse the model\nRequest body + path parameters\nRequest body + path + query parameters\nWithout Pydantic\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nImport Pydantic's\nBaseModel\nCreate your data model\nDeclare it as a parameter\nResults\nAutomatic docs\nEditor support\nUse the model\nRequest body + path parameters\nRequest body + path + query parameters\nWithout Pydantic\nFastAPI\nLearn\nTutorial - User Guide\nRequest Body\n¶\nWhen you need to send data from a client (let's say, a browser) to your API, you send it as a\nrequest body\n.\nA\nrequest\nbody is data sent by the client to your API. A\nresponse\nbody is the data your API sends to the client.\nYour API almost always has to send a\nresponse\nbody. But clients don't necessarily need to send\nrequest bodies\nall the time, sometimes they only request a path, maybe with some query parameters, but don't send a body.\nTo declare a\nrequest\nbody, you use\nPydantic\nmodels with all their power and benefits.\nInfo\nTo send data, you should use one of:\nPOST\n(the more common),\nPUT\n,\nDELETE\nor\nPATCH\n.\nSending a body with a\nGET\nrequest has an undefined behavior in the specifications, nevertheless, it is supported by FastAPI, only for very complex/extreme use cases.\nAs it is discouraged, the interactive docs with Swagger UI won't show the documentation for the body when using\nGET\n, and proxies in the middle might not support it.\nImport Pydantic's\nBaseModel\n¶\nFirst, you need to import\nBaseModel\nfrom\npydantic\n:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\nCreate your data model\n¶\nThen you declare your data model as a class that inherits from\nBaseModel\n.\nUse standard Python types for all the attributes:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\nThe same as when declaring query parameters, when a model attribute has a default value, it is not required. Otherwise, it is required. Use\nNone\nto make it just optional.\nFor example, this model above declares a JSON \"\nobject\n\" (or Python\ndict\n) like:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"An optional description\"\n,\n\"price\"\n:\n45.2\n,\n\"tax\"\n:\n3.5\n}\n...as\ndescription\nand\ntax\nare optional (with a default value of\nNone\n), this JSON \"\nobject\n\" would also be valid:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n45.2\n}\nDeclare it as a parameter\n¶\nTo add it to your\npath operation\n, declare it the same way you declared path and query parameters:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n...and declare its type as the model you created,\nItem\n.\nResults\n¶\nWith just that Python type declaration,\nFastAPI\nwill:\nRead the body of the request as JSON.\nConvert the corresponding types (if needed).\nValidate the data.\nIf the data is invalid, it will return a nice and clear error, indicating exactly where and what was the incorrect data.\nGive you the received data in the parameter\nitem\n.\nAs you declared it in the function to be of type\nItem\n, you will also have all the editor support (completion, etc) for all of the attributes and their types.\nGenerate\nJSON Schema\ndefinitions for your model, you can also use them anywhere else you like if it makes sense for your project.\nThose schemas will be part of the generated OpenAPI schema, and used by the automatic documentation\nUIs\n.\nAutomatic docs\n¶\nThe JSON Schemas of your models will be part of your OpenAPI generated schema, and will be shown in the interactive API docs:\nAnd will also be used in the API docs inside each\npath operation\nthat needs them:\nEditor support\n¶\nIn your editor, inside your function you will get type hints and completion everywhere (this wouldn't happen if you received a\ndict\ninstead of a Pydantic model):\nYou also get error checks for incorrect type operations:\nThis is not by chance, the whole framework was built around that design.\nAnd it was thoroughly tested at the design phase, before any implementation, to ensure it would work with all the editors.\nThere were even some changes to Pydantic itself to support this.\nThe previous screenshots were taken with\nVisual Studio Code\n.\nBut you would get the same editor support with\nPyCharm\nand most of the other Python editors:\nTip\nIf you use\nPyCharm\nas your editor, you can use the\nPydantic PyCharm Plugin\n.\nIt improves editor support for Pydantic models, with:\nauto-completion\ntype checks\nrefactoring\nsearching\ninspections\nUse the model\n¶\nInside of the function, you can access all the attributes of the model object directly:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nitem_dict\n=\nitem\n.\ndict\n()\nif\nitem\n.\ntax\nis\nnot\nNone\n:\nprice_with_tax\n=\nitem\n.\nprice\n+\nitem\n.\ntax\nitem_dict\n.\nupdate\n({\n\"price_with_tax\"\n:\nprice_with_tax\n})\nreturn\nitem_dict\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nitem_dict\n=\nitem\n.\ndict\n()\nif\nitem\n.\ntax\nis\nnot\nNone\n:\nprice_with_tax\n=\nitem\n.\nprice\n+\nitem\n.\ntax\nitem_dict\n.\nupdate\n({\n\"price_with_tax\"\n:\nprice_with_tax\n})\nreturn\nitem_dict\nInfo\nIn Pydantic v1 the method was called\n.dict()\n, it was deprecated (but still supported) in Pydantic v2, and renamed to\n.model_dump()\n.\nThe examples here use\n.dict()\nfor compatibility with Pydantic v1, but you should use\n.model_dump()\ninstead if you can use Pydantic v2.\nRequest body + path parameters\n¶\nYou can declare path parameters and request body at the same time.\nFastAPI\nwill recognize that the function parameters that match path parameters should be\ntaken from the path\n, and that function parameters that are declared to be Pydantic models should be\ntaken from the request body\n.\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n**\nitem\n.\ndict\n()}\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n**\nitem\n.\ndict\n()}\nRequest body + path + query parameters\n¶\nYou can also declare\nbody\n,\npath\nand\nquery\nparameters, all at the same time.\nFastAPI\nwill recognize each of them and take the data from the correct place.\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nq\n:\nstr\n|\nNone\n=\nNone\n):\nresult\n=\n{\n\"item_id\"\n:\nitem_id\n,\n**\nitem\n.\ndict\n()}\nif\nq\n:\nresult\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresult\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nresult\n=\n{\n\"item_id\"\n:\nitem_id\n,\n**\nitem\n.\ndict\n()}\nif\nq\n:\nresult\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresult\nThe function parameters will be recognized as follows:\nIf the parameter is also declared in the\npath\n, it will be used as a path parameter.\nIf the parameter is of a\nsingular type\n(like\nint\n,\nfloat\n,\nstr\n,\nbool\n, etc) it will be interpreted as a\nquery\nparameter.\nIf the parameter is declared to be of the type of a\nPydantic model\n, it will be interpreted as a request\nbody\n.\nNote\nFastAPI will know that the value of\nq\nis not required because of the default value\n= None\n.\nThe\nstr | None\n(Python 3.10+) or\nUnion\nin\nUnion[str, None]\n(Python 3.8+) is not used by FastAPI to determine that the value is not required, it will know it's not required because it has a default value of\n= None\n.\nBut adding the type annotations will allow your editor to give you better support and detect errors.\nWithout Pydantic\n¶\nIf you don't want to use Pydantic models, you can also use\nBody\nparameters. See the docs for\nBody - Multiple Parameters: Singular values in body\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/how-to/graphql/",
    "title": "GraphQL¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nGraphQL\nTable of contents\nGraphQL Libraries\nGraphQL with Strawberry\nOlder\nGraphQLApp\nfrom Starlette\nLearn More\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nGraphQL Libraries\nGraphQL with Strawberry\nOlder\nGraphQLApp\nfrom Starlette\nLearn More\nFastAPI\nLearn\nHow To - Recipes\nGraphQL\n¶\nAs\nFastAPI\nis based on the\nASGI\nstandard, it's very easy to integrate any\nGraphQL\nlibrary also compatible with ASGI.\nYou can combine normal FastAPI\npath operations\nwith GraphQL on the same application.\nTip\nGraphQL\nsolves some very specific use cases.\nIt has\nadvantages\nand\ndisadvantages\nwhen compared to common\nweb APIs\n.\nMake sure you evaluate if the\nbenefits\nfor your use case compensate the\ndrawbacks\n. 🤓\nGraphQL Libraries\n¶\nHere are some of the\nGraphQL\nlibraries that have\nASGI\nsupport. You could use them with\nFastAPI\n:\nStrawberry\n🍓\nWith\ndocs for FastAPI\nAriadne\nWith\ndocs for FastAPI\nTartiflette\nWith\nTartiflette ASGI\nto provide ASGI integration\nGraphene\nWith\nstarlette-graphene3\nGraphQL with Strawberry\n¶\nIf you need or want to work with\nGraphQL\n,\nStrawberry\nis the\nrecommended\nlibrary as it has the design closest to\nFastAPI's\ndesign, it's all based on\ntype annotations\n.\nDepending on your use case, you might prefer to use a different library, but if you asked me, I would probably suggest you try\nStrawberry\n.\nHere's a small preview of how you could integrate Strawberry with FastAPI:\nPython 3.8+\nimport\nstrawberry\nfrom\nfastapi\nimport\nFastAPI\nfrom\nstrawberry.fastapi\nimport\nGraphQLRouter\n@strawberry\n.\ntype\nclass\nUser\n:\nname\n:\nstr\nage\n:\nint\n@strawberry\n.\ntype\nclass\nQuery\n:\n@strawberry\n.\nfield\ndef\nuser\n(\nself\n)\n->\nUser\n:\nreturn\nUser\n(\nname\n=\n\"Patrick\"\n,\nage\n=\n100\n)\nschema\n=\nstrawberry\n.\nSchema\n(\nquery\n=\nQuery\n)\ngraphql_app\n=\nGraphQLRouter\n(\nschema\n)\napp\n=\nFastAPI\n()\napp\n.\ninclude_router\n(\ngraphql_app\n,\nprefix\n=\n\"/graphql\"\n)\nYou can learn more about Strawberry in the\nStrawberry documentation\n.\nAnd also the docs about\nStrawberry with FastAPI\n.\nOlder\nGraphQLApp\nfrom Starlette\n¶\nPrevious versions of Starlette included a\nGraphQLApp\nclass to integrate with\nGraphene\n.\nIt was deprecated from Starlette, but if you have code that used it, you can easily\nmigrate\nto\nstarlette-graphene3\n, that covers the same use case and has an\nalmost identical interface\n.\nTip\nIf you need GraphQL, I still would recommend you check out\nStrawberry\n, as it's based on type annotations instead of custom classes and types.\nLearn More\n¶\nYou can learn more about\nGraphQL\nin the\nofficial GraphQL documentation\n.\nYou can also read more about each those libraries described above in their links.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/",
    "title": "Simple OAuth2 with Password and Bearer¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nSimple OAuth2 with Password and Bearer\nTable of contents\nGet the\nusername\nand\npassword\nscope\nCode to get the\nusername\nand\npassword\nOAuth2PasswordRequestForm\nUse the form data\nCheck the password\nPassword hashing\nWhy use password hashing\nAbout\n**user_dict\nReturn the token\nUpdate the dependencies\nSee it in action\nAuthenticate\nGet your own user data\nInactive user\nRecap\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nGet the\nusername\nand\npassword\nscope\nCode to get the\nusername\nand\npassword\nOAuth2PasswordRequestForm\nUse the form data\nCheck the password\nPassword hashing\nWhy use password hashing\nAbout\n**user_dict\nReturn the token\nUpdate the dependencies\nSee it in action\nAuthenticate\nGet your own user data\nInactive user\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nSecurity\nSimple OAuth2 with Password and Bearer\n¶\nNow let's build from the previous chapter and add the missing parts to have a complete security flow.\nGet the\nusername\nand\npassword\n¶\nWe are going to use\nFastAPI\nsecurity utilities to get the\nusername\nand\npassword\n.\nOAuth2 specifies that when using the \"password flow\" (that we are using) the client/user must send a\nusername\nand\npassword\nfields as form data.\nAnd the spec says that the fields have to be named like that. So\nuser-name\nor\nemail\nwouldn't work.\nBut don't worry, you can show it as you wish to your final users in the frontend.\nAnd your database models can use any other names you want.\nBut for the login\npath operation\n, we need to use these names to be compatible with the spec (and be able to, for example, use the integrated API documentation system).\nThe spec also states that the\nusername\nand\npassword\nmust be sent as form data (so, no JSON here).\nscope\n¶\nThe spec also says that the client can send another form field \"\nscope\n\".\nThe form field name is\nscope\n(in singular), but it is actually a long string with \"scopes\" separated by spaces.\nEach \"scope\" is just a string (without spaces).\nThey are normally used to declare specific security permissions, for example:\nusers:read\nor\nusers:write\nare common examples.\ninstagram_basic\nis used by Facebook / Instagram.\nhttps://www.googleapis.com/auth/drive\nis used by Google.\nInfo\nIn OAuth2 a \"scope\" is just a string that declares a specific permission required.\nIt doesn't matter if it has other characters like\n:\nor if it is a URL.\nThose details are implementation specific.\nFor OAuth2 they are just strings.\nCode to get the\nusername\nand\npassword\n¶\nNow let's use the utilities provided by\nFastAPI\nto handle this.\nOAuth2PasswordRequestForm\n¶\nFirst, import\nOAuth2PasswordRequestForm\n, and use it as a dependency with\nDepends\nin the\npath operation\nfor\n/token\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n()):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n()):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\nOAuth2PasswordRequestForm\nis a class dependency that declares a form body with:\nThe\nusername\n.\nThe\npassword\n.\nAn optional\nscope\nfield as a big string, composed of strings separated by spaces.\nAn optional\ngrant_type\n.\nTip\nThe OAuth2 spec actually\nrequires\na field\ngrant_type\nwith a fixed value of\npassword\n, but\nOAuth2PasswordRequestForm\ndoesn't enforce it.\nIf you need to enforce it, use\nOAuth2PasswordRequestFormStrict\ninstead of\nOAuth2PasswordRequestForm\n.\nAn optional\nclient_id\n(we don't need it for our example).\nAn optional\nclient_secret\n(we don't need it for our example).\nInfo\nThe\nOAuth2PasswordRequestForm\nis not a special class for\nFastAPI\nas is\nOAuth2PasswordBearer\n.\nOAuth2PasswordBearer\nmakes\nFastAPI\nknow that it is a security scheme. So it is added that way to OpenAPI.\nBut\nOAuth2PasswordRequestForm\nis just a class dependency that you could have written yourself, or you could have declared\nForm\nparameters directly.\nBut as it's a common use case, it is provided by\nFastAPI\ndirectly, just to make it easier.\nUse the form data\n¶\nTip\nThe instance of the dependency class\nOAuth2PasswordRequestForm\nwon't have an attribute\nscope\nwith the long string separated by spaces, instead, it will have a\nscopes\nattribute with the actual list of strings for each scope sent.\nWe are not using\nscopes\nin this example, but the functionality is there if you need it.\nNow, get the user data from the (fake) database, using the\nusername\nfrom the form field.\nIf there is no such user, we return an error saying \"Incorrect username or password\".\nFor the error, we use the exception\nHTTPException\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n()):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n()):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\nCheck the password\n¶\nAt this point we have the user data from our database, but we haven't checked the password.\nLet's put that data in the Pydantic\nUserInDB\nmodel first.\nYou should never save plaintext passwords, so, we'll use the (fake) password hashing system.\nIf the passwords don't match, we return the same error.\nPassword hashing\n¶\n\"Hashing\" means: converting some content (a password in this case) into a sequence of bytes (just a string) that looks like gibberish.\nWhenever you pass exactly the same content (exactly the same password) you get exactly the same gibberish.\nBut you cannot convert from the gibberish back to the password.\nWhy use password hashing\n¶\nIf your database is stolen, the thief won't have your users' plaintext passwords, only the hashes.\nSo, the thief won't be able to try to use those same passwords in another system (as many users use the same password everywhere, this would be dangerous).\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n()):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n()):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\nAbout\n**user_dict\n¶\nUserInDB(**user_dict)\nmeans:\nPass the keys and values of the\nuser_dict\ndirectly as key-value arguments, equivalent to:\nUserInDB\n(\nusername\n=\nuser_dict\n[\n\"username\"\n],\nemail\n=\nuser_dict\n[\n\"email\"\n],\nfull_name\n=\nuser_dict\n[\n\"full_name\"\n],\ndisabled\n=\nuser_dict\n[\n\"disabled\"\n],\nhashed_password\n=\nuser_dict\n[\n\"hashed_password\"\n],\n)\nInfo\nFor a more complete explanation of\n**user_dict\ncheck back in\nthe documentation for\nExtra Models\n.\nReturn the token\n¶\nThe response of the\ntoken\nendpoint must be a JSON object.\nIt should have a\ntoken_type\n. In our case, as we are using \"Bearer\" tokens, the token type should be \"\nbearer\n\".\nAnd it should have an\naccess_token\n, with a string containing our access token.\nFor this simple example, we are going to just be completely insecure and return the same\nusername\nas the token.\nTip\nIn the next chapter, you will see a real secure implementation, with password hashing and\nJWT\ntokens.\nBut for now, let's focus on the specific details we need.\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n()):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n()):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\nTip\nBy the spec, you should return a JSON with an\naccess_token\nand a\ntoken_type\n, the same as in this example.\nThis is something that you have to do yourself in your code, and make sure you use those JSON keys.\nIt's almost the only thing that you have to remember to do correctly yourself, to be compliant with the specifications.\nFor the rest,\nFastAPI\nhandles it for you.\nUpdate the dependencies\n¶\nNow we are going to update our dependencies.\nWe want to get the\ncurrent_user\nonly\nif this user is active.\nSo, we create an additional dependency\nget_current_active_user\nthat in turn uses\nget_current_user\nas a dependency.\nBoth of these dependencies will just return an HTTP error if the user doesn't exist, or if is inactive.\nSo, in our endpoint, we will only get a user if the user exists, was correctly authenticated, and is active:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n()):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\npydantic\nimport\nBaseModel\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Wonderson\"\n,\n\"email\"\n:\n\"alice@example.com\"\n,\n\"hashed_password\"\n:\n\"fakehashedsecret2\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\napp\n=\nFastAPI\n()\ndef\nfake_hash_password\n(\npassword\n:\nstr\n):\nreturn\n\"fakehashed\"\n+\npassword\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nfake_decode_token\n(\ntoken\n):\n# This doesn't provide any security at all\n# Check the next version\nuser\n=\nget_user\n(\nfake_users_db\n,\ntoken\n)\nreturn\nuser\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Invalid authentication credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n()):\nuser_dict\n=\nfake_users_db\n.\nget\n(\nform_data\n.\nusername\n)\nif\nnot\nuser_dict\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nuser\n=\nUserInDB\n(\n**\nuser_dict\n)\nhashed_password\n=\nfake_hash_password\n(\nform_data\n.\npassword\n)\nif\nnot\nhashed_password\n==\nuser\n.\nhashed_password\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\nreturn\n{\n\"access_token\"\n:\nuser\n.\nusername\n,\n\"token_type\"\n:\n\"bearer\"\n}\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\nInfo\nThe additional header\nWWW-Authenticate\nwith value\nBearer\nwe are returning here is also part of the spec.\nAny HTTP (error) status code 401 \"UNAUTHORIZED\" is supposed to also return a\nWWW-Authenticate\nheader.\nIn the case of bearer tokens (our case), the value of that header should be\nBearer\n.\nYou can actually skip that extra header and it would still work.\nBut it's provided here to be compliant with the specifications.\nAlso, there might be tools that expect and use it (now or in the future) and that might be useful for you or your users, now or in the future.\nThat's the benefit of standards...\nSee it in action\n¶\nOpen the interactive docs:\nhttp://127.0.0.1:8000/docs\n.\nAuthenticate\n¶\nClick the \"Authorize\" button.\nUse the credentials:\nUser:\njohndoe\nPassword:\nsecret\nAfter authenticating in the system, you will see it like:\nGet your own user data\n¶\nNow use the operation\nGET\nwith the path\n/users/me\n.\nYou will get your user's data, like:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"disabled\"\n:\nfalse\n,\n\"hashed_password\"\n:\n\"fakehashedsecret\"\n}\nIf you click the lock icon and logout, and then try the same operation again, you will get an HTTP 401 error of:\n{\n\"detail\"\n:\n\"Not authenticated\"\n}\nInactive user\n¶\nNow try with an inactive user, authenticate with:\nUser:\nalice\nPassword:\nsecret2\nAnd try to use the operation\nGET\nwith the path\n/users/me\n.\nYou will get an \"Inactive user\" error, like:\n{\n\"detail\"\n:\n\"Inactive user\"\n}\nRecap\n¶\nYou now have the tools to implement a complete security system based on\nusername\nand\npassword\nfor your API.\nUsing these tools, you can make the security system compatible with any database and with any user or data model.\nThe only detail missing is that it is not actually \"secure\" yet.\nIn the next chapter you'll see how to use a secure password hashing library and\nJWT\ntokens.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/settings/",
    "title": "Settings and Environment Variables¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nSettings and Environment Variables\nTable of contents\nTypes and validation\nPydantic\nSettings\nInstall\npydantic-settings\nCreate the\nSettings\nobject\nUse the\nsettings\nRun the server\nSettings in another module\nSettings in a dependency\nThe config file\nThe main app file\nSettings and testing\nReading a\n.env\nfile\nThe\n.env\nfile\nRead settings from\n.env\nCreating the\nSettings\nonly once with\nlru_cache\nlru_cache\nTechnical Details\nRecap\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nTypes and validation\nPydantic\nSettings\nInstall\npydantic-settings\nCreate the\nSettings\nobject\nUse the\nsettings\nRun the server\nSettings in another module\nSettings in a dependency\nThe config file\nThe main app file\nSettings and testing\nReading a\n.env\nfile\nThe\n.env\nfile\nRead settings from\n.env\nCreating the\nSettings\nonly once with\nlru_cache\nlru_cache\nTechnical Details\nRecap\nFastAPI\nLearn\nAdvanced User Guide\nSettings and Environment Variables\n¶\nIn many cases your application could need some external settings or configurations, for example secret keys, database credentials, credentials for email services, etc.\nMost of these settings are variable (can change), like database URLs. And many could be sensitive, like secrets.\nFor this reason it's common to provide them in environment variables that are read by the application.\nTip\nTo understand environment variables you can read\nEnvironment Variables\n.\nTypes and validation\n¶\nThese environment variables can only handle text strings, as they are external to Python and have to be compatible with other programs and the rest of the system (and even with different operating systems, as Linux, Windows, macOS).\nThat means that any value read in Python from an environment variable will be a\nstr\n, and any conversion to a different type or any validation has to be done in code.\nPydantic\nSettings\n¶\nFortunately, Pydantic provides a great utility to handle these settings coming from environment variables with\nPydantic: Settings management\n.\nInstall\npydantic-settings\n¶\nFirst, make sure you create your\nvirtual environment\n, activate it, and then install the\npydantic-settings\npackage:\n$\npip\ninstall\npydantic-settings\n---> 100%\nIt also comes included when you install the\nall\nextras with:\n$\npip\ninstall\n\"fastapi[all]\"\n---> 100%\nInfo\nIn Pydantic v1 it came included with the main package. Now it is distributed as this independent package so that you can choose to install it or not if you don't need that functionality.\nCreate the\nSettings\nobject\n¶\nImport\nBaseSettings\nfrom Pydantic and create a sub-class, very much like with a Pydantic model.\nThe same way as with Pydantic models, you declare class attributes with type annotations, and possibly default values.\nYou can use all the same validation features and tools you use for Pydantic models, like different data types and additional validations with\nField()\n.\nPydantic v2\nPydantic v1\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic_settings\nimport\nBaseSettings\nclass\nSettings\n(\nBaseSettings\n):\napp_name\n:\nstr\n=\n\"Awesome API\"\nadmin_email\n:\nstr\nitems_per_user\n:\nint\n=\n50\nsettings\n=\nSettings\n()\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/info\"\n)\nasync\ndef\ninfo\n():\nreturn\n{\n\"app_name\"\n:\nsettings\n.\napp_name\n,\n\"admin_email\"\n:\nsettings\n.\nadmin_email\n,\n\"items_per_user\"\n:\nsettings\n.\nitems_per_user\n,\n}\nInfo\nIn Pydantic v1 you would import\nBaseSettings\ndirectly from\npydantic\ninstead of from\npydantic_settings\n.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseSettings\nclass\nSettings\n(\nBaseSettings\n):\napp_name\n:\nstr\n=\n\"Awesome API\"\nadmin_email\n:\nstr\nitems_per_user\n:\nint\n=\n50\nsettings\n=\nSettings\n()\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/info\"\n)\nasync\ndef\ninfo\n():\nreturn\n{\n\"app_name\"\n:\nsettings\n.\napp_name\n,\n\"admin_email\"\n:\nsettings\n.\nadmin_email\n,\n\"items_per_user\"\n:\nsettings\n.\nitems_per_user\n,\n}\nTip\nIf you want something quick to copy and paste, don't use this example, use the last one below.\nThen, when you create an instance of that\nSettings\nclass (in this case, in the\nsettings\nobject), Pydantic will read the environment variables in a case-insensitive way, so, an upper-case variable\nAPP_NAME\nwill still be read for the attribute\napp_name\n.\nNext it will convert and validate the data. So, when you use that\nsettings\nobject, you will have data of the types you declared (e.g.\nitems_per_user\nwill be an\nint\n).\nUse the\nsettings\n¶\nThen you can use the new\nsettings\nobject in your application:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic_settings\nimport\nBaseSettings\nclass\nSettings\n(\nBaseSettings\n):\napp_name\n:\nstr\n=\n\"Awesome API\"\nadmin_email\n:\nstr\nitems_per_user\n:\nint\n=\n50\nsettings\n=\nSettings\n()\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/info\"\n)\nasync\ndef\ninfo\n():\nreturn\n{\n\"app_name\"\n:\nsettings\n.\napp_name\n,\n\"admin_email\"\n:\nsettings\n.\nadmin_email\n,\n\"items_per_user\"\n:\nsettings\n.\nitems_per_user\n,\n}\nRun the server\n¶\nNext, you would run the server passing the configurations as environment variables, for example you could set an\nADMIN_EMAIL\nand\nAPP_NAME\nwith:\n$\nADMIN_EMAIL\n=\n\"deadpool@example.com\"\nAPP_NAME\n=\n\"ChimichangApp\"\nfastapi\nrun\nmain.py\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nTip\nTo set multiple env vars for a single command just separate them with a space, and put them all before the command.\nAnd then the\nadmin_email\nsetting would be set to\n\"deadpool@example.com\"\n.\nThe\napp_name\nwould be\n\"ChimichangApp\"\n.\nAnd the\nitems_per_user\nwould keep its default value of\n50\n.\nSettings in another module\n¶\nYou could put those settings in another module file as you saw in\nBigger Applications - Multiple Files\n.\nFor example, you could have a file\nconfig.py\nwith:\nPython 3.8+\nfrom\npydantic_settings\nimport\nBaseSettings\nclass\nSettings\n(\nBaseSettings\n):\napp_name\n:\nstr\n=\n\"Awesome API\"\nadmin_email\n:\nstr\nitems_per_user\n:\nint\n=\n50\nsettings\n=\nSettings\n()\nAnd then use it in a file\nmain.py\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\n.config\nimport\nsettings\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/info\"\n)\nasync\ndef\ninfo\n():\nreturn\n{\n\"app_name\"\n:\nsettings\n.\napp_name\n,\n\"admin_email\"\n:\nsettings\n.\nadmin_email\n,\n\"items_per_user\"\n:\nsettings\n.\nitems_per_user\n,\n}\nTip\nYou would also need a file\n__init__.py\nas you saw in\nBigger Applications - Multiple Files\n.\nSettings in a dependency\n¶\nIn some occasions it might be useful to provide the settings from a dependency, instead of having a global object with\nsettings\nthat is used everywhere.\nThis could be especially useful during testing, as it's very easy to override a dependency with your own custom settings.\nThe config file\n¶\nComing from the previous example, your\nconfig.py\nfile could look like:\nPython 3.8+\nfrom\npydantic_settings\nimport\nBaseSettings\nclass\nSettings\n(\nBaseSettings\n):\napp_name\n:\nstr\n=\n\"Awesome API\"\nadmin_email\n:\nstr\nitems_per_user\n:\nint\n=\n50\nNotice that now we don't create a default instance\nsettings = Settings()\n.\nThe main app file\n¶\nNow we create a dependency that returns a new\nconfig.Settings()\n.\nPython 3.8+\nfrom\nfunctools\nimport\nlru_cache\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\n.config\nimport\nSettings\napp\n=\nFastAPI\n()\n@lru_cache\ndef\nget_settings\n():\nreturn\nSettings\n()\n@app\n.\nget\n(\n\"/info\"\n)\nasync\ndef\ninfo\n(\nsettings\n:\nAnnotated\n[\nSettings\n,\nDepends\n(\nget_settings\n)]):\nreturn\n{\n\"app_name\"\n:\nsettings\n.\napp_name\n,\n\"admin_email\"\n:\nsettings\n.\nadmin_email\n,\n\"items_per_user\"\n:\nsettings\n.\nitems_per_user\n,\n}\nTip\nWe'll discuss the\n@lru_cache\nin a bit.\nFor now you can assume\nget_settings()\nis a normal function.\nAnd then we can require it from the\npath operation function\nas a dependency and use it anywhere we need it.\nPython 3.8+\nfrom\nfunctools\nimport\nlru_cache\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\n.config\nimport\nSettings\napp\n=\nFastAPI\n()\n@lru_cache\ndef\nget_settings\n():\nreturn\nSettings\n()\n@app\n.\nget\n(\n\"/info\"\n)\nasync\ndef\ninfo\n(\nsettings\n:\nAnnotated\n[\nSettings\n,\nDepends\n(\nget_settings\n)]):\nreturn\n{\n\"app_name\"\n:\nsettings\n.\napp_name\n,\n\"admin_email\"\n:\nsettings\n.\nadmin_email\n,\n\"items_per_user\"\n:\nsettings\n.\nitems_per_user\n,\n}\nSettings and testing\n¶\nThen it would be very easy to provide a different settings object during testing by creating a dependency override for\nget_settings\n:\nPython 3.8+\nfrom\nfastapi.testclient\nimport\nTestClient\nfrom\n.config\nimport\nSettings\nfrom\n.main\nimport\napp\n,\nget_settings\nclient\n=\nTestClient\n(\napp\n)\ndef\nget_settings_override\n():\nreturn\nSettings\n(\nadmin_email\n=\n\"testing_admin@example.com\"\n)\napp\n.\ndependency_overrides\n[\nget_settings\n]\n=\nget_settings_override\ndef\ntest_app\n():\nresponse\n=\nclient\n.\nget\n(\n\"/info\"\n)\ndata\n=\nresponse\n.\njson\n()\nassert\ndata\n==\n{\n\"app_name\"\n:\n\"Awesome API\"\n,\n\"admin_email\"\n:\n\"testing_admin@example.com\"\n,\n\"items_per_user\"\n:\n50\n,\n}\nIn the dependency override we set a new value for the\nadmin_email\nwhen creating the new\nSettings\nobject, and then we return that new object.\nThen we can test that it is used.\nReading a\n.env\nfile\n¶\nIf you have many settings that possibly change a lot, maybe in different environments, it might be useful to put them on a file and then read them from it as if they were environment variables.\nThis practice is common enough that it has a name, these environment variables are commonly placed in a file\n.env\n, and the file is called a \"dotenv\".\nTip\nA file starting with a dot (\n.\n) is a hidden file in Unix-like systems, like Linux and macOS.\nBut a dotenv file doesn't really have to have that exact filename.\nPydantic has support for reading from these types of files using an external library. You can read more at\nPydantic Settings: Dotenv (.env) support\n.\nTip\nFor this to work, you need to\npip install python-dotenv\n.\nThe\n.env\nfile\n¶\nYou could have a\n.env\nfile with:\nADMIN_EMAIL\n=\n\"deadpool@example.com\"\nAPP_NAME\n=\n\"ChimichangApp\"\nRead settings from\n.env\n¶\nAnd then update your\nconfig.py\nwith:\nPydantic v2\nPydantic v1\nPython 3.8+\nfrom\npydantic_settings\nimport\nBaseSettings\n,\nSettingsConfigDict\nclass\nSettings\n(\nBaseSettings\n):\napp_name\n:\nstr\n=\n\"Awesome API\"\nadmin_email\n:\nstr\nitems_per_user\n:\nint\n=\n50\nmodel_config\n=\nSettingsConfigDict\n(\nenv_file\n=\n\".env\"\n)\nTip\nThe\nmodel_config\nattribute is used just for Pydantic configuration. You can read more at\nPydantic: Concepts: Configuration\n.\nPython 3.8+\nfrom\npydantic\nimport\nBaseSettings\nclass\nSettings\n(\nBaseSettings\n):\napp_name\n:\nstr\n=\n\"Awesome API\"\nadmin_email\n:\nstr\nitems_per_user\n:\nint\n=\n50\nclass\nConfig\n:\nenv_file\n=\n\".env\"\nTip\nThe\nConfig\nclass is used just for Pydantic configuration. You can read more at\nPydantic Model Config\n.\nInfo\nIn Pydantic version 1 the configuration was done in an internal class\nConfig\n, in Pydantic version 2 it's done in an attribute\nmodel_config\n. This attribute takes a\ndict\n, and to get autocompletion and inline errors you can import and use\nSettingsConfigDict\nto define that\ndict\n.\nHere we define the config\nenv_file\ninside of your Pydantic\nSettings\nclass, and set the value to the filename with the dotenv file we want to use.\nCreating the\nSettings\nonly once with\nlru_cache\n¶\nReading a file from disk is normally a costly (slow) operation, so you probably want to do it only once and then reuse the same settings object, instead of reading it for each request.\nBut every time we do:\nSettings\n()\na new\nSettings\nobject would be created, and at creation it would read the\n.env\nfile again.\nIf the dependency function was just like:\ndef\nget_settings\n():\nreturn\nSettings\n()\nwe would create that object for each request, and we would be reading the\n.env\nfile for each request. ⚠️\nBut as we are using the\n@lru_cache\ndecorator on top, the\nSettings\nobject will be created only once, the first time it's called. ✔️\nPython 3.8+\nfrom\nfunctools\nimport\nlru_cache\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\nfrom\n.\nimport\nconfig\napp\n=\nFastAPI\n()\n@lru_cache\ndef\nget_settings\n():\nreturn\nconfig\n.\nSettings\n()\n@app\n.\nget\n(\n\"/info\"\n)\nasync\ndef\ninfo\n(\nsettings\n:\nAnnotated\n[\nconfig\n.\nSettings\n,\nDepends\n(\nget_settings\n)]):\nreturn\n{\n\"app_name\"\n:\nsettings\n.\napp_name\n,\n\"admin_email\"\n:\nsettings\n.\nadmin_email\n,\n\"items_per_user\"\n:\nsettings\n.\nitems_per_user\n,\n}\nThen for any subsequent call of\nget_settings()\nin the dependencies for the next requests, instead of executing the internal code of\nget_settings()\nand creating a new\nSettings\nobject, it will return the same object that was returned on the first call, again and again.\nlru_cache\nTechnical Details\n¶\n@lru_cache\nmodifies the function it decorates to return the same value that was returned the first time, instead of computing it again, executing the code of the function every time.\nSo, the function below it will be executed once for each combination of arguments. And then the values returned by each of those combinations of arguments will be used again and again whenever the function is called with exactly the same combination of arguments.\nFor example, if you have a function:\n@lru_cache\ndef\nsay_hi\n(\nname\n:\nstr\n,\nsalutation\n:\nstr\n=\n\"Ms.\"\n):\nreturn\nf\n\"Hello\n{\nsalutation\n}\n{\nname\n}\n\"\nyour program could execute like this:\nsequenceDiagram\n\nparticipant code as Code\nparticipant function as say_hi()\nparticipant execute as Execute function\n\n    rect rgba(0, 255, 0, .1)\n        code ->> function: say_hi(name=\"Camila\")\n        function ->> execute: execute function code\n        execute ->> code: return the result\n    end\n\n    rect rgba(0, 255, 255, .1)\n        code ->> function: say_hi(name=\"Camila\")\n        function ->> code: return stored result\n    end\n\n    rect rgba(0, 255, 0, .1)\n        code ->> function: say_hi(name=\"Rick\")\n        function ->> execute: execute function code\n        execute ->> code: return the result\n    end\n\n    rect rgba(0, 255, 0, .1)\n        code ->> function: say_hi(name=\"Rick\", salutation=\"Mr.\")\n        function ->> execute: execute function code\n        execute ->> code: return the result\n    end\n\n    rect rgba(0, 255, 255, .1)\n        code ->> function: say_hi(name=\"Rick\")\n        function ->> code: return stored result\n    end\n\n    rect rgba(0, 255, 255, .1)\n        code ->> function: say_hi(name=\"Camila\")\n        function ->> code: return stored result\n    end\nIn the case of our dependency\nget_settings()\n, the function doesn't even take any arguments, so it always returns the same value.\nThat way, it behaves almost as if it was just a global variable. But as it uses a dependency function, then we can override it easily for testing.\n@lru_cache\nis part of\nfunctools\nwhich is part of Python's standard library, you can read more about it in the\nPython docs for\n@lru_cache\n.\nRecap\n¶\nYou can use Pydantic Settings to handle the settings or configurations for your application, with all the power of Pydantic models.\nBy using a dependency you can simplify testing.\nYou can use\n.env\nfiles with it.\nUsing\n@lru_cache\nlets you avoid reading the dotenv file again and again for each request, while allowing you to override it during testing.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/status/",
    "title": "Status Codes¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nStatus Codes\nTable of contents\nExample\nstatus\nHTTP_100_CONTINUE\nHTTP_101_SWITCHING_PROTOCOLS\nHTTP_102_PROCESSING\nHTTP_103_EARLY_HINTS\nHTTP_200_OK\nHTTP_201_CREATED\nHTTP_202_ACCEPTED\nHTTP_203_NON_AUTHORITATIVE_INFORMATION\nHTTP_204_NO_CONTENT\nHTTP_205_RESET_CONTENT\nHTTP_206_PARTIAL_CONTENT\nHTTP_207_MULTI_STATUS\nHTTP_208_ALREADY_REPORTED\nHTTP_226_IM_USED\nHTTP_300_MULTIPLE_CHOICES\nHTTP_301_MOVED_PERMANENTLY\nHTTP_302_FOUND\nHTTP_303_SEE_OTHER\nHTTP_304_NOT_MODIFIED\nHTTP_305_USE_PROXY\nHTTP_306_RESERVED\nHTTP_307_TEMPORARY_REDIRECT\nHTTP_308_PERMANENT_REDIRECT\nHTTP_400_BAD_REQUEST\nHTTP_401_UNAUTHORIZED\nHTTP_402_PAYMENT_REQUIRED\nHTTP_403_FORBIDDEN\nHTTP_404_NOT_FOUND\nHTTP_405_METHOD_NOT_ALLOWED\nHTTP_406_NOT_ACCEPTABLE\nHTTP_407_PROXY_AUTHENTICATION_REQUIRED\nHTTP_408_REQUEST_TIMEOUT\nHTTP_409_CONFLICT\nHTTP_410_GONE\nHTTP_411_LENGTH_REQUIRED\nHTTP_412_PRECONDITION_FAILED\nHTTP_413_CONTENT_TOO_LARGE\nHTTP_414_URI_TOO_LONG\nHTTP_415_UNSUPPORTED_MEDIA_TYPE\nHTTP_416_RANGE_NOT_SATISFIABLE\nHTTP_417_EXPECTATION_FAILED\nHTTP_418_IM_A_TEAPOT\nHTTP_421_MISDIRECTED_REQUEST\nHTTP_422_UNPROCESSABLE_CONTENT\nHTTP_423_LOCKED\nHTTP_424_FAILED_DEPENDENCY\nHTTP_425_TOO_EARLY\nHTTP_426_UPGRADE_REQUIRED\nHTTP_428_PRECONDITION_REQUIRED\nHTTP_429_TOO_MANY_REQUESTS\nHTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE\nHTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS\nHTTP_500_INTERNAL_SERVER_ERROR\nHTTP_501_NOT_IMPLEMENTED\nHTTP_502_BAD_GATEWAY\nHTTP_503_SERVICE_UNAVAILABLE\nHTTP_504_GATEWAY_TIMEOUT\nHTTP_505_HTTP_VERSION_NOT_SUPPORTED\nHTTP_506_VARIANT_ALSO_NEGOTIATES\nHTTP_507_INSUFFICIENT_STORAGE\nHTTP_508_LOOP_DETECTED\nHTTP_510_NOT_EXTENDED\nHTTP_511_NETWORK_AUTHENTICATION_REQUIRED\nWS_1000_NORMAL_CLOSURE\nWS_1001_GOING_AWAY\nWS_1002_PROTOCOL_ERROR\nWS_1003_UNSUPPORTED_DATA\nWS_1005_NO_STATUS_RCVD\nWS_1006_ABNORMAL_CLOSURE\nWS_1007_INVALID_FRAME_PAYLOAD_DATA\nWS_1008_POLICY_VIOLATION\nWS_1009_MESSAGE_TOO_BIG\nWS_1010_MANDATORY_EXT\nWS_1011_INTERNAL_ERROR\nWS_1012_SERVICE_RESTART\nWS_1013_TRY_AGAIN_LATER\nWS_1014_BAD_GATEWAY\nWS_1015_TLS_HANDSHAKE\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nExample\nstatus\nHTTP_100_CONTINUE\nHTTP_101_SWITCHING_PROTOCOLS\nHTTP_102_PROCESSING\nHTTP_103_EARLY_HINTS\nHTTP_200_OK\nHTTP_201_CREATED\nHTTP_202_ACCEPTED\nHTTP_203_NON_AUTHORITATIVE_INFORMATION\nHTTP_204_NO_CONTENT\nHTTP_205_RESET_CONTENT\nHTTP_206_PARTIAL_CONTENT\nHTTP_207_MULTI_STATUS\nHTTP_208_ALREADY_REPORTED\nHTTP_226_IM_USED\nHTTP_300_MULTIPLE_CHOICES\nHTTP_301_MOVED_PERMANENTLY\nHTTP_302_FOUND\nHTTP_303_SEE_OTHER\nHTTP_304_NOT_MODIFIED\nHTTP_305_USE_PROXY\nHTTP_306_RESERVED\nHTTP_307_TEMPORARY_REDIRECT\nHTTP_308_PERMANENT_REDIRECT\nHTTP_400_BAD_REQUEST\nHTTP_401_UNAUTHORIZED\nHTTP_402_PAYMENT_REQUIRED\nHTTP_403_FORBIDDEN\nHTTP_404_NOT_FOUND\nHTTP_405_METHOD_NOT_ALLOWED\nHTTP_406_NOT_ACCEPTABLE\nHTTP_407_PROXY_AUTHENTICATION_REQUIRED\nHTTP_408_REQUEST_TIMEOUT\nHTTP_409_CONFLICT\nHTTP_410_GONE\nHTTP_411_LENGTH_REQUIRED\nHTTP_412_PRECONDITION_FAILED\nHTTP_413_CONTENT_TOO_LARGE\nHTTP_414_URI_TOO_LONG\nHTTP_415_UNSUPPORTED_MEDIA_TYPE\nHTTP_416_RANGE_NOT_SATISFIABLE\nHTTP_417_EXPECTATION_FAILED\nHTTP_418_IM_A_TEAPOT\nHTTP_421_MISDIRECTED_REQUEST\nHTTP_422_UNPROCESSABLE_CONTENT\nHTTP_423_LOCKED\nHTTP_424_FAILED_DEPENDENCY\nHTTP_425_TOO_EARLY\nHTTP_426_UPGRADE_REQUIRED\nHTTP_428_PRECONDITION_REQUIRED\nHTTP_429_TOO_MANY_REQUESTS\nHTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE\nHTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS\nHTTP_500_INTERNAL_SERVER_ERROR\nHTTP_501_NOT_IMPLEMENTED\nHTTP_502_BAD_GATEWAY\nHTTP_503_SERVICE_UNAVAILABLE\nHTTP_504_GATEWAY_TIMEOUT\nHTTP_505_HTTP_VERSION_NOT_SUPPORTED\nHTTP_506_VARIANT_ALSO_NEGOTIATES\nHTTP_507_INSUFFICIENT_STORAGE\nHTTP_508_LOOP_DETECTED\nHTTP_510_NOT_EXTENDED\nHTTP_511_NETWORK_AUTHENTICATION_REQUIRED\nWS_1000_NORMAL_CLOSURE\nWS_1001_GOING_AWAY\nWS_1002_PROTOCOL_ERROR\nWS_1003_UNSUPPORTED_DATA\nWS_1005_NO_STATUS_RCVD\nWS_1006_ABNORMAL_CLOSURE\nWS_1007_INVALID_FRAME_PAYLOAD_DATA\nWS_1008_POLICY_VIOLATION\nWS_1009_MESSAGE_TOO_BIG\nWS_1010_MANDATORY_EXT\nWS_1011_INTERNAL_ERROR\nWS_1012_SERVICE_RESTART\nWS_1013_TRY_AGAIN_LATER\nWS_1014_BAD_GATEWAY\nWS_1015_TLS_HANDSHAKE\nFastAPI\nReference\nStatus Codes\n¶\nYou can import the\nstatus\nmodule from\nfastapi\n:\nfrom\nfastapi\nimport\nstatus\nstatus\nis provided directly by Starlette.\nIt contains a group of named constants (variables) with integer status codes.\nFor example:\n200:\nstatus.HTTP_200_OK\n403:\nstatus.HTTP_403_FORBIDDEN\netc.\nIt can be convenient to quickly access HTTP (and WebSocket) status codes in your app, using autocompletion for the name without having to remember the integer status codes by memory.\nRead more about it in the\nFastAPI docs about Response Status Code\n.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\n,\nstatus\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n,\nstatus_code\n=\nstatus\n.\nHTTP_418_IM_A_TEAPOT\n)\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Plumbus\"\n},\n{\n\"name\"\n:\n\"Portal Gun\"\n}]\nfastapi.status\n¶\nHTTP codes\nSee HTTP Status Code Registry:\nhttps://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml\nAnd RFC 9110 - https://www.rfc-editor.org/rfc/rfc9110\nHTTP_100_CONTINUE\nmodule-attribute\n¶\nHTTP_100_CONTINUE\n=\n100\nHTTP_101_SWITCHING_PROTOCOLS\nmodule-attribute\n¶\nHTTP_101_SWITCHING_PROTOCOLS\n=\n101\nHTTP_102_PROCESSING\nmodule-attribute\n¶\nHTTP_102_PROCESSING\n=\n102\nHTTP_103_EARLY_HINTS\nmodule-attribute\n¶\nHTTP_103_EARLY_HINTS\n=\n103\nHTTP_200_OK\nmodule-attribute\n¶\nHTTP_200_OK\n=\n200\nHTTP_201_CREATED\nmodule-attribute\n¶\nHTTP_201_CREATED\n=\n201\nHTTP_202_ACCEPTED\nmodule-attribute\n¶\nHTTP_202_ACCEPTED\n=\n202\nHTTP_203_NON_AUTHORITATIVE_INFORMATION\nmodule-attribute\n¶\nHTTP_203_NON_AUTHORITATIVE_INFORMATION\n=\n203\nHTTP_204_NO_CONTENT\nmodule-attribute\n¶\nHTTP_204_NO_CONTENT\n=\n204\nHTTP_205_RESET_CONTENT\nmodule-attribute\n¶\nHTTP_205_RESET_CONTENT\n=\n205\nHTTP_206_PARTIAL_CONTENT\nmodule-attribute\n¶\nHTTP_206_PARTIAL_CONTENT\n=\n206\nHTTP_207_MULTI_STATUS\nmodule-attribute\n¶\nHTTP_207_MULTI_STATUS\n=\n207\nHTTP_208_ALREADY_REPORTED\nmodule-attribute\n¶\nHTTP_208_ALREADY_REPORTED\n=\n208\nHTTP_226_IM_USED\nmodule-attribute\n¶\nHTTP_226_IM_USED\n=\n226\nHTTP_300_MULTIPLE_CHOICES\nmodule-attribute\n¶\nHTTP_300_MULTIPLE_CHOICES\n=\n300\nHTTP_301_MOVED_PERMANENTLY\nmodule-attribute\n¶\nHTTP_301_MOVED_PERMANENTLY\n=\n301\nHTTP_302_FOUND\nmodule-attribute\n¶\nHTTP_302_FOUND\n=\n302\nHTTP_303_SEE_OTHER\nmodule-attribute\n¶\nHTTP_303_SEE_OTHER\n=\n303\nHTTP_304_NOT_MODIFIED\nmodule-attribute\n¶\nHTTP_304_NOT_MODIFIED\n=\n304\nHTTP_305_USE_PROXY\nmodule-attribute\n¶\nHTTP_305_USE_PROXY\n=\n305\nHTTP_306_RESERVED\nmodule-attribute\n¶\nHTTP_306_RESERVED\n=\n306\nHTTP_307_TEMPORARY_REDIRECT\nmodule-attribute\n¶\nHTTP_307_TEMPORARY_REDIRECT\n=\n307\nHTTP_308_PERMANENT_REDIRECT\nmodule-attribute\n¶\nHTTP_308_PERMANENT_REDIRECT\n=\n308\nHTTP_400_BAD_REQUEST\nmodule-attribute\n¶\nHTTP_400_BAD_REQUEST\n=\n400\nHTTP_401_UNAUTHORIZED\nmodule-attribute\n¶\nHTTP_401_UNAUTHORIZED\n=\n401\nHTTP_402_PAYMENT_REQUIRED\nmodule-attribute\n¶\nHTTP_402_PAYMENT_REQUIRED\n=\n402\nHTTP_403_FORBIDDEN\nmodule-attribute\n¶\nHTTP_403_FORBIDDEN\n=\n403\nHTTP_404_NOT_FOUND\nmodule-attribute\n¶\nHTTP_404_NOT_FOUND\n=\n404\nHTTP_405_METHOD_NOT_ALLOWED\nmodule-attribute\n¶\nHTTP_405_METHOD_NOT_ALLOWED\n=\n405\nHTTP_406_NOT_ACCEPTABLE\nmodule-attribute\n¶\nHTTP_406_NOT_ACCEPTABLE\n=\n406\nHTTP_407_PROXY_AUTHENTICATION_REQUIRED\nmodule-attribute\n¶\nHTTP_407_PROXY_AUTHENTICATION_REQUIRED\n=\n407\nHTTP_408_REQUEST_TIMEOUT\nmodule-attribute\n¶\nHTTP_408_REQUEST_TIMEOUT\n=\n408\nHTTP_409_CONFLICT\nmodule-attribute\n¶\nHTTP_409_CONFLICT\n=\n409\nHTTP_410_GONE\nmodule-attribute\n¶\nHTTP_410_GONE\n=\n410\nHTTP_411_LENGTH_REQUIRED\nmodule-attribute\n¶\nHTTP_411_LENGTH_REQUIRED\n=\n411\nHTTP_412_PRECONDITION_FAILED\nmodule-attribute\n¶\nHTTP_412_PRECONDITION_FAILED\n=\n412\nHTTP_413_CONTENT_TOO_LARGE\nmodule-attribute\n¶\nHTTP_413_CONTENT_TOO_LARGE\n=\n413\nHTTP_414_URI_TOO_LONG\nmodule-attribute\n¶\nHTTP_414_URI_TOO_LONG\n=\n414\nHTTP_415_UNSUPPORTED_MEDIA_TYPE\nmodule-attribute\n¶\nHTTP_415_UNSUPPORTED_MEDIA_TYPE\n=\n415\nHTTP_416_RANGE_NOT_SATISFIABLE\nmodule-attribute\n¶\nHTTP_416_RANGE_NOT_SATISFIABLE\n=\n416\nHTTP_417_EXPECTATION_FAILED\nmodule-attribute\n¶\nHTTP_417_EXPECTATION_FAILED\n=\n417\nHTTP_418_IM_A_TEAPOT\nmodule-attribute\n¶\nHTTP_418_IM_A_TEAPOT\n=\n418\nHTTP_421_MISDIRECTED_REQUEST\nmodule-attribute\n¶\nHTTP_421_MISDIRECTED_REQUEST\n=\n421\nHTTP_422_UNPROCESSABLE_CONTENT\nmodule-attribute\n¶\nHTTP_422_UNPROCESSABLE_CONTENT\n=\n422\nHTTP_423_LOCKED\nmodule-attribute\n¶\nHTTP_423_LOCKED\n=\n423\nHTTP_424_FAILED_DEPENDENCY\nmodule-attribute\n¶\nHTTP_424_FAILED_DEPENDENCY\n=\n424\nHTTP_425_TOO_EARLY\nmodule-attribute\n¶\nHTTP_425_TOO_EARLY\n=\n425\nHTTP_426_UPGRADE_REQUIRED\nmodule-attribute\n¶\nHTTP_426_UPGRADE_REQUIRED\n=\n426\nHTTP_428_PRECONDITION_REQUIRED\nmodule-attribute\n¶\nHTTP_428_PRECONDITION_REQUIRED\n=\n428\nHTTP_429_TOO_MANY_REQUESTS\nmodule-attribute\n¶\nHTTP_429_TOO_MANY_REQUESTS\n=\n429\nHTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE\nmodule-attribute\n¶\nHTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE\n=\n431\nHTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS\nmodule-attribute\n¶\nHTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS\n=\n451\nHTTP_500_INTERNAL_SERVER_ERROR\nmodule-attribute\n¶\nHTTP_500_INTERNAL_SERVER_ERROR\n=\n500\nHTTP_501_NOT_IMPLEMENTED\nmodule-attribute\n¶\nHTTP_501_NOT_IMPLEMENTED\n=\n501\nHTTP_502_BAD_GATEWAY\nmodule-attribute\n¶\nHTTP_502_BAD_GATEWAY\n=\n502\nHTTP_503_SERVICE_UNAVAILABLE\nmodule-attribute\n¶\nHTTP_503_SERVICE_UNAVAILABLE\n=\n503\nHTTP_504_GATEWAY_TIMEOUT\nmodule-attribute\n¶\nHTTP_504_GATEWAY_TIMEOUT\n=\n504\nHTTP_505_HTTP_VERSION_NOT_SUPPORTED\nmodule-attribute\n¶\nHTTP_505_HTTP_VERSION_NOT_SUPPORTED\n=\n505\nHTTP_506_VARIANT_ALSO_NEGOTIATES\nmodule-attribute\n¶\nHTTP_506_VARIANT_ALSO_NEGOTIATES\n=\n506\nHTTP_507_INSUFFICIENT_STORAGE\nmodule-attribute\n¶\nHTTP_507_INSUFFICIENT_STORAGE\n=\n507\nHTTP_508_LOOP_DETECTED\nmodule-attribute\n¶\nHTTP_508_LOOP_DETECTED\n=\n508\nHTTP_510_NOT_EXTENDED\nmodule-attribute\n¶\nHTTP_510_NOT_EXTENDED\n=\n510\nHTTP_511_NETWORK_AUTHENTICATION_REQUIRED\nmodule-attribute\n¶\nHTTP_511_NETWORK_AUTHENTICATION_REQUIRED\n=\n511\nWebSocket codes\nhttps://www.iana.org/assignments/websocket/websocket.xml#close-code-number\nhttps://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\nWS_1000_NORMAL_CLOSURE\nmodule-attribute\n¶\nWS_1000_NORMAL_CLOSURE\n=\n1000\nWS_1001_GOING_AWAY\nmodule-attribute\n¶\nWS_1001_GOING_AWAY\n=\n1001\nWS_1002_PROTOCOL_ERROR\nmodule-attribute\n¶\nWS_1002_PROTOCOL_ERROR\n=\n1002\nWS_1003_UNSUPPORTED_DATA\nmodule-attribute\n¶\nWS_1003_UNSUPPORTED_DATA\n=\n1003\nWS_1005_NO_STATUS_RCVD\nmodule-attribute\n¶\nWS_1005_NO_STATUS_RCVD\n=\n1005\nWS_1006_ABNORMAL_CLOSURE\nmodule-attribute\n¶\nWS_1006_ABNORMAL_CLOSURE\n=\n1006\nWS_1007_INVALID_FRAME_PAYLOAD_DATA\nmodule-attribute\n¶\nWS_1007_INVALID_FRAME_PAYLOAD_DATA\n=\n1007\nWS_1008_POLICY_VIOLATION\nmodule-attribute\n¶\nWS_1008_POLICY_VIOLATION\n=\n1008\nWS_1009_MESSAGE_TOO_BIG\nmodule-attribute\n¶\nWS_1009_MESSAGE_TOO_BIG\n=\n1009\nWS_1010_MANDATORY_EXT\nmodule-attribute\n¶\nWS_1010_MANDATORY_EXT\n=\n1010\nWS_1011_INTERNAL_ERROR\nmodule-attribute\n¶\nWS_1011_INTERNAL_ERROR\n=\n1011\nWS_1012_SERVICE_RESTART\nmodule-attribute\n¶\nWS_1012_SERVICE_RESTART\n=\n1012\nWS_1013_TRY_AGAIN_LATER\nmodule-attribute\n¶\nWS_1013_TRY_AGAIN_LATER\n=\n1013\nWS_1014_BAD_GATEWAY\nmodule-attribute\n¶\nWS_1014_BAD_GATEWAY\n=\n1014\nWS_1015_TLS_HANDSHAKE\nmodule-attribute\n¶\nWS_1015_TLS_HANDSHAKE\n=\n1015\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/fastapi-cli/",
    "title": "FastAPI CLI¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nFastAPI CLI\nTable of contents\nfastapi dev\nfastapi run\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nfastapi dev\nfastapi run\nFastAPI\nLearn\nFastAPI CLI\n¶\nFastAPI CLI\nis a command line program that you can use to serve your FastAPI app, manage your FastAPI project, and more.\nWhen you install FastAPI (e.g. with\npip install \"fastapi[standard]\"\n), it includes a package called\nfastapi-cli\n, this package provides the\nfastapi\ncommand in the terminal.\nTo run your FastAPI app for development, you can use the\nfastapi dev\ncommand:\n$\n<font\ncolor\n=\n\"#4E9A06\"\n>fastapi</font>\ndev\n<u\nstyle\n=\n\"text-decoration-style:solid\"\n>main.py</u>\n<span style=\"background-color:#009485\"><font color=\"#D3D7CF\"> FastAPI </font></span>  Starting development server 🚀\nSearching for package file structure from directories with\n<font color=\"#3465A4\">__init__.py</font> files\nImporting from <font color=\"#75507B\">/home/user/code/</font><font color=\"#AD7FA8\">awesomeapp</font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> module </font></span>  🐍 main.py\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> code </font></span>  Importing the FastAPI app object from the module with the\nfollowing code:\n<u style=\"text-decoration-style:solid\">from </u><u style=\"text-decoration-style:solid\"><b>main</b></u><u style=\"text-decoration-style:solid\"> import </u><u style=\"text-decoration-style:solid\"><b>app</b></u>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> app </font></span>  Using import string: <font color=\"#3465A4\">main:app</font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> server </font></span>  Server started at <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://127.0.0.1:8000</u></font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> server </font></span>  Documentation at <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://127.0.0.1:8000/docs</u></font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> tip </font></span>  Running in development mode, for production use:\n<b>fastapi run</b>\nLogs:\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Will watch for changes in these directories:\n<b>[</b><font color=\"#4E9A06\">&apos;/home/user/code/awesomeapp&apos;</font><b>]</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Uvicorn running on <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://127.0.0.1:8000</u></font> <b>(</b>Press CTRL+C to\nquit<b>)</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Started reloader process <b>[</b><font color=\"#34E2E2\"><b>383138</b></font><b>]</b> using WatchFiles\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Started server process <b>[</b><font color=\"#34E2E2\"><b>383153</b></font><b>]</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Waiting for application startup.\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Application startup complete.\nThe command line program called\nfastapi\nis\nFastAPI CLI\n.\nFastAPI CLI takes the path to your Python program (e.g.\nmain.py\n) and automatically detects the\nFastAPI\ninstance (commonly named\napp\n), determines the correct import process, and then serves it.\nFor production you would use\nfastapi run\ninstead. 🚀\nInternally,\nFastAPI CLI\nuses\nUvicorn\n, a high-performance, production-ready, ASGI server. 😎\nfastapi dev\n¶\nRunning\nfastapi dev\ninitiates development mode.\nBy default,\nauto-reload\nis enabled, automatically reloading the server when you make changes to your code. This is resource-intensive and could be less stable than when it's disabled. You should only use it for development. It also listens on the IP address\n127.0.0.1\n, which is the IP for your machine to communicate with itself alone (\nlocalhost\n).\nfastapi run\n¶\nExecuting\nfastapi run\nstarts FastAPI in production mode by default.\nBy default,\nauto-reload\nis disabled. It also listens on the IP address\n0.0.0.0\n, which means all the available IP addresses, this way it will be publicly accessible to anyone that can communicate with the machine. This is how you would normally run it in production, for example, in a container.\nIn most cases you would (and should) have a \"termination proxy\" handling HTTPS for you on top, this will depend on how you deploy your application, your provider might do this for you, or you might need to set it up yourself.\nTip\nYou can learn more about it in the\ndeployment documentation\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/dependencies/",
    "title": "Dependencies¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nWhat is \"Dependency Injection\"\nFirst Steps\nCreate a dependency, or \"dependable\"\nImport\nDepends\nDeclare the dependency, in the \"dependant\"\nShare\nAnnotated\ndependencies\nTo\nasync\nor not to\nasync\nIntegrated with OpenAPI\nSimple usage\nFastAPI\nplug-ins\nFastAPI\ncompatibility\nSimple and Powerful\nIntegrated with\nOpenAPI\nFastAPI\nLearn\nTutorial - User Guide\nDependencies\nDependencies\n¶\nFastAPI\nhas a very powerful but intuitive\nDependency Injection\nsystem.\nIt is designed to be very simple to use, and to make it very easy for any developer to integrate other components with\nFastAPI\n.\nWhat is \"Dependency Injection\"\n¶\n\"Dependency Injection\"\nmeans, in programming, that there is a way for your code (in this case, your\npath operation functions\n) to declare things that it requires to work and use: \"dependencies\".\nAnd then, that system (in this case\nFastAPI\n) will take care of doing whatever is needed to provide your code with those needed dependencies (\"inject\" the dependencies).\nThis is very useful when you need to:\nHave shared logic (the same code logic again and again).\nShare database connections.\nEnforce security, authentication, role requirements, etc.\nAnd many other things...\nAll these, while minimizing code repetition.\nFirst Steps\n¶\nLet's see a very simple example. It will be so simple that it is not very useful, for now.\nBut this way we can focus on how the\nDependency Injection\nsystem works.\nCreate a dependency, or \"dependable\"\n¶\nLet's first focus on the dependency.\nIt is just a function that can take all the same parameters that a\npath operation function\ncan take:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\nThat's it.\n2 lines\n.\nAnd it has the same shape and structure that all your\npath operation functions\nhave.\nYou can think of it as a\npath operation function\nwithout the \"decorator\" (without the\n@app.get(\"/some-path\")\n).\nAnd it can return anything you want.\nIn this case, this dependency expects:\nAn optional query parameter\nq\nthat is a\nstr\n.\nAn optional query parameter\nskip\nthat is an\nint\n, and by default is\n0\n.\nAn optional query parameter\nlimit\nthat is an\nint\n, and by default is\n100\n.\nAnd then it just returns a\ndict\ncontaining those values.\nInfo\nFastAPI added support for\nAnnotated\n(and started recommending it) in version 0.95.0.\nIf you have an older version, you would get errors when trying to use\nAnnotated\n.\nMake sure you\nUpgrade the FastAPI version\nto at least 0.95.1 before using\nAnnotated\n.\nImport\nDepends\n¶\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\nDeclare the dependency, in the \"dependant\"\n¶\nThe same way you use\nBody\n,\nQuery\n, etc. with your\npath operation function\nparameters, use\nDepends\nwith a new parameter:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\nAlthough you use\nDepends\nin the parameters of your function the same way you use\nBody\n,\nQuery\n, etc,\nDepends\nworks a bit differently.\nYou only give\nDepends\na single parameter.\nThis parameter must be something like a function.\nYou\ndon't call it\ndirectly (don't add the parenthesis at the end), you just pass it as a parameter to\nDepends()\n.\nAnd that function takes parameters in the same way that\npath operation functions\ndo.\nTip\nYou'll see what other \"things\", apart from functions, can be used as dependencies in the next chapter.\nWhenever a new request arrives,\nFastAPI\nwill take care of:\nCalling your dependency (\"dependable\") function with the correct parameters.\nGet the result from your function.\nAssign that result to the parameter in your\npath operation function\n.\ngraph TB\n\ncommon_parameters([\"common_parameters\"])\nread_items[\"/items/\"]\nread_users[\"/users/\"]\n\ncommon_parameters --> read_items\ncommon_parameters --> read_users\nThis way you write shared code once and\nFastAPI\ntakes care of calling it for your\npath operations\n.\nCheck\nNotice that you don't have to create a special class and pass it somewhere to\nFastAPI\nto \"register\" it or anything similar.\nYou just pass it to\nDepends\nand\nFastAPI\nknows how to do the rest.\nShare\nAnnotated\ndependencies\n¶\nIn the examples above, you see that there's a tiny bit of\ncode duplication\n.\nWhen you need to use the\ncommon_parameters()\ndependency, you have to write the whole parameter with the type annotation and\nDepends()\n:\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]\nBut because we are using\nAnnotated\n, we can store that\nAnnotated\nvalue in a variable and use it in multiple places:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\nCommonsDep\n=\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nCommonsDep\n):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nCommonsDep\n):\nreturn\ncommons\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\nCommonsDep\n=\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nCommonsDep\n):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nCommonsDep\n):\nreturn\ncommons\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\nCommonsDep\n=\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nCommonsDep\n):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nCommonsDep\n):\nreturn\ncommons\nTip\nThis is just standard Python, it's called a \"type alias\", it's actually not specific to\nFastAPI\n.\nBut because\nFastAPI\nis based on the Python standards, including\nAnnotated\n, you can use this trick in your code. 😎\nThe dependencies will keep working as expected, and the\nbest part\nis that the\ntype information will be preserved\n, which means that your editor will be able to keep providing you with\nautocompletion\n,\ninline errors\n, etc. The same for other tools like\nmypy\n.\nThis will be especially useful when you use it in a\nlarge code base\nwhere you use\nthe same dependencies\nover and over again in\nmany\npath operations\n.\nTo\nasync\nor not to\nasync\n¶\nAs dependencies will also be called by\nFastAPI\n(the same as your\npath operation functions\n), the same rules apply while defining your functions.\nYou can use\nasync def\nor normal\ndef\n.\nAnd you can declare dependencies with\nasync def\ninside of normal\ndef\npath operation functions\n, or\ndef\ndependencies inside of\nasync def\npath operation functions\n, etc.\nIt doesn't matter.\nFastAPI\nwill know what to do.\nNote\nIf you don't know, check the\nAsync:\n\"In a hurry?\"\nsection about\nasync\nand\nawait\nin the docs.\nIntegrated with OpenAPI\n¶\nAll the request declarations, validations and requirements of your dependencies (and sub-dependencies) will be integrated in the same OpenAPI schema.\nSo, the interactive docs will have all the information from these dependencies too:\nSimple usage\n¶\nIf you look at it,\npath operation functions\nare declared to be used whenever a\npath\nand\noperation\nmatches, and then\nFastAPI\ntakes care of calling the function with the correct parameters, extracting the data from the request.\nActually, all (or most) of the web frameworks work in this same way.\nYou never call those functions directly. They are called by your framework (in this case,\nFastAPI\n).\nWith the Dependency Injection system, you can also tell\nFastAPI\nthat your\npath operation function\nalso \"depends\" on something else that should be executed before your\npath operation function\n, and\nFastAPI\nwill take care of executing it and \"injecting\" the results.\nOther common terms for this same idea of \"dependency injection\" are:\nresources\nproviders\nservices\ninjectables\ncomponents\nFastAPI\nplug-ins\n¶\nIntegrations and \"plug-ins\" can be built using the\nDependency Injection\nsystem. But in fact, there is actually\nno need to create \"plug-ins\"\n, as by using dependencies it's possible to declare an infinite number of integrations and interactions that become available to your\npath operation functions\n.\nAnd dependencies can be created in a very simple and intuitive way that allows you to just import the Python packages you need, and integrate them with your API functions in a couple of lines of code,\nliterally\n.\nYou will see examples of this in the next chapters, about relational and NoSQL databases, security, etc.\nFastAPI\ncompatibility\n¶\nThe simplicity of the dependency injection system makes\nFastAPI\ncompatible with:\nall the relational databases\nNoSQL databases\nexternal packages\nexternal APIs\nauthentication and authorization systems\nAPI usage monitoring systems\nresponse data injection systems\netc.\nSimple and Powerful\n¶\nAlthough the hierarchical dependency injection system is very simple to define and use, it's still very powerful.\nYou can define dependencies that in turn can define dependencies themselves.\nIn the end, a hierarchical tree of dependencies is built, and the\nDependency Injection\nsystem takes care of solving all these dependencies for you (and their sub-dependencies) and providing (injecting) the results at each step.\nFor example, let's say you have 4 API endpoints (\npath operations\n):\n/items/public/\n/items/private/\n/users/{user_id}/activate\n/items/pro/\nthen you could add different permission requirements for each of them just with dependencies and sub-dependencies:\ngraph TB\n\ncurrent_user([\"current_user\"])\nactive_user([\"active_user\"])\nadmin_user([\"admin_user\"])\npaying_user([\"paying_user\"])\n\npublic[\"/items/public/\"]\nprivate[\"/items/private/\"]\nactivate_user[\"/users/{user_id}/activate\"]\npro_items[\"/items/pro/\"]\n\ncurrent_user --> active_user\nactive_user --> admin_user\nactive_user --> paying_user\n\ncurrent_user --> public\nactive_user --> private\nadmin_user --> activate_user\npaying_user --> pro_items\nIntegrated with\nOpenAPI\n¶\nAll these dependencies, while declaring their requirements, also add parameters, validations, etc. to your\npath operations\n.\nFastAPI\nwill take care of adding it all to the OpenAPI schema, so that it is shown in the interactive documentation systems.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/bigger-applications/",
    "title": "Bigger Applications - Multiple Files¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBigger Applications - Multiple Files\nTable of contents\nAn example file structure\nAPIRouter\nImport\nAPIRouter\nPath operations\nwith\nAPIRouter\nDependencies\nAnother module with\nAPIRouter\nImport the dependencies\nHow relative imports work\nAdd some custom\ntags\n,\nresponses\n, and\ndependencies\nThe main\nFastAPI\nImport\nFastAPI\nImport the\nAPIRouter\nHow the importing works\nAvoid name collisions\nInclude the\nAPIRouter\ns for\nusers\nand\nitems\nInclude an\nAPIRouter\nwith a custom\nprefix\n,\ntags\n,\nresponses\n, and\ndependencies\nInclude a\npath operation\nCheck the automatic API docs\nInclude the same router multiple times with different\nprefix\nInclude an\nAPIRouter\nin another\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAn example file structure\nAPIRouter\nImport\nAPIRouter\nPath operations\nwith\nAPIRouter\nDependencies\nAnother module with\nAPIRouter\nImport the dependencies\nHow relative imports work\nAdd some custom\ntags\n,\nresponses\n, and\ndependencies\nThe main\nFastAPI\nImport\nFastAPI\nImport the\nAPIRouter\nHow the importing works\nAvoid name collisions\nInclude the\nAPIRouter\ns for\nusers\nand\nitems\nInclude an\nAPIRouter\nwith a custom\nprefix\n,\ntags\n,\nresponses\n, and\ndependencies\nInclude a\npath operation\nCheck the automatic API docs\nInclude the same router multiple times with different\nprefix\nInclude an\nAPIRouter\nin another\nFastAPI\nLearn\nTutorial - User Guide\nBigger Applications - Multiple Files\n¶\nIf you are building an application or a web API, it's rarely the case that you can put everything in a single file.\nFastAPI\nprovides a convenience tool to structure your application while keeping all the flexibility.\nInfo\nIf you come from Flask, this would be the equivalent of Flask's Blueprints.\nAn example file structure\n¶\nLet's say you have a file structure like this:\n.\n├── app\n│   ├── __init__.py\n│   ├── main.py\n│   ├── dependencies.py\n│   └── routers\n│   │   ├── __init__.py\n│   │   ├── items.py\n│   │   └── users.py\n│   └── internal\n│       ├── __init__.py\n│       └── admin.py\nTip\nThere are several\n__init__.py\nfiles: one in each directory or subdirectory.\nThis is what allows importing code from one file into another.\nFor example, in\napp/main.py\nyou could have a line like:\nfrom app.routers import items\nThe\napp\ndirectory contains everything. And it has an empty file\napp/__init__.py\n, so it is a \"Python package\" (a collection of \"Python modules\"):\napp\n.\nIt contains an\napp/main.py\nfile. As it is inside a Python package (a directory with a file\n__init__.py\n), it is a \"module\" of that package:\napp.main\n.\nThere's also an\napp/dependencies.py\nfile, just like\napp/main.py\n, it is a \"module\":\napp.dependencies\n.\nThere's a subdirectory\napp/routers/\nwith another file\n__init__.py\n, so it's a \"Python subpackage\":\napp.routers\n.\nThe file\napp/routers/items.py\nis inside a package,\napp/routers/\n, so, it's a submodule:\napp.routers.items\n.\nThe same with\napp/routers/users.py\n, it's another submodule:\napp.routers.users\n.\nThere's also a subdirectory\napp/internal/\nwith another file\n__init__.py\n, so it's another \"Python subpackage\":\napp.internal\n.\nAnd the file\napp/internal/admin.py\nis another submodule:\napp.internal.admin\n.\nThe same file structure with comments:\n.\n├── app                  # \"app\" is a Python package\n│   ├── __init__.py      # this file makes \"app\" a \"Python package\"\n│   ├── main.py          # \"main\" module, e.g. import app.main\n│   ├── dependencies.py  # \"dependencies\" module, e.g. import app.dependencies\n│   └── routers          # \"routers\" is a \"Python subpackage\"\n│   │   ├── __init__.py  # makes \"routers\" a \"Python subpackage\"\n│   │   ├── items.py     # \"items\" submodule, e.g. import app.routers.items\n│   │   └── users.py     # \"users\" submodule, e.g. import app.routers.users\n│   └── internal         # \"internal\" is a \"Python subpackage\"\n│       ├── __init__.py  # makes \"internal\" a \"Python subpackage\"\n│       └── admin.py     # \"admin\" submodule, e.g. import app.internal.admin\nAPIRouter\n¶\nLet's say the file dedicated to handling just users is the submodule at\n/app/routers/users.py\n.\nYou want to have the\npath operations\nrelated to your users separated from the rest of the code, to keep it organized.\nBut it's still part of the same\nFastAPI\napplication/web API (it's part of the same \"Python Package\").\nYou can create the\npath operations\nfor that module using\nAPIRouter\n.\nImport\nAPIRouter\n¶\nYou import it and create an \"instance\" the same way you would with the class\nFastAPI\n:\napp/routers/users.py\nfrom\nfastapi\nimport\nAPIRouter\nrouter\n=\nAPIRouter\n()\n@router\n.\nget\n(\n\"/users/\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nread_users\n():\nreturn\n[{\n\"username\"\n:\n\"Rick\"\n},\n{\n\"username\"\n:\n\"Morty\"\n}]\n@router\n.\nget\n(\n\"/users/me\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nread_user_me\n():\nreturn\n{\n\"username\"\n:\n\"fakecurrentuser\"\n}\n@router\n.\nget\n(\n\"/users/\n{username}\n\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nread_user\n(\nusername\n:\nstr\n):\nreturn\n{\n\"username\"\n:\nusername\n}\nPath operations\nwith\nAPIRouter\n¶\nAnd then you use it to declare your\npath operations\n.\nUse it the same way you would use the\nFastAPI\nclass:\napp/routers/users.py\nfrom\nfastapi\nimport\nAPIRouter\nrouter\n=\nAPIRouter\n()\n@router\n.\nget\n(\n\"/users/\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nread_users\n():\nreturn\n[{\n\"username\"\n:\n\"Rick\"\n},\n{\n\"username\"\n:\n\"Morty\"\n}]\n@router\n.\nget\n(\n\"/users/me\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nread_user_me\n():\nreturn\n{\n\"username\"\n:\n\"fakecurrentuser\"\n}\n@router\n.\nget\n(\n\"/users/\n{username}\n\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nread_user\n(\nusername\n:\nstr\n):\nreturn\n{\n\"username\"\n:\nusername\n}\nYou can think of\nAPIRouter\nas a \"mini\nFastAPI\n\" class.\nAll the same options are supported.\nAll the same\nparameters\n,\nresponses\n,\ndependencies\n,\ntags\n, etc.\nTip\nIn this example, the variable is called\nrouter\n, but you can name it however you want.\nWe are going to include this\nAPIRouter\nin the main\nFastAPI\napp, but first, let's check the dependencies and another\nAPIRouter\n.\nDependencies\n¶\nWe see that we are going to need some dependencies used in several places of the application.\nSo we put them in their own\ndependencies\nmodule (\napp/dependencies.py\n).\nWe will now use a simple dependency to read a custom\nX-Token\nheader:\nPython 3.9+\nPython 3.8+\nPython 3.8+ non-Annotated\napp/dependencies.py\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nHeader\n,\nHTTPException\nasync\ndef\nget_token_header\n(\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nget_query_token\n(\ntoken\n:\nstr\n):\nif\ntoken\n!=\n\"jessica\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"No Jessica token provided\"\n)\napp/dependencies.py\nfrom\nfastapi\nimport\nHeader\n,\nHTTPException\nfrom\ntyping_extensions\nimport\nAnnotated\nasync\ndef\nget_token_header\n(\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nget_query_token\n(\ntoken\n:\nstr\n):\nif\ntoken\n!=\n\"jessica\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"No Jessica token provided\"\n)\nTip\nPrefer to use the\nAnnotated\nversion if possible.\napp/dependencies.py\nfrom\nfastapi\nimport\nHeader\n,\nHTTPException\nasync\ndef\nget_token_header\n(\nx_token\n:\nstr\n=\nHeader\n()):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nget_query_token\n(\ntoken\n:\nstr\n):\nif\ntoken\n!=\n\"jessica\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"No Jessica token provided\"\n)\nTip\nWe are using an invented header to simplify this example.\nBut in real cases you will get better results using the integrated\nSecurity utilities\n.\nAnother module with\nAPIRouter\n¶\nLet's say you also have the endpoints dedicated to handling \"items\" from your application in the module at\napp/routers/items.py\n.\nYou have\npath operations\nfor:\n/items/\n/items/{item_id}\nIt's all the same structure as with\napp/routers/users.py\n.\nBut we want to be smarter and simplify the code a bit.\nWe know all the\npath operations\nin this module have the same:\nPath\nprefix\n:\n/items\n.\ntags\n: (just one tag:\nitems\n).\nExtra\nresponses\n.\ndependencies\n: they all need that\nX-Token\ndependency we created.\nSo, instead of adding all that to each\npath operation\n, we can add it to the\nAPIRouter\n.\napp/routers/items.py\nfrom\nfastapi\nimport\nAPIRouter\n,\nDepends\n,\nHTTPException\nfrom\n..dependencies\nimport\nget_token_header\nrouter\n=\nAPIRouter\n(\nprefix\n=\n\"/items\"\n,\ntags\n=\n[\n\"items\"\n],\ndependencies\n=\n[\nDepends\n(\nget_token_header\n)],\nresponses\n=\n{\n404\n:\n{\n\"description\"\n:\n\"Not found\"\n}},\n)\nfake_items_db\n=\n{\n\"plumbus\"\n:\n{\n\"name\"\n:\n\"Plumbus\"\n},\n\"gun\"\n:\n{\n\"name\"\n:\n\"Portal Gun\"\n}}\n@router\n.\nget\n(\n\"/\"\n)\nasync\ndef\nread_items\n():\nreturn\nfake_items_db\n@router\n.\nget\n(\n\"/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nif\nitem_id\nnot\nin\nfake_items_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nreturn\n{\n\"name\"\n:\nfake_items_db\n[\nitem_id\n][\n\"name\"\n],\n\"item_id\"\n:\nitem_id\n}\n@router\n.\nput\n(\n\"/\n{item_id}\n\"\n,\ntags\n=\n[\n\"custom\"\n],\nresponses\n=\n{\n403\n:\n{\n\"description\"\n:\n\"Operation forbidden\"\n}},\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n):\nif\nitem_id\n!=\n\"plumbus\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n403\n,\ndetail\n=\n\"You can only update the item: plumbus\"\n)\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"name\"\n:\n\"The great Plumbus\"\n}\nAs the path of each\npath operation\nhas to start with\n/\n, like in:\n@router\n.\nget\n(\n\"/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\n...\n...the prefix must not include a final\n/\n.\nSo, the prefix in this case is\n/items\n.\nWe can also add a list of\ntags\nand extra\nresponses\nthat will be applied to all the\npath operations\nincluded in this router.\nAnd we can add a list of\ndependencies\nthat will be added to all the\npath operations\nin the router and will be executed/solved for each request made to them.\nTip\nNote that, much like\ndependencies in\npath operation decorators\n, no value will be passed to your\npath operation function\n.\nThe end result is that the item paths are now:\n/items/\n/items/{item_id}\n...as we intended.\nThey will be marked with a list of tags that contain a single string\n\"items\"\n.\nThese \"tags\" are especially useful for the automatic interactive documentation systems (using OpenAPI).\nAll of them will include the predefined\nresponses\n.\nAll these\npath operations\nwill have the list of\ndependencies\nevaluated/executed before them.\nIf you also declare dependencies in a specific\npath operation\n,\nthey will be executed too\n.\nThe router dependencies are executed first, then the\ndependencies\nin the decorator\n, and then the normal parameter dependencies.\nYou can also add\nSecurity\ndependencies with\nscopes\n.\nTip\nHaving\ndependencies\nin the\nAPIRouter\ncan be used, for example, to require authentication for a whole group of\npath operations\n. Even if the dependencies are not added individually to each one of them.\nCheck\nThe\nprefix\n,\ntags\n,\nresponses\n, and\ndependencies\nparameters are (as in many other cases) just a feature from\nFastAPI\nto help you avoid code duplication.\nImport the dependencies\n¶\nThis code lives in the module\napp.routers.items\n, the file\napp/routers/items.py\n.\nAnd we need to get the dependency function from the module\napp.dependencies\n, the file\napp/dependencies.py\n.\nSo we use a relative import with\n..\nfor the dependencies:\napp/routers/items.py\nfrom\nfastapi\nimport\nAPIRouter\n,\nDepends\n,\nHTTPException\nfrom\n..dependencies\nimport\nget_token_header\nrouter\n=\nAPIRouter\n(\nprefix\n=\n\"/items\"\n,\ntags\n=\n[\n\"items\"\n],\ndependencies\n=\n[\nDepends\n(\nget_token_header\n)],\nresponses\n=\n{\n404\n:\n{\n\"description\"\n:\n\"Not found\"\n}},\n)\nfake_items_db\n=\n{\n\"plumbus\"\n:\n{\n\"name\"\n:\n\"Plumbus\"\n},\n\"gun\"\n:\n{\n\"name\"\n:\n\"Portal Gun\"\n}}\n@router\n.\nget\n(\n\"/\"\n)\nasync\ndef\nread_items\n():\nreturn\nfake_items_db\n@router\n.\nget\n(\n\"/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nif\nitem_id\nnot\nin\nfake_items_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nreturn\n{\n\"name\"\n:\nfake_items_db\n[\nitem_id\n][\n\"name\"\n],\n\"item_id\"\n:\nitem_id\n}\n@router\n.\nput\n(\n\"/\n{item_id}\n\"\n,\ntags\n=\n[\n\"custom\"\n],\nresponses\n=\n{\n403\n:\n{\n\"description\"\n:\n\"Operation forbidden\"\n}},\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n):\nif\nitem_id\n!=\n\"plumbus\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n403\n,\ndetail\n=\n\"You can only update the item: plumbus\"\n)\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"name\"\n:\n\"The great Plumbus\"\n}\nHow relative imports work\n¶\nTip\nIf you know perfectly how imports work, continue to the next section below.\nA single dot\n.\n, like in:\nfrom\n.dependencies\nimport\nget_token_header\nwould mean:\nStarting in the same package that this module (the file\napp/routers/items.py\n) lives in (the directory\napp/routers/\n)...\nfind the module\ndependencies\n(an imaginary file at\napp/routers/dependencies.py\n)...\nand from it, import the function\nget_token_header\n.\nBut that file doesn't exist, our dependencies are in a file at\napp/dependencies.py\n.\nRemember how our app/file structure looks like:\nThe two dots\n..\n, like in:\nfrom\n..dependencies\nimport\nget_token_header\nmean:\nStarting in the same package that this module (the file\napp/routers/items.py\n) lives in (the directory\napp/routers/\n)...\ngo to the parent package (the directory\napp/\n)...\nand in there, find the module\ndependencies\n(the file at\napp/dependencies.py\n)...\nand from it, import the function\nget_token_header\n.\nThat works correctly! 🎉\nThe same way, if we had used three dots\n...\n, like in:\nfrom\n...dependencies\nimport\nget_token_header\nthat would mean:\nStarting in the same package that this module (the file\napp/routers/items.py\n) lives in (the directory\napp/routers/\n)...\ngo to the parent package (the directory\napp/\n)...\nthen go to the parent of that package (there's no parent package,\napp\nis the top level 😱)...\nand in there, find the module\ndependencies\n(the file at\napp/dependencies.py\n)...\nand from it, import the function\nget_token_header\n.\nThat would refer to some package above\napp/\n, with its own file\n__init__.py\n, etc. But we don't have that. So, that would throw an error in our example. 🚨\nBut now you know how it works, so you can use relative imports in your own apps no matter how complex they are. 🤓\nAdd some custom\ntags\n,\nresponses\n, and\ndependencies\n¶\nWe are not adding the prefix\n/items\nnor the\ntags=[\"items\"]\nto each\npath operation\nbecause we added them to the\nAPIRouter\n.\nBut we can still add\nmore\ntags\nthat will be applied to a specific\npath operation\n, and also some extra\nresponses\nspecific to that\npath operation\n:\napp/routers/items.py\nfrom\nfastapi\nimport\nAPIRouter\n,\nDepends\n,\nHTTPException\nfrom\n..dependencies\nimport\nget_token_header\nrouter\n=\nAPIRouter\n(\nprefix\n=\n\"/items\"\n,\ntags\n=\n[\n\"items\"\n],\ndependencies\n=\n[\nDepends\n(\nget_token_header\n)],\nresponses\n=\n{\n404\n:\n{\n\"description\"\n:\n\"Not found\"\n}},\n)\nfake_items_db\n=\n{\n\"plumbus\"\n:\n{\n\"name\"\n:\n\"Plumbus\"\n},\n\"gun\"\n:\n{\n\"name\"\n:\n\"Portal Gun\"\n}}\n@router\n.\nget\n(\n\"/\"\n)\nasync\ndef\nread_items\n():\nreturn\nfake_items_db\n@router\n.\nget\n(\n\"/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nif\nitem_id\nnot\nin\nfake_items_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nreturn\n{\n\"name\"\n:\nfake_items_db\n[\nitem_id\n][\n\"name\"\n],\n\"item_id\"\n:\nitem_id\n}\n@router\n.\nput\n(\n\"/\n{item_id}\n\"\n,\ntags\n=\n[\n\"custom\"\n],\nresponses\n=\n{\n403\n:\n{\n\"description\"\n:\n\"Operation forbidden\"\n}},\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n):\nif\nitem_id\n!=\n\"plumbus\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n403\n,\ndetail\n=\n\"You can only update the item: plumbus\"\n)\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"name\"\n:\n\"The great Plumbus\"\n}\nTip\nThis last path operation will have the combination of tags:\n[\"items\", \"custom\"]\n.\nAnd it will also have both responses in the documentation, one for\n404\nand one for\n403\n.\nThe main\nFastAPI\n¶\nNow, let's see the module at\napp/main.py\n.\nHere's where you import and use the class\nFastAPI\n.\nThis will be the main file in your application that ties everything together.\nAnd as most of your logic will now live in its own specific module, the main file will be quite simple.\nImport\nFastAPI\n¶\nYou import and create a\nFastAPI\nclass as normally.\nAnd we can even declare\nglobal dependencies\nthat will be combined with the dependencies for each\nAPIRouter\n:\napp/main.py\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\n.dependencies\nimport\nget_query_token\n,\nget_token_header\nfrom\n.internal\nimport\nadmin\nfrom\n.routers\nimport\nitems\n,\nusers\napp\n=\nFastAPI\n(\ndependencies\n=\n[\nDepends\n(\nget_query_token\n)])\napp\n.\ninclude_router\n(\nusers\n.\nrouter\n)\napp\n.\ninclude_router\n(\nitems\n.\nrouter\n)\napp\n.\ninclude_router\n(\nadmin\n.\nrouter\n,\nprefix\n=\n\"/admin\"\n,\ntags\n=\n[\n\"admin\"\n],\ndependencies\n=\n[\nDepends\n(\nget_token_header\n)],\nresponses\n=\n{\n418\n:\n{\n\"description\"\n:\n\"I'm a teapot\"\n}},\n)\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello Bigger Applications!\"\n}\nImport the\nAPIRouter\n¶\nNow we import the other submodules that have\nAPIRouter\ns:\napp/main.py\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\n.dependencies\nimport\nget_query_token\n,\nget_token_header\nfrom\n.internal\nimport\nadmin\nfrom\n.routers\nimport\nitems\n,\nusers\napp\n=\nFastAPI\n(\ndependencies\n=\n[\nDepends\n(\nget_query_token\n)])\napp\n.\ninclude_router\n(\nusers\n.\nrouter\n)\napp\n.\ninclude_router\n(\nitems\n.\nrouter\n)\napp\n.\ninclude_router\n(\nadmin\n.\nrouter\n,\nprefix\n=\n\"/admin\"\n,\ntags\n=\n[\n\"admin\"\n],\ndependencies\n=\n[\nDepends\n(\nget_token_header\n)],\nresponses\n=\n{\n418\n:\n{\n\"description\"\n:\n\"I'm a teapot\"\n}},\n)\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello Bigger Applications!\"\n}\nAs the files\napp/routers/users.py\nand\napp/routers/items.py\nare submodules that are part of the same Python package\napp\n, we can use a single dot\n.\nto import them using \"relative imports\".\nHow the importing works\n¶\nThe section:\nfrom\n.routers\nimport\nitems\n,\nusers\nmeans:\nStarting in the same package that this module (the file\napp/main.py\n) lives in (the directory\napp/\n)...\nlook for the subpackage\nrouters\n(the directory at\napp/routers/\n)...\nand from it, import the submodule\nitems\n(the file at\napp/routers/items.py\n) and\nusers\n(the file at\napp/routers/users.py\n)...\nThe module\nitems\nwill have a variable\nrouter\n(\nitems.router\n). This is the same one we created in the file\napp/routers/items.py\n, it's an\nAPIRouter\nobject.\nAnd then we do the same for the module\nusers\n.\nWe could also import them like:\nfrom\napp.routers\nimport\nitems\n,\nusers\nInfo\nThe first version is a \"relative import\":\nfrom\n.routers\nimport\nitems\n,\nusers\nThe second version is an \"absolute import\":\nfrom\napp.routers\nimport\nitems\n,\nusers\nTo learn more about Python Packages and Modules, read\nthe official Python documentation about Modules\n.\nAvoid name collisions\n¶\nWe are importing the submodule\nitems\ndirectly, instead of importing just its variable\nrouter\n.\nThis is because we also have another variable named\nrouter\nin the submodule\nusers\n.\nIf we had imported one after the other, like:\nfrom\n.routers.items\nimport\nrouter\nfrom\n.routers.users\nimport\nrouter\nthe\nrouter\nfrom\nusers\nwould overwrite the one from\nitems\nand we wouldn't be able to use them at the same time.\nSo, to be able to use both of them in the same file, we import the submodules directly:\napp/main.py\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\n.dependencies\nimport\nget_query_token\n,\nget_token_header\nfrom\n.internal\nimport\nadmin\nfrom\n.routers\nimport\nitems\n,\nusers\napp\n=\nFastAPI\n(\ndependencies\n=\n[\nDepends\n(\nget_query_token\n)])\napp\n.\ninclude_router\n(\nusers\n.\nrouter\n)\napp\n.\ninclude_router\n(\nitems\n.\nrouter\n)\napp\n.\ninclude_router\n(\nadmin\n.\nrouter\n,\nprefix\n=\n\"/admin\"\n,\ntags\n=\n[\n\"admin\"\n],\ndependencies\n=\n[\nDepends\n(\nget_token_header\n)],\nresponses\n=\n{\n418\n:\n{\n\"description\"\n:\n\"I'm a teapot\"\n}},\n)\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello Bigger Applications!\"\n}\nInclude the\nAPIRouter\ns for\nusers\nand\nitems\n¶\nNow, let's include the\nrouter\ns from the submodules\nusers\nand\nitems\n:\napp/main.py\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\n.dependencies\nimport\nget_query_token\n,\nget_token_header\nfrom\n.internal\nimport\nadmin\nfrom\n.routers\nimport\nitems\n,\nusers\napp\n=\nFastAPI\n(\ndependencies\n=\n[\nDepends\n(\nget_query_token\n)])\napp\n.\ninclude_router\n(\nusers\n.\nrouter\n)\napp\n.\ninclude_router\n(\nitems\n.\nrouter\n)\napp\n.\ninclude_router\n(\nadmin\n.\nrouter\n,\nprefix\n=\n\"/admin\"\n,\ntags\n=\n[\n\"admin\"\n],\ndependencies\n=\n[\nDepends\n(\nget_token_header\n)],\nresponses\n=\n{\n418\n:\n{\n\"description\"\n:\n\"I'm a teapot\"\n}},\n)\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello Bigger Applications!\"\n}\nInfo\nusers.router\ncontains the\nAPIRouter\ninside of the file\napp/routers/users.py\n.\nAnd\nitems.router\ncontains the\nAPIRouter\ninside of the file\napp/routers/items.py\n.\nWith\napp.include_router()\nwe can add each\nAPIRouter\nto the main\nFastAPI\napplication.\nIt will include all the routes from that router as part of it.\nTechnical Details\nIt will actually internally create a\npath operation\nfor each\npath operation\nthat was declared in the\nAPIRouter\n.\nSo, behind the scenes, it will actually work as if everything was the same single app.\nCheck\nYou don't have to worry about performance when including routers.\nThis will take microseconds and will only happen at startup.\nSo it won't affect performance. ⚡\nInclude an\nAPIRouter\nwith a custom\nprefix\n,\ntags\n,\nresponses\n, and\ndependencies\n¶\nNow, let's imagine your organization gave you the\napp/internal/admin.py\nfile.\nIt contains an\nAPIRouter\nwith some admin\npath operations\nthat your organization shares between several projects.\nFor this example it will be super simple. But let's say that because it is shared with other projects in the organization, we cannot modify it and add a\nprefix\n,\ndependencies\n,\ntags\n, etc. directly to the\nAPIRouter\n:\napp/internal/admin.py\nfrom\nfastapi\nimport\nAPIRouter\nrouter\n=\nAPIRouter\n()\n@router\n.\npost\n(\n\"/\"\n)\nasync\ndef\nupdate_admin\n():\nreturn\n{\n\"message\"\n:\n\"Admin getting schwifty\"\n}\nBut we still want to set a custom\nprefix\nwhen including the\nAPIRouter\nso that all its\npath operations\nstart with\n/admin\n, we want to secure it with the\ndependencies\nwe already have for this project, and we want to include\ntags\nand\nresponses\n.\nWe can declare all that without having to modify the original\nAPIRouter\nby passing those parameters to\napp.include_router()\n:\napp/main.py\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\n.dependencies\nimport\nget_query_token\n,\nget_token_header\nfrom\n.internal\nimport\nadmin\nfrom\n.routers\nimport\nitems\n,\nusers\napp\n=\nFastAPI\n(\ndependencies\n=\n[\nDepends\n(\nget_query_token\n)])\napp\n.\ninclude_router\n(\nusers\n.\nrouter\n)\napp\n.\ninclude_router\n(\nitems\n.\nrouter\n)\napp\n.\ninclude_router\n(\nadmin\n.\nrouter\n,\nprefix\n=\n\"/admin\"\n,\ntags\n=\n[\n\"admin\"\n],\ndependencies\n=\n[\nDepends\n(\nget_token_header\n)],\nresponses\n=\n{\n418\n:\n{\n\"description\"\n:\n\"I'm a teapot\"\n}},\n)\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello Bigger Applications!\"\n}\nThat way, the original\nAPIRouter\nwill stay unmodified, so we can still share that same\napp/internal/admin.py\nfile with other projects in the organization.\nThe result is that in our app, each of the\npath operations\nfrom the\nadmin\nmodule will have:\nThe prefix\n/admin\n.\nThe tag\nadmin\n.\nThe dependency\nget_token_header\n.\nThe response\n418\n. 🍵\nBut that will only affect that\nAPIRouter\nin our app, not in any other code that uses it.\nSo, for example, other projects could use the same\nAPIRouter\nwith a different authentication method.\nInclude a\npath operation\n¶\nWe can also add\npath operations\ndirectly to the\nFastAPI\napp.\nHere we do it... just to show that we can 🤷:\napp/main.py\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\n.dependencies\nimport\nget_query_token\n,\nget_token_header\nfrom\n.internal\nimport\nadmin\nfrom\n.routers\nimport\nitems\n,\nusers\napp\n=\nFastAPI\n(\ndependencies\n=\n[\nDepends\n(\nget_query_token\n)])\napp\n.\ninclude_router\n(\nusers\n.\nrouter\n)\napp\n.\ninclude_router\n(\nitems\n.\nrouter\n)\napp\n.\ninclude_router\n(\nadmin\n.\nrouter\n,\nprefix\n=\n\"/admin\"\n,\ntags\n=\n[\n\"admin\"\n],\ndependencies\n=\n[\nDepends\n(\nget_token_header\n)],\nresponses\n=\n{\n418\n:\n{\n\"description\"\n:\n\"I'm a teapot\"\n}},\n)\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello Bigger Applications!\"\n}\nand it will work correctly, together with all the other\npath operations\nadded with\napp.include_router()\n.\nVery Technical Details\nNote\n: this is a very technical detail that you probably can\njust skip\n.\nThe\nAPIRouter\ns are not \"mounted\", they are not isolated from the rest of the application.\nThis is because we want to include their\npath operations\nin the OpenAPI schema and the user interfaces.\nAs we cannot just isolate them and \"mount\" them independently of the rest, the\npath operations\nare \"cloned\" (re-created), not included directly.\nCheck the automatic API docs\n¶\nNow, run your app:\n$\nfastapi\ndev\napp/main.py\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nAnd open the docs at\nhttp://127.0.0.1:8000/docs\n.\nYou will see the automatic API docs, including the paths from all the submodules, using the correct paths (and prefixes) and the correct tags:\nInclude the same router multiple times with different\nprefix\n¶\nYou can also use\n.include_router()\nmultiple times with the\nsame\nrouter using different prefixes.\nThis could be useful, for example, to expose the same API under different prefixes, e.g.\n/api/v1\nand\n/api/latest\n.\nThis is an advanced usage that you might not really need, but it's there in case you do.\nInclude an\nAPIRouter\nin another\n¶\nThe same way you can include an\nAPIRouter\nin a\nFastAPI\napplication, you can include an\nAPIRouter\nin another\nAPIRouter\nusing:\nrouter\n.\ninclude_router\n(\nother_router\n)\nMake sure you do it before including\nrouter\nin the\nFastAPI\napp, so that the\npath operations\nfrom\nother_router\nare also included.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/openapi-callbacks/",
    "title": "OpenAPI Callbacks¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Callbacks\nTable of contents\nAn app with callbacks\nThe normal\nFastAPI\napp\nDocumenting the callback\nWrite the callback documentation code\nCreate a callback\nAPIRouter\nCreate the callback\npath operation\nThe callback path expression\nAdd the callback router\nCheck the docs\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAn app with callbacks\nThe normal\nFastAPI\napp\nDocumenting the callback\nWrite the callback documentation code\nCreate a callback\nAPIRouter\nCreate the callback\npath operation\nThe callback path expression\nAdd the callback router\nCheck the docs\nFastAPI\nLearn\nAdvanced User Guide\nOpenAPI Callbacks\n¶\nYou could create an API with a\npath operation\nthat could trigger a request to an\nexternal API\ncreated by someone else (probably the same developer that would be\nusing\nyour API).\nThe process that happens when your API app calls the\nexternal API\nis named a \"callback\". Because the software that the external developer wrote sends a request to your API and then your API\ncalls back\n, sending a request to an\nexternal API\n(that was probably created by the same developer).\nIn this case, you could want to document how that external API\nshould\nlook like. What\npath operation\nit should have, what body it should expect, what response it should return, etc.\nAn app with callbacks\n¶\nLet's see all this with an example.\nImagine you develop an app that allows creating invoices.\nThese invoices will have an\nid\n,\ntitle\n(optional),\ncustomer\n, and\ntotal\n.\nThe user of your API (an external developer) will create an invoice in your API with a POST request.\nThen your API will (let's imagine):\nSend the invoice to some customer of the external developer.\nCollect the money.\nSend a notification back to the API user (the external developer).\nThis will be done by sending a POST request (from\nyour API\n) to some\nexternal API\nprovided by that external developer (this is the \"callback\").\nThe normal\nFastAPI\napp\n¶\nLet's first see how the normal API app would look like before adding the callback.\nIt will have a\npath operation\nthat will receive an\nInvoice\nbody, and a query parameter\ncallback_url\nthat will contain the URL for the callback.\nThis part is pretty normal, most of the code is probably already familiar to you:\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nInvoice\n(\nBaseModel\n):\nid\n:\nstr\ntitle\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ncustomer\n:\nstr\ntotal\n:\nfloat\nclass\nInvoiceEvent\n(\nBaseModel\n):\ndescription\n:\nstr\npaid\n:\nbool\nclass\nInvoiceEventReceived\n(\nBaseModel\n):\nok\n:\nbool\ninvoices_callback_router\n=\nAPIRouter\n()\n@invoices_callback_router\n.\npost\n(\n\"{$callback_url}/invoices/{$request.body.id}\"\n,\nresponse_model\n=\nInvoiceEventReceived\n)\ndef\ninvoice_notification\n(\nbody\n:\nInvoiceEvent\n):\npass\n@app\n.\npost\n(\n\"/invoices/\"\n,\ncallbacks\n=\ninvoices_callback_router\n.\nroutes\n)\ndef\ncreate_invoice\n(\ninvoice\n:\nInvoice\n,\ncallback_url\n:\nUnion\n[\nHttpUrl\n,\nNone\n]\n=\nNone\n):\n\"\"\"\nCreate an invoice.\nThis will (let's imagine) let the API user (some external developer) create an\ninvoice.\nAnd this path operation will:\n* Send the invoice to the client.\n* Collect the money from the client.\n* Send a notification back to the API user (the external developer), as a callback.\n* At this point is that the API will somehow send a POST request to the\nexternal API with the notification of the invoice event\n(e.g. \"payment successful\").\n\"\"\"\n# Send the invoice, collect the money, send the notification (the callback)\nreturn\n{\n\"msg\"\n:\n\"Invoice received\"\n}\nTip\nThe\ncallback_url\nquery parameter uses a Pydantic\nUrl\ntype.\nThe only new thing is the\ncallbacks=invoices_callback_router.routes\nas an argument to the\npath operation decorator\n. We'll see what that is next.\nDocumenting the callback\n¶\nThe actual callback code will depend heavily on your own API app.\nAnd it will probably vary a lot from one app to the next.\nIt could be just one or two lines of code, like:\ncallback_url\n=\n\"https://example.com/api/v1/invoices/events/\"\nhttpx\n.\npost\n(\ncallback_url\n,\njson\n=\n{\n\"description\"\n:\n\"Invoice paid\"\n,\n\"paid\"\n:\nTrue\n})\nBut possibly the most important part of the callback is making sure that your API user (the external developer) implements the\nexternal API\ncorrectly, according to the data that\nyour API\nis going to send in the request body of the callback, etc.\nSo, what we will do next is add the code to document how that\nexternal API\nshould look like to receive the callback from\nyour API\n.\nThat documentation will show up in the Swagger UI at\n/docs\nin your API, and it will let external developers know how to build the\nexternal API\n.\nThis example doesn't implement the callback itself (that could be just a line of code), only the documentation part.\nTip\nThe actual callback is just an HTTP request.\nWhen implementing the callback yourself, you could use something like\nHTTPX\nor\nRequests\n.\nWrite the callback documentation code\n¶\nThis code won't be executed in your app, we only need it to\ndocument\nhow that\nexternal API\nshould look like.\nBut, you already know how to easily create automatic documentation for an API with\nFastAPI\n.\nSo we are going to use that same knowledge to document how the\nexternal API\nshould look like... by creating the\npath operation(s)\nthat the external API should implement (the ones your API will call).\nTip\nWhen writing the code to document a callback, it might be useful to imagine that you are that\nexternal developer\n. And that you are currently implementing the\nexternal API\n, not\nyour API\n.\nTemporarily adopting this point of view (of the\nexternal developer\n) can help you feel like it's more obvious where to put the parameters, the Pydantic model for the body, for the response, etc. for that\nexternal API\n.\nCreate a callback\nAPIRouter\n¶\nFirst create a new\nAPIRouter\nthat will contain one or more callbacks.\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nInvoice\n(\nBaseModel\n):\nid\n:\nstr\ntitle\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ncustomer\n:\nstr\ntotal\n:\nfloat\nclass\nInvoiceEvent\n(\nBaseModel\n):\ndescription\n:\nstr\npaid\n:\nbool\nclass\nInvoiceEventReceived\n(\nBaseModel\n):\nok\n:\nbool\ninvoices_callback_router\n=\nAPIRouter\n()\n@invoices_callback_router\n.\npost\n(\n\"{$callback_url}/invoices/{$request.body.id}\"\n,\nresponse_model\n=\nInvoiceEventReceived\n)\ndef\ninvoice_notification\n(\nbody\n:\nInvoiceEvent\n):\npass\n@app\n.\npost\n(\n\"/invoices/\"\n,\ncallbacks\n=\ninvoices_callback_router\n.\nroutes\n)\ndef\ncreate_invoice\n(\ninvoice\n:\nInvoice\n,\ncallback_url\n:\nUnion\n[\nHttpUrl\n,\nNone\n]\n=\nNone\n):\n\"\"\"\nCreate an invoice.\nThis will (let's imagine) let the API user (some external developer) create an\ninvoice.\nAnd this path operation will:\n* Send the invoice to the client.\n* Collect the money from the client.\n* Send a notification back to the API user (the external developer), as a callback.\n* At this point is that the API will somehow send a POST request to the\nexternal API with the notification of the invoice event\n(e.g. \"payment successful\").\n\"\"\"\n# Send the invoice, collect the money, send the notification (the callback)\nreturn\n{\n\"msg\"\n:\n\"Invoice received\"\n}\nCreate the callback\npath operation\n¶\nTo create the callback\npath operation\nuse the same\nAPIRouter\nyou created above.\nIt should look just like a normal FastAPI\npath operation\n:\nIt should probably have a declaration of the body it should receive, e.g.\nbody: InvoiceEvent\n.\nAnd it could also have a declaration of the response it should return, e.g.\nresponse_model=InvoiceEventReceived\n.\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nInvoice\n(\nBaseModel\n):\nid\n:\nstr\ntitle\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ncustomer\n:\nstr\ntotal\n:\nfloat\nclass\nInvoiceEvent\n(\nBaseModel\n):\ndescription\n:\nstr\npaid\n:\nbool\nclass\nInvoiceEventReceived\n(\nBaseModel\n):\nok\n:\nbool\ninvoices_callback_router\n=\nAPIRouter\n()\n@invoices_callback_router\n.\npost\n(\n\"{$callback_url}/invoices/{$request.body.id}\"\n,\nresponse_model\n=\nInvoiceEventReceived\n)\ndef\ninvoice_notification\n(\nbody\n:\nInvoiceEvent\n):\npass\n@app\n.\npost\n(\n\"/invoices/\"\n,\ncallbacks\n=\ninvoices_callback_router\n.\nroutes\n)\ndef\ncreate_invoice\n(\ninvoice\n:\nInvoice\n,\ncallback_url\n:\nUnion\n[\nHttpUrl\n,\nNone\n]\n=\nNone\n):\n\"\"\"\nCreate an invoice.\nThis will (let's imagine) let the API user (some external developer) create an\ninvoice.\nAnd this path operation will:\n* Send the invoice to the client.\n* Collect the money from the client.\n* Send a notification back to the API user (the external developer), as a callback.\n* At this point is that the API will somehow send a POST request to the\nexternal API with the notification of the invoice event\n(e.g. \"payment successful\").\n\"\"\"\n# Send the invoice, collect the money, send the notification (the callback)\nreturn\n{\n\"msg\"\n:\n\"Invoice received\"\n}\nThere are 2 main differences from a normal\npath operation\n:\nIt doesn't need to have any actual code, because your app will never call this code. It's only used to document the\nexternal API\n. So, the function could just have\npass\n.\nThe\npath\ncan contain an\nOpenAPI 3 expression\n(see more below) where it can use variables with parameters and parts of the original request sent to\nyour API\n.\nThe callback path expression\n¶\nThe callback\npath\ncan have an\nOpenAPI 3 expression\nthat can contain parts of the original request sent to\nyour API\n.\nIn this case, it's the\nstr\n:\n\"{$callback_url}/invoices/{$request.body.id}\"\nSo, if your API user (the external developer) sends a request to\nyour API\nto:\nhttps://yourapi.com/invoices/?callback_url=https://www.external.org/events\nwith a JSON body of:\n{\n\"id\"\n:\n\"2expen51ve\"\n,\n\"customer\"\n:\n\"Mr. Richie Rich\"\n,\n\"total\"\n:\n\"9999\"\n}\nthen\nyour API\nwill process the invoice, and at some point later, send a callback request to the\ncallback_url\n(the\nexternal API\n):\nhttps://www.external.org/events/invoices/2expen51ve\nwith a JSON body containing something like:\n{\n\"description\"\n:\n\"Payment celebration\"\n,\n\"paid\"\n:\ntrue\n}\nand it would expect a response from that\nexternal API\nwith a JSON body like:\n{\n\"ok\"\n:\ntrue\n}\nTip\nNotice how the callback URL used contains the URL received as a query parameter in\ncallback_url\n(\nhttps://www.external.org/events\n) and also the invoice\nid\nfrom inside of the JSON body (\n2expen51ve\n).\nAdd the callback router\n¶\nAt this point you have the\ncallback path operation(s)\nneeded (the one(s) that the\nexternal developer\nshould implement in the\nexternal API\n) in the callback router you created above.\nNow use the parameter\ncallbacks\nin\nyour API's path operation decorator\nto pass the attribute\n.routes\n(that's actually just a\nlist\nof routes/\npath operations\n) from that callback router:\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nHttpUrl\napp\n=\nFastAPI\n()\nclass\nInvoice\n(\nBaseModel\n):\nid\n:\nstr\ntitle\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ncustomer\n:\nstr\ntotal\n:\nfloat\nclass\nInvoiceEvent\n(\nBaseModel\n):\ndescription\n:\nstr\npaid\n:\nbool\nclass\nInvoiceEventReceived\n(\nBaseModel\n):\nok\n:\nbool\ninvoices_callback_router\n=\nAPIRouter\n()\n@invoices_callback_router\n.\npost\n(\n\"{$callback_url}/invoices/{$request.body.id}\"\n,\nresponse_model\n=\nInvoiceEventReceived\n)\ndef\ninvoice_notification\n(\nbody\n:\nInvoiceEvent\n):\npass\n@app\n.\npost\n(\n\"/invoices/\"\n,\ncallbacks\n=\ninvoices_callback_router\n.\nroutes\n)\ndef\ncreate_invoice\n(\ninvoice\n:\nInvoice\n,\ncallback_url\n:\nUnion\n[\nHttpUrl\n,\nNone\n]\n=\nNone\n):\n\"\"\"\nCreate an invoice.\nThis will (let's imagine) let the API user (some external developer) create an\ninvoice.\nAnd this path operation will:\n* Send the invoice to the client.\n* Collect the money from the client.\n* Send a notification back to the API user (the external developer), as a callback.\n* At this point is that the API will somehow send a POST request to the\nexternal API with the notification of the invoice event\n(e.g. \"payment successful\").\n\"\"\"\n# Send the invoice, collect the money, send the notification (the callback)\nreturn\n{\n\"msg\"\n:\n\"Invoice received\"\n}\nTip\nNotice that you are not passing the router itself (\ninvoices_callback_router\n) to\ncallback=\n, but the attribute\n.routes\n, as in\ninvoices_callback_router.routes\n.\nCheck the docs\n¶\nNow you can start your app and go to\nhttp://127.0.0.1:8000/docs\n.\nYou will see your docs including a \"Callbacks\" section for your\npath operation\nthat shows how the\nexternal API\nshould look like:\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/",
    "title": "Tutorial - User Guide¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nRun the code\nInstall FastAPI\nAdvanced User Guide\nFastAPI\nLearn\nTutorial - User Guide\nTutorial - User Guide\n¶\nThis tutorial shows you how to use\nFastAPI\nwith most of its features, step by step.\nEach section gradually builds on the previous ones, but it's structured to separate topics, so that you can go directly to any specific one to solve your specific API needs.\nIt is also built to work as a future reference so you can come back and see exactly what you need.\nRun the code\n¶\nAll the code blocks can be copied and used directly (they are actually tested Python files).\nTo run any of the examples, copy the code to a file\nmain.py\n, and start\nfastapi dev\nwith:\n$\n<font\ncolor\n=\n\"#4E9A06\"\n>fastapi</font>\ndev\n<u\nstyle\n=\n\"text-decoration-style:solid\"\n>main.py</u>\n<span style=\"background-color:#009485\"><font color=\"#D3D7CF\"> FastAPI </font></span>  Starting development server 🚀\nSearching for package file structure from directories\nwith <font color=\"#3465A4\">__init__.py</font> files\nImporting from <font color=\"#75507B\">/home/user/code/</font><font color=\"#AD7FA8\">awesomeapp</font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> module </font></span>  🐍 main.py\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> code </font></span>  Importing the FastAPI app object from the module with\nthe following code:\n<u style=\"text-decoration-style:solid\">from </u><u style=\"text-decoration-style:solid\"><b>main</b></u><u style=\"text-decoration-style:solid\"> import </u><u style=\"text-decoration-style:solid\"><b>app</b></u>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> app </font></span>  Using import string: <font color=\"#3465A4\">main:app</font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> server </font></span>  Server started at <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://127.0.0.1:8000</u></font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> server </font></span>  Documentation at <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://127.0.0.1:8000/docs</u></font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> tip </font></span>  Running in development mode, for production use:\n<b>fastapi run</b>\nLogs:\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Will watch for changes in these directories:\n<b>[</b><font color=\"#4E9A06\">&apos;/home/user/code/awesomeapp&apos;</font><b>]</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Uvicorn running on <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://127.0.0.1:8000</u></font> <b>(</b>Press CTRL+C\nto quit<b>)</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Started reloader process <b>[</b><font color=\"#34E2E2\"><b>383138</b></font><b>]</b> using WatchFiles\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Started server process <b>[</b><font color=\"#34E2E2\"><b>383153</b></font><b>]</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Waiting for application startup.\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Application startup complete.\nIt is\nHIGHLY encouraged\nthat you write or copy the code, edit it and run it locally.\nUsing it in your editor is what really shows you the benefits of FastAPI, seeing how little code you have to write, all the type checks, autocompletion, etc.\nInstall FastAPI\n¶\nThe first step is to install FastAPI.\nMake sure you create a\nvirtual environment\n, activate it, and then\ninstall FastAPI\n:\n$\npip\ninstall\n\"fastapi[standard]\"\n---> 100%\nNote\nWhen you install with\npip install \"fastapi[standard]\"\nit comes with some default optional standard dependencies, including\nfastapi-cloud-cli\n, which allows you to deploy to\nFastAPI Cloud\n.\nIf you don't want to have those optional dependencies, you can instead install\npip install fastapi\n.\nIf you want to install the standard dependencies but without the\nfastapi-cloud-cli\n, you can install with\npip install \"fastapi[standard-no-fastapi-cloud-cli]\"\n.\nAdvanced User Guide\n¶\nThere is also an\nAdvanced User Guide\nthat you can read later after this\nTutorial - User guide\n.\nThe\nAdvanced User Guide\nbuilds on this one, uses the same concepts, and teaches you some extra features.\nBut you should first read the\nTutorial - User Guide\n(what you are reading right now).\nIt's designed so that you can build a complete application with just the\nTutorial - User Guide\n, and then extend it in different ways, depending on your needs, using some of the additional ideas from the\nAdvanced User Guide\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/extra-models/",
    "title": "Extra Models¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nExtra Models\nTable of contents\nMultiple models\nAbout\n**user_in.dict()\nPydantic's\n.dict()\nUnpacking a\ndict\nA Pydantic model from the contents of another\nUnpacking a\ndict\nand extra keywords\nReduce duplication\nUnion\nor\nanyOf\nUnion\nin Python 3.10\nList of models\nResponse with arbitrary\ndict\nRecap\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nMultiple models\nAbout\n**user_in.dict()\nPydantic's\n.dict()\nUnpacking a\ndict\nA Pydantic model from the contents of another\nUnpacking a\ndict\nand extra keywords\nReduce duplication\nUnion\nor\nanyOf\nUnion\nin Python 3.10\nList of models\nResponse with arbitrary\ndict\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nExtra Models\n¶\nContinuing with the previous example, it will be common to have more than one related model.\nThis is especially the case for user models, because:\nThe\ninput model\nneeds to be able to have a password.\nThe\noutput model\nshould not have a password.\nThe\ndatabase model\nwould probably need to have a hashed password.\nDanger\nNever store user's plaintext passwords. Always store a \"secure hash\" that you can then verify.\nIf you don't know, you will learn what a \"password hash\" is in the\nsecurity chapters\n.\nMultiple models\n¶\nHere's a general idea of how the models could look like with their password fields and the places where they are used:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserIn\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\nclass\nUserOut\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nBaseModel\n):\nusername\n:\nstr\nhashed_password\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndef\nfake_password_hasher\n(\nraw_password\n:\nstr\n):\nreturn\n\"supersecret\"\n+\nraw_password\ndef\nfake_save_user\n(\nuser_in\n:\nUserIn\n):\nhashed_password\n=\nfake_password_hasher\n(\nuser_in\n.\npassword\n)\nuser_in_db\n=\nUserInDB\n(\n**\nuser_in\n.\ndict\n(),\nhashed_password\n=\nhashed_password\n)\nprint\n(\n\"User saved! ..not really\"\n)\nreturn\nuser_in_db\n@app\n.\npost\n(\n\"/user/\"\n,\nresponse_model\n=\nUserOut\n)\nasync\ndef\ncreate_user\n(\nuser_in\n:\nUserIn\n):\nuser_saved\n=\nfake_save_user\n(\nuser_in\n)\nreturn\nuser_saved\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserIn\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUserOut\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nBaseModel\n):\nusername\n:\nstr\nhashed_password\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndef\nfake_password_hasher\n(\nraw_password\n:\nstr\n):\nreturn\n\"supersecret\"\n+\nraw_password\ndef\nfake_save_user\n(\nuser_in\n:\nUserIn\n):\nhashed_password\n=\nfake_password_hasher\n(\nuser_in\n.\npassword\n)\nuser_in_db\n=\nUserInDB\n(\n**\nuser_in\n.\ndict\n(),\nhashed_password\n=\nhashed_password\n)\nprint\n(\n\"User saved! ..not really\"\n)\nreturn\nuser_in_db\n@app\n.\npost\n(\n\"/user/\"\n,\nresponse_model\n=\nUserOut\n)\nasync\ndef\ncreate_user\n(\nuser_in\n:\nUserIn\n):\nuser_saved\n=\nfake_save_user\n(\nuser_in\n)\nreturn\nuser_saved\nInfo\nIn Pydantic v1 the method was called\n.dict()\n, it was deprecated (but still supported) in Pydantic v2, and renamed to\n.model_dump()\n.\nThe examples here use\n.dict()\nfor compatibility with Pydantic v1, but you should use\n.model_dump()\ninstead if you can use Pydantic v2.\nAbout\n**user_in.dict()\n¶\nPydantic's\n.dict()\n¶\nuser_in\nis a Pydantic model of class\nUserIn\n.\nPydantic models have a\n.dict()\nmethod that returns a\ndict\nwith the model's data.\nSo, if we create a Pydantic object\nuser_in\nlike:\nuser_in\n=\nUserIn\n(\nusername\n=\n\"john\"\n,\npassword\n=\n\"secret\"\n,\nemail\n=\n\"john.doe@example.com\"\n)\nand then we call:\nuser_dict\n=\nuser_in\n.\ndict\n()\nwe now have a\ndict\nwith the data in the variable\nuser_dict\n(it's a\ndict\ninstead of a Pydantic model object).\nAnd if we call:\nprint\n(\nuser_dict\n)\nwe would get a Python\ndict\nwith:\n{\n'username'\n:\n'john'\n,\n'password'\n:\n'secret'\n,\n'email'\n:\n'john.doe@example.com'\n,\n'full_name'\n:\nNone\n,\n}\nUnpacking a\ndict\n¶\nIf we take a\ndict\nlike\nuser_dict\nand pass it to a function (or class) with\n**user_dict\n, Python will \"unpack\" it. It will pass the keys and values of the\nuser_dict\ndirectly as key-value arguments.\nSo, continuing with the\nuser_dict\nfrom above, writing:\nUserInDB\n(\n**\nuser_dict\n)\nwould result in something equivalent to:\nUserInDB\n(\nusername\n=\n\"john\"\n,\npassword\n=\n\"secret\"\n,\nemail\n=\n\"john.doe@example.com\"\n,\nfull_name\n=\nNone\n,\n)\nOr more exactly, using\nuser_dict\ndirectly, with whatever contents it might have in the future:\nUserInDB\n(\nusername\n=\nuser_dict\n[\n\"username\"\n],\npassword\n=\nuser_dict\n[\n\"password\"\n],\nemail\n=\nuser_dict\n[\n\"email\"\n],\nfull_name\n=\nuser_dict\n[\n\"full_name\"\n],\n)\nA Pydantic model from the contents of another\n¶\nAs in the example above we got\nuser_dict\nfrom\nuser_in.dict()\n, this code:\nuser_dict\n=\nuser_in\n.\ndict\n()\nUserInDB\n(\n**\nuser_dict\n)\nwould be equivalent to:\nUserInDB\n(\n**\nuser_in\n.\ndict\n())\n...because\nuser_in.dict()\nis a\ndict\n, and then we make Python \"unpack\" it by passing it to\nUserInDB\nprefixed with\n**\n.\nSo, we get a Pydantic model from the data in another Pydantic model.\nUnpacking a\ndict\nand extra keywords\n¶\nAnd then adding the extra keyword argument\nhashed_password=hashed_password\n, like in:\nUserInDB\n(\n**\nuser_in\n.\ndict\n(),\nhashed_password\n=\nhashed_password\n)\n...ends up being like:\nUserInDB\n(\nusername\n=\nuser_dict\n[\n\"username\"\n],\npassword\n=\nuser_dict\n[\n\"password\"\n],\nemail\n=\nuser_dict\n[\n\"email\"\n],\nfull_name\n=\nuser_dict\n[\n\"full_name\"\n],\nhashed_password\n=\nhashed_password\n,\n)\nWarning\nThe supporting additional functions\nfake_password_hasher\nand\nfake_save_user\nare just to demo a possible flow of the data, but they of course are not providing any real security.\nReduce duplication\n¶\nReducing code duplication is one of the core ideas in\nFastAPI\n.\nAs code duplication increments the chances of bugs, security issues, code desynchronization issues (when you update in one place but not in the others), etc.\nAnd these models are all sharing a lot of the data and duplicating attribute names and types.\nWe could do better.\nWe can declare a\nUserBase\nmodel that serves as a base for our other models. And then we can make subclasses of that model that inherit its attributes (type declarations, validation, etc).\nAll the data conversion, validation, documentation, etc. will still work as normally.\nThat way, we can declare just the differences between the models (with plaintext\npassword\n, with\nhashed_password\nand without password):\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserBase\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\nclass\nUserIn\n(\nUserBase\n):\npassword\n:\nstr\nclass\nUserOut\n(\nUserBase\n):\npass\nclass\nUserInDB\n(\nUserBase\n):\nhashed_password\n:\nstr\ndef\nfake_password_hasher\n(\nraw_password\n:\nstr\n):\nreturn\n\"supersecret\"\n+\nraw_password\ndef\nfake_save_user\n(\nuser_in\n:\nUserIn\n):\nhashed_password\n=\nfake_password_hasher\n(\nuser_in\n.\npassword\n)\nuser_in_db\n=\nUserInDB\n(\n**\nuser_in\n.\ndict\n(),\nhashed_password\n=\nhashed_password\n)\nprint\n(\n\"User saved! ..not really\"\n)\nreturn\nuser_in_db\n@app\n.\npost\n(\n\"/user/\"\n,\nresponse_model\n=\nUserOut\n)\nasync\ndef\ncreate_user\n(\nuser_in\n:\nUserIn\n):\nuser_saved\n=\nfake_save_user\n(\nuser_in\n)\nreturn\nuser_saved\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserBase\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUserIn\n(\nUserBase\n):\npassword\n:\nstr\nclass\nUserOut\n(\nUserBase\n):\npass\nclass\nUserInDB\n(\nUserBase\n):\nhashed_password\n:\nstr\ndef\nfake_password_hasher\n(\nraw_password\n:\nstr\n):\nreturn\n\"supersecret\"\n+\nraw_password\ndef\nfake_save_user\n(\nuser_in\n:\nUserIn\n):\nhashed_password\n=\nfake_password_hasher\n(\nuser_in\n.\npassword\n)\nuser_in_db\n=\nUserInDB\n(\n**\nuser_in\n.\ndict\n(),\nhashed_password\n=\nhashed_password\n)\nprint\n(\n\"User saved! ..not really\"\n)\nreturn\nuser_in_db\n@app\n.\npost\n(\n\"/user/\"\n,\nresponse_model\n=\nUserOut\n)\nasync\ndef\ncreate_user\n(\nuser_in\n:\nUserIn\n):\nuser_saved\n=\nfake_save_user\n(\nuser_in\n)\nreturn\nuser_saved\nUnion\nor\nanyOf\n¶\nYou can declare a response to be the\nUnion\nof two or more types, that means, that the response would be any of them.\nIt will be defined in OpenAPI with\nanyOf\n.\nTo do that, use the standard Python type hint\ntyping.Union\n:\nNote\nWhen defining a\nUnion\n, include the most specific type first, followed by the less specific type. In the example below, the more specific\nPlaneItem\ncomes before\nCarItem\nin\nUnion[PlaneItem, CarItem]\n.\nPython 3.10+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nBaseItem\n(\nBaseModel\n):\ndescription\n:\nstr\ntype\n:\nstr\nclass\nCarItem\n(\nBaseItem\n):\ntype\n:\nstr\n=\n\"car\"\nclass\nPlaneItem\n(\nBaseItem\n):\ntype\n:\nstr\n=\n\"plane\"\nsize\n:\nint\nitems\n=\n{\n\"item1\"\n:\n{\n\"description\"\n:\n\"All my friends drive a low rider\"\n,\n\"type\"\n:\n\"car\"\n},\n\"item2\"\n:\n{\n\"description\"\n:\n\"Music is my aeroplane, it's my aeroplane\"\n,\n\"type\"\n:\n\"plane\"\n,\n\"size\"\n:\n5\n,\n},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nUnion\n[\nPlaneItem\n,\nCarItem\n])\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nBaseItem\n(\nBaseModel\n):\ndescription\n:\nstr\ntype\n:\nstr\nclass\nCarItem\n(\nBaseItem\n):\ntype\n:\nstr\n=\n\"car\"\nclass\nPlaneItem\n(\nBaseItem\n):\ntype\n:\nstr\n=\n\"plane\"\nsize\n:\nint\nitems\n=\n{\n\"item1\"\n:\n{\n\"description\"\n:\n\"All my friends drive a low rider\"\n,\n\"type\"\n:\n\"car\"\n},\n\"item2\"\n:\n{\n\"description\"\n:\n\"Music is my aeroplane, it's my aeroplane\"\n,\n\"type\"\n:\n\"plane\"\n,\n\"size\"\n:\n5\n,\n},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nUnion\n[\nPlaneItem\n,\nCarItem\n])\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\nUnion\nin Python 3.10\n¶\nIn this example we pass\nUnion[PlaneItem, CarItem]\nas the value of the argument\nresponse_model\n.\nBecause we are passing it as a\nvalue to an argument\ninstead of putting it in a\ntype annotation\n, we have to use\nUnion\neven in Python 3.10.\nIf it was in a type annotation we could have used the vertical bar, as:\nsome_variable\n:\nPlaneItem\n|\nCarItem\nBut if we put that in the assignment\nresponse_model=PlaneItem | CarItem\nwe would get an error, because Python would try to perform an\ninvalid operation\nbetween\nPlaneItem\nand\nCarItem\ninstead of interpreting that as a type annotation.\nList of models\n¶\nThe same way, you can declare responses of lists of objects.\nFor that, use the standard Python\ntyping.List\n(or just\nlist\nin Python 3.9 and above):\nPython 3.9+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\nitems\n=\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"There comes my hero\"\n},\n{\n\"name\"\n:\n\"Red\"\n,\n\"description\"\n:\n\"It's my aeroplane\"\n},\n]\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_model\n=\nlist\n[\nItem\n])\nasync\ndef\nread_items\n():\nreturn\nitems\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\nitems\n=\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"There comes my hero\"\n},\n{\n\"name\"\n:\n\"Red\"\n,\n\"description\"\n:\n\"It's my aeroplane\"\n},\n]\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_model\n=\nList\n[\nItem\n])\nasync\ndef\nread_items\n():\nreturn\nitems\nResponse with arbitrary\ndict\n¶\nYou can also declare a response using a plain arbitrary\ndict\n, declaring just the type of the keys and values, without using a Pydantic model.\nThis is useful if you don't know the valid field/attribute names (that would be needed for a Pydantic model) beforehand.\nIn this case, you can use\ntyping.Dict\n(or just\ndict\nin Python 3.9 and above):\nPython 3.9+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/keyword-weights/\"\n,\nresponse_model\n=\ndict\n[\nstr\n,\nfloat\n])\nasync\ndef\nread_keyword_weights\n():\nreturn\n{\n\"foo\"\n:\n2.3\n,\n\"bar\"\n:\n3.4\n}\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nDict\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/keyword-weights/\"\n,\nresponse_model\n=\nDict\n[\nstr\n,\nfloat\n])\nasync\ndef\nread_keyword_weights\n():\nreturn\n{\n\"foo\"\n:\n2.3\n,\n\"bar\"\n:\n3.4\n}\nRecap\n¶\nUse multiple Pydantic models and inherit freely for each case.\nYou don't need to have a single data model per entity if that entity must be able to have different \"states\". As the case with the user \"entity\" with a state including\npassword\n,\npassword_hash\nand no password.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/",
    "title": "OAuth2 with Password (and hashing), Bearer with JWT tokens¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nTable of contents\nAbout JWT\nInstall\nPyJWT\nPassword hashing\nWhy use password hashing\nInstall\npwdlib\nHash and verify the passwords\nHandle JWT tokens\nUpdate the dependencies\nUpdate the\n/token\npath operation\nTechnical details about the JWT \"subject\"\nsub\nCheck it\nAdvanced usage with\nscopes\nRecap\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAbout JWT\nInstall\nPyJWT\nPassword hashing\nWhy use password hashing\nInstall\npwdlib\nHash and verify the passwords\nHandle JWT tokens\nUpdate the dependencies\nUpdate the\n/token\npath operation\nTechnical details about the JWT \"subject\"\nsub\nCheck it\nAdvanced usage with\nscopes\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nSecurity\nOAuth2 with Password (and hashing), Bearer with JWT tokens\n¶\nNow that we have all the security flow, let's make the application actually secure, using\nJWT\ntokens and secure password hashing.\nThis code is something you can actually use in your application, save the password hashes in your database, etc.\nWe are going to start from where we left in the previous chapter and increment it.\nAbout JWT\n¶\nJWT means \"JSON Web Tokens\".\nIt's a standard to codify a JSON object in a long dense string without spaces. It looks like this:\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\nIt is not encrypted, so, anyone could recover the information from the contents.\nBut it's signed. So, when you receive a token that you emitted, you can verify that you actually emitted it.\nThat way, you can create a token with an expiration of, let's say, 1 week. And then when the user comes back the next day with the token, you know that user is still logged in to your system.\nAfter a week, the token will be expired and the user will not be authorized and will have to sign in again to get a new token. And if the user (or a third party) tried to modify the token to change the expiration, you would be able to discover it, because the signatures would not match.\nIf you want to play with JWT tokens and see how they work, check\nhttps://jwt.io\n.\nInstall\nPyJWT\n¶\nWe need to install\nPyJWT\nto generate and verify the JWT tokens in Python.\nMake sure you create a\nvirtual environment\n, activate it, and then install\npyjwt\n:\n$\npip\ninstall\npyjwt\n---> 100%\nInfo\nIf you are planning to use digital signature algorithms like RSA or ECDSA, you should install the cryptography library dependency\npyjwt[crypto]\n.\nYou can read more about it in the\nPyJWT Installation docs\n.\nPassword hashing\n¶\n\"Hashing\" means converting some content (a password in this case) into a sequence of bytes (just a string) that looks like gibberish.\nWhenever you pass exactly the same content (exactly the same password) you get exactly the same gibberish.\nBut you cannot convert from the gibberish back to the password.\nWhy use password hashing\n¶\nIf your database is stolen, the thief won't have your users' plaintext passwords, only the hashes.\nSo, the thief won't be able to try to use that password in another system (as many users use the same password everywhere, this would be dangerous).\nInstall\npwdlib\n¶\npwdlib is a great Python package to handle password hashes.\nIt supports many secure hashing algorithms and utilities to work with them.\nThe recommended algorithm is \"Argon2\".\nMake sure you create a\nvirtual environment\n, activate it, and then install pwdlib with Argon2:\n$\npip\ninstall\n\"pwdlib[argon2]\"\n---> 100%\nTip\nWith\npwdlib\n, you could even configure it to be able to read passwords created by\nDjango\n, a\nFlask\nsecurity plug-in or many others.\nSo, you would be able to, for example, share the same data from a Django application in a database with a FastAPI application. Or gradually migrate a Django application using the same database.\nAnd your users would be able to login from your Django app or from your\nFastAPI\napp, at the same time.\nHash and verify the passwords\n¶\nImport the tools we need from\npwdlib\n.\nCreate a PasswordHash instance with recommended settings - it will be used for hashing and verifying passwords.\nTip\npwdlib also supports the bcrypt hashing algorithm but does not include legacy algorithms - for working with outdated hashes, it is recommended to use the passlib library.\nFor example, you could use it to read and verify passwords generated by another system (like Django) but hash any new passwords with a different algorithm like Argon2 or Bcrypt.\nAnd be compatible with all of them at the same time.\nCreate a utility function to hash a password coming from the user.\nAnd another utility to verify if a received password matches the hash stored.\nAnd another one to authenticate and return a user.\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nNote\nIf you check the new (fake) database\nfake_users_db\n, you will see how the hashed password looks like now:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n.\nHandle JWT tokens\n¶\nImport the modules installed.\nCreate a random secret key that will be used to sign the JWT tokens.\nTo generate a secure random secret key use the command:\n$\nopenssl\nrand\n-hex\n32\n09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\nAnd copy the output to the variable\nSECRET_KEY\n(don't use the one in the example).\nCreate a variable\nALGORITHM\nwith the algorithm used to sign the JWT token and set it to\n\"HS256\"\n.\nCreate a variable for the expiration of the token.\nDefine a Pydantic Model that will be used in the token endpoint for the response.\nCreate a utility function to generate a new access token.\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nUpdate the dependencies\n¶\nUpdate\nget_current_user\nto receive the same token as before, but this time, using JWT tokens.\nDecode the received token, verify it, and return the current user.\nIf the token is invalid, return an HTTP error right away.\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nUpdate the\n/token\npath operation\n¶\nCreate a\ntimedelta\nwith the expiration time of the token.\nCreate a real JWT access token and return it.\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n}\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\ntoken_data\n=\nTokenData\n(\nusername\n=\nusername\n)\nexcept\nInvalidTokenError\n:\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Bearer\"\n},\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n},\nexpires_delta\n=\naccess_token_expires\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nTechnical details about the JWT \"subject\"\nsub\n¶\nThe JWT specification says that there's a key\nsub\n, with the subject of the token.\nIt's optional to use it, but that's where you would put the user's identification, so we are using it here.\nJWT might be used for other things apart from identifying a user and allowing them to perform operations directly on your API.\nFor example, you could identify a \"car\" or a \"blog post\".\nThen you could add permissions about that entity, like \"drive\" (for the car) or \"edit\" (for the blog).\nAnd then, you could give that JWT token to a user (or bot), and they could use it to perform those actions (drive the car, or edit the blog post) without even needing to have an account, just with the JWT token your API generated for that.\nUsing these ideas, JWT can be used for way more sophisticated scenarios.\nIn those cases, several of those entities could have the same ID, let's say\nfoo\n(a user\nfoo\n, a car\nfoo\n, and a blog post\nfoo\n).\nSo, to avoid ID collisions, when creating the JWT token for the user, you could prefix the value of the\nsub\nkey, e.g. with\nusername:\n. So, in this example, the value of\nsub\ncould have been:\nusername:johndoe\n.\nThe important thing to keep in mind is that the\nsub\nkey should have a unique identifier across the entire application, and it should be a string.\nCheck it\n¶\nRun the server and go to the docs:\nhttp://127.0.0.1:8000/docs\n.\nYou'll see the user interface like:\nAuthorize the application the same way as before.\nUsing the credentials:\nUsername:\njohndoe\nPassword:\nsecret\nCheck\nNotice that nowhere in the code is the plaintext password \"\nsecret\n\", we only have the hashed version.\nCall the endpoint\n/users/me/\n, you will get the response as:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"disabled\"\n:\nfalse\n}\nIf you open the developer tools, you could see how the data sent only includes the token, the password is only sent in the first request to authenticate the user and get that access token, but not afterwards:\nNote\nNotice the header\nAuthorization\n, with a value that starts with\nBearer\n.\nAdvanced usage with\nscopes\n¶\nOAuth2 has the notion of \"scopes\".\nYou can use them to add a specific set of permissions to a JWT token.\nThen you can give this token to a user directly or a third party, to interact with your API with a set of restrictions.\nYou can learn how to use them and how they are integrated into\nFastAPI\nlater in the\nAdvanced User Guide\n.\nRecap\n¶\nWith what you have seen up to now, you can set up a secure\nFastAPI\napplication using standards like OAuth2 and JWT.\nIn almost any framework handling the security becomes a rather complex subject quite quickly.\nMany packages that simplify it a lot have to make many compromises with the data model, database, and available features. And some of these packages that simplify things too much actually have security flaws underneath.\nFastAPI\ndoesn't make any compromise with any database, data model or tool.\nIt gives you all the flexibility to choose the ones that fit your project the best.\nAnd you can use directly many well maintained and widely used packages like\npwdlib\nand\nPyJWT\n, because\nFastAPI\ndoesn't require any complex mechanisms to integrate external packages.\nBut it provides you the tools to simplify the process as much as possible without compromising flexibility, robustness, or security.\nAnd you can use and implement secure, standard protocols, like OAuth2 in a relatively simple way.\nYou can learn more in the\nAdvanced User Guide\nabout how to use OAuth2 \"scopes\", for a more fine-grained permission system, following these same standards. OAuth2 with scopes is the mechanism used by many big authentication providers, like Facebook, Google, GitHub, Microsoft, X (Twitter), etc. to authorize third party applications to interact with their APIs on behalf of their users.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/security/oauth2-scopes/",
    "title": "OAuth2 scopes¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nOAuth2 scopes\nTable of contents\nOAuth2 scopes and OpenAPI\nGlobal view\nOAuth2 Security scheme\nJWT token with scopes\nDeclare scopes in\npath operations\nand dependencies\nUse\nSecurityScopes\nUse the\nscopes\nVerify the\nusername\nand data shape\nVerify the\nscopes\nDependency tree and scopes\nMore details about\nSecurityScopes\nCheck it\nAbout third party integrations\nSecurity\nin decorator\ndependencies\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nOAuth2 scopes and OpenAPI\nGlobal view\nOAuth2 Security scheme\nJWT token with scopes\nDeclare scopes in\npath operations\nand dependencies\nUse\nSecurityScopes\nUse the\nscopes\nVerify the\nusername\nand data shape\nVerify the\nscopes\nDependency tree and scopes\nMore details about\nSecurityScopes\nCheck it\nAbout third party integrations\nSecurity\nin decorator\ndependencies\nFastAPI\nLearn\nAdvanced User Guide\nAdvanced Security\nOAuth2 scopes\n¶\nYou can use OAuth2 scopes directly with\nFastAPI\n, they are integrated to work seamlessly.\nThis would allow you to have a more fine-grained permission system, following the OAuth2 standard, integrated into your OpenAPI application (and the API docs).\nOAuth2 with scopes is the mechanism used by many big authentication providers, like Facebook, Google, GitHub, Microsoft, X (Twitter), etc. They use it to provide specific permissions to users and applications.\nEvery time you \"log in with\" Facebook, Google, GitHub, Microsoft, X (Twitter), that application is using OAuth2 with scopes.\nIn this section you will see how to manage authentication and authorization with the same OAuth2 with scopes in your\nFastAPI\napplication.\nWarning\nThis is a more or less advanced section. If you are just starting, you can skip it.\nYou don't necessarily need OAuth2 scopes, and you can handle authentication and authorization however you want.\nBut OAuth2 with scopes can be nicely integrated into your API (with OpenAPI) and your API docs.\nNevertheless, you still enforce those scopes, or any other security/authorization requirement, however you need, in your code.\nIn many cases, OAuth2 with scopes can be an overkill.\nBut if you know you need it, or you are curious, keep reading.\nOAuth2 scopes and OpenAPI\n¶\nThe OAuth2 specification defines \"scopes\" as a list of strings separated by spaces.\nThe content of each of these strings can have any format, but should not contain spaces.\nThese scopes represent \"permissions\".\nIn OpenAPI (e.g. the API docs), you can define \"security schemes\".\nWhen one of these security schemes uses OAuth2, you can also declare and use scopes.\nEach \"scope\" is just a string (without spaces).\nThey are normally used to declare specific security permissions, for example:\nusers:read\nor\nusers:write\nare common examples.\ninstagram_basic\nis used by Facebook / Instagram.\nhttps://www.googleapis.com/auth/drive\nis used by Google.\nInfo\nIn OAuth2 a \"scope\" is just a string that declares a specific permission required.\nIt doesn't matter if it has other characters like\n:\nor if it is a URL.\nThose details are implementation specific.\nFor OAuth2 they are just strings.\nGlobal view\n¶\nFirst, let's quickly see the parts that change from the examples in the main\nTutorial - User Guide\nfor\nOAuth2 with Password (and hashing), Bearer with JWT tokens\n. Now using OAuth2 scopes:\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\nfrom\ntyping_extensions\nimport\nAnnotated\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nNow let's review those changes step by step.\nOAuth2 Security scheme\n¶\nThe first change is that now we are declaring the OAuth2 security scheme with two available scopes,\nme\nand\nitems\n.\nThe\nscopes\nparameter receives a\ndict\nwith each scope as a key and the description as the value:\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\nfrom\ntyping_extensions\nimport\nAnnotated\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nBecause we are now declaring those scopes, they will show up in the API docs when you log-in/authorize.\nAnd you will be able to select which scopes you want to give access to:\nme\nand\nitems\n.\nThis is the same mechanism used when you give permissions while logging in with Facebook, Google, GitHub, etc:\nJWT token with scopes\n¶\nNow, modify the token\npath operation\nto return the scopes requested.\nWe are still using the same\nOAuth2PasswordRequestForm\n. It includes a property\nscopes\nwith a\nlist\nof\nstr\n, with each scope it received in the request.\nAnd we return the scopes as part of the JWT token.\nDanger\nFor simplicity, here we are just adding the scopes received directly to the token.\nBut in your application, for security, you should make sure you only add the scopes that the user is actually able to have, or the ones you have predefined.\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\nfrom\ntyping_extensions\nimport\nAnnotated\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nDeclare scopes in\npath operations\nand dependencies\n¶\nNow we declare that the\npath operation\nfor\n/users/me/items/\nrequires the scope\nitems\n.\nFor this, we import and use\nSecurity\nfrom\nfastapi\n.\nYou can use\nSecurity\nto declare dependencies (just like\nDepends\n), but\nSecurity\nalso receives a parameter\nscopes\nwith a list of scopes (strings).\nIn this case, we pass a dependency function\nget_current_active_user\nto\nSecurity\n(the same way we would do with\nDepends\n).\nBut we also pass a\nlist\nof scopes, in this case with just one scope:\nitems\n(it could have more).\nAnd the dependency function\nget_current_active_user\ncan also declare sub-dependencies, not only with\nDepends\nbut also with\nSecurity\n. Declaring its own sub-dependency function (\nget_current_user\n), and more scope requirements.\nIn this case, it requires the scope\nme\n(it could require more than one scope).\nNote\nYou don't necessarily need to add different scopes in different places.\nWe are doing it here to demonstrate how\nFastAPI\nhandles scopes declared at different levels.\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\nfrom\ntyping_extensions\nimport\nAnnotated\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTechnical Details\nSecurity\nis actually a subclass of\nDepends\n, and it has just one extra parameter that we'll see later.\nBut by using\nSecurity\ninstead of\nDepends\n,\nFastAPI\nwill know that it can declare security scopes, use them internally, and document the API with OpenAPI.\nBut when you import\nQuery\n,\nPath\n,\nDepends\n,\nSecurity\nand others from\nfastapi\n, those are actually functions that return special classes.\nUse\nSecurityScopes\n¶\nNow update the dependency\nget_current_user\n.\nThis is the one used by the dependencies above.\nHere's where we are using the same OAuth2 scheme we created before, declaring it as a dependency:\noauth2_scheme\n.\nBecause this dependency function doesn't have any scope requirements itself, we can use\nDepends\nwith\noauth2_scheme\n, we don't have to use\nSecurity\nwhen we don't need to specify security scopes.\nWe also declare a special parameter of type\nSecurityScopes\n, imported from\nfastapi.security\n.\nThis\nSecurityScopes\nclass is similar to\nRequest\n(\nRequest\nwas used to get the request object directly).\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\nfrom\ntyping_extensions\nimport\nAnnotated\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nUse the\nscopes\n¶\nThe parameter\nsecurity_scopes\nwill be of type\nSecurityScopes\n.\nIt will have a property\nscopes\nwith a list containing all the scopes required by itself and all the dependencies that use this as a sub-dependency. That means, all the \"dependants\"... this might sound confusing, it is explained again later below.\nThe\nsecurity_scopes\nobject (of class\nSecurityScopes\n) also provides a\nscope_str\nattribute with a single string, containing those scopes separated by spaces (we are going to use it).\nWe create an\nHTTPException\nthat we can reuse (\nraise\n) later at several points.\nIn this exception, we include the scopes required (if any) as a string separated by spaces (using\nscope_str\n). We put that string containing the scopes in the\nWWW-Authenticate\nheader (this is part of the spec).\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\nfrom\ntyping_extensions\nimport\nAnnotated\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nVerify the\nusername\nand data shape\n¶\nWe verify that we get a\nusername\n, and extract the scopes.\nAnd then we validate that data with the Pydantic model (catching the\nValidationError\nexception), and if we get an error reading the JWT token or validating the data with Pydantic, we raise the\nHTTPException\nwe created before.\nFor that, we update the Pydantic model\nTokenData\nwith a new property\nscopes\n.\nBy validating the data with Pydantic we can make sure that we have, for example, exactly a\nlist\nof\nstr\nwith the scopes and a\nstr\nwith the\nusername\n.\nInstead of, for example, a\ndict\n, or something else, as it could break the application at some point later, making it a security risk.\nWe also verify that we have a user with that username, and if not, we raise that same exception we created before.\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\nfrom\ntyping_extensions\nimport\nAnnotated\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nVerify the\nscopes\n¶\nWe now verify that all the scopes required, by this dependency and all the dependants (including\npath operations\n), are included in the scopes provided in the token received, otherwise raise an\nHTTPException\n.\nFor this, we use\nsecurity_scopes.scopes\n, that contains a\nlist\nwith all these scopes as\nstr\n.\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\nfrom\ntyping_extensions\nimport\nAnnotated\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n])],\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()],\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_active_user\n)],\n):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])],\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nstr\n|\nNone\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\ntimedelta\n|\nNone\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nlist\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntimedelta\n,\ntimezone\nfrom\ntyping\nimport\nList\n,\nUnion\nimport\njwt\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nSecurity\n,\nstatus\nfrom\nfastapi.security\nimport\n(\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nSecurityScopes\n,\n)\nfrom\njwt.exceptions\nimport\nInvalidTokenError\nfrom\npwdlib\nimport\nPasswordHash\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\n# to get a string like this run:\n# openssl rand -hex 32\nSECRET_KEY\n=\n\"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\nALGORITHM\n=\n\"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES\n=\n30\nfake_users_db\n=\n{\n\"johndoe\"\n:\n{\n\"username\"\n:\n\"johndoe\"\n,\n\"full_name\"\n:\n\"John Doe\"\n,\n\"email\"\n:\n\"johndoe@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$wagCPXjifgvUFBzq4hqe3w$CYaIb8sB+wtD+Vu/P4uod1+Qof8h+1g7bbDlBID48Rc\"\n,\n\"disabled\"\n:\nFalse\n,\n},\n\"alice\"\n:\n{\n\"username\"\n:\n\"alice\"\n,\n\"full_name\"\n:\n\"Alice Chains\"\n,\n\"email\"\n:\n\"alicechains@example.com\"\n,\n\"hashed_password\"\n:\n\"$argon2id$v=19$m=65536,t=3,p=4$g2/AV1zwopqUntPKJavBFw$BwpRGDCyUHLvHICnwijyX8ROGoiUPwNKZ7915MeYfCE\"\n,\n\"disabled\"\n:\nTrue\n,\n},\n}\nclass\nToken\n(\nBaseModel\n):\naccess_token\n:\nstr\ntoken_type\n:\nstr\nclass\nTokenData\n(\nBaseModel\n):\nusername\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nscopes\n:\nList\n[\nstr\n]\n=\n[]\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\nclass\nUserInDB\n(\nUser\n):\nhashed_password\n:\nstr\npassword_hash\n=\nPasswordHash\n.\nrecommended\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n,\nscopes\n=\n{\n\"me\"\n:\n\"Read information about the current user.\"\n,\n\"items\"\n:\n\"Read items.\"\n},\n)\napp\n=\nFastAPI\n()\ndef\nverify_password\n(\nplain_password\n,\nhashed_password\n):\nreturn\npassword_hash\n.\nverify\n(\nplain_password\n,\nhashed_password\n)\ndef\nget_password_hash\n(\npassword\n):\nreturn\npassword_hash\n.\nhash\n(\npassword\n)\ndef\nget_user\n(\ndb\n,\nusername\n:\nstr\n):\nif\nusername\nin\ndb\n:\nuser_dict\n=\ndb\n[\nusername\n]\nreturn\nUserInDB\n(\n**\nuser_dict\n)\ndef\nauthenticate_user\n(\nfake_db\n,\nusername\n:\nstr\n,\npassword\n:\nstr\n):\nuser\n=\nget_user\n(\nfake_db\n,\nusername\n)\nif\nnot\nuser\n:\nreturn\nFalse\nif\nnot\nverify_password\n(\npassword\n,\nuser\n.\nhashed_password\n):\nreturn\nFalse\nreturn\nuser\ndef\ncreate_access_token\n(\ndata\n:\ndict\n,\nexpires_delta\n:\nUnion\n[\ntimedelta\n,\nNone\n]\n=\nNone\n):\nto_encode\n=\ndata\n.\ncopy\n()\nif\nexpires_delta\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\nexpires_delta\nelse\n:\nexpire\n=\ndatetime\n.\nnow\n(\ntimezone\n.\nutc\n)\n+\ntimedelta\n(\nminutes\n=\n15\n)\nto_encode\n.\nupdate\n({\n\"exp\"\n:\nexpire\n})\nencoded_jwt\n=\njwt\n.\nencode\n(\nto_encode\n,\nSECRET_KEY\n,\nalgorithm\n=\nALGORITHM\n)\nreturn\nencoded_jwt\nasync\ndef\nget_current_user\n(\nsecurity_scopes\n:\nSecurityScopes\n,\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)\n):\nif\nsecurity_scopes\n.\nscopes\n:\nauthenticate_value\n=\nf\n'Bearer scope=\"\n{\nsecurity_scopes\n.\nscope_str\n}\n\"'\nelse\n:\nauthenticate_value\n=\n\"Bearer\"\ncredentials_exception\n=\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Could not validate credentials\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\ntry\n:\npayload\n=\njwt\n.\ndecode\n(\ntoken\n,\nSECRET_KEY\n,\nalgorithms\n=\n[\nALGORITHM\n])\nusername\n:\nstr\n=\npayload\n.\nget\n(\n\"sub\"\n)\nif\nusername\nis\nNone\n:\nraise\ncredentials_exception\nscope\n:\nstr\n=\npayload\n.\nget\n(\n\"scope\"\n,\n\"\"\n)\ntoken_scopes\n=\nscope\n.\nsplit\n(\n\" \"\n)\ntoken_data\n=\nTokenData\n(\nscopes\n=\ntoken_scopes\n,\nusername\n=\nusername\n)\nexcept\n(\nInvalidTokenError\n,\nValidationError\n):\nraise\ncredentials_exception\nuser\n=\nget_user\n(\nfake_users_db\n,\nusername\n=\ntoken_data\n.\nusername\n)\nif\nuser\nis\nNone\n:\nraise\ncredentials_exception\nfor\nscope\nin\nsecurity_scopes\n.\nscopes\n:\nif\nscope\nnot\nin\ntoken_data\n.\nscopes\n:\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Not enough permissions\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\nauthenticate_value\n},\n)\nreturn\nuser\nasync\ndef\nget_current_active_user\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_user\n,\nscopes\n=\n[\n\"me\"\n]),\n):\nif\ncurrent_user\n.\ndisabled\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Inactive user\"\n)\nreturn\ncurrent_user\n@app\n.\npost\n(\n\"/token\"\n)\nasync\ndef\nlogin_for_access_token\n(\nform_data\n:\nOAuth2PasswordRequestForm\n=\nDepends\n(),\n)\n->\nToken\n:\nuser\n=\nauthenticate_user\n(\nfake_users_db\n,\nform_data\n.\nusername\n,\nform_data\n.\npassword\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Incorrect username or password\"\n)\naccess_token_expires\n=\ntimedelta\n(\nminutes\n=\nACCESS_TOKEN_EXPIRE_MINUTES\n)\naccess_token\n=\ncreate_access_token\n(\ndata\n=\n{\n\"sub\"\n:\nuser\n.\nusername\n,\n\"scope\"\n:\n\" \"\n.\njoin\n(\nform_data\n.\nscopes\n)},\nexpires_delta\n=\naccess_token_expires\n,\n)\nreturn\nToken\n(\naccess_token\n=\naccess_token\n,\ntoken_type\n=\n\"bearer\"\n)\n@app\n.\nget\n(\n\"/users/me/\"\n,\nresponse_model\n=\nUser\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_active_user\n)):\nreturn\ncurrent_user\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nUser\n=\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n]),\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\n@app\n.\nget\n(\n\"/status/\"\n)\nasync\ndef\nread_system_status\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\n{\n\"status\"\n:\n\"ok\"\n}\nDependency tree and scopes\n¶\nLet's review again this dependency tree and the scopes.\nAs the\nget_current_active_user\ndependency has as a sub-dependency on\nget_current_user\n, the scope\n\"me\"\ndeclared at\nget_current_active_user\nwill be included in the list of required scopes in the\nsecurity_scopes.scopes\npassed to\nget_current_user\n.\nThe\npath operation\nitself also declares a scope,\n\"items\"\n, so this will also be in the list of\nsecurity_scopes.scopes\npassed to\nget_current_user\n.\nHere's how the hierarchy of dependencies and scopes looks like:\nThe\npath operation\nread_own_items\nhas:\nRequired scopes\n[\"items\"]\nwith the dependency:\nget_current_active_user\n:\nThe dependency function\nget_current_active_user\nhas:\nRequired scopes\n[\"me\"]\nwith the dependency:\nget_current_user\n:\nThe dependency function\nget_current_user\nhas:\nNo scopes required by itself.\nA dependency using\noauth2_scheme\n.\nA\nsecurity_scopes\nparameter of type\nSecurityScopes\n:\nThis\nsecurity_scopes\nparameter has a property\nscopes\nwith a\nlist\ncontaining all these scopes declared above, so:\nsecurity_scopes.scopes\nwill contain\n[\"me\", \"items\"]\nfor the\npath operation\nread_own_items\n.\nsecurity_scopes.scopes\nwill contain\n[\"me\"]\nfor the\npath operation\nread_users_me\n, because it is declared in the dependency\nget_current_active_user\n.\nsecurity_scopes.scopes\nwill contain\n[]\n(nothing) for the\npath operation\nread_system_status\n, because it didn't declare any\nSecurity\nwith\nscopes\n, and its dependency,\nget_current_user\n, doesn't declare any\nscopes\neither.\nTip\nThe important and \"magic\" thing here is that\nget_current_user\nwill have a different list of\nscopes\nto check for each\npath operation\n.\nAll depending on the\nscopes\ndeclared in each\npath operation\nand each dependency in the dependency tree for that specific\npath operation\n.\nMore details about\nSecurityScopes\n¶\nYou can use\nSecurityScopes\nat any point, and in multiple places, it doesn't have to be at the \"root\" dependency.\nIt will always have the security scopes declared in the current\nSecurity\ndependencies and all the dependants for\nthat specific\npath operation\nand\nthat specific\ndependency tree.\nBecause the\nSecurityScopes\nwill have all the scopes declared by dependants, you can use it to verify that a token has the required scopes in a central dependency function, and then declare different scope requirements in different\npath operations\n.\nThey will be checked independently for each\npath operation\n.\nCheck it\n¶\nIf you open the API docs, you can authenticate and specify which scopes you want to authorize.\nIf you don't select any scope, you will be \"authenticated\", but when you try to access\n/users/me/\nor\n/users/me/items/\nyou will get an error saying that you don't have enough permissions. You will still be able to access\n/status/\n.\nAnd if you select the scope\nme\nbut not the scope\nitems\n, you will be able to access\n/users/me/\nbut not\n/users/me/items/\n.\nThat's what would happen to a third party application that tried to access one of these\npath operations\nwith a token provided by a user, depending on how many permissions the user gave the application.\nAbout third party integrations\n¶\nIn this example we are using the OAuth2 \"password\" flow.\nThis is appropriate when we are logging in to our own application, probably with our own frontend.\nBecause we can trust it to receive the\nusername\nand\npassword\n, as we control it.\nBut if you are building an OAuth2 application that others would connect to (i.e., if you are building an authentication provider equivalent to Facebook, Google, GitHub, etc.) you should use one of the other flows.\nThe most common is the implicit flow.\nThe most secure is the code flow, but it's more complex to implement as it requires more steps. As it is more complex, many providers end up suggesting the implicit flow.\nNote\nIt's common that each authentication provider names their flows in a different way, to make it part of their brand.\nBut in the end, they are implementing the same OAuth2 standard.\nFastAPI\nincludes utilities for all these OAuth2 authentication flows in\nfastapi.security.oauth2\n.\nSecurity\nin decorator\ndependencies\n¶\nThe same way you can define a\nlist\nof\nDepends\nin the decorator's\ndependencies\nparameter (as explained in\nDependencies in path operation decorators\n), you could also use\nSecurity\nwith\nscopes\nthere.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/header-params/",
    "title": "Header Parameters¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nHeader Parameters\nTable of contents\nImport\nHeader\nDeclare\nHeader\nparameters\nAutomatic conversion\nDuplicate headers\nRecap\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nImport\nHeader\nDeclare\nHeader\nparameters\nAutomatic conversion\nDuplicate headers\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nHeader Parameters\n¶\nYou can define Header parameters the same way you define\nQuery\n,\nPath\nand\nCookie\nparameters.\nImport\nHeader\n¶\nFirst import\nHeader\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nuser_agent\n:\nAnnotated\n[\nstr\n|\nNone\n,\nHeader\n()]\n=\nNone\n):\nreturn\n{\n\"User-Agent\"\n:\nuser_agent\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nuser_agent\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nHeader\n()]\n=\nNone\n):\nreturn\n{\n\"User-Agent\"\n:\nuser_agent\n}\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nuser_agent\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nHeader\n()]\n=\nNone\n):\nreturn\n{\n\"User-Agent\"\n:\nuser_agent\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nuser_agent\n:\nstr\n|\nNone\n=\nHeader\n(\ndefault\n=\nNone\n)):\nreturn\n{\n\"User-Agent\"\n:\nuser_agent\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nuser_agent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nHeader\n(\ndefault\n=\nNone\n)):\nreturn\n{\n\"User-Agent\"\n:\nuser_agent\n}\nDeclare\nHeader\nparameters\n¶\nThen declare the header parameters using the same structure as with\nPath\n,\nQuery\nand\nCookie\n.\nYou can define the default value as well as all the extra validation or annotation parameters:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nuser_agent\n:\nAnnotated\n[\nstr\n|\nNone\n,\nHeader\n()]\n=\nNone\n):\nreturn\n{\n\"User-Agent\"\n:\nuser_agent\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nuser_agent\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nHeader\n()]\n=\nNone\n):\nreturn\n{\n\"User-Agent\"\n:\nuser_agent\n}\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nuser_agent\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nHeader\n()]\n=\nNone\n):\nreturn\n{\n\"User-Agent\"\n:\nuser_agent\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nuser_agent\n:\nstr\n|\nNone\n=\nHeader\n(\ndefault\n=\nNone\n)):\nreturn\n{\n\"User-Agent\"\n:\nuser_agent\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nuser_agent\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nHeader\n(\ndefault\n=\nNone\n)):\nreturn\n{\n\"User-Agent\"\n:\nuser_agent\n}\nTechnical Details\nHeader\nis a \"sister\" class of\nPath\n,\nQuery\nand\nCookie\n. It also inherits from the same common\nParam\nclass.\nBut remember that when you import\nQuery\n,\nPath\n,\nHeader\n, and others from\nfastapi\n, those are actually functions that return special classes.\nInfo\nTo declare headers, you need to use\nHeader\n, because otherwise the parameters would be interpreted as query parameters.\nAutomatic conversion\n¶\nHeader\nhas a little extra functionality on top of what\nPath\n,\nQuery\nand\nCookie\nprovide.\nMost of the standard headers are separated by a \"hyphen\" character, also known as the \"minus symbol\" (\n-\n).\nBut a variable like\nuser-agent\nis invalid in Python.\nSo, by default,\nHeader\nwill convert the parameter names characters from underscore (\n_\n) to hyphen (\n-\n) to extract and document the headers.\nAlso, HTTP headers are case-insensitive, so, you can declare them with standard Python style (also known as \"snake_case\").\nSo, you can use\nuser_agent\nas you normally would in Python code, instead of needing to capitalize the first letters as\nUser_Agent\nor something similar.\nIf for some reason you need to disable automatic conversion of underscores to hyphens, set the parameter\nconvert_underscores\nof\nHeader\nto\nFalse\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nstrange_header\n:\nAnnotated\n[\nstr\n|\nNone\n,\nHeader\n(\nconvert_underscores\n=\nFalse\n)]\n=\nNone\n,\n):\nreturn\n{\n\"strange_header\"\n:\nstrange_header\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nstrange_header\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nHeader\n(\nconvert_underscores\n=\nFalse\n)\n]\n=\nNone\n,\n):\nreturn\n{\n\"strange_header\"\n:\nstrange_header\n}\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nstrange_header\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nHeader\n(\nconvert_underscores\n=\nFalse\n)\n]\n=\nNone\n,\n):\nreturn\n{\n\"strange_header\"\n:\nstrange_header\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nstrange_header\n:\nstr\n|\nNone\n=\nHeader\n(\ndefault\n=\nNone\n,\nconvert_underscores\n=\nFalse\n),\n):\nreturn\n{\n\"strange_header\"\n:\nstrange_header\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nstrange_header\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nHeader\n(\ndefault\n=\nNone\n,\nconvert_underscores\n=\nFalse\n),\n):\nreturn\n{\n\"strange_header\"\n:\nstrange_header\n}\nWarning\nBefore setting\nconvert_underscores\nto\nFalse\n, bear in mind that some HTTP proxies and servers disallow the usage of headers with underscores.\nDuplicate headers\n¶\nIt is possible to receive duplicate headers. That means, the same header with multiple values.\nYou can define those cases using a list in the type declaration.\nYou will receive all the values from the duplicate header as a Python\nlist\n.\nFor example, to declare a header of\nX-Token\nthat can appear more than once, you can write:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nx_token\n:\nAnnotated\n[\nlist\n[\nstr\n]\n|\nNone\n,\nHeader\n()]\n=\nNone\n):\nreturn\n{\n\"X-Token values\"\n:\nx_token\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nx_token\n:\nAnnotated\n[\nUnion\n[\nList\n[\nstr\n],\nNone\n],\nHeader\n()]\n=\nNone\n):\nreturn\n{\n\"X-Token values\"\n:\nx_token\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nx_token\n:\nAnnotated\n[\nUnion\n[\nList\n[\nstr\n],\nNone\n],\nHeader\n()]\n=\nNone\n):\nreturn\n{\n\"X-Token values\"\n:\nx_token\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nx_token\n:\nlist\n[\nstr\n]\n|\nNone\n=\nHeader\n(\ndefault\n=\nNone\n)):\nreturn\n{\n\"X-Token values\"\n:\nx_token\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nx_token\n:\nUnion\n[\nlist\n[\nstr\n],\nNone\n]\n=\nHeader\n(\ndefault\n=\nNone\n)):\nreturn\n{\n\"X-Token values\"\n:\nx_token\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nx_token\n:\nUnion\n[\nList\n[\nstr\n],\nNone\n]\n=\nHeader\n(\ndefault\n=\nNone\n)):\nreturn\n{\n\"X-Token values\"\n:\nx_token\n}\nIf you communicate with that\npath operation\nsending two HTTP headers like:\nX-Token: foo\nX-Token: bar\nThe response would be like:\n{\n\"X-Token values\"\n:\n[\n\"bar\"\n,\n\"foo\"\n]\n}\nRecap\n¶\nDeclare headers with\nHeader\n, using the same common pattern as\nQuery\n,\nPath\nand\nCookie\n.\nAnd don't worry about underscores in your variables,\nFastAPI\nwill take care of converting them.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/resources/",
    "title": "Resources¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nFastAPI\nResources\nResources\n¶\nAdditional resources, external links, articles and more. ✈️\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/newsletter/",
    "title": "FastAPI and friends newsletter¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nFastAPI\nResources\nFastAPI and friends newsletter\n¶\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/help-fastapi/",
    "title": "Help FastAPI - Get Help¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nHelp FastAPI - Get Help\nTable of contents\nSubscribe to the newsletter\nFollow FastAPI on X (Twitter)\nStar\nFastAPI\nin GitHub\nWatch the GitHub repository for releases\nConnect with the author\nTweet about\nFastAPI\nVote for FastAPI\nHelp others with questions in GitHub\nUnderstand the question\nReproduce the problem\nSuggest solutions\nAsk to close\nWatch the GitHub repository\nAsk Questions\nReview Pull Requests\nUnderstand the problem\nDon't worry about style\nCheck the code\nTests\nCreate a Pull Request\nHelp Maintain FastAPI\nJoin the chat\nDon't use the chat for questions\nSponsor the author\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nSubscribe to the newsletter\nFollow FastAPI on X (Twitter)\nStar\nFastAPI\nin GitHub\nWatch the GitHub repository for releases\nConnect with the author\nTweet about\nFastAPI\nVote for FastAPI\nHelp others with questions in GitHub\nUnderstand the question\nReproduce the problem\nSuggest solutions\nAsk to close\nWatch the GitHub repository\nAsk Questions\nReview Pull Requests\nUnderstand the problem\nDon't worry about style\nCheck the code\nTests\nCreate a Pull Request\nHelp Maintain FastAPI\nJoin the chat\nDon't use the chat for questions\nSponsor the author\nFastAPI\nResources\nHelp FastAPI - Get Help\n¶\nDo you like\nFastAPI\n?\nWould you like to help FastAPI, other users, and the author?\nOr would you like to get help with\nFastAPI\n?\nThere are very simple ways to help (several involve just one or two clicks).\nAnd there are several ways to get help too.\nSubscribe to the newsletter\n¶\nYou can subscribe to the (infrequent)\nFastAPI and friends\nnewsletter\nto stay updated about:\nNews about FastAPI and friends 🚀\nGuides 📝\nFeatures ✨\nBreaking changes 🚨\nTips and tricks ✅\nFollow FastAPI on X (Twitter)\n¶\nFollow @fastapi on\nX (Twitter)\nto get the latest news about\nFastAPI\n. 🐦\nStar\nFastAPI\nin GitHub\n¶\nYou can \"star\" FastAPI in GitHub (clicking the star button at the top right):\nhttps://github.com/fastapi/fastapi\n. ⭐️\nBy adding a star, other users will be able to find it more easily and see that it has been already useful for others.\nWatch the GitHub repository for releases\n¶\nYou can \"watch\" FastAPI in GitHub (clicking the \"watch\" button at the top right):\nhttps://github.com/fastapi/fastapi\n. 👀\nThere you can select \"Releases only\".\nBy doing it, you will receive notifications (in your email) whenever there's a new release (a new version) of\nFastAPI\nwith bug fixes and new features.\nConnect with the author\n¶\nYou can connect with\nme (Sebastián Ramírez /\ntiangolo\n)\n, the author.\nYou can:\nFollow me on\nGitHub\n.\nSee other Open Source projects I have created that could help you.\nFollow me to see when I create a new Open Source project.\nFollow me on\nX (Twitter)\nor\nMastodon\n.\nTell me how you use FastAPI (I love to hear that).\nHear when I make announcements or release new tools.\nYou can also\nfollow @fastapi on X (Twitter)\n(a separate account).\nFollow me on\nLinkedIn\n.\nHear when I make announcements or release new tools (although I use X (Twitter) more often 🤷‍♂).\nRead what I write (or follow me) on\nDev.to\nor\nMedium\n.\nRead other ideas, articles, and read about tools I have created.\nFollow me to read when I publish something new.\nTweet about\nFastAPI\n¶\nTweet about\nFastAPI\nand let me and others know why you like it. 🎉\nI love to hear about how\nFastAPI\nis being used, what you have liked in it, in which project/company are you using it, etc.\nVote for FastAPI\n¶\nVote for\nFastAPI\nin Slant\n.\nVote for\nFastAPI\nin AlternativeTo\n.\nSay you use\nFastAPI\non StackShare\n.\nHelp others with questions in GitHub\n¶\nYou can try and help others with their questions in:\nGitHub Discussions\nGitHub Issues\nIn many cases you might already know the answer for those questions. 🤓\nIf you are helping a lot of people with their questions, you will become an official\nFastAPI Expert\n. 🎉\nJust remember, the most important point is: try to be kind. People come with their frustrations and in many cases don't ask in the best way, but try as best as you can to be kind. 🤗\nThe idea is for the\nFastAPI\ncommunity to be kind and welcoming. At the same time, don't accept bullying or disrespectful behavior towards others. We have to take care of each other.\nHere's how to help others with questions (in discussions or issues):\nUnderstand the question\n¶\nCheck if you can understand what is the\npurpose\nand use case of the person asking.\nThen check if the question (the vast majority are questions) is\nclear\n.\nIn many cases the question asked is about an imaginary solution from the user, but there might be a\nbetter\none. If you can understand the problem and use case better, you might be able to suggest a better\nalternative solution\n.\nIf you can't understand the question, ask for more\ndetails\n.\nReproduce the problem\n¶\nFor most of the cases and most of the questions there's something related to the person's\noriginal code\n.\nIn many cases they will only copy a fragment of the code, but that's not enough to\nreproduce the problem\n.\nYou can ask them to provide a\nminimal, reproducible, example\n, that you can\ncopy-paste\nand run locally to see the same error or behavior they are seeing, or to understand their use case better.\nIf you are feeling too generous, you can try to\ncreate an example\nlike that yourself, just based on the description of the problem. Just keep in mind that this might take a lot of time and it might be better to ask them to clarify the problem first.\nSuggest solutions\n¶\nAfter being able to understand the question, you can give them a possible\nanswer\n.\nIn many cases, it's better to understand their\nunderlying problem or use case\n, because there might be a better way to solve it than what they are trying to do.\nAsk to close\n¶\nIf they reply, there's a high chance you would have solved their problem, congrats,\nyou're a hero\n! 🦸\nNow, if that solved their problem, you can ask them to:\nIn GitHub Discussions: mark the comment as the\nanswer\n.\nIn GitHub Issues:\nclose\nthe issue.\nWatch the GitHub repository\n¶\nYou can \"watch\" FastAPI in GitHub (clicking the \"watch\" button at the top right):\nhttps://github.com/fastapi/fastapi\n. 👀\nIf you select \"Watching\" instead of \"Releases only\" you will receive notifications when someone creates a new issue or question. You can also specify that you only want to be notified about new issues, or discussions, or PRs, etc.\nThen you can try and help them solve those questions.\nAsk Questions\n¶\nYou can\ncreate a new question\nin the GitHub repository, for example to:\nAsk a\nquestion\nor ask about a\nproblem\n.\nSuggest a new\nfeature\n.\nNote\n: if you do it, then I'm going to ask you to also help others. 😉\nReview Pull Requests\n¶\nYou can help me review pull requests from others.\nAgain, please try your best to be kind. 🤗\nHere's what to keep in mind and how to review a pull request:\nUnderstand the problem\n¶\nFirst, make sure you\nunderstand the problem\nthat the pull request is trying to solve. It might have a longer discussion in a GitHub Discussion or issue.\nThere's also a good chance that the pull request is not actually needed because the problem can be solved in a\ndifferent way\n. Then you can suggest or ask about that.\nDon't worry about style\n¶\nDon't worry too much about things like commit message styles, I will squash and merge customizing the commit manually.\nAlso don't worry about style rules, there are already automatized tools checking that.\nAnd if there's any other style or consistency need, I'll ask directly for that, or I'll add commits on top with the needed changes.\nCheck the code\n¶\nCheck and read the code, see if it makes sense,\nrun it locally\nand see if it actually solves the problem.\nThen\ncomment\nsaying that you did that, that's how I will know you really checked it.\nInfo\nUnfortunately, I can't simply trust PRs that just have several approvals.\nSeveral times it has happened that there are PRs with 3, 5 or more approvals, probably because the description is appealing, but when I check the PRs, they are actually broken, have a bug, or don't solve the problem they claim to solve. 😅\nSo, it's really important that you actually read and run the code, and let me know in the comments that you did. 🤓\nIf the PR can be simplified in a way, you can ask for that, but there's no need to be too picky, there might be a lot of subjective points of view (and I will have my own as well 🙈), so it's better if you can focus on the fundamental things.\nTests\n¶\nHelp me check that the PR has\ntests\n.\nCheck that the tests\nfail\nbefore the PR. 🚨\nThen check that the tests\npass\nafter the PR. ✅\nMany PRs don't have tests, you can\nremind\nthem to add tests, or you can even\nsuggest\nsome tests yourself. That's one of the things that consume most time and you can help a lot with that.\nThen also comment what you tried, that way I'll know that you checked it. 🤓\nCreate a Pull Request\n¶\nYou can\ncontribute\nto the source code with Pull Requests, for example:\nTo fix a typo you found on the documentation.\nTo share an article, video, or podcast you created or found about FastAPI by\nediting this file\n.\nMake sure you add your link to the start of the corresponding section.\nTo help\ntranslate the documentation\nto your language.\nYou can also help to review the translations created by others.\nTo propose new documentation sections.\nTo fix an existing issue/bug.\nMake sure to add tests.\nTo add a new feature.\nMake sure to add tests.\nMake sure to add documentation if it's relevant.\nHelp Maintain FastAPI\n¶\nHelp me maintain\nFastAPI\n! 🤓\nThere's a lot of work to do, and for most of it,\nYOU\ncan do it.\nThe main tasks that you can do right now are:\nHelp others with questions in GitHub\n(see the section above).\nReview Pull Requests\n(see the section above).\nThose two tasks are what\nconsume time the most\n. That's the main work of maintaining FastAPI.\nIf you can help me with that,\nyou are helping me maintain FastAPI\nand making sure it keeps\nadvancing faster and better\n. 🚀\nJoin the chat\n¶\nJoin the 👥\nDiscord chat server\n👥 and hang out with others in the FastAPI community.\nTip\nFor questions, ask them in\nGitHub Discussions\n, there's a much better chance you will receive help by the\nFastAPI Experts\n.\nUse the chat only for other general conversations.\nDon't use the chat for questions\n¶\nKeep in mind that as chats allow more \"free conversation\", it's easy to ask questions that are too general and more difficult to answer, so, you might not receive answers.\nIn GitHub, the template will guide you to write the right question so that you can more easily get a good answer, or even solve the problem yourself even before asking. And in GitHub I can make sure I always answer everything, even if it takes some time. I can't personally do that with the chat systems. 😅\nConversations in the chat systems are also not as easily searchable as in GitHub, so questions and answers might get lost in the conversation. And only the ones in GitHub count to become a\nFastAPI Expert\n, so you will most probably receive more attention in GitHub.\nOn the other side, there are thousands of users in the chat systems, so there's a high chance you'll find someone to talk to there, almost all the time. 😄\nSponsor the author\n¶\nIf your\nproduct/company\ndepends on or is related to\nFastAPI\nand you want to reach its users, you can sponsor the author (me) through\nGitHub sponsors\n. Depending on the tier, you could get some extra benefits, like a badge in the docs. 🎁\nThanks! 🚀\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/",
    "title": "Advanced User Guide¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAdditional Features\nRead the Tutorial first\nFastAPI\nLearn\nAdvanced User Guide\nAdvanced User Guide\n¶\nAdditional Features\n¶\nThe main\nTutorial - User Guide\nshould be enough to give you a tour through all the main features of\nFastAPI\n.\nIn the next sections you will see other options, configurations, and additional features.\nTip\nThe next sections are\nnot necessarily \"advanced\"\n.\nAnd it's possible that for your use case, the solution is in one of them.\nRead the Tutorial first\n¶\nYou could still use most of the features in\nFastAPI\nwith the knowledge from the main\nTutorial - User Guide\n.\nAnd the next sections assume you already read it, and assume that you know those main ideas.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/uploadfile/",
    "title": "UploadFileclass¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nUploadFile\nclass\nTable of contents\nUploadFile\nExample\nfile\nfilename\nsize\nheaders\ncontent_type\nread\nwrite\nseek\nclose\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUploadFile\nExample\nfile\nfilename\nsize\nheaders\ncontent_type\nread\nwrite\nseek\nclose\nFastAPI\nReference\nUploadFile\nclass\n¶\nYou can define\npath operation function\nparameters to be of the type\nUploadFile\nto receive files from the request.\nYou can import it directly from\nfastapi\n:\nfrom\nfastapi\nimport\nUploadFile\nfastapi.UploadFile\n¶\nUploadFile\n(\nfile\n,\n*\n,\nsize\n=\nNone\n,\nfilename\n=\nNone\n,\nheaders\n=\nNone\n)\nBases:\nUploadFile\nA file uploaded in a request.\nDefine it as a\npath operation function\n(or dependency) parameter.\nIf you are using a regular\ndef\nfunction, you can use the\nupload_file.file\nattribute to access the raw standard Python file (blocking, not async), useful and\nneeded for non-async code.\nRead more about it in the\nFastAPI docs for Request Files\n.\nExample\n¶\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n()]):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nSource code in\nstarlette/datastructures.py\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\ndef\n__init__\n(\nself\n,\nfile\n:\nBinaryIO\n,\n*\n,\nsize\n:\nint\n|\nNone\n=\nNone\n,\nfilename\n:\nstr\n|\nNone\n=\nNone\n,\nheaders\n:\nHeaders\n|\nNone\n=\nNone\n,\n)\n->\nNone\n:\nself\n.\nfilename\n=\nfilename\nself\n.\nfile\n=\nfile\nself\n.\nsize\n=\nsize\nself\n.\nheaders\n=\nheaders\nor\nHeaders\n()\n# Capture max size from SpooledTemporaryFile if one is provided. This slightly speeds up future checks.\n# Note 0 means unlimited mirroring SpooledTemporaryFile's __init__\nself\n.\n_max_mem_size\n=\ngetattr\n(\nself\n.\nfile\n,\n\"_max_size\"\n,\n0\n)\nfile\ninstance-attribute\n¶\nfile\nThe standard Python file object (non-async).\nfilename\ninstance-attribute\n¶\nfilename\nThe original file name.\nsize\ninstance-attribute\n¶\nsize\nThe size of the file in bytes.\nheaders\ninstance-attribute\n¶\nheaders\nThe headers of the request.\ncontent_type\ninstance-attribute\n¶\ncontent_type\nThe content type of the request, from the headers.\nread\nasync\n¶\nread\n(\nsize\n=-\n1\n)\nRead some bytes from the file.\nTo be awaitable, compatible with async, this is run in threadpool.\nPARAMETER\nDESCRIPTION\nsize\nThe number of bytes to read from the file.\nTYPE:\nint\nDEFAULT:\n-1\nSource code in\nfastapi/datastructures.py\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\nasync\ndef\nread\n(\nself\n,\nsize\n:\nAnnotated\n[\nint\n,\nDoc\n(\n\"\"\"\nThe number of bytes to read from the file.\n\"\"\"\n),\n]\n=\n-\n1\n,\n)\n->\nbytes\n:\n\"\"\"\nRead some bytes from the file.\nTo be awaitable, compatible with async, this is run in threadpool.\n\"\"\"\nreturn\nawait\nsuper\n()\n.\nread\n(\nsize\n)\nwrite\nasync\n¶\nwrite\n(\ndata\n)\nWrite some bytes to the file.\nYou normally wouldn't use this from a file you read in a request.\nTo be awaitable, compatible with async, this is run in threadpool.\nPARAMETER\nDESCRIPTION\ndata\nThe bytes to write to the file.\nTYPE:\nbytes\nSource code in\nfastapi/datastructures.py\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\nasync\ndef\nwrite\n(\nself\n,\ndata\n:\nAnnotated\n[\nbytes\n,\nDoc\n(\n\"\"\"\nThe bytes to write to the file.\n\"\"\"\n),\n],\n)\n->\nNone\n:\n\"\"\"\nWrite some bytes to the file.\nYou normally wouldn't use this from a file you read in a request.\nTo be awaitable, compatible with async, this is run in threadpool.\n\"\"\"\nreturn\nawait\nsuper\n()\n.\nwrite\n(\ndata\n)\nseek\nasync\n¶\nseek\n(\noffset\n)\nMove to a position in the file.\nAny next read or write will be done from that position.\nTo be awaitable, compatible with async, this is run in threadpool.\nPARAMETER\nDESCRIPTION\noffset\nThe position in bytes to seek to in the file.\nTYPE:\nint\nSource code in\nfastapi/datastructures.py\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\nasync\ndef\nseek\n(\nself\n,\noffset\n:\nAnnotated\n[\nint\n,\nDoc\n(\n\"\"\"\nThe position in bytes to seek to in the file.\n\"\"\"\n),\n],\n)\n->\nNone\n:\n\"\"\"\nMove to a position in the file.\nAny next read or write will be done from that position.\nTo be awaitable, compatible with async, this is run in threadpool.\n\"\"\"\nreturn\nawait\nsuper\n()\n.\nseek\n(\noffset\n)\nclose\nasync\n¶\nclose\n()\nClose the file.\nTo be awaitable, compatible with async, this is run in threadpool.\nSource code in\nfastapi/datastructures.py\n131\n132\n133\n134\n135\n136\n137\nasync\ndef\nclose\n(\nself\n)\n->\nNone\n:\n\"\"\"\nClose the file.\nTo be awaitable, compatible with async, this is run in threadpool.\n\"\"\"\nreturn\nawait\nsuper\n()\n.\nclose\n()\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/how-to/testing-database/",
    "title": "Testing a Database¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nFastAPI\nLearn\nHow To - Recipes\nTesting a Database\n¶\nYou can study about databases, SQL, and SQLModel in the\nSQLModel docs\n. 🤓\nThere's a mini\ntutorial on using SQLModel with FastAPI\n. ✨\nThat tutorial includes a section about\ntesting SQL databases\n. 😎\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/generate-clients/",
    "title": "Generating SDKs¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nGenerating SDKs\nTable of contents\nOpen Source SDK Generators\nSDK Generators from FastAPI Sponsors\nCreate a TypeScript SDK\nAPI Docs\nHey API\nUsing the SDK\nFastAPI App with Tags\nGenerate a TypeScript Client with Tags\nClient Method Names\nCustom Operation IDs and Better Method Names\nCustom Generate Unique ID Function\nGenerate a TypeScript Client with Custom Operation IDs\nPreprocess the OpenAPI Specification for the Client Generator\nGenerate a TypeScript Client with the Preprocessed OpenAPI\nBenefits\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nOpen Source SDK Generators\nSDK Generators from FastAPI Sponsors\nCreate a TypeScript SDK\nAPI Docs\nHey API\nUsing the SDK\nFastAPI App with Tags\nGenerate a TypeScript Client with Tags\nClient Method Names\nCustom Operation IDs and Better Method Names\nCustom Generate Unique ID Function\nGenerate a TypeScript Client with Custom Operation IDs\nPreprocess the OpenAPI Specification for the Client Generator\nGenerate a TypeScript Client with the Preprocessed OpenAPI\nBenefits\nFastAPI\nLearn\nAdvanced User Guide\nGenerating SDKs\n¶\nBecause\nFastAPI\nis based on the\nOpenAPI\nspecification, its APIs can be described in a standard format that many tools understand.\nThis makes it easy to generate up-to-date\ndocumentation\n, client libraries (\nSDKs\n) in multiple languages, and\ntesting\nor\nautomation workflows\nthat stay in sync with your code.\nIn this guide, you'll learn how to generate a\nTypeScript SDK\nfor your FastAPI backend.\nOpen Source SDK Generators\n¶\nA versatile option is the\nOpenAPI Generator\n, which supports\nmany programming languages\nand can generate SDKs from your OpenAPI specification.\nFor\nTypeScript clients\n,\nHey API\nis a purpose-built solution, providing an optimized experience for the TypeScript ecosystem.\nYou can discover more SDK generators on\nOpenAPI.Tools\n.\nTip\nFastAPI automatically generates\nOpenAPI 3.1\nspecifications, so any tool you use must support this version.\nSDK Generators from FastAPI Sponsors\n¶\nThis section highlights\nventure-backed\nand\ncompany-supported\nsolutions from companies that sponsor FastAPI. These products provide\nadditional features\nand\nintegrations\non top of high-quality generated SDKs.\nBy ✨\nsponsoring FastAPI\n✨, these companies help ensure the framework and its\necosystem\nremain healthy and\nsustainable\n.\nTheir sponsorship also demonstrates a strong commitment to the FastAPI\ncommunity\n(you), showing that they care not only about offering a\ngreat service\nbut also about supporting a\nrobust and thriving framework\n, FastAPI. 🙇\nFor example, you might want to try:\nSpeakeasy\nStainless\nliblab\nSome of these solutions may also be open source or offer free tiers, so you can try them without a financial commitment. Other commercial SDK generators are available and can be found online. 🤓\nCreate a TypeScript SDK\n¶\nLet's start with a simple FastAPI application:\nPython 3.9+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\nprice\n:\nfloat\nclass\nResponseMessage\n(\nBaseModel\n):\nmessage\n:\nstr\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nResponseMessage\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\n{\n\"message\"\n:\n\"item received\"\n}\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_model\n=\nlist\n[\nItem\n])\nasync\ndef\nget_items\n():\nreturn\n[\n{\n\"name\"\n:\n\"Plumbus\"\n,\n\"price\"\n:\n3\n},\n{\n\"name\"\n:\n\"Portal Gun\"\n,\n\"price\"\n:\n9001\n},\n]\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\nprice\n:\nfloat\nclass\nResponseMessage\n(\nBaseModel\n):\nmessage\n:\nstr\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nResponseMessage\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\n{\n\"message\"\n:\n\"item received\"\n}\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_model\n=\nList\n[\nItem\n])\nasync\ndef\nget_items\n():\nreturn\n[\n{\n\"name\"\n:\n\"Plumbus\"\n,\n\"price\"\n:\n3\n},\n{\n\"name\"\n:\n\"Portal Gun\"\n,\n\"price\"\n:\n9001\n},\n]\nNotice that the\npath operations\ndefine the models they use for request payload and response payload, using the models\nItem\nand\nResponseMessage\n.\nAPI Docs\n¶\nIf you go to\n/docs\n, you will see that it has the\nschemas\nfor the data to be sent in requests and received in responses:\nYou can see those schemas because they were declared with the models in the app.\nThat information is available in the app's\nOpenAPI schema\n, and then shown in the API docs.\nThat same information from the models that is included in OpenAPI is what can be used to\ngenerate the client code\n.\nHey API\n¶\nOnce we have a FastAPI app with the models, we can use Hey API to generate a TypeScript client. The fastest way to do that is via npx.\nnpx\n@hey-api/openapi-ts\n-i\nhttp://localhost:8000/openapi.json\n-o\nsrc/client\nThis will generate a TypeScript SDK in\n./src/client\n.\nYou can learn how to\ninstall\n@hey-api/openapi-ts\nand read about the\ngenerated output\non their website.\nUsing the SDK\n¶\nNow you can import and use the client code. It could look like this, notice that you get autocompletion for the methods:\nYou will also get autocompletion for the payload to send:\nTip\nNotice the autocompletion for\nname\nand\nprice\n, that was defined in the FastAPI application, in the\nItem\nmodel.\nYou will have inline errors for the data that you send:\nThe response object will also have autocompletion:\nFastAPI App with Tags\n¶\nIn many cases, your FastAPI app will be bigger, and you will probably use tags to separate different groups of\npath operations\n.\nFor example, you could have a section for\nitems\nand another section for\nusers\n, and they could be separated by tags:\nPython 3.9+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\nprice\n:\nfloat\nclass\nResponseMessage\n(\nBaseModel\n):\nmessage\n:\nstr\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nResponseMessage\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\n{\n\"message\"\n:\n\"Item received\"\n}\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_model\n=\nlist\n[\nItem\n],\ntags\n=\n[\n\"items\"\n])\nasync\ndef\nget_items\n():\nreturn\n[\n{\n\"name\"\n:\n\"Plumbus\"\n,\n\"price\"\n:\n3\n},\n{\n\"name\"\n:\n\"Portal Gun\"\n,\n\"price\"\n:\n9001\n},\n]\n@app\n.\npost\n(\n\"/users/\"\n,\nresponse_model\n=\nResponseMessage\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\ncreate_user\n(\nuser\n:\nUser\n):\nreturn\n{\n\"message\"\n:\n\"User received\"\n}\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\nprice\n:\nfloat\nclass\nResponseMessage\n(\nBaseModel\n):\nmessage\n:\nstr\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nResponseMessage\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\n{\n\"message\"\n:\n\"Item received\"\n}\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_model\n=\nList\n[\nItem\n],\ntags\n=\n[\n\"items\"\n])\nasync\ndef\nget_items\n():\nreturn\n[\n{\n\"name\"\n:\n\"Plumbus\"\n,\n\"price\"\n:\n3\n},\n{\n\"name\"\n:\n\"Portal Gun\"\n,\n\"price\"\n:\n9001\n},\n]\n@app\n.\npost\n(\n\"/users/\"\n,\nresponse_model\n=\nResponseMessage\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\ncreate_user\n(\nuser\n:\nUser\n):\nreturn\n{\n\"message\"\n:\n\"User received\"\n}\nGenerate a TypeScript Client with Tags\n¶\nIf you generate a client for a FastAPI app using tags, it will normally also separate the client code based on the tags.\nThis way, you will be able to have things ordered and grouped correctly for the client code:\nIn this case, you have:\nItemsService\nUsersService\nClient Method Names\n¶\nRight now, the generated method names like\ncreateItemItemsPost\ndon't look very clean:\nItemsService\n.\ncreateItemItemsPost\n({\nname\n:\n\"Plumbus\"\n,\nprice\n:\n5\n})\n...that's because the client generator uses the OpenAPI internal\noperation ID\nfor each\npath operation\n.\nOpenAPI requires that each operation ID is unique across all the\npath operations\n, so FastAPI uses the\nfunction name\n, the\npath\n, and the\nHTTP method/operation\nto generate that operation ID, because that way it can make sure that the operation IDs are unique.\nBut I'll show you how to improve that next. 🤓\nCustom Operation IDs and Better Method Names\n¶\nYou can\nmodify\nthe way these operation IDs are\ngenerated\nto make them simpler and have\nsimpler method names\nin the clients.\nIn this case, you will have to ensure that each operation ID is\nunique\nin some other way.\nFor example, you could make sure that each\npath operation\nhas a tag, and then generate the operation ID based on the\ntag\nand the\npath operation\nname\n(the function name).\nCustom Generate Unique ID Function\n¶\nFastAPI uses a\nunique ID\nfor each\npath operation\n, which is used for the\noperation ID\nand also for the names of any needed custom models, for requests or responses.\nYou can customize that function. It takes an\nAPIRoute\nand outputs a string.\nFor example, here it is using the first tag (you will probably have only one tag) and the\npath operation\nname (the function name).\nYou can then pass that custom function to\nFastAPI\nas the\ngenerate_unique_id_function\nparameter:\nPython 3.9+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.routing\nimport\nAPIRoute\nfrom\npydantic\nimport\nBaseModel\ndef\ncustom_generate_unique_id\n(\nroute\n:\nAPIRoute\n):\nreturn\nf\n\"\n{\nroute\n.\ntags\n[\n0\n]\n}\n-\n{\nroute\n.\nname\n}\n\"\napp\n=\nFastAPI\n(\ngenerate_unique_id_function\n=\ncustom_generate_unique_id\n)\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\nprice\n:\nfloat\nclass\nResponseMessage\n(\nBaseModel\n):\nmessage\n:\nstr\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nResponseMessage\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\n{\n\"message\"\n:\n\"Item received\"\n}\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_model\n=\nlist\n[\nItem\n],\ntags\n=\n[\n\"items\"\n])\nasync\ndef\nget_items\n():\nreturn\n[\n{\n\"name\"\n:\n\"Plumbus\"\n,\n\"price\"\n:\n3\n},\n{\n\"name\"\n:\n\"Portal Gun\"\n,\n\"price\"\n:\n9001\n},\n]\n@app\n.\npost\n(\n\"/users/\"\n,\nresponse_model\n=\nResponseMessage\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\ncreate_user\n(\nuser\n:\nUser\n):\nreturn\n{\n\"message\"\n:\n\"User received\"\n}\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.routing\nimport\nAPIRoute\nfrom\npydantic\nimport\nBaseModel\ndef\ncustom_generate_unique_id\n(\nroute\n:\nAPIRoute\n):\nreturn\nf\n\"\n{\nroute\n.\ntags\n[\n0\n]\n}\n-\n{\nroute\n.\nname\n}\n\"\napp\n=\nFastAPI\n(\ngenerate_unique_id_function\n=\ncustom_generate_unique_id\n)\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\nprice\n:\nfloat\nclass\nResponseMessage\n(\nBaseModel\n):\nmessage\n:\nstr\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nResponseMessage\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\n{\n\"message\"\n:\n\"Item received\"\n}\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_model\n=\nList\n[\nItem\n],\ntags\n=\n[\n\"items\"\n])\nasync\ndef\nget_items\n():\nreturn\n[\n{\n\"name\"\n:\n\"Plumbus\"\n,\n\"price\"\n:\n3\n},\n{\n\"name\"\n:\n\"Portal Gun\"\n,\n\"price\"\n:\n9001\n},\n]\n@app\n.\npost\n(\n\"/users/\"\n,\nresponse_model\n=\nResponseMessage\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\ncreate_user\n(\nuser\n:\nUser\n):\nreturn\n{\n\"message\"\n:\n\"User received\"\n}\nGenerate a TypeScript Client with Custom Operation IDs\n¶\nNow, if you generate the client again, you will see that it has the improved method names:\nAs you see, the method names now have the tag and then the function name, now they don't include information from the URL path and the HTTP operation.\nPreprocess the OpenAPI Specification for the Client Generator\n¶\nThe generated code still has some\nduplicated information\n.\nWe already know that this method is related to the\nitems\nbecause that word is in the\nItemsService\n(taken from the tag), but we still have the tag name prefixed in the method name too. 😕\nWe will probably still want to keep it for OpenAPI in general, as that will ensure that the operation IDs are\nunique\n.\nBut for the generated client, we could\nmodify\nthe OpenAPI operation IDs right before generating the clients, just to make those method names nicer and\ncleaner\n.\nWe could download the OpenAPI JSON to a file\nopenapi.json\nand then we could\nremove that prefixed tag\nwith a script like this:\nPython 3.8+\nNode.js\nimport\njson\nfrom\npathlib\nimport\nPath\nfile_path\n=\nPath\n(\n\"./openapi.json\"\n)\nopenapi_content\n=\njson\n.\nloads\n(\nfile_path\n.\nread_text\n())\nfor\npath_data\nin\nopenapi_content\n[\n\"paths\"\n]\n.\nvalues\n():\nfor\noperation\nin\npath_data\n.\nvalues\n():\ntag\n=\noperation\n[\n\"tags\"\n][\n0\n]\noperation_id\n=\noperation\n[\n\"operationId\"\n]\nto_remove\n=\nf\n\"\n{\ntag\n}\n-\"\nnew_operation_id\n=\noperation_id\n[\nlen\n(\nto_remove\n)\n:]\noperation\n[\n\"operationId\"\n]\n=\nnew_operation_id\nfile_path\n.\nwrite_text\n(\njson\n.\ndumps\n(\nopenapi_content\n))\nimport\n*\nas\nfs\nfrom\n'fs'\nasync\nfunction\nmodifyOpenAPIFile\n(\nfilePath\n)\n{\ntry\n{\nconst\ndata\n=\nawait\nfs\n.\npromises\n.\nreadFile\n(\nfilePath\n)\nconst\nopenapiContent\n=\nJSON\n.\nparse\n(\ndata\n)\nconst\npaths\n=\nopenapiContent\n.\npaths\nfor\n(\nconst\npathKey\nof\nObject\n.\nkeys\n(\npaths\n))\n{\nconst\npathData\n=\npaths\n[\npathKey\n]\nfor\n(\nconst\nmethod\nof\nObject\n.\nkeys\n(\npathData\n))\n{\nconst\noperation\n=\npathData\n[\nmethod\n]\nif\n(\noperation\n.\ntags\n&&\noperation\n.\ntags\n.\nlength\n>\n0\n)\n{\nconst\ntag\n=\noperation\n.\ntags\n[\n0\n]\nconst\noperationId\n=\noperation\n.\noperationId\nconst\ntoRemove\n=\n`\n${\ntag\n}\n-`\nif\n(\noperationId\n.\nstartsWith\n(\ntoRemove\n))\n{\nconst\nnewOperationId\n=\noperationId\n.\nsubstring\n(\ntoRemove\n.\nlength\n)\noperation\n.\noperationId\n=\nnewOperationId\n}\n}\n}\n}\nawait\nfs\n.\npromises\n.\nwriteFile\n(\nfilePath\n,\nJSON\n.\nstringify\n(\nopenapiContent\n,\nnull\n,\n2\n),\n)\nconsole\n.\nlog\n(\n'File successfully modified'\n)\n}\ncatch\n(\nerr\n)\n{\nconsole\n.\nerror\n(\n'Error:'\n,\nerr\n)\n}\n}\nconst\nfilePath\n=\n'./openapi.json'\nmodifyOpenAPIFile\n(\nfilePath\n)\nWith that, the operation IDs would be renamed from things like\nitems-get_items\nto just\nget_items\n, that way the client generator can generate simpler method names.\nGenerate a TypeScript Client with the Preprocessed OpenAPI\n¶\nSince the end result is now in an\nopenapi.json\nfile, you need to update your input location:\nnpx\n@hey-api/openapi-ts\n-i\n./openapi.json\n-o\nsrc/client\nAfter generating the new client, you would now have\nclean method names\n, with all the\nautocompletion\n,\ninline errors\n, etc:\nBenefits\n¶\nWhen using the automatically generated clients, you would get\nautocompletion\nfor:\nMethods.\nRequest payloads in the body, query parameters, etc.\nResponse payloads.\nYou would also have\ninline errors\nfor everything.\nAnd whenever you update the backend code, and\nregenerate\nthe frontend, it would have any new\npath operations\navailable as methods, the old ones removed, and any other change would be reflected on the generated code. 🤓\nThis also means that if something changed, it will be\nreflected\non the client code automatically. And if you\nbuild\nthe client, it will error out if you have any\nmismatch\nin the data used.\nSo, you would\ndetect many errors\nvery early in the development cycle instead of having to wait for the errors to show up to your final users in production and then trying to debug where the problem is. ✨\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/about/",
    "title": "About¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nFastAPI\nAbout\nAbout\n¶\nAbout FastAPI, its design, inspiration and more. 🤓\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/templates/",
    "title": "Templates¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nTemplates\nTable of contents\nInstall dependencies\nUsing\nJinja2Templates\nWriting templates\nTemplate Context Values\nTemplate\nurl_for\nArguments\nTemplates and static files\nMore details\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nInstall dependencies\nUsing\nJinja2Templates\nWriting templates\nTemplate Context Values\nTemplate\nurl_for\nArguments\nTemplates and static files\nMore details\nFastAPI\nLearn\nAdvanced User Guide\nTemplates\n¶\nYou can use any template engine you want with\nFastAPI\n.\nA common choice is Jinja2, the same one used by Flask and other tools.\nThere are utilities to configure it easily that you can use directly in your\nFastAPI\napplication (provided by Starlette).\nInstall dependencies\n¶\nMake sure you create a\nvirtual environment\n, activate it, and install\njinja2\n:\n$\npip\ninstall\njinja2\n---> 100%\nUsing\nJinja2Templates\n¶\nImport\nJinja2Templates\n.\nCreate a\ntemplates\nobject that you can reuse later.\nDeclare a\nRequest\nparameter in the\npath operation\nthat will return a template.\nUse the\ntemplates\nyou created to render and return a\nTemplateResponse\n, pass the name of the template, the request object, and a \"context\" dictionary with key-value pairs to be used inside of the Jinja2 template.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\nfrom\nfastapi.responses\nimport\nHTMLResponse\nfrom\nfastapi.staticfiles\nimport\nStaticFiles\nfrom\nfastapi.templating\nimport\nJinja2Templates\napp\n=\nFastAPI\n()\napp\n.\nmount\n(\n\"/static\"\n,\nStaticFiles\n(\ndirectory\n=\n\"static\"\n),\nname\n=\n\"static\"\n)\ntemplates\n=\nJinja2Templates\n(\ndirectory\n=\n\"templates\"\n)\n@app\n.\nget\n(\n\"/items/\n{id}\n\"\n,\nresponse_class\n=\nHTMLResponse\n)\nasync\ndef\nread_item\n(\nrequest\n:\nRequest\n,\nid\n:\nstr\n):\nreturn\ntemplates\n.\nTemplateResponse\n(\nrequest\n=\nrequest\n,\nname\n=\n\"item.html\"\n,\ncontext\n=\n{\n\"id\"\n:\nid\n}\n)\nNote\nBefore FastAPI 0.108.0, Starlette 0.29.0, the\nname\nwas the first parameter.\nAlso, before that, in previous versions, the\nrequest\nobject was passed as part of the key-value pairs in the context for Jinja2.\nTip\nBy declaring\nresponse_class=HTMLResponse\nthe docs UI will be able to know that the response will be HTML.\nTechnical Details\nYou could also use\nfrom starlette.templating import Jinja2Templates\n.\nFastAPI\nprovides the same\nstarlette.templating\nas\nfastapi.templating\njust as a convenience for you, the developer. But most of the available responses come directly from Starlette. The same with\nRequest\nand\nStaticFiles\n.\nWriting templates\n¶\nThen you can write a template at\ntemplates/item.html\nwith, for example:\n<html>\n<head>\n<title>Item Details</title>\n<link href=\"\n{{\nurl_for\n(\n'static'\n,\npath\n=\n'/styles.css'\n)\n}}\n\" rel=\"stylesheet\">\n</head>\n<body>\n<h1><a href=\"\n{{\nurl_for\n(\n'read_item'\n,\nid\n=\nid\n)\n}}\n\">Item ID:\n{{\nid\n}}\n</a></h1>\n</body>\n</html>\nTemplate Context Values\n¶\nIn the HTML that contains:\nItem ID:\n{{\nid\n}}\n...it will show the\nid\ntaken from the \"context\"\ndict\nyou passed:\n{\n\"id\"\n:\nid\n}\nFor example, with an ID of\n42\n, this would render:\nItem ID: 42\nTemplate\nurl_for\nArguments\n¶\nYou can also use\nurl_for()\ninside of the template, it takes as arguments the same arguments that would be used by your\npath operation function\n.\nSo, the section with:\n<a href=\"\n{{\nurl_for\n(\n'read_item'\n,\nid\n=\nid\n)\n}}\n\">\n...will generate a link to the same URL that would be handled by the\npath operation function\nread_item(id=id)\n.\nFor example, with an ID of\n42\n, this would render:\n<\na\nhref\n=\n\"/items/42\"\n>\nTemplates and static files\n¶\nYou can also use\nurl_for()\ninside of the template, and use it, for example, with the\nStaticFiles\nyou mounted with the\nname=\"static\"\n.\n<html>\n<head>\n<title>Item Details</title>\n<link href=\"\n{{\nurl_for\n(\n'static'\n,\npath\n=\n'/styles.css'\n)\n}}\n\" rel=\"stylesheet\">\n</head>\n<body>\n<h1><a href=\"\n{{\nurl_for\n(\n'read_item'\n,\nid\n=\nid\n)\n}}\n\">Item ID:\n{{\nid\n}}\n</a></h1>\n</body>\n</html>\nIn this example, it would link to a CSS file at\nstatic/styles.css\nwith:\nh1\n{\ncolor\n:\ngreen\n;\n}\nAnd because you are using\nStaticFiles\n, that CSS file would be served automatically by your\nFastAPI\napplication at the URL\n/static/styles.css\n.\nMore details\n¶\nFor more details, including how to test templates, check\nStarlette's docs on templates\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/path-params/",
    "title": "Path Parameters¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nPath Parameters\nTable of contents\nPath parameters with types\nData\nconversion\nData validation\nDocumentation\nStandards-based benefits, alternative documentation\nPydantic\nOrder matters\nPredefined values\nCreate an\nEnum\nclass\nDeclare a\npath parameter\nCheck the docs\nWorking with Python\nenumerations\nCompare\nenumeration members\nGet the\nenumeration value\nReturn\nenumeration members\nPath parameters containing paths\nOpenAPI support\nPath convertor\nRecap\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nPath parameters with types\nData\nconversion\nData validation\nDocumentation\nStandards-based benefits, alternative documentation\nPydantic\nOrder matters\nPredefined values\nCreate an\nEnum\nclass\nDeclare a\npath parameter\nCheck the docs\nWorking with Python\nenumerations\nCompare\nenumeration members\nGet the\nenumeration value\nReturn\nenumeration members\nPath parameters containing paths\nOpenAPI support\nPath convertor\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nPath Parameters\n¶\nYou can declare path \"parameters\" or \"variables\" with the same syntax used by Python format strings:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n):\nreturn\n{\n\"item_id\"\n:\nitem_id\n}\nThe value of the path parameter\nitem_id\nwill be passed to your function as the argument\nitem_id\n.\nSo, if you run this example and go to\nhttp://127.0.0.1:8000/items/foo\n, you will see a response of:\n{\n\"item_id\"\n:\n\"foo\"\n}\nPath parameters with types\n¶\nYou can declare the type of a path parameter in the function, using standard Python type annotations:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nint\n):\nreturn\n{\n\"item_id\"\n:\nitem_id\n}\nIn this case,\nitem_id\nis declared to be an\nint\n.\nCheck\nThis will give you editor support inside of your function, with error checks, completion, etc.\nData\nconversion\n¶\nIf you run this example and open your browser at\nhttp://127.0.0.1:8000/items/3\n, you will see a response of:\n{\n\"item_id\"\n:\n3\n}\nCheck\nNotice that the value your function received (and returned) is\n3\n, as a Python\nint\n, not a string\n\"3\"\n.\nSo, with that type declaration,\nFastAPI\ngives you automatic request\n\"parsing\"\n.\nData validation\n¶\nBut if you go to the browser at\nhttp://127.0.0.1:8000/items/foo\n, you will see a nice HTTP error of:\n{\n\"detail\"\n:\n[\n{\n\"type\"\n:\n\"int_parsing\"\n,\n\"loc\"\n:\n[\n\"path\"\n,\n\"item_id\"\n],\n\"msg\"\n:\n\"Input should be a valid integer, unable to parse string as an integer\"\n,\n\"input\"\n:\n\"foo\"\n}\n]\n}\nbecause the path parameter\nitem_id\nhad a value of\n\"foo\"\n, which is not an\nint\n.\nThe same error would appear if you provided a\nfloat\ninstead of an\nint\n, as in:\nhttp://127.0.0.1:8000/items/4.2\nCheck\nSo, with the same Python type declaration,\nFastAPI\ngives you data validation.\nNotice that the error also clearly states exactly the point where the validation didn't pass.\nThis is incredibly helpful while developing and debugging code that interacts with your API.\nDocumentation\n¶\nAnd when you open your browser at\nhttp://127.0.0.1:8000/docs\n, you will see an automatic, interactive, API documentation like:\nCheck\nAgain, just with that same Python type declaration,\nFastAPI\ngives you automatic, interactive documentation (integrating Swagger UI).\nNotice that the path parameter is declared to be an integer.\nStandards-based benefits, alternative documentation\n¶\nAnd because the generated schema is from the\nOpenAPI\nstandard, there are many compatible tools.\nBecause of this,\nFastAPI\nitself provides an alternative API documentation (using ReDoc), which you can access at\nhttp://127.0.0.1:8000/redoc\n:\nThe same way, there are many compatible tools. Including code generation tools for many languages.\nPydantic\n¶\nAll the data validation is performed under the hood by\nPydantic\n, so you get all the benefits from it. And you know you are in good hands.\nYou can use the same type declarations with\nstr\n,\nfloat\n,\nbool\nand many other complex data types.\nSeveral of these are explored in the next chapters of the tutorial.\nOrder matters\n¶\nWhen creating\npath operations\n, you can find situations where you have a fixed path.\nLike\n/users/me\n, let's say that it's to get data about the current user.\nAnd then you can also have a path\n/users/{user_id}\nto get data about a specific user by some user ID.\nBecause\npath operations\nare evaluated in order, you need to make sure that the path for\n/users/me\nis declared before the one for\n/users/{user_id}\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_user_me\n():\nreturn\n{\n\"user_id\"\n:\n\"the current user\"\n}\n@app\n.\nget\n(\n\"/users/\n{user_id}\n\"\n)\nasync\ndef\nread_user\n(\nuser_id\n:\nstr\n):\nreturn\n{\n\"user_id\"\n:\nuser_id\n}\nOtherwise, the path for\n/users/{user_id}\nwould match also for\n/users/me\n, \"thinking\" that it's receiving a parameter\nuser_id\nwith a value of\n\"me\"\n.\nSimilarly, you cannot redefine a path operation:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/users\"\n)\nasync\ndef\nread_users\n():\nreturn\n[\n\"Rick\"\n,\n\"Morty\"\n]\n@app\n.\nget\n(\n\"/users\"\n)\nasync\ndef\nread_users2\n():\nreturn\n[\n\"Bean\"\n,\n\"Elfo\"\n]\nThe first one will always be used since the path matches first.\nPredefined values\n¶\nIf you have a\npath operation\nthat receives a\npath parameter\n, but you want the possible valid\npath parameter\nvalues to be predefined, you can use a standard Python\nEnum\n.\nCreate an\nEnum\nclass\n¶\nImport\nEnum\nand create a sub-class that inherits from\nstr\nand from\nEnum\n.\nBy inheriting from\nstr\nthe API docs will be able to know that the values must be of type\nstring\nand will be able to render correctly.\nThen create class attributes with fixed values, which will be the available valid values:\nPython 3.8+\nfrom\nenum\nimport\nEnum\nfrom\nfastapi\nimport\nFastAPI\nclass\nModelName\n(\nstr\n,\nEnum\n):\nalexnet\n=\n\"alexnet\"\nresnet\n=\n\"resnet\"\nlenet\n=\n\"lenet\"\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/models/\n{model_name}\n\"\n)\nasync\ndef\nget_model\n(\nmodel_name\n:\nModelName\n):\nif\nmodel_name\nis\nModelName\n.\nalexnet\n:\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"Deep Learning FTW!\"\n}\nif\nmodel_name\n.\nvalue\n==\n\"lenet\"\n:\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"LeCNN all the images\"\n}\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"Have some residuals\"\n}\nInfo\nEnumerations (or enums) are available in Python\nsince version 3.4.\nTip\nIf you are wondering, \"AlexNet\", \"ResNet\", and \"LeNet\" are just names of Machine Learning\nmodels\n.\nDeclare a\npath parameter\n¶\nThen create a\npath parameter\nwith a type annotation using the enum class you created (\nModelName\n):\nPython 3.8+\nfrom\nenum\nimport\nEnum\nfrom\nfastapi\nimport\nFastAPI\nclass\nModelName\n(\nstr\n,\nEnum\n):\nalexnet\n=\n\"alexnet\"\nresnet\n=\n\"resnet\"\nlenet\n=\n\"lenet\"\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/models/\n{model_name}\n\"\n)\nasync\ndef\nget_model\n(\nmodel_name\n:\nModelName\n):\nif\nmodel_name\nis\nModelName\n.\nalexnet\n:\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"Deep Learning FTW!\"\n}\nif\nmodel_name\n.\nvalue\n==\n\"lenet\"\n:\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"LeCNN all the images\"\n}\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"Have some residuals\"\n}\nCheck the docs\n¶\nBecause the available values for the\npath parameter\nare predefined, the interactive docs can show them nicely:\nWorking with Python\nenumerations\n¶\nThe value of the\npath parameter\nwill be an\nenumeration member\n.\nCompare\nenumeration members\n¶\nYou can compare it with the\nenumeration member\nin your created enum\nModelName\n:\nPython 3.8+\nfrom\nenum\nimport\nEnum\nfrom\nfastapi\nimport\nFastAPI\nclass\nModelName\n(\nstr\n,\nEnum\n):\nalexnet\n=\n\"alexnet\"\nresnet\n=\n\"resnet\"\nlenet\n=\n\"lenet\"\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/models/\n{model_name}\n\"\n)\nasync\ndef\nget_model\n(\nmodel_name\n:\nModelName\n):\nif\nmodel_name\nis\nModelName\n.\nalexnet\n:\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"Deep Learning FTW!\"\n}\nif\nmodel_name\n.\nvalue\n==\n\"lenet\"\n:\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"LeCNN all the images\"\n}\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"Have some residuals\"\n}\nGet the\nenumeration value\n¶\nYou can get the actual value (a\nstr\nin this case) using\nmodel_name.value\n, or in general,\nyour_enum_member.value\n:\nPython 3.8+\nfrom\nenum\nimport\nEnum\nfrom\nfastapi\nimport\nFastAPI\nclass\nModelName\n(\nstr\n,\nEnum\n):\nalexnet\n=\n\"alexnet\"\nresnet\n=\n\"resnet\"\nlenet\n=\n\"lenet\"\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/models/\n{model_name}\n\"\n)\nasync\ndef\nget_model\n(\nmodel_name\n:\nModelName\n):\nif\nmodel_name\nis\nModelName\n.\nalexnet\n:\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"Deep Learning FTW!\"\n}\nif\nmodel_name\n.\nvalue\n==\n\"lenet\"\n:\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"LeCNN all the images\"\n}\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"Have some residuals\"\n}\nTip\nYou could also access the value\n\"lenet\"\nwith\nModelName.lenet.value\n.\nReturn\nenumeration members\n¶\nYou can return\nenum members\nfrom your\npath operation\n, even nested in a JSON body (e.g. a\ndict\n).\nThey will be converted to their corresponding values (strings in this case) before returning them to the client:\nPython 3.8+\nfrom\nenum\nimport\nEnum\nfrom\nfastapi\nimport\nFastAPI\nclass\nModelName\n(\nstr\n,\nEnum\n):\nalexnet\n=\n\"alexnet\"\nresnet\n=\n\"resnet\"\nlenet\n=\n\"lenet\"\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/models/\n{model_name}\n\"\n)\nasync\ndef\nget_model\n(\nmodel_name\n:\nModelName\n):\nif\nmodel_name\nis\nModelName\n.\nalexnet\n:\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"Deep Learning FTW!\"\n}\nif\nmodel_name\n.\nvalue\n==\n\"lenet\"\n:\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"LeCNN all the images\"\n}\nreturn\n{\n\"model_name\"\n:\nmodel_name\n,\n\"message\"\n:\n\"Have some residuals\"\n}\nIn your client you will get a JSON response like:\n{\n\"model_name\"\n:\n\"alexnet\"\n,\n\"message\"\n:\n\"Deep Learning FTW!\"\n}\nPath parameters containing paths\n¶\nLet's say you have a\npath operation\nwith a path\n/files/{file_path}\n.\nBut you need\nfile_path\nitself to contain a\npath\n, like\nhome/johndoe/myfile.txt\n.\nSo, the URL for that file would be something like:\n/files/home/johndoe/myfile.txt\n.\nOpenAPI support\n¶\nOpenAPI doesn't support a way to declare a\npath parameter\nto contain a\npath\ninside, as that could lead to scenarios that are difficult to test and define.\nNevertheless, you can still do it in\nFastAPI\n, using one of the internal tools from Starlette.\nAnd the docs would still work, although not adding any documentation telling that the parameter should contain a path.\nPath convertor\n¶\nUsing an option directly from Starlette you can declare a\npath parameter\ncontaining a\npath\nusing a URL like:\n/files/{file_path:path}\nIn this case, the name of the parameter is\nfile_path\n, and the last part,\n:path\n, tells it that the parameter should match any\npath\n.\nSo, you can use it with:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/files/{file_path:path}\"\n)\nasync\ndef\nread_file\n(\nfile_path\n:\nstr\n):\nreturn\n{\n\"file_path\"\n:\nfile_path\n}\nTip\nYou might need the parameter to contain\n/home/johndoe/myfile.txt\n, with a leading slash (\n/\n).\nIn that case, the URL would be:\n/files//home/johndoe/myfile.txt\n, with a double slash (\n//\n) between\nfiles\nand\nhome\n.\nRecap\n¶\nWith\nFastAPI\n, by using short, intuitive and standard Python type declarations, you get:\nEditor support: error checks, autocompletion, etc.\nData \"\nparsing\n\"\nData validation\nAPI annotation and automatic documentation\nAnd you only have to declare them once.\nThat's probably the main visible advantage of\nFastAPI\ncompared to alternative frameworks (apart from the raw performance).\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-with-yield/",
    "title": "Dependencies with yield¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nDependencies with yield\nTable of contents\nA database dependency with\nyield\nA dependency with\nyield\nand\ntry\nSub-dependencies with\nyield\nDependencies with\nyield\nand\nHTTPException\nDependencies with\nyield\nand\nexcept\nAlways\nraise\nin Dependencies with\nyield\nand\nexcept\nExecution of dependencies with\nyield\nDependencies with\nyield\n,\nHTTPException\n,\nexcept\nand Background Tasks\nContext Managers\nWhat are \"Context Managers\"\nUsing context managers in dependencies with\nyield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nA database dependency with\nyield\nA dependency with\nyield\nand\ntry\nSub-dependencies with\nyield\nDependencies with\nyield\nand\nHTTPException\nDependencies with\nyield\nand\nexcept\nAlways\nraise\nin Dependencies with\nyield\nand\nexcept\nExecution of dependencies with\nyield\nDependencies with\nyield\n,\nHTTPException\n,\nexcept\nand Background Tasks\nContext Managers\nWhat are \"Context Managers\"\nUsing context managers in dependencies with\nyield\nFastAPI\nLearn\nTutorial - User Guide\nDependencies\nDependencies with yield\n¶\nFastAPI supports dependencies that do some\nextra steps after finishing\n.\nTo do this, use\nyield\ninstead of\nreturn\n, and write the extra steps (code) after.\nTip\nMake sure to use\nyield\none single time per dependency.\nTechnical Details\nAny function that is valid to use with:\n@contextlib.contextmanager\nor\n@contextlib.asynccontextmanager\nwould be valid to use as a\nFastAPI\ndependency.\nIn fact, FastAPI uses those two decorators internally.\nA database dependency with\nyield\n¶\nFor example, you could use this to create a database session and close it after finishing.\nOnly the code prior to and including the\nyield\nstatement is executed before creating a response:\nPython 3.8+\nasync\ndef\nget_db\n():\ndb\n=\nDBSession\n()\ntry\n:\nyield\ndb\nfinally\n:\ndb\n.\nclose\n()\nThe yielded value is what is injected into\npath operations\nand other dependencies:\nPython 3.8+\nasync\ndef\nget_db\n():\ndb\n=\nDBSession\n()\ntry\n:\nyield\ndb\nfinally\n:\ndb\n.\nclose\n()\nThe code following the\nyield\nstatement is executed after the response:\nPython 3.8+\nasync\ndef\nget_db\n():\ndb\n=\nDBSession\n()\ntry\n:\nyield\ndb\nfinally\n:\ndb\n.\nclose\n()\nTip\nYou can use\nasync\nor regular functions.\nFastAPI\nwill do the right thing with each, the same as with normal dependencies.\nA dependency with\nyield\nand\ntry\n¶\nIf you use a\ntry\nblock in a dependency with\nyield\n, you'll receive any exception that was thrown when using the dependency.\nFor example, if some code at some point in the middle, in another dependency or in a\npath operation\n, made a database transaction \"rollback\" or created any other exception, you would receive the exception in your dependency.\nSo, you can look for that specific exception inside the dependency with\nexcept SomeException\n.\nIn the same way, you can use\nfinally\nto make sure the exit steps are executed, no matter if there was an exception or not.\nPython 3.8+\nasync\ndef\nget_db\n():\ndb\n=\nDBSession\n()\ntry\n:\nyield\ndb\nfinally\n:\ndb\n.\nclose\n()\nSub-dependencies with\nyield\n¶\nYou can have sub-dependencies and \"trees\" of sub-dependencies of any size and shape, and any or all of them can use\nyield\n.\nFastAPI\nwill make sure that the \"exit code\" in each dependency with\nyield\nis run in the correct order.\nFor example,\ndependency_c\ncan have a dependency on\ndependency_b\n, and\ndependency_b\non\ndependency_a\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\nasync\ndef\ndependency_a\n():\ndep_a\n=\ngenerate_dep_a\n()\ntry\n:\nyield\ndep_a\nfinally\n:\ndep_a\n.\nclose\n()\nasync\ndef\ndependency_b\n(\ndep_a\n:\nAnnotated\n[\nDepA\n,\nDepends\n(\ndependency_a\n)]):\ndep_b\n=\ngenerate_dep_b\n()\ntry\n:\nyield\ndep_b\nfinally\n:\ndep_b\n.\nclose\n(\ndep_a\n)\nasync\ndef\ndependency_c\n(\ndep_b\n:\nAnnotated\n[\nDepB\n,\nDepends\n(\ndependency_b\n)]):\ndep_c\n=\ngenerate_dep_c\n()\ntry\n:\nyield\ndep_c\nfinally\n:\ndep_c\n.\nclose\n(\ndep_b\n)\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\nfrom\ntyping_extensions\nimport\nAnnotated\nasync\ndef\ndependency_a\n():\ndep_a\n=\ngenerate_dep_a\n()\ntry\n:\nyield\ndep_a\nfinally\n:\ndep_a\n.\nclose\n()\nasync\ndef\ndependency_b\n(\ndep_a\n:\nAnnotated\n[\nDepA\n,\nDepends\n(\ndependency_a\n)]):\ndep_b\n=\ngenerate_dep_b\n()\ntry\n:\nyield\ndep_b\nfinally\n:\ndep_b\n.\nclose\n(\ndep_a\n)\nasync\ndef\ndependency_c\n(\ndep_b\n:\nAnnotated\n[\nDepB\n,\nDepends\n(\ndependency_b\n)]):\ndep_c\n=\ngenerate_dep_c\n()\ntry\n:\nyield\ndep_c\nfinally\n:\ndep_c\n.\nclose\n(\ndep_b\n)\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\nasync\ndef\ndependency_a\n():\ndep_a\n=\ngenerate_dep_a\n()\ntry\n:\nyield\ndep_a\nfinally\n:\ndep_a\n.\nclose\n()\nasync\ndef\ndependency_b\n(\ndep_a\n=\nDepends\n(\ndependency_a\n)):\ndep_b\n=\ngenerate_dep_b\n()\ntry\n:\nyield\ndep_b\nfinally\n:\ndep_b\n.\nclose\n(\ndep_a\n)\nasync\ndef\ndependency_c\n(\ndep_b\n=\nDepends\n(\ndependency_b\n)):\ndep_c\n=\ngenerate_dep_c\n()\ntry\n:\nyield\ndep_c\nfinally\n:\ndep_c\n.\nclose\n(\ndep_b\n)\nAnd all of them can use\nyield\n.\nIn this case\ndependency_c\n, to execute its exit code, needs the value from\ndependency_b\n(here named\ndep_b\n) to still be available.\nAnd, in turn,\ndependency_b\nneeds the value from\ndependency_a\n(here named\ndep_a\n) to be available for its exit code.\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\nasync\ndef\ndependency_a\n():\ndep_a\n=\ngenerate_dep_a\n()\ntry\n:\nyield\ndep_a\nfinally\n:\ndep_a\n.\nclose\n()\nasync\ndef\ndependency_b\n(\ndep_a\n:\nAnnotated\n[\nDepA\n,\nDepends\n(\ndependency_a\n)]):\ndep_b\n=\ngenerate_dep_b\n()\ntry\n:\nyield\ndep_b\nfinally\n:\ndep_b\n.\nclose\n(\ndep_a\n)\nasync\ndef\ndependency_c\n(\ndep_b\n:\nAnnotated\n[\nDepB\n,\nDepends\n(\ndependency_b\n)]):\ndep_c\n=\ngenerate_dep_c\n()\ntry\n:\nyield\ndep_c\nfinally\n:\ndep_c\n.\nclose\n(\ndep_b\n)\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\nfrom\ntyping_extensions\nimport\nAnnotated\nasync\ndef\ndependency_a\n():\ndep_a\n=\ngenerate_dep_a\n()\ntry\n:\nyield\ndep_a\nfinally\n:\ndep_a\n.\nclose\n()\nasync\ndef\ndependency_b\n(\ndep_a\n:\nAnnotated\n[\nDepA\n,\nDepends\n(\ndependency_a\n)]):\ndep_b\n=\ngenerate_dep_b\n()\ntry\n:\nyield\ndep_b\nfinally\n:\ndep_b\n.\nclose\n(\ndep_a\n)\nasync\ndef\ndependency_c\n(\ndep_b\n:\nAnnotated\n[\nDepB\n,\nDepends\n(\ndependency_b\n)]):\ndep_c\n=\ngenerate_dep_c\n()\ntry\n:\nyield\ndep_c\nfinally\n:\ndep_c\n.\nclose\n(\ndep_b\n)\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\nasync\ndef\ndependency_a\n():\ndep_a\n=\ngenerate_dep_a\n()\ntry\n:\nyield\ndep_a\nfinally\n:\ndep_a\n.\nclose\n()\nasync\ndef\ndependency_b\n(\ndep_a\n=\nDepends\n(\ndependency_a\n)):\ndep_b\n=\ngenerate_dep_b\n()\ntry\n:\nyield\ndep_b\nfinally\n:\ndep_b\n.\nclose\n(\ndep_a\n)\nasync\ndef\ndependency_c\n(\ndep_b\n=\nDepends\n(\ndependency_b\n)):\ndep_c\n=\ngenerate_dep_c\n()\ntry\n:\nyield\ndep_c\nfinally\n:\ndep_c\n.\nclose\n(\ndep_b\n)\nThe same way, you could have some dependencies with\nyield\nand some other dependencies with\nreturn\n, and have some of those depend on some of the others.\nAnd you could have a single dependency that requires several other dependencies with\nyield\n, etc.\nYou can have any combinations of dependencies that you want.\nFastAPI\nwill make sure everything is run in the correct order.\nTechnical Details\nThis works thanks to Python's\nContext Managers\n.\nFastAPI\nuses them internally to achieve this.\nDependencies with\nyield\nand\nHTTPException\n¶\nYou saw that you can use dependencies with\nyield\nand have\ntry\nblocks that try to execute some code and then run some exit code after\nfinally\n.\nYou can also use\nexcept\nto catch the exception that was raised and do something with it.\nFor example, you can raise a different exception, like\nHTTPException\n.\nTip\nThis is a somewhat advanced technique, and in most of the cases you won't really need it, as you can raise exceptions (including\nHTTPException\n) from inside of the rest of your application code, for example, in the\npath operation function\n.\nBut it's there for you if you need it. 🤓\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"plumbus\"\n:\n{\n\"description\"\n:\n\"Freshly pickled plumbus\"\n,\n\"owner\"\n:\n\"Morty\"\n},\n\"portal-gun\"\n:\n{\n\"description\"\n:\n\"Gun to create portals\"\n,\n\"owner\"\n:\n\"Rick\"\n},\n}\nclass\nOwnerError\n(\nException\n):\npass\ndef\nget_username\n():\ntry\n:\nyield\n\"Rick\"\nexcept\nOwnerError\nas\ne\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\nf\n\"Owner error:\n{\ne\n}\n\"\n)\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nget_item\n(\nitem_id\n:\nstr\n,\nusername\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_username\n)]):\nif\nitem_id\nnot\nin\ndata\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nitem\n=\ndata\n[\nitem_id\n]\nif\nitem\n[\n\"owner\"\n]\n!=\nusername\n:\nraise\nOwnerError\n(\nusername\n)\nreturn\nitem\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"plumbus\"\n:\n{\n\"description\"\n:\n\"Freshly pickled plumbus\"\n,\n\"owner\"\n:\n\"Morty\"\n},\n\"portal-gun\"\n:\n{\n\"description\"\n:\n\"Gun to create portals\"\n,\n\"owner\"\n:\n\"Rick\"\n},\n}\nclass\nOwnerError\n(\nException\n):\npass\ndef\nget_username\n():\ntry\n:\nyield\n\"Rick\"\nexcept\nOwnerError\nas\ne\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\nf\n\"Owner error:\n{\ne\n}\n\"\n)\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nget_item\n(\nitem_id\n:\nstr\n,\nusername\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_username\n)]):\nif\nitem_id\nnot\nin\ndata\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nitem\n=\ndata\n[\nitem_id\n]\nif\nitem\n[\n\"owner\"\n]\n!=\nusername\n:\nraise\nOwnerError\n(\nusername\n)\nreturn\nitem\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"plumbus\"\n:\n{\n\"description\"\n:\n\"Freshly pickled plumbus\"\n,\n\"owner\"\n:\n\"Morty\"\n},\n\"portal-gun\"\n:\n{\n\"description\"\n:\n\"Gun to create portals\"\n,\n\"owner\"\n:\n\"Rick\"\n},\n}\nclass\nOwnerError\n(\nException\n):\npass\ndef\nget_username\n():\ntry\n:\nyield\n\"Rick\"\nexcept\nOwnerError\nas\ne\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\nf\n\"Owner error:\n{\ne\n}\n\"\n)\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nget_item\n(\nitem_id\n:\nstr\n,\nusername\n:\nstr\n=\nDepends\n(\nget_username\n)):\nif\nitem_id\nnot\nin\ndata\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nitem\n=\ndata\n[\nitem_id\n]\nif\nitem\n[\n\"owner\"\n]\n!=\nusername\n:\nraise\nOwnerError\n(\nusername\n)\nreturn\nitem\nIf you want to catch exceptions and create a custom response based on that, create a\nCustom Exception Handler\n.\nDependencies with\nyield\nand\nexcept\n¶\nIf you catch an exception using\nexcept\nin a dependency with\nyield\nand you don't raise it again (or raise a new exception), FastAPI won't be able to notice there was an exception, the same way that would happen with regular Python:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\napp\n=\nFastAPI\n()\nclass\nInternalError\n(\nException\n):\npass\ndef\nget_username\n():\ntry\n:\nyield\n\"Rick\"\nexcept\nInternalError\n:\nprint\n(\n\"Oops, we didn't raise again, Britney 😱\"\n)\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nget_item\n(\nitem_id\n:\nstr\n,\nusername\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_username\n)]):\nif\nitem_id\n==\n\"portal-gun\"\n:\nraise\nInternalError\n(\nf\n\"The portal gun is too dangerous to be owned by\n{\nusername\n}\n\"\n)\nif\nitem_id\n!=\n\"plumbus\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found, there's only a plumbus here\"\n)\nreturn\nitem_id\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nInternalError\n(\nException\n):\npass\ndef\nget_username\n():\ntry\n:\nyield\n\"Rick\"\nexcept\nInternalError\n:\nprint\n(\n\"Oops, we didn't raise again, Britney 😱\"\n)\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nget_item\n(\nitem_id\n:\nstr\n,\nusername\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_username\n)]):\nif\nitem_id\n==\n\"portal-gun\"\n:\nraise\nInternalError\n(\nf\n\"The portal gun is too dangerous to be owned by\n{\nusername\n}\n\"\n)\nif\nitem_id\n!=\n\"plumbus\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found, there's only a plumbus here\"\n)\nreturn\nitem_id\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\napp\n=\nFastAPI\n()\nclass\nInternalError\n(\nException\n):\npass\ndef\nget_username\n():\ntry\n:\nyield\n\"Rick\"\nexcept\nInternalError\n:\nprint\n(\n\"Oops, we didn't raise again, Britney 😱\"\n)\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nget_item\n(\nitem_id\n:\nstr\n,\nusername\n:\nstr\n=\nDepends\n(\nget_username\n)):\nif\nitem_id\n==\n\"portal-gun\"\n:\nraise\nInternalError\n(\nf\n\"The portal gun is too dangerous to be owned by\n{\nusername\n}\n\"\n)\nif\nitem_id\n!=\n\"plumbus\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found, there's only a plumbus here\"\n)\nreturn\nitem_id\nIn this case, the client will see an\nHTTP 500 Internal Server Error\nresponse as it should, given that we are not raising an\nHTTPException\nor similar, but the server will\nnot have any logs\nor any other indication of what was the error. 😱\nAlways\nraise\nin Dependencies with\nyield\nand\nexcept\n¶\nIf you catch an exception in a dependency with\nyield\n, unless you are raising another\nHTTPException\nor similar,\nyou should re-raise the original exception\n.\nYou can re-raise the same exception using\nraise\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\napp\n=\nFastAPI\n()\nclass\nInternalError\n(\nException\n):\npass\ndef\nget_username\n():\ntry\n:\nyield\n\"Rick\"\nexcept\nInternalError\n:\nprint\n(\n\"We don't swallow the internal error here, we raise again 😎\"\n)\nraise\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nget_item\n(\nitem_id\n:\nstr\n,\nusername\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_username\n)]):\nif\nitem_id\n==\n\"portal-gun\"\n:\nraise\nInternalError\n(\nf\n\"The portal gun is too dangerous to be owned by\n{\nusername\n}\n\"\n)\nif\nitem_id\n!=\n\"plumbus\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found, there's only a plumbus here\"\n)\nreturn\nitem_id\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nInternalError\n(\nException\n):\npass\ndef\nget_username\n():\ntry\n:\nyield\n\"Rick\"\nexcept\nInternalError\n:\nprint\n(\n\"We don't swallow the internal error here, we raise again 😎\"\n)\nraise\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nget_item\n(\nitem_id\n:\nstr\n,\nusername\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_username\n)]):\nif\nitem_id\n==\n\"portal-gun\"\n:\nraise\nInternalError\n(\nf\n\"The portal gun is too dangerous to be owned by\n{\nusername\n}\n\"\n)\nif\nitem_id\n!=\n\"plumbus\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found, there's only a plumbus here\"\n)\nreturn\nitem_id\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\napp\n=\nFastAPI\n()\nclass\nInternalError\n(\nException\n):\npass\ndef\nget_username\n():\ntry\n:\nyield\n\"Rick\"\nexcept\nInternalError\n:\nprint\n(\n\"We don't swallow the internal error here, we raise again 😎\"\n)\nraise\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nget_item\n(\nitem_id\n:\nstr\n,\nusername\n:\nstr\n=\nDepends\n(\nget_username\n)):\nif\nitem_id\n==\n\"portal-gun\"\n:\nraise\nInternalError\n(\nf\n\"The portal gun is too dangerous to be owned by\n{\nusername\n}\n\"\n)\nif\nitem_id\n!=\n\"plumbus\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found, there's only a plumbus here\"\n)\nreturn\nitem_id\nNow the client will get the same\nHTTP 500 Internal Server Error\nresponse, but the server will have our custom\nInternalError\nin the logs. 😎\nExecution of dependencies with\nyield\n¶\nThe sequence of execution is more or less like this diagram. Time flows from top to bottom. And each column is one of the parts interacting or executing code.\nsequenceDiagram\n\nparticipant client as Client\nparticipant handler as Exception handler\nparticipant dep as Dep with yield\nparticipant operation as Path Operation\nparticipant tasks as Background tasks\n\n    Note over client,operation: Can raise exceptions, including HTTPException\n    client ->> dep: Start request\n    Note over dep: Run code up to yield\n    opt raise Exception\n        dep -->> handler: Raise Exception\n        handler -->> client: HTTP error response\n    end\n    dep ->> operation: Run dependency, e.g. DB session\n    opt raise\n        operation -->> dep: Raise Exception (e.g. HTTPException)\n        opt handle\n            dep -->> dep: Can catch exception, raise a new HTTPException, raise other exception\n        end\n        handler -->> client: HTTP error response\n    end\n\n    operation ->> client: Return response to client\n    Note over client,operation: Response is already sent, can't change it anymore\n    opt Tasks\n        operation -->> tasks: Send background tasks\n    end\n    opt Raise other exception\n        tasks -->> tasks: Handle exceptions in the background task code\n    end\nInfo\nOnly\none response\nwill be sent to the client. It might be one of the error responses or it will be the response from the\npath operation\n.\nAfter one of those responses is sent, no other response can be sent.\nTip\nIf you raise any exception in the code from the\npath operation function\n, it will be passed to the dependencies with yield, including\nHTTPException\n. In most cases you will want to re-raise that same exception or a new one from the dependency with\nyield\nto make sure it's properly handled.\nDependencies with\nyield\n,\nHTTPException\n,\nexcept\nand Background Tasks\n¶\nDependencies with\nyield\nhave evolved over time to cover different use cases and fix some issues.\nIf you want to see what has changed in different versions of FastAPI, you can read more about it in the advanced guide, in\nAdvanced Dependencies - Dependencies with\nyield\n,\nHTTPException\n,\nexcept\nand Background Tasks\n.\nContext Managers\n¶\nWhat are \"Context Managers\"\n¶\n\"Context Managers\" are any of those Python objects that you can use in a\nwith\nstatement.\nFor example,\nyou can use\nwith\nto read a file\n:\nwith\nopen\n(\n\"./somefile.txt\"\n)\nas\nf\n:\ncontents\n=\nf\n.\nread\n()\nprint\n(\ncontents\n)\nUnderneath, the\nopen(\"./somefile.txt\")\ncreates an object that is called a \"Context Manager\".\nWhen the\nwith\nblock finishes, it makes sure to close the file, even if there were exceptions.\nWhen you create a dependency with\nyield\n,\nFastAPI\nwill internally create a context manager for it, and combine it with some other related tools.\nUsing context managers in dependencies with\nyield\n¶\nWarning\nThis is, more or less, an \"advanced\" idea.\nIf you are just starting with\nFastAPI\nyou might want to skip it for now.\nIn Python, you can create Context Managers by\ncreating a class with two methods:\n__enter__()\nand\n__exit__()\n.\nYou can also use them inside of\nFastAPI\ndependencies with\nyield\nby using\nwith\nor\nasync with\nstatements inside of the dependency function:\nPython 3.8+\nclass\nMySuperContextManager\n:\ndef\n__init__\n(\nself\n):\nself\n.\ndb\n=\nDBSession\n()\ndef\n__enter__\n(\nself\n):\nreturn\nself\n.\ndb\ndef\n__exit__\n(\nself\n,\nexc_type\n,\nexc_value\n,\ntraceback\n):\nself\n.\ndb\n.\nclose\n()\nasync\ndef\nget_db\n():\nwith\nMySuperContextManager\n()\nas\ndb\n:\nyield\ndb\nTip\nAnother way to create a context manager is with:\n@contextlib.contextmanager\nor\n@contextlib.asynccontextmanager\nusing them to decorate a function with a single\nyield\n.\nThat's what\nFastAPI\nuses internally for dependencies with\nyield\n.\nBut you don't have to use the decorators for FastAPI dependencies (and you shouldn't).\nFastAPI will do it for you internally.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/request-forms/",
    "title": "Form Data¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Data\nTable of contents\nImport\nForm\nDefine\nForm\nparameters\nAbout \"Form Fields\"\nRecap\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nImport\nForm\nDefine\nForm\nparameters\nAbout \"Form Fields\"\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nForm Data\n¶\nWhen you need to receive form fields instead of JSON, you can use\nForm\n.\nInfo\nTo use forms, first install\npython-multipart\n.\nMake sure you create a\nvirtual environment\n, activate it, and then install it, for example:\n$\npip\ninstall\npython-multipart\nImport\nForm\n¶\nImport\nForm\nfrom\nfastapi\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\nusername\n:\nAnnotated\n[\nstr\n,\nForm\n()],\npassword\n:\nAnnotated\n[\nstr\n,\nForm\n()]):\nreturn\n{\n\"username\"\n:\nusername\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\nusername\n:\nAnnotated\n[\nstr\n,\nForm\n()],\npassword\n:\nAnnotated\n[\nstr\n,\nForm\n()]):\nreturn\n{\n\"username\"\n:\nusername\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\nusername\n:\nstr\n=\nForm\n(),\npassword\n:\nstr\n=\nForm\n()):\nreturn\n{\n\"username\"\n:\nusername\n}\nDefine\nForm\nparameters\n¶\nCreate form parameters the same way you would for\nBody\nor\nQuery\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\nusername\n:\nAnnotated\n[\nstr\n,\nForm\n()],\npassword\n:\nAnnotated\n[\nstr\n,\nForm\n()]):\nreturn\n{\n\"username\"\n:\nusername\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\nusername\n:\nAnnotated\n[\nstr\n,\nForm\n()],\npassword\n:\nAnnotated\n[\nstr\n,\nForm\n()]):\nreturn\n{\n\"username\"\n:\nusername\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\nusername\n:\nstr\n=\nForm\n(),\npassword\n:\nstr\n=\nForm\n()):\nreturn\n{\n\"username\"\n:\nusername\n}\nFor example, in one of the ways the OAuth2 specification can be used (called \"password flow\") it is required to send a\nusername\nand\npassword\nas form fields.\nThe\nspec\nrequires the fields to be exactly named\nusername\nand\npassword\n, and to be sent as form fields, not JSON.\nWith\nForm\nyou can declare the same configurations as with\nBody\n(and\nQuery\n,\nPath\n,\nCookie\n), including validation, examples, an alias (e.g.\nuser-name\ninstead of\nusername\n), etc.\nInfo\nForm\nis a class that inherits directly from\nBody\n.\nTip\nTo declare form bodies, you need to use\nForm\nexplicitly, because without it the parameters would be interpreted as query parameters or body (JSON) parameters.\nAbout \"Form Fields\"\n¶\nThe way HTML forms (\n<form></form>\n) sends the data to the server normally uses a \"special\" encoding for that data, it's different from JSON.\nFastAPI\nwill make sure to read that data from the right place instead of JSON.\nTechnical Details\nData from forms is normally encoded using the \"media type\"\napplication/x-www-form-urlencoded\n.\nBut when the form includes files, it is encoded as\nmultipart/form-data\n. You'll read about handling files in the next chapter.\nIf you want to read more about these encodings and form fields, head to the\nMDN\nweb docs for\nPOST\n.\nWarning\nYou can declare multiple\nForm\nparameters in a\npath operation\n, but you can't also declare\nBody\nfields that you expect to receive as JSON, as the request will have the body encoded using\napplication/x-www-form-urlencoded\ninstead of\napplication/json\n.\nThis is not a limitation of\nFastAPI\n, it's part of the HTTP protocol.\nRecap\n¶\nUse\nForm\nto declare form data input parameters.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/staticfiles/",
    "title": "Static Files -StaticFiles¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nStatic Files -\nStaticFiles\nTable of contents\nStaticFiles\ndirectory\npackages\nall_directories\nhtml\nconfig_checked\nfollow_symlink\nget_directories\nget_path\nget_response\nlookup_path\nfile_response\ncheck_config\nis_not_modified\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nStaticFiles\ndirectory\npackages\nall_directories\nhtml\nconfig_checked\nfollow_symlink\nget_directories\nget_path\nget_response\nlookup_path\nfile_response\ncheck_config\nis_not_modified\nFastAPI\nReference\nStatic Files -\nStaticFiles\n¶\nYou can use the\nStaticFiles\nclass to serve static files, like JavaScript, CSS, images, etc.\nRead more about it in the\nFastAPI docs for Static Files\n.\nYou can import it directly from\nfastapi.staticfiles\n:\nfrom\nfastapi.staticfiles\nimport\nStaticFiles\nfastapi.staticfiles.StaticFiles\n¶\nStaticFiles\n(\n*\n,\ndirectory\n=\nNone\n,\npackages\n=\nNone\n,\nhtml\n=\nFalse\n,\ncheck_dir\n=\nTrue\n,\nfollow_symlink\n=\nFalse\n)\nSource code in\nstarlette/staticfiles.py\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\ndef\n__init__\n(\nself\n,\n*\n,\ndirectory\n:\nPathLike\n|\nNone\n=\nNone\n,\npackages\n:\nlist\n[\nstr\n|\ntuple\n[\nstr\n,\nstr\n]]\n|\nNone\n=\nNone\n,\nhtml\n:\nbool\n=\nFalse\n,\ncheck_dir\n:\nbool\n=\nTrue\n,\nfollow_symlink\n:\nbool\n=\nFalse\n,\n)\n->\nNone\n:\nself\n.\ndirectory\n=\ndirectory\nself\n.\npackages\n=\npackages\nself\n.\nall_directories\n=\nself\n.\nget_directories\n(\ndirectory\n,\npackages\n)\nself\n.\nhtml\n=\nhtml\nself\n.\nconfig_checked\n=\nFalse\nself\n.\nfollow_symlink\n=\nfollow_symlink\nif\ncheck_dir\nand\ndirectory\nis\nnot\nNone\nand\nnot\nos\n.\npath\n.\nisdir\n(\ndirectory\n):\nraise\nRuntimeError\n(\nf\n\"Directory '\n{\ndirectory\n}\n' does not exist\"\n)\ndirectory\ninstance-attribute\n¶\ndirectory\n=\ndirectory\npackages\ninstance-attribute\n¶\npackages\n=\npackages\nall_directories\ninstance-attribute\n¶\nall_directories\n=\nget_directories\n(\ndirectory\n,\npackages\n)\nhtml\ninstance-attribute\n¶\nhtml\n=\nhtml\nconfig_checked\ninstance-attribute\n¶\nconfig_checked\n=\nFalse\nfollow_symlink\ninstance-attribute\n¶\nfollow_symlink\n=\nfollow_symlink\nget_directories\n¶\nget_directories\n(\ndirectory\n=\nNone\n,\npackages\n=\nNone\n)\nGiven\ndirectory\nand\npackages\narguments, return a list of all the\ndirectories that should be used for serving static files from.\nSource code in\nstarlette/staticfiles.py\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\ndef\nget_directories\n(\nself\n,\ndirectory\n:\nPathLike\n|\nNone\n=\nNone\n,\npackages\n:\nlist\n[\nstr\n|\ntuple\n[\nstr\n,\nstr\n]]\n|\nNone\n=\nNone\n,\n)\n->\nlist\n[\nPathLike\n]:\n\"\"\"\nGiven `directory` and `packages` arguments, return a list of all the\ndirectories that should be used for serving static files from.\n\"\"\"\ndirectories\n=\n[]\nif\ndirectory\nis\nnot\nNone\n:\ndirectories\n.\nappend\n(\ndirectory\n)\nfor\npackage\nin\npackages\nor\n[]:\nif\nisinstance\n(\npackage\n,\ntuple\n):\npackage\n,\nstatics_dir\n=\npackage\nelse\n:\nstatics_dir\n=\n\"statics\"\nspec\n=\nimportlib\n.\nutil\n.\nfind_spec\n(\npackage\n)\nassert\nspec\nis\nnot\nNone\n,\nf\n\"Package\n{\npackage\n!r}\ncould not be found.\"\nassert\nspec\n.\norigin\nis\nnot\nNone\n,\nf\n\"Package\n{\npackage\n!r}\ncould not be found.\"\npackage_directory\n=\nos\n.\npath\n.\nnormpath\n(\nos\n.\npath\n.\njoin\n(\nspec\n.\norigin\n,\n\"..\"\n,\nstatics_dir\n))\nassert\nos\n.\npath\n.\nisdir\n(\npackage_directory\n),\n(\nf\n\"Directory '\n{\nstatics_dir\n!r}\n' in package\n{\npackage\n!r}\ncould not be found.\"\n)\ndirectories\n.\nappend\n(\npackage_directory\n)\nreturn\ndirectories\nget_path\n¶\nget_path\n(\nscope\n)\nGiven the ASGI scope, return the\npath\nstring to serve up,\nwith OS specific path separators, and any '..', '.' components removed.\nSource code in\nstarlette/staticfiles.py\n101\n102\n103\n104\n105\n106\n107\ndef\nget_path\n(\nself\n,\nscope\n:\nScope\n)\n->\nstr\n:\n\"\"\"\nGiven the ASGI scope, return the `path` string to serve up,\nwith OS specific path separators, and any '..', '.' components removed.\n\"\"\"\nroute_path\n=\nget_route_path\n(\nscope\n)\nreturn\nos\n.\npath\n.\nnormpath\n(\nos\n.\npath\n.\njoin\n(\n*\nroute_path\n.\nsplit\n(\n\"/\"\n)))\nget_response\nasync\n¶\nget_response\n(\npath\n,\nscope\n)\nReturns an HTTP response, given the incoming path, method and request headers.\nSource code in\nstarlette/staticfiles.py\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\nasync\ndef\nget_response\n(\nself\n,\npath\n:\nstr\n,\nscope\n:\nScope\n)\n->\nResponse\n:\n\"\"\"\nReturns an HTTP response, given the incoming path, method and request headers.\n\"\"\"\nif\nscope\n[\n\"method\"\n]\nnot\nin\n(\n\"GET\"\n,\n\"HEAD\"\n):\nraise\nHTTPException\n(\nstatus_code\n=\n405\n)\ntry\n:\nfull_path\n,\nstat_result\n=\nawait\nanyio\n.\nto_thread\n.\nrun_sync\n(\nself\n.\nlookup_path\n,\npath\n)\nexcept\nPermissionError\n:\nraise\nHTTPException\n(\nstatus_code\n=\n401\n)\nexcept\nOSError\nas\nexc\n:\n# Filename is too long, so it can't be a valid static file.\nif\nexc\n.\nerrno\n==\nerrno\n.\nENAMETOOLONG\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n)\nraise\nexc\nif\nstat_result\nand\nstat\n.\nS_ISREG\n(\nstat_result\n.\nst_mode\n):\n# We have a static file to serve.\nreturn\nself\n.\nfile_response\n(\nfull_path\n,\nstat_result\n,\nscope\n)\nelif\nstat_result\nand\nstat\n.\nS_ISDIR\n(\nstat_result\n.\nst_mode\n)\nand\nself\n.\nhtml\n:\n# We're in HTML mode, and have got a directory URL.\n# Check if we have 'index.html' file to serve.\nindex_path\n=\nos\n.\npath\n.\njoin\n(\npath\n,\n\"index.html\"\n)\nfull_path\n,\nstat_result\n=\nawait\nanyio\n.\nto_thread\n.\nrun_sync\n(\nself\n.\nlookup_path\n,\nindex_path\n)\nif\nstat_result\nis\nnot\nNone\nand\nstat\n.\nS_ISREG\n(\nstat_result\n.\nst_mode\n):\nif\nnot\nscope\n[\n\"path\"\n]\n.\nendswith\n(\n\"/\"\n):\n# Directory URLs should redirect to always end in \"/\".\nurl\n=\nURL\n(\nscope\n=\nscope\n)\nurl\n=\nurl\n.\nreplace\n(\npath\n=\nurl\n.\npath\n+\n\"/\"\n)\nreturn\nRedirectResponse\n(\nurl\n=\nurl\n)\nreturn\nself\n.\nfile_response\n(\nfull_path\n,\nstat_result\n,\nscope\n)\nif\nself\n.\nhtml\n:\n# Check for '404.html' if we're in HTML mode.\nfull_path\n,\nstat_result\n=\nawait\nanyio\n.\nto_thread\n.\nrun_sync\n(\nself\n.\nlookup_path\n,\n\"404.html\"\n)\nif\nstat_result\nand\nstat\n.\nS_ISREG\n(\nstat_result\n.\nst_mode\n):\nreturn\nFileResponse\n(\nfull_path\n,\nstat_result\n=\nstat_result\n,\nstatus_code\n=\n404\n)\nraise\nHTTPException\n(\nstatus_code\n=\n404\n)\nlookup_path\n¶\nlookup_path\n(\npath\n)\nSource code in\nstarlette/staticfiles.py\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\ndef\nlookup_path\n(\nself\n,\npath\n:\nstr\n)\n->\ntuple\n[\nstr\n,\nos\n.\nstat_result\n|\nNone\n]:\nfor\ndirectory\nin\nself\n.\nall_directories\n:\njoined_path\n=\nos\n.\npath\n.\njoin\n(\ndirectory\n,\npath\n)\nif\nself\n.\nfollow_symlink\n:\nfull_path\n=\nos\n.\npath\n.\nabspath\n(\njoined_path\n)\ndirectory\n=\nos\n.\npath\n.\nabspath\n(\ndirectory\n)\nelse\n:\nfull_path\n=\nos\n.\npath\n.\nrealpath\n(\njoined_path\n)\ndirectory\n=\nos\n.\npath\n.\nrealpath\n(\ndirectory\n)\nif\nos\n.\npath\n.\ncommonpath\n([\nfull_path\n,\ndirectory\n])\n!=\nstr\n(\ndirectory\n):\n# Don't allow misbehaving clients to break out of the static files directory.\ncontinue\ntry\n:\nreturn\nfull_path\n,\nos\n.\nstat\n(\nfull_path\n)\nexcept\n(\nFileNotFoundError\n,\nNotADirectoryError\n):\ncontinue\nreturn\n\"\"\n,\nNone\nfile_response\n¶\nfile_response\n(\nfull_path\n,\nstat_result\n,\nscope\n,\nstatus_code\n=\n200\n)\nSource code in\nstarlette/staticfiles.py\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\ndef\nfile_response\n(\nself\n,\nfull_path\n:\nPathLike\n,\nstat_result\n:\nos\n.\nstat_result\n,\nscope\n:\nScope\n,\nstatus_code\n:\nint\n=\n200\n,\n)\n->\nResponse\n:\nrequest_headers\n=\nHeaders\n(\nscope\n=\nscope\n)\nresponse\n=\nFileResponse\n(\nfull_path\n,\nstatus_code\n=\nstatus_code\n,\nstat_result\n=\nstat_result\n)\nif\nself\n.\nis_not_modified\n(\nresponse\n.\nheaders\n,\nrequest_headers\n):\nreturn\nNotModifiedResponse\n(\nresponse\n.\nheaders\n)\nreturn\nresponse\ncheck_config\nasync\n¶\ncheck_config\n()\nPerform a one-off configuration check that StaticFiles is actually\npointed at a directory, so that we can raise loud errors rather than\njust returning 404 responses.\nSource code in\nstarlette/staticfiles.py\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\nasync\ndef\ncheck_config\n(\nself\n)\n->\nNone\n:\n\"\"\"\nPerform a one-off configuration check that StaticFiles is actually\npointed at a directory, so that we can raise loud errors rather than\njust returning 404 responses.\n\"\"\"\nif\nself\n.\ndirectory\nis\nNone\n:\nreturn\ntry\n:\nstat_result\n=\nawait\nanyio\n.\nto_thread\n.\nrun_sync\n(\nos\n.\nstat\n,\nself\n.\ndirectory\n)\nexcept\nFileNotFoundError\n:\nraise\nRuntimeError\n(\nf\n\"StaticFiles directory '\n{\nself\n.\ndirectory\n}\n' does not exist.\"\n)\nif\nnot\n(\nstat\n.\nS_ISDIR\n(\nstat_result\n.\nst_mode\n)\nor\nstat\n.\nS_ISLNK\n(\nstat_result\n.\nst_mode\n)):\nraise\nRuntimeError\n(\nf\n\"StaticFiles path '\n{\nself\n.\ndirectory\n}\n' is not a directory.\"\n)\nis_not_modified\n¶\nis_not_modified\n(\nresponse_headers\n,\nrequest_headers\n)\nGiven the request and response headers, return\nTrue\nif an HTTP\n\"Not Modified\" response could be returned instead.\nSource code in\nstarlette/staticfiles.py\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\ndef\nis_not_modified\n(\nself\n,\nresponse_headers\n:\nHeaders\n,\nrequest_headers\n:\nHeaders\n)\n->\nbool\n:\n\"\"\"\nGiven the request and response headers, return `True` if an HTTP\n\"Not Modified\" response could be returned instead.\n\"\"\"\ntry\n:\nif_none_match\n=\nrequest_headers\n[\n\"if-none-match\"\n]\netag\n=\nresponse_headers\n[\n\"etag\"\n]\nif\netag\nin\n[\ntag\n.\nstrip\n(\n\" W/\"\n)\nfor\ntag\nin\nif_none_match\n.\nsplit\n(\n\",\"\n)]:\nreturn\nTrue\nexcept\nKeyError\n:\npass\ntry\n:\nif_modified_since\n=\nparsedate\n(\nrequest_headers\n[\n\"if-modified-since\"\n])\nlast_modified\n=\nparsedate\n(\nresponse_headers\n[\n\"last-modified\"\n])\nif\nif_modified_since\nis\nnot\nNone\nand\nlast_modified\nis\nnot\nNone\nand\nif_modified_since\n>=\nlast_modified\n:\nreturn\nTrue\nexcept\nKeyError\n:\npass\nreturn\nFalse\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/openapi/docs/",
    "title": "OpenAPIdocs¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\ndocs\nTable of contents\nget_swagger_ui_html\nget_redoc_html\nget_swagger_ui_oauth2_redirect_html\nswagger_ui_default_parameters\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nget_swagger_ui_html\nget_redoc_html\nget_swagger_ui_oauth2_redirect_html\nswagger_ui_default_parameters\nFastAPI\nReference\nOpenAPI\nOpenAPI\ndocs\n¶\nUtilities to handle OpenAPI automatic UI documentation, including Swagger UI (by default at\n/docs\n) and ReDoc (by default at\n/redoc\n).\nfastapi.openapi.docs.get_swagger_ui_html\n¶\nget_swagger_ui_html\n(\n*\n,\nopenapi_url\n,\ntitle\n,\nswagger_js_url\n=\n\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui-bundle.js\"\n,\nswagger_css_url\n=\n\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui.css\"\n,\nswagger_favicon_url\n=\n\"https://fastapi.tiangolo.com/img/favicon.png\"\n,\noauth2_redirect_url\n=\nNone\n,\ninit_oauth\n=\nNone\n,\nswagger_ui_parameters\n=\nNone\n)\nGenerate and return the HTML  that loads Swagger UI for the interactive\nAPI docs (normally served at\n/docs\n).\nYou would only call this function yourself if you needed to override some parts,\nfor example the URLs to use to load Swagger UI's JavaScript and CSS.\nRead more about it in the\nFastAPI docs for Configure Swagger UI\nand the\nFastAPI docs for Custom Docs UI Static Assets (Self-Hosting)\n.\nPARAMETER\nDESCRIPTION\nopenapi_url\nThe OpenAPI URL that Swagger UI should load and use.\nThis is normally done automatically by FastAPI using the default URL\n/openapi.json\n.\nTYPE:\nstr\ntitle\nThe HTML\n<title>\ncontent, normally shown in the browser tab.\nTYPE:\nstr\nswagger_js_url\nThe URL to use to load the Swagger UI JavaScript.\nIt is normally set to a CDN URL.\nTYPE:\nstr\nDEFAULT:\n'https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui-bundle.js'\nswagger_css_url\nThe URL to use to load the Swagger UI CSS.\nIt is normally set to a CDN URL.\nTYPE:\nstr\nDEFAULT:\n'https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui.css'\nswagger_favicon_url\nThe URL of the favicon to use. It is normally shown in the browser tab.\nTYPE:\nstr\nDEFAULT:\n'https://fastapi.tiangolo.com/img/favicon.png'\noauth2_redirect_url\nThe OAuth2 redirect URL, it is normally automatically handled by FastAPI.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ninit_oauth\nA dictionary with Swagger UI OAuth2 initialization configurations.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\nswagger_ui_parameters\nConfiguration parameters for Swagger UI.\nIt defaults to\nswagger_ui_default_parameters\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\nSource code in\nfastapi/openapi/docs.py\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\ndef\nget_swagger_ui_html\n(\n*\n,\nopenapi_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe OpenAPI URL that Swagger UI should load and use.\nThis is normally done automatically by FastAPI using the default URL\n`/openapi.json`.\n\"\"\"\n),\n],\ntitle\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe HTML `<title>` content, normally shown in the browser tab.\n\"\"\"\n),\n],\nswagger_js_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL to use to load the Swagger UI JavaScript.\nIt is normally set to a CDN URL.\n\"\"\"\n),\n]\n=\n\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui-bundle.js\"\n,\nswagger_css_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL to use to load the Swagger UI CSS.\nIt is normally set to a CDN URL.\n\"\"\"\n),\n]\n=\n\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui.css\"\n,\nswagger_favicon_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL of the favicon to use. It is normally shown in the browser tab.\n\"\"\"\n),\n]\n=\n\"https://fastapi.tiangolo.com/img/favicon.png\"\n,\noauth2_redirect_url\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nThe OAuth2 redirect URL, it is normally automatically handled by FastAPI.\n\"\"\"\n),\n]\n=\nNone\n,\ninit_oauth\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nA dictionary with Swagger UI OAuth2 initialization configurations.\n\"\"\"\n),\n]\n=\nNone\n,\nswagger_ui_parameters\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nConfiguration parameters for Swagger UI.\nIt defaults to [swagger_ui_default_parameters][fastapi.openapi.docs.swagger_ui_default_parameters].\n\"\"\"\n),\n]\n=\nNone\n,\n)\n->\nHTMLResponse\n:\n\"\"\"\nGenerate and return the HTML  that loads Swagger UI for the interactive\nAPI docs (normally served at `/docs`).\nYou would only call this function yourself if you needed to override some parts,\nfor example the URLs to use to load Swagger UI's JavaScript and CSS.\nRead more about it in the\n[FastAPI docs for Configure Swagger UI](https://fastapi.tiangolo.com/how-to/configure-swagger-ui/)\nand the [FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).\n\"\"\"\ncurrent_swagger_ui_parameters\n=\nswagger_ui_default_parameters\n.\ncopy\n()\nif\nswagger_ui_parameters\n:\ncurrent_swagger_ui_parameters\n.\nupdate\n(\nswagger_ui_parameters\n)\nhtml\n=\nf\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"\n{\nswagger_css_url\n}\n\">\n<link rel=\"shortcut icon\" href=\"\n{\nswagger_favicon_url\n}\n\">\n<title>\n{\ntitle\n}\n</title>\n</head>\n<body>\n<div id=\"swagger-ui\">\n</div>\n<script src=\"\n{\nswagger_js_url\n}\n\"></script>\n<!-- `SwaggerUIBundle` is now available on the page -->\n<script>\nconst ui = SwaggerUIBundle(\n{{\nurl: '\n{\nopenapi_url\n}\n',\n\"\"\"\nfor\nkey\n,\nvalue\nin\ncurrent_swagger_ui_parameters\n.\nitems\n():\nhtml\n+=\nf\n\"\n{\njson\n.\ndumps\n(\nkey\n)\n}\n:\n{\njson\n.\ndumps\n(\njsonable_encoder\n(\nvalue\n))\n}\n,\n\\n\n\"\nif\noauth2_redirect_url\n:\nhtml\n+=\nf\n\"oauth2RedirectUrl: window.location.origin + '\n{\noauth2_redirect_url\n}\n',\"\nhtml\n+=\n\"\"\"\npresets: [\nSwaggerUIBundle.presets.apis,\nSwaggerUIBundle.SwaggerUIStandalonePreset\n],\n})\"\"\"\nif\ninit_oauth\n:\nhtml\n+=\nf\n\"\"\"\nui.initOAuth(\n{\njson\n.\ndumps\n(\njsonable_encoder\n(\ninit_oauth\n))\n}\n)\n\"\"\"\nhtml\n+=\n\"\"\"\n</script>\n</body>\n</html>\n\"\"\"\nreturn\nHTMLResponse\n(\nhtml\n)\nfastapi.openapi.docs.get_redoc_html\n¶\nget_redoc_html\n(\n*\n,\nopenapi_url\n,\ntitle\n,\nredoc_js_url\n=\n\"https://cdn.jsdelivr.net/npm/redoc@2/bundles/redoc.standalone.js\"\n,\nredoc_favicon_url\n=\n\"https://fastapi.tiangolo.com/img/favicon.png\"\n,\nwith_google_fonts\n=\nTrue\n)\nGenerate and return the HTML response that loads ReDoc for the alternative\nAPI docs (normally served at\n/redoc\n).\nYou would only call this function yourself if you needed to override some parts,\nfor example the URLs to use to load ReDoc's JavaScript and CSS.\nRead more about it in the\nFastAPI docs for Custom Docs UI Static Assets (Self-Hosting)\n.\nPARAMETER\nDESCRIPTION\nopenapi_url\nThe OpenAPI URL that ReDoc should load and use.\nThis is normally done automatically by FastAPI using the default URL\n/openapi.json\n.\nTYPE:\nstr\ntitle\nThe HTML\n<title>\ncontent, normally shown in the browser tab.\nTYPE:\nstr\nredoc_js_url\nThe URL to use to load the ReDoc JavaScript.\nIt is normally set to a CDN URL.\nTYPE:\nstr\nDEFAULT:\n'https://cdn.jsdelivr.net/npm/redoc@2/bundles/redoc.standalone.js'\nredoc_favicon_url\nThe URL of the favicon to use. It is normally shown in the browser tab.\nTYPE:\nstr\nDEFAULT:\n'https://fastapi.tiangolo.com/img/favicon.png'\nwith_google_fonts\nLoad and use Google Fonts.\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/openapi/docs.py\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\ndef\nget_redoc_html\n(\n*\n,\nopenapi_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe OpenAPI URL that ReDoc should load and use.\nThis is normally done automatically by FastAPI using the default URL\n`/openapi.json`.\n\"\"\"\n),\n],\ntitle\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe HTML `<title>` content, normally shown in the browser tab.\n\"\"\"\n),\n],\nredoc_js_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL to use to load the ReDoc JavaScript.\nIt is normally set to a CDN URL.\n\"\"\"\n),\n]\n=\n\"https://cdn.jsdelivr.net/npm/redoc@2/bundles/redoc.standalone.js\"\n,\nredoc_favicon_url\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL of the favicon to use. It is normally shown in the browser tab.\n\"\"\"\n),\n]\n=\n\"https://fastapi.tiangolo.com/img/favicon.png\"\n,\nwith_google_fonts\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nLoad and use Google Fonts.\n\"\"\"\n),\n]\n=\nTrue\n,\n)\n->\nHTMLResponse\n:\n\"\"\"\nGenerate and return the HTML response that loads ReDoc for the alternative\nAPI docs (normally served at `/redoc`).\nYou would only call this function yourself if you needed to override some parts,\nfor example the URLs to use to load ReDoc's JavaScript and CSS.\nRead more about it in the\n[FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).\n\"\"\"\nhtml\n=\nf\n\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<title>\n{\ntitle\n}\n</title>\n<!-- needed for adaptive design -->\n<meta charset=\"utf-8\"/>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\"\"\"\nif\nwith_google_fonts\n:\nhtml\n+=\n\"\"\"\n<link href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:300,400,700\" rel=\"stylesheet\">\n\"\"\"\nhtml\n+=\nf\n\"\"\"\n<link rel=\"shortcut icon\" href=\"\n{\nredoc_favicon_url\n}\n\">\n<!--\nReDoc doesn't change outer page styles\n-->\n<style>\nbody\n{{\nmargin: 0;\npadding: 0;\n}}\n</style>\n</head>\n<body>\n<noscript>\nReDoc requires Javascript to function. Please enable it to browse the documentation.\n</noscript>\n<redoc spec-url=\"\n{\nopenapi_url\n}\n\"></redoc>\n<script src=\"\n{\nredoc_js_url\n}\n\"> </script>\n</body>\n</html>\n\"\"\"\nreturn\nHTMLResponse\n(\nhtml\n)\nfastapi.openapi.docs.get_swagger_ui_oauth2_redirect_html\n¶\nget_swagger_ui_oauth2_redirect_html\n()\nGenerate the HTML response with the OAuth2 redirection for Swagger UI.\nYou normally don't need to use or change this.\nSource code in\nfastapi/openapi/docs.py\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\ndef\nget_swagger_ui_oauth2_redirect_html\n()\n->\nHTMLResponse\n:\n\"\"\"\nGenerate the HTML response with the OAuth2 redirection for Swagger UI.\nYou normally don't need to use or change this.\n\"\"\"\n# copied from https://github.com/swagger-api/swagger-ui/blob/v4.14.0/dist/oauth2-redirect.html\nhtml\n=\n\"\"\"\n<!doctype html>\n<html lang=\"en-US\">\n<head>\n<title>Swagger UI: OAuth2 Redirect</title>\n</head>\n<body>\n<script>\n'use strict';\nfunction run () {\nvar oauth2 = window.opener.swaggerUIRedirectOauth2;\nvar sentState = oauth2.state;\nvar redirectUrl = oauth2.redirectUrl;\nvar isValid, qp, arr;\nif (/code|token|error/.test(window.location.hash)) {\nqp = window.location.hash.substring(1).replace('?', '&');\n} else {\nqp = location.search.substring(1);\n}\narr = qp.split(\"&\");\narr.forEach(function (v,i,_arr) { _arr[i] = '\"' + v.replace('=', '\":\"') + '\"';});\nqp = qp ? JSON.parse('{' + arr.join() + '}',\nfunction (key, value) {\nreturn key === \"\" ? value : decodeURIComponent(value);\n}\n) :\n{}\n;\nisValid = qp.state === sentState;\nif ((\noauth2.auth.schema.get(\"flow\") === \"accessCode\" ||\noauth2.auth.schema.get(\"flow\") === \"authorizationCode\" ||\noauth2.auth.schema.get(\"flow\") === \"authorization_code\"\n) && !oauth2.auth.code) {\nif (!isValid) {\noauth2.errCb({\nauthId: oauth2.auth.name,\nsource: \"auth\",\nlevel: \"warning\",\nmessage: \"Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server.\"\n});\n}\nif (qp.code) {\ndelete oauth2.state;\noauth2.auth.code = qp.code;\noauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});\n} else {\nlet oauthErrorMsg;\nif (qp.error) {\noauthErrorMsg = \"[\"+qp.error+\"]: \" +\n(qp.error_description ? qp.error_description+ \". \" : \"no accessCode received from the server. \") +\n(qp.error_uri ? \"More info: \"+qp.error_uri : \"\");\n}\noauth2.errCb({\nauthId: oauth2.auth.name,\nsource: \"auth\",\nlevel: \"error\",\nmessage: oauthErrorMsg || \"[Authorization failed]: no accessCode received from the server.\"\n});\n}\n} else {\noauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});\n}\nwindow.close();\n}\nif (document.readyState !== 'loading') {\nrun();\n} else {\ndocument.addEventListener('DOMContentLoaded', function () {\nrun();\n});\n}\n</script>\n</body>\n</html>\n\"\"\"\nreturn\nHTMLResponse\n(\ncontent\n=\nhtml\n)\nfastapi.openapi.docs.swagger_ui_default_parameters\nmodule-attribute\n¶\nswagger_ui_default_parameters\n=\n{\n\"dom_id\"\n:\n\"#swagger-ui\"\n,\n\"layout\"\n:\n\"BaseLayout\"\n,\n\"deepLinking\"\n:\nTrue\n,\n\"showExtensions\"\n:\nTrue\n,\n\"showCommonExtensions\"\n:\nTrue\n,\n}\nDefault configurations for Swagger UI.\nYou can use it as a template to add any other configurations needed.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/background-tasks/",
    "title": "Background Tasks¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nBackground Tasks\nTable of contents\nUsing\nBackgroundTasks\nCreate a task function\nAdd the background task\nDependency Injection\nTechnical Details\nCaveat\nRecap\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUsing\nBackgroundTasks\nCreate a task function\nAdd the background task\nDependency Injection\nTechnical Details\nCaveat\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nBackground Tasks\n¶\nYou can define background tasks to be run\nafter\nreturning a response.\nThis is useful for operations that need to happen after a request, but that the client doesn't really have to be waiting for the operation to complete before receiving the response.\nThis includes, for example:\nEmail notifications sent after performing an action:\nAs connecting to an email server and sending an email tends to be \"slow\" (several seconds), you can return the response right away and send the email notification in the background.\nProcessing data:\nFor example, let's say you receive a file that must go through a slow process, you can return a response of \"Accepted\" (HTTP 202) and process the file in the background.\nUsing\nBackgroundTasks\n¶\nFirst, import\nBackgroundTasks\nand define a parameter in your\npath operation function\nwith a type declaration of\nBackgroundTasks\n:\nPython 3.8+\nfrom\nfastapi\nimport\nBackgroundTasks\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nwrite_notification\n(\nemail\n:\nstr\n,\nmessage\n=\n\"\"\n):\nwith\nopen\n(\n\"log.txt\"\n,\nmode\n=\n\"w\"\n)\nas\nemail_file\n:\ncontent\n=\nf\n\"notification for\n{\nemail\n}\n:\n{\nmessage\n}\n\"\nemail_file\n.\nwrite\n(\ncontent\n)\n@app\n.\npost\n(\n\"/send-notification/\n{email}\n\"\n)\nasync\ndef\nsend_notification\n(\nemail\n:\nstr\n,\nbackground_tasks\n:\nBackgroundTasks\n):\nbackground_tasks\n.\nadd_task\n(\nwrite_notification\n,\nemail\n,\nmessage\n=\n\"some notification\"\n)\nreturn\n{\n\"message\"\n:\n\"Notification sent in the background\"\n}\nFastAPI\nwill create the object of type\nBackgroundTasks\nfor you and pass it as that parameter.\nCreate a task function\n¶\nCreate a function to be run as the background task.\nIt is just a standard function that can receive parameters.\nIt can be an\nasync def\nor normal\ndef\nfunction,\nFastAPI\nwill know how to handle it correctly.\nIn this case, the task function will write to a file (simulating sending an email).\nAnd as the write operation doesn't use\nasync\nand\nawait\n, we define the function with normal\ndef\n:\nPython 3.8+\nfrom\nfastapi\nimport\nBackgroundTasks\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nwrite_notification\n(\nemail\n:\nstr\n,\nmessage\n=\n\"\"\n):\nwith\nopen\n(\n\"log.txt\"\n,\nmode\n=\n\"w\"\n)\nas\nemail_file\n:\ncontent\n=\nf\n\"notification for\n{\nemail\n}\n:\n{\nmessage\n}\n\"\nemail_file\n.\nwrite\n(\ncontent\n)\n@app\n.\npost\n(\n\"/send-notification/\n{email}\n\"\n)\nasync\ndef\nsend_notification\n(\nemail\n:\nstr\n,\nbackground_tasks\n:\nBackgroundTasks\n):\nbackground_tasks\n.\nadd_task\n(\nwrite_notification\n,\nemail\n,\nmessage\n=\n\"some notification\"\n)\nreturn\n{\n\"message\"\n:\n\"Notification sent in the background\"\n}\nAdd the background task\n¶\nInside of your\npath operation function\n, pass your task function to the\nbackground tasks\nobject with the method\n.add_task()\n:\nPython 3.8+\nfrom\nfastapi\nimport\nBackgroundTasks\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nwrite_notification\n(\nemail\n:\nstr\n,\nmessage\n=\n\"\"\n):\nwith\nopen\n(\n\"log.txt\"\n,\nmode\n=\n\"w\"\n)\nas\nemail_file\n:\ncontent\n=\nf\n\"notification for\n{\nemail\n}\n:\n{\nmessage\n}\n\"\nemail_file\n.\nwrite\n(\ncontent\n)\n@app\n.\npost\n(\n\"/send-notification/\n{email}\n\"\n)\nasync\ndef\nsend_notification\n(\nemail\n:\nstr\n,\nbackground_tasks\n:\nBackgroundTasks\n):\nbackground_tasks\n.\nadd_task\n(\nwrite_notification\n,\nemail\n,\nmessage\n=\n\"some notification\"\n)\nreturn\n{\n\"message\"\n:\n\"Notification sent in the background\"\n}\n.add_task()\nreceives as arguments:\nA task function to be run in the background (\nwrite_notification\n).\nAny sequence of arguments that should be passed to the task function in order (\nemail\n).\nAny keyword arguments that should be passed to the task function (\nmessage=\"some notification\"\n).\nDependency Injection\n¶\nUsing\nBackgroundTasks\nalso works with the dependency injection system, you can declare a parameter of type\nBackgroundTasks\nat multiple levels: in a\npath operation function\n, in a dependency (dependable), in a sub-dependency, etc.\nFastAPI\nknows what to do in each case and how to reuse the same object, so that all the background tasks are merged together and are run in the background afterwards:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nBackgroundTasks\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nwrite_log\n(\nmessage\n:\nstr\n):\nwith\nopen\n(\n\"log.txt\"\n,\nmode\n=\n\"a\"\n)\nas\nlog\n:\nlog\n.\nwrite\n(\nmessage\n)\ndef\nget_query\n(\nbackground_tasks\n:\nBackgroundTasks\n,\nq\n:\nstr\n|\nNone\n=\nNone\n):\nif\nq\n:\nmessage\n=\nf\n\"found query:\n{\nq\n}\n\\n\n\"\nbackground_tasks\n.\nadd_task\n(\nwrite_log\n,\nmessage\n)\nreturn\nq\n@app\n.\npost\n(\n\"/send-notification/\n{email}\n\"\n)\nasync\ndef\nsend_notification\n(\nemail\n:\nstr\n,\nbackground_tasks\n:\nBackgroundTasks\n,\nq\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_query\n)]\n):\nmessage\n=\nf\n\"message to\n{\nemail\n}\n\\n\n\"\nbackground_tasks\n.\nadd_task\n(\nwrite_log\n,\nmessage\n)\nreturn\n{\n\"message\"\n:\n\"Message sent\"\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nBackgroundTasks\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nwrite_log\n(\nmessage\n:\nstr\n):\nwith\nopen\n(\n\"log.txt\"\n,\nmode\n=\n\"a\"\n)\nas\nlog\n:\nlog\n.\nwrite\n(\nmessage\n)\ndef\nget_query\n(\nbackground_tasks\n:\nBackgroundTasks\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nif\nq\n:\nmessage\n=\nf\n\"found query:\n{\nq\n}\n\\n\n\"\nbackground_tasks\n.\nadd_task\n(\nwrite_log\n,\nmessage\n)\nreturn\nq\n@app\n.\npost\n(\n\"/send-notification/\n{email}\n\"\n)\nasync\ndef\nsend_notification\n(\nemail\n:\nstr\n,\nbackground_tasks\n:\nBackgroundTasks\n,\nq\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_query\n)]\n):\nmessage\n=\nf\n\"message to\n{\nemail\n}\n\\n\n\"\nbackground_tasks\n.\nadd_task\n(\nwrite_log\n,\nmessage\n)\nreturn\n{\n\"message\"\n:\n\"Message sent\"\n}\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBackgroundTasks\n,\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\ndef\nwrite_log\n(\nmessage\n:\nstr\n):\nwith\nopen\n(\n\"log.txt\"\n,\nmode\n=\n\"a\"\n)\nas\nlog\n:\nlog\n.\nwrite\n(\nmessage\n)\ndef\nget_query\n(\nbackground_tasks\n:\nBackgroundTasks\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nif\nq\n:\nmessage\n=\nf\n\"found query:\n{\nq\n}\n\\n\n\"\nbackground_tasks\n.\nadd_task\n(\nwrite_log\n,\nmessage\n)\nreturn\nq\n@app\n.\npost\n(\n\"/send-notification/\n{email}\n\"\n)\nasync\ndef\nsend_notification\n(\nemail\n:\nstr\n,\nbackground_tasks\n:\nBackgroundTasks\n,\nq\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_query\n)]\n):\nmessage\n=\nf\n\"message to\n{\nemail\n}\n\\n\n\"\nbackground_tasks\n.\nadd_task\n(\nwrite_log\n,\nmessage\n)\nreturn\n{\n\"message\"\n:\n\"Message sent\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nBackgroundTasks\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nwrite_log\n(\nmessage\n:\nstr\n):\nwith\nopen\n(\n\"log.txt\"\n,\nmode\n=\n\"a\"\n)\nas\nlog\n:\nlog\n.\nwrite\n(\nmessage\n)\ndef\nget_query\n(\nbackground_tasks\n:\nBackgroundTasks\n,\nq\n:\nstr\n|\nNone\n=\nNone\n):\nif\nq\n:\nmessage\n=\nf\n\"found query:\n{\nq\n}\n\\n\n\"\nbackground_tasks\n.\nadd_task\n(\nwrite_log\n,\nmessage\n)\nreturn\nq\n@app\n.\npost\n(\n\"/send-notification/\n{email}\n\"\n)\nasync\ndef\nsend_notification\n(\nemail\n:\nstr\n,\nbackground_tasks\n:\nBackgroundTasks\n,\nq\n:\nstr\n=\nDepends\n(\nget_query\n)\n):\nmessage\n=\nf\n\"message to\n{\nemail\n}\n\\n\n\"\nbackground_tasks\n.\nadd_task\n(\nwrite_log\n,\nmessage\n)\nreturn\n{\n\"message\"\n:\n\"Message sent\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBackgroundTasks\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nwrite_log\n(\nmessage\n:\nstr\n):\nwith\nopen\n(\n\"log.txt\"\n,\nmode\n=\n\"a\"\n)\nas\nlog\n:\nlog\n.\nwrite\n(\nmessage\n)\ndef\nget_query\n(\nbackground_tasks\n:\nBackgroundTasks\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nif\nq\n:\nmessage\n=\nf\n\"found query:\n{\nq\n}\n\\n\n\"\nbackground_tasks\n.\nadd_task\n(\nwrite_log\n,\nmessage\n)\nreturn\nq\n@app\n.\npost\n(\n\"/send-notification/\n{email}\n\"\n)\nasync\ndef\nsend_notification\n(\nemail\n:\nstr\n,\nbackground_tasks\n:\nBackgroundTasks\n,\nq\n:\nstr\n=\nDepends\n(\nget_query\n)\n):\nmessage\n=\nf\n\"message to\n{\nemail\n}\n\\n\n\"\nbackground_tasks\n.\nadd_task\n(\nwrite_log\n,\nmessage\n)\nreturn\n{\n\"message\"\n:\n\"Message sent\"\n}\nIn this example, the messages will be written to the\nlog.txt\nfile\nafter\nthe response is sent.\nIf there was a query in the request, it will be written to the log in a background task.\nAnd then another background task generated at the\npath operation function\nwill write a message using the\nemail\npath parameter.\nTechnical Details\n¶\nThe class\nBackgroundTasks\ncomes directly from\nstarlette.background\n.\nIt is imported/included directly into FastAPI so that you can import it from\nfastapi\nand avoid accidentally importing the alternative\nBackgroundTask\n(without the\ns\nat the end) from\nstarlette.background\n.\nBy only using\nBackgroundTasks\n(and not\nBackgroundTask\n), it's then possible to use it as a\npath operation function\nparameter and have\nFastAPI\nhandle the rest for you, just like when using the\nRequest\nobject directly.\nIt's still possible to use\nBackgroundTask\nalone in FastAPI, but you have to create the object in your code and return a Starlette\nResponse\nincluding it.\nYou can see more details in\nStarlette's official docs for Background Tasks\n.\nCaveat\n¶\nIf you need to perform heavy background computation and you don't necessarily need it to be run by the same process (for example, you don't need to share memory, variables, etc), you might benefit from using other bigger tools like\nCelery\n.\nThey tend to require more complex configurations, a message/job queue manager, like RabbitMQ or Redis, but they allow you to run background tasks in multiple processes, and especially, in multiple servers.\nBut if you need to access variables and objects from the same\nFastAPI\napp, or you need to perform small background tasks (like sending an email notification), you can simply just use\nBackgroundTasks\n.\nRecap\n¶\nImport and use\nBackgroundTasks\nwith parameters in\npath operation functions\nand dependencies to add background tasks.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/query-params-str-validations/",
    "title": "Query Parameters and String Validations¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nQuery Parameters and String Validations\nTable of contents\nAdditional validation\nImport\nQuery\nand\nAnnotated\nUse\nAnnotated\nin the type for the\nq\nparameter\nAdd\nQuery\nto\nAnnotated\nin the\nq\nparameter\nAlternative (old):\nQuery\nas the default value\nQuery\nas the default value or in\nAnnotated\nAdvantages of\nAnnotated\nAdd more validations\nAdd regular expressions\nPydantic v1\nregex\ninstead of\npattern\nDefault values\nRequired parameters\nRequired, can be\nNone\nQuery parameter list / multiple values\nQuery parameter list / multiple values with defaults\nUsing just\nlist\nDeclare more metadata\nAlias parameters\nDeprecating parameters\nExclude parameters from OpenAPI\nCustom Validation\nUnderstand that Code\nString with\nvalue.startswith()\nA Random Item\nRecap\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAdditional validation\nImport\nQuery\nand\nAnnotated\nUse\nAnnotated\nin the type for the\nq\nparameter\nAdd\nQuery\nto\nAnnotated\nin the\nq\nparameter\nAlternative (old):\nQuery\nas the default value\nQuery\nas the default value or in\nAnnotated\nAdvantages of\nAnnotated\nAdd more validations\nAdd regular expressions\nPydantic v1\nregex\ninstead of\npattern\nDefault values\nRequired parameters\nRequired, can be\nNone\nQuery parameter list / multiple values\nQuery parameter list / multiple values with defaults\nUsing just\nlist\nDeclare more metadata\nAlias parameters\nDeprecating parameters\nExclude parameters from OpenAPI\nCustom Validation\nUnderstand that Code\nString with\nvalue.startswith()\nA Random Item\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nQuery Parameters and String Validations\n¶\nFastAPI\nallows you to declare additional information and validation for your parameters.\nLet's take this application as example:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n|\nNone\n=\nNone\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nThe query parameter\nq\nis of type\nstr | None\n, that means that it's of type\nstr\nbut could also be\nNone\n, and indeed, the default value is\nNone\n, so FastAPI will know it's not required.\nNote\nFastAPI will know that the value of\nq\nis not required because of the default value\n= None\n.\nHaving\nstr | None\nwill allow your editor to give you better support and detect errors.\nAdditional validation\n¶\nWe are going to enforce that even though\nq\nis optional, whenever it is provided,\nits length doesn't exceed 50 characters\n.\nImport\nQuery\nand\nAnnotated\n¶\nTo achieve that, first import:\nQuery\nfrom\nfastapi\nAnnotated\nfrom\ntyping\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\nmax_length\n=\n50\n)]\n=\nNone\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nmax_length\n=\n50\n)]\n=\nNone\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\nmax_length\n=\n50\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\nmax_length\n=\n50\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nInfo\nFastAPI added support for\nAnnotated\n(and started recommending it) in version 0.95.0.\nIf you have an older version, you would get errors when trying to use\nAnnotated\n.\nMake sure you\nUpgrade the FastAPI version\nto at least 0.95.1 before using\nAnnotated\n.\nUse\nAnnotated\nin the type for the\nq\nparameter\n¶\nRemember I told you before that\nAnnotated\ncan be used to add metadata to your parameters in the\nPython Types Intro\n?\nNow it's the time to use it with FastAPI. 🚀\nWe had this type annotation:\nPython 3.10+\nPython 3.8+\nq\n:\nstr\n|\nNone\n=\nNone\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nWhat we will do is wrap that with\nAnnotated\n, so it becomes:\nPython 3.10+\nPython 3.8+\nq\n:\nAnnotated\n[\nstr\n|\nNone\n]\n=\nNone\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n]]\n=\nNone\nBoth of those versions mean the same thing,\nq\nis a parameter that can be a\nstr\nor\nNone\n, and by default, it is\nNone\n.\nNow let's jump to the fun stuff. 🎉\nAdd\nQuery\nto\nAnnotated\nin the\nq\nparameter\n¶\nNow that we have this\nAnnotated\nwhere we can put more information (in this case some additional validation), add\nQuery\ninside of\nAnnotated\n, and set the parameter\nmax_length\nto\n50\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\nmax_length\n=\n50\n)]\n=\nNone\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nmax_length\n=\n50\n)]\n=\nNone\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\nmax_length\n=\n50\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\nmax_length\n=\n50\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nNotice that the default value is still\nNone\n, so the parameter is still optional.\nBut now, having\nQuery(max_length=50)\ninside of\nAnnotated\n, we are telling FastAPI that we want it to have\nadditional validation\nfor this value, we want it to have maximum 50 characters. 😎\nTip\nHere we are using\nQuery()\nbecause this is a\nquery parameter\n. Later we will see others like\nPath()\n,\nBody()\n,\nHeader()\n, and\nCookie()\n, that also accept the same arguments as\nQuery()\n.\nFastAPI will now:\nValidate\nthe data making sure that the max length is 50 characters\nShow a\nclear error\nfor the client when the data is not valid\nDocument\nthe parameter in the OpenAPI schema\npath operation\n(so it will show up in the\nautomatic docs UI\n)\nAlternative (old):\nQuery\nas the default value\n¶\nPrevious versions of FastAPI (before\n0.95.0\n) required you to use\nQuery\nas the default value of your parameter, instead of putting it in\nAnnotated\n, there's a high chance that you will see code using it around, so I'll explain it to you.\nTip\nFor new code and whenever possible, use\nAnnotated\nas explained above. There are multiple advantages (explained below) and no disadvantages. 🍰\nThis is how you would use\nQuery()\nas the default value of your function parameter, setting the parameter\nmax_length\nto 50:\nPython 3.10+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\nmax_length\n=\n50\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.10+\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\nmax_length\n=\n50\n)]\n=\nNone\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nmax_length\n=\n50\n)]\n=\nNone\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\nmax_length\n=\n50\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nAs in this case (without using\nAnnotated\n) we have to replace the default value\nNone\nin the function with\nQuery()\n, we now need to set the default value with the parameter\nQuery(default=None)\n, it serves the same purpose of defining that default value (at least for FastAPI).\nSo:\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n)\n...makes the parameter optional, with a default value of\nNone\n, the same as:\nq\n:\nstr\n|\nNone\n=\nNone\nBut the\nQuery\nversion declares it explicitly as being a query parameter.\nThen, we can pass more parameters to\nQuery\n. In this case, the\nmax_length\nparameter that applies to strings:\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\nmax_length\n=\n50\n)\nThis will validate the data, show a clear error when the data is not valid, and document the parameter in the OpenAPI schema\npath operation\n.\nQuery\nas the default value or in\nAnnotated\n¶\nKeep in mind that when using\nQuery\ninside of\nAnnotated\nyou cannot use the\ndefault\nparameter for\nQuery\n.\nInstead, use the actual default value of the function parameter. Otherwise, it would be inconsistent.\nFor example, this is not allowed:\nq\n:\nAnnotated\n[\nstr\n,\nQuery\n(\ndefault\n=\n\"rick\"\n)]\n=\n\"morty\"\n...because it's not clear if the default value should be\n\"rick\"\nor\n\"morty\"\n.\nSo, you would use (preferably):\nq\n:\nAnnotated\n[\nstr\n,\nQuery\n()]\n=\n\"rick\"\n...or in older code bases you will find:\nq\n:\nstr\n=\nQuery\n(\ndefault\n=\n\"rick\"\n)\nAdvantages of\nAnnotated\n¶\nUsing\nAnnotated\nis recommended\ninstead of the default value in function parameters, it is\nbetter\nfor multiple reasons. 🤓\nThe\ndefault\nvalue of the\nfunction parameter\nis the\nactual default\nvalue, that's more intuitive with Python in general. 😌\nYou could\ncall\nthat same function in\nother places\nwithout FastAPI, and it would\nwork as expected\n. If there's a\nrequired\nparameter (without a default value), your\neditor\nwill let you know with an error,\nPython\nwill also complain if you run it without passing the required parameter.\nWhen you don't use\nAnnotated\nand instead use the\n(old) default value style\n, if you call that function without FastAPI in\nother places\n, you have to\nremember\nto pass the arguments to the function for it to work correctly, otherwise the values will be different from what you expect (e.g.\nQueryInfo\nor something similar instead of\nstr\n). And your editor won't complain, and Python won't complain running that function, only when the operations inside error out.\nBecause\nAnnotated\ncan have more than one metadata annotation, you could now even use the same function with other tools, like\nTyper\n. 🚀\nAdd more validations\n¶\nYou can also add a parameter\nmin_length\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\nmin_length\n=\n3\n,\nmax_length\n=\n50\n)]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nmin_length\n=\n3\n,\nmax_length\n=\n50\n)]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nmin_length\n=\n3\n,\nmax_length\n=\n50\n)]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\nmin_length\n=\n3\n,\nmax_length\n=\n50\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\nmin_length\n=\n3\n,\nmax_length\n=\n50\n),\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nAdd regular expressions\n¶\nYou can define a\nregular expression\npattern\nthat the parameter should match:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\nmin_length\n=\n3\n,\nmax_length\n=\n50\n,\npattern\n=\n\"^fixedquery$\"\n)\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nmin_length\n=\n3\n,\nmax_length\n=\n50\n,\npattern\n=\n\"^fixedquery$\"\n)\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nmin_length\n=\n3\n,\nmax_length\n=\n50\n,\npattern\n=\n\"^fixedquery$\"\n)\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\nmin_length\n=\n3\n,\nmax_length\n=\n50\n,\npattern\n=\n\"^fixedquery$\"\n),\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\nmin_length\n=\n3\n,\nmax_length\n=\n50\n,\npattern\n=\n\"^fixedquery$\"\n),\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nThis specific regular expression pattern checks that the received parameter value:\n^\n: starts with the following characters, doesn't have characters before.\nfixedquery\n: has the exact value\nfixedquery\n.\n$\n: ends there, doesn't have any more characters after\nfixedquery\n.\nIf you feel lost with all these\n\"regular expression\"\nideas, don't worry. They are a hard topic for many people. You can still do a lot of stuff without needing regular expressions yet.\nNow you know that whenever you need them you can use them in\nFastAPI\n.\nPydantic v1\nregex\ninstead of\npattern\n¶\nBefore Pydantic version 2 and before FastAPI 0.100.0, the parameter was called\nregex\ninstead of\npattern\n, but it's now deprecated.\nYou could still see some code using it:\nPydantic v1\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\nmin_length\n=\n3\n,\nmax_length\n=\n50\n,\nregex\n=\n\"^fixedquery$\"\n)\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nBut know that this is deprecated and it should be updated to use the new parameter\npattern\n. 🤓\nDefault values\n¶\nYou can, of course, use default values other than\nNone\n.\nLet's say that you want to declare the\nq\nquery parameter to have a\nmin_length\nof\n3\n, and to have a default value of\n\"fixedquery\"\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n,\nQuery\n(\nmin_length\n=\n3\n)]\n=\n\"fixedquery\"\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n,\nQuery\n(\nmin_length\n=\n3\n)]\n=\n\"fixedquery\"\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n=\nQuery\n(\ndefault\n=\n\"fixedquery\"\n,\nmin_length\n=\n3\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nNote\nHaving a default value of any type, including\nNone\n, makes the parameter optional (not required).\nRequired parameters\n¶\nWhen we don't need to declare more validations or metadata, we can make the\nq\nquery parameter required just by not declaring a default value, like:\nq\n:\nstr\ninstead of:\nq\n:\nstr\n|\nNone\n=\nNone\nBut we are now declaring it with\nQuery\n, for example like:\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\nmin_length\n=\n3\n)]\n=\nNone\nSo, when you need to declare a value as required while using\nQuery\n, you can simply not declare a default value:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n,\nQuery\n(\nmin_length\n=\n3\n)]):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n,\nQuery\n(\nmin_length\n=\n3\n)]):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n=\nQuery\n(\nmin_length\n=\n3\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nRequired, can be\nNone\n¶\nYou can declare that a parameter can accept\nNone\n, but that it's still required. This would force clients to send a value, even if the value is\nNone\n.\nTo do that, you can declare that\nNone\nis a valid type but simply do not declare a default value:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\nmin_length\n=\n3\n)]):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nmin_length\n=\n3\n)]):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nmin_length\n=\n3\n)]):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n|\nNone\n=\nQuery\n(\nmin_length\n=\n3\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\nmin_length\n=\n3\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nQuery parameter list / multiple values\n¶\nWhen you define a query parameter explicitly with\nQuery\nyou can also declare it to receive a list of values, or said in another way, to receive multiple values.\nFor example, to declare a query parameter\nq\nthat can appear multiple times in the URL, you can write:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nlist\n[\nstr\n]\n|\nNone\n,\nQuery\n()]\n=\nNone\n):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nlist\n[\nstr\n],\nNone\n],\nQuery\n()]\n=\nNone\n):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nList\n[\nstr\n],\nNone\n],\nQuery\n()]\n=\nNone\n):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nlist\n[\nstr\n]\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n)):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nlist\n[\nstr\n],\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n)):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nList\n[\nstr\n],\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n)):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\nThen, with a URL like:\nhttp://localhost:8000/items/?q=foo&q=bar\nyou would receive the multiple\nq\nquery parameters'\nvalues (\nfoo\nand\nbar\n) in a Python\nlist\ninside your\npath operation function\n, in the\nfunction parameter\nq\n.\nSo, the response to that URL would be:\n{\n\"q\"\n:\n[\n\"foo\"\n,\n\"bar\"\n]\n}\nTip\nTo declare a query parameter with a type of\nlist\n, like in the example above, you need to explicitly use\nQuery\n, otherwise it would be interpreted as a request body.\nThe interactive API docs will update accordingly, to allow multiple values:\nQuery parameter list / multiple values with defaults\n¶\nYou can also define a default\nlist\nof values if none are provided:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nlist\n[\nstr\n],\nQuery\n()]\n=\n[\n\"foo\"\n,\n\"bar\"\n]):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\n🤓 Other versions and variants\nPython 3.8+\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nList\n[\nstr\n],\nQuery\n()]\n=\n[\n\"foo\"\n,\n\"bar\"\n]):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nlist\n[\nstr\n]\n=\nQuery\n(\ndefault\n=\n[\n\"foo\"\n,\n\"bar\"\n])):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nList\n[\nstr\n]\n=\nQuery\n(\ndefault\n=\n[\n\"foo\"\n,\n\"bar\"\n])):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\nIf you go to:\nhttp://localhost:8000/items/\nthe default of\nq\nwill be:\n[\"foo\", \"bar\"]\nand your response will be:\n{\n\"q\"\n:\n[\n\"foo\"\n,\n\"bar\"\n]\n}\nUsing just\nlist\n¶\nYou can also use\nlist\ndirectly instead of\nlist[str]\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nlist\n,\nQuery\n()]\n=\n[]):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nlist\n,\nQuery\n()]\n=\n[]):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nlist\n=\nQuery\n(\ndefault\n=\n[])):\nquery_items\n=\n{\n\"q\"\n:\nq\n}\nreturn\nquery_items\nNote\nKeep in mind that in this case, FastAPI won't check the contents of the list.\nFor example,\nlist[int]\nwould check (and document) that the contents of the list are integers. But\nlist\nalone wouldn't.\nDeclare more metadata\n¶\nYou can add more information about the parameter.\nThat information will be included in the generated OpenAPI and used by the documentation user interfaces and external tools.\nNote\nKeep in mind that different tools might have different levels of OpenAPI support.\nSome of them might not show all the extra information declared yet, although in most of the cases, the missing feature is already planned for development.\nYou can add a\ntitle\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\ntitle\n=\n\"Query string\"\n,\nmin_length\n=\n3\n)]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\ntitle\n=\n\"Query string\"\n,\nmin_length\n=\n3\n)]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\ntitle\n=\n\"Query string\"\n,\nmin_length\n=\n3\n)]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"Query string\"\n,\nmin_length\n=\n3\n),\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"Query string\"\n,\nmin_length\n=\n3\n),\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nAnd a\ndescription\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\ntitle\n=\n\"Query string\"\n,\ndescription\n=\n\"Query string for the items to search in the database that have a good match\"\n,\nmin_length\n=\n3\n,\n),\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\ntitle\n=\n\"Query string\"\n,\ndescription\n=\n\"Query string for the items to search in the database that have a good match\"\n,\nmin_length\n=\n3\n,\n),\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\ntitle\n=\n\"Query string\"\n,\ndescription\n=\n\"Query string for the items to search in the database that have a good match\"\n,\nmin_length\n=\n3\n,\n),\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"Query string\"\n,\ndescription\n=\n\"Query string for the items to search in the database that have a good match\"\n,\nmin_length\n=\n3\n,\n),\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"Query string\"\n,\ndescription\n=\n\"Query string for the items to search in the database that have a good match\"\n,\nmin_length\n=\n3\n,\n),\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nAlias parameters\n¶\nImagine that you want the parameter to be\nitem-query\n.\nLike in:\nhttp://127.0.0.1:8000/items/?item-query=foobaritems\nBut\nitem-query\nis not a valid Python variable name.\nThe closest would be\nitem_query\n.\nBut you still need it to be exactly\nitem-query\n...\nThen you can declare an\nalias\n, and that alias is what will be used to find the parameter value:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\nalias\n=\n\"item-query\"\n)]\n=\nNone\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nalias\n=\n\"item-query\"\n)]\n=\nNone\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nalias\n=\n\"item-query\"\n)]\n=\nNone\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\nalias\n=\n\"item-query\"\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\nalias\n=\n\"item-query\"\n)):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nDeprecating parameters\n¶\nNow let's say you don't like this parameter anymore.\nYou have to leave it there a while because there are clients using it, but you want the docs to clearly show it as\ndeprecated\n.\nThen pass the parameter\ndeprecated=True\nto\nQuery\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\nalias\n=\n\"item-query\"\n,\ntitle\n=\n\"Query string\"\n,\ndescription\n=\n\"Query string for the items to search in the database that have a good match\"\n,\nmin_length\n=\n3\n,\nmax_length\n=\n50\n,\npattern\n=\n\"^fixedquery$\"\n,\ndeprecated\n=\nTrue\n,\n),\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nalias\n=\n\"item-query\"\n,\ntitle\n=\n\"Query string\"\n,\ndescription\n=\n\"Query string for the items to search in the database that have a good match\"\n,\nmin_length\n=\n3\n,\nmax_length\n=\n50\n,\npattern\n=\n\"^fixedquery$\"\n,\ndeprecated\n=\nTrue\n,\n),\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\nalias\n=\n\"item-query\"\n,\ntitle\n=\n\"Query string\"\n,\ndescription\n=\n\"Query string for the items to search in the database that have a good match\"\n,\nmin_length\n=\n3\n,\nmax_length\n=\n50\n,\npattern\n=\n\"^fixedquery$\"\n,\ndeprecated\n=\nTrue\n,\n),\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\nalias\n=\n\"item-query\"\n,\ntitle\n=\n\"Query string\"\n,\ndescription\n=\n\"Query string for the items to search in the database that have a good match\"\n,\nmin_length\n=\n3\n,\nmax_length\n=\n50\n,\npattern\n=\n\"^fixedquery$\"\n,\ndeprecated\n=\nTrue\n,\n),\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\nalias\n=\n\"item-query\"\n,\ntitle\n=\n\"Query string\"\n,\ndescription\n=\n\"Query string for the items to search in the database that have a good match\"\n,\nmin_length\n=\n3\n,\nmax_length\n=\n50\n,\npattern\n=\n\"^fixedquery$\"\n,\ndeprecated\n=\nTrue\n,\n),\n):\nresults\n=\n{\n\"items\"\n:\n[{\n\"item_id\"\n:\n\"Foo\"\n},\n{\n\"item_id\"\n:\n\"Bar\"\n}]}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nThe docs will show it like this:\nExclude parameters from OpenAPI\n¶\nTo exclude a query parameter from the generated OpenAPI schema (and thus, from the automatic documentation systems), set the parameter\ninclude_in_schema\nof\nQuery\nto\nFalse\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nhidden_query\n:\nAnnotated\n[\nstr\n|\nNone\n,\nQuery\n(\ninclude_in_schema\n=\nFalse\n)]\n=\nNone\n,\n):\nif\nhidden_query\n:\nreturn\n{\n\"hidden_query\"\n:\nhidden_query\n}\nelse\n:\nreturn\n{\n\"hidden_query\"\n:\n\"Not found\"\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nhidden_query\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\ninclude_in_schema\n=\nFalse\n)]\n=\nNone\n,\n):\nif\nhidden_query\n:\nreturn\n{\n\"hidden_query\"\n:\nhidden_query\n}\nelse\n:\nreturn\n{\n\"hidden_query\"\n:\n\"Not found\"\n}\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nhidden_query\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nQuery\n(\ninclude_in_schema\n=\nFalse\n)]\n=\nNone\n,\n):\nif\nhidden_query\n:\nreturn\n{\n\"hidden_query\"\n:\nhidden_query\n}\nelse\n:\nreturn\n{\n\"hidden_query\"\n:\n\"Not found\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nhidden_query\n:\nstr\n|\nNone\n=\nQuery\n(\ndefault\n=\nNone\n,\ninclude_in_schema\n=\nFalse\n),\n):\nif\nhidden_query\n:\nreturn\n{\n\"hidden_query\"\n:\nhidden_query\n}\nelse\n:\nreturn\n{\n\"hidden_query\"\n:\n\"Not found\"\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nhidden_query\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\ninclude_in_schema\n=\nFalse\n),\n):\nif\nhidden_query\n:\nreturn\n{\n\"hidden_query\"\n:\nhidden_query\n}\nelse\n:\nreturn\n{\n\"hidden_query\"\n:\n\"Not found\"\n}\nCustom Validation\n¶\nThere could be cases where you need to do some\ncustom validation\nthat can't be done with the parameters shown above.\nIn those cases, you can use a\ncustom validator function\nthat is applied after the normal validation (e.g. after validating that the value is a\nstr\n).\nYou can achieve that using\nPydantic's\nAfterValidator\ninside of\nAnnotated\n.\nTip\nPydantic also has\nBeforeValidator\nand others. 🤓\nFor example, this custom validator checks that the item ID starts with\nisbn-\nfor an\nISBN\nbook number or with\nimdb-\nfor an\nIMDB\nmovie URL ID:\nPython 3.10+\nimport\nrandom\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nAfterValidator\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"isbn-9781529046137\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"imdb-tt0371724\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"isbn-9781439512982\"\n:\n\"Isaac Asimov: The Complete Stories, Vol. 2\"\n,\n}\ndef\ncheck_valid_id\n(\nid\n:\nstr\n):\nif\nnot\nid\n.\nstartswith\n((\n\"isbn-\"\n,\n\"imdb-\"\n)):\nraise\nValueError\n(\n'Invalid ID format, it must start with \"isbn-\" or \"imdb-\"'\n)\nreturn\nid\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nid\n:\nAnnotated\n[\nstr\n|\nNone\n,\nAfterValidator\n(\ncheck_valid_id\n)]\n=\nNone\n,\n):\nif\nid\n:\nitem\n=\ndata\n.\nget\n(\nid\n)\nelse\n:\nid\n,\nitem\n=\nrandom\n.\nchoice\n(\nlist\n(\ndata\n.\nitems\n()))\nreturn\n{\n\"id\"\n:\nid\n,\n\"name\"\n:\nitem\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nimport\nrandom\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nAfterValidator\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"isbn-9781529046137\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"imdb-tt0371724\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"isbn-9781439512982\"\n:\n\"Isaac Asimov: The Complete Stories, Vol. 2\"\n,\n}\ndef\ncheck_valid_id\n(\nid\n:\nstr\n):\nif\nnot\nid\n.\nstartswith\n((\n\"isbn-\"\n,\n\"imdb-\"\n)):\nraise\nValueError\n(\n'Invalid ID format, it must start with \"isbn-\" or \"imdb-\"'\n)\nreturn\nid\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nid\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nAfterValidator\n(\ncheck_valid_id\n)]\n=\nNone\n,\n):\nif\nid\n:\nitem\n=\ndata\n.\nget\n(\nid\n)\nelse\n:\nid\n,\nitem\n=\nrandom\n.\nchoice\n(\nlist\n(\ndata\n.\nitems\n()))\nreturn\n{\n\"id\"\n:\nid\n,\n\"name\"\n:\nitem\n}\nimport\nrandom\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nAfterValidator\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"isbn-9781529046137\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"imdb-tt0371724\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"isbn-9781439512982\"\n:\n\"Isaac Asimov: The Complete Stories, Vol. 2\"\n,\n}\ndef\ncheck_valid_id\n(\nid\n:\nstr\n):\nif\nnot\nid\n.\nstartswith\n((\n\"isbn-\"\n,\n\"imdb-\"\n)):\nraise\nValueError\n(\n'Invalid ID format, it must start with \"isbn-\" or \"imdb-\"'\n)\nreturn\nid\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nid\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nAfterValidator\n(\ncheck_valid_id\n)]\n=\nNone\n,\n):\nif\nid\n:\nitem\n=\ndata\n.\nget\n(\nid\n)\nelse\n:\nid\n,\nitem\n=\nrandom\n.\nchoice\n(\nlist\n(\ndata\n.\nitems\n()))\nreturn\n{\n\"id\"\n:\nid\n,\n\"name\"\n:\nitem\n}\nInfo\nThis is available with Pydantic version 2 or above. 😎\nTip\nIf you need to do any type of validation that requires communicating with any\nexternal component\n, like a database or another API, you should instead use\nFastAPI Dependencies\n, you will learn about them later.\nThese custom validators are for things that can be checked with\nonly\nthe\nsame data\nprovided in the request.\nUnderstand that Code\n¶\nThe important point is just using\nAfterValidator\nwith a function inside\nAnnotated\n. Feel free to skip this part. 🤸\nBut if you're curious about this specific code example and you're still entertained, here are some extra details.\nString with\nvalue.startswith()\n¶\nDid you notice? a string using\nvalue.startswith()\ncan take a tuple, and it will check each value in the tuple:\nPython 3.10+\n# Code above omitted 👆\ndef\ncheck_valid_id\n(\nid\n:\nstr\n):\nif\nnot\nid\n.\nstartswith\n((\n\"isbn-\"\n,\n\"imdb-\"\n)):\nraise\nValueError\n(\n'Invalid ID format, it must start with \"isbn-\" or \"imdb-\"'\n)\nreturn\nid\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nimport\nrandom\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nAfterValidator\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"isbn-9781529046137\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"imdb-tt0371724\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"isbn-9781439512982\"\n:\n\"Isaac Asimov: The Complete Stories, Vol. 2\"\n,\n}\ndef\ncheck_valid_id\n(\nid\n:\nstr\n):\nif\nnot\nid\n.\nstartswith\n((\n\"isbn-\"\n,\n\"imdb-\"\n)):\nraise\nValueError\n(\n'Invalid ID format, it must start with \"isbn-\" or \"imdb-\"'\n)\nreturn\nid\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nid\n:\nAnnotated\n[\nstr\n|\nNone\n,\nAfterValidator\n(\ncheck_valid_id\n)]\n=\nNone\n,\n):\nif\nid\n:\nitem\n=\ndata\n.\nget\n(\nid\n)\nelse\n:\nid\n,\nitem\n=\nrandom\n.\nchoice\n(\nlist\n(\ndata\n.\nitems\n()))\nreturn\n{\n\"id\"\n:\nid\n,\n\"name\"\n:\nitem\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nimport\nrandom\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nAfterValidator\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"isbn-9781529046137\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"imdb-tt0371724\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"isbn-9781439512982\"\n:\n\"Isaac Asimov: The Complete Stories, Vol. 2\"\n,\n}\ndef\ncheck_valid_id\n(\nid\n:\nstr\n):\nif\nnot\nid\n.\nstartswith\n((\n\"isbn-\"\n,\n\"imdb-\"\n)):\nraise\nValueError\n(\n'Invalid ID format, it must start with \"isbn-\" or \"imdb-\"'\n)\nreturn\nid\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nid\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nAfterValidator\n(\ncheck_valid_id\n)]\n=\nNone\n,\n):\nif\nid\n:\nitem\n=\ndata\n.\nget\n(\nid\n)\nelse\n:\nid\n,\nitem\n=\nrandom\n.\nchoice\n(\nlist\n(\ndata\n.\nitems\n()))\nreturn\n{\n\"id\"\n:\nid\n,\n\"name\"\n:\nitem\n}\nimport\nrandom\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nAfterValidator\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"isbn-9781529046137\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"imdb-tt0371724\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"isbn-9781439512982\"\n:\n\"Isaac Asimov: The Complete Stories, Vol. 2\"\n,\n}\ndef\ncheck_valid_id\n(\nid\n:\nstr\n):\nif\nnot\nid\n.\nstartswith\n((\n\"isbn-\"\n,\n\"imdb-\"\n)):\nraise\nValueError\n(\n'Invalid ID format, it must start with \"isbn-\" or \"imdb-\"'\n)\nreturn\nid\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nid\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nAfterValidator\n(\ncheck_valid_id\n)]\n=\nNone\n,\n):\nif\nid\n:\nitem\n=\ndata\n.\nget\n(\nid\n)\nelse\n:\nid\n,\nitem\n=\nrandom\n.\nchoice\n(\nlist\n(\ndata\n.\nitems\n()))\nreturn\n{\n\"id\"\n:\nid\n,\n\"name\"\n:\nitem\n}\nA Random Item\n¶\nWith\ndata.items()\nwe get an\niterable object\nwith tuples containing the key and value for each dictionary item.\nWe convert this iterable object into a proper\nlist\nwith\nlist(data.items())\n.\nThen with\nrandom.choice()\nwe can get a\nrandom value\nfrom the list, so, we get a tuple with\n(id, name)\n. It will be something like\n(\"imdb-tt0371724\", \"The Hitchhiker's Guide to the Galaxy\")\n.\nThen we\nassign those two values\nof the tuple to the variables\nid\nand\nname\n.\nSo, if the user didn't provide an item ID, they will still receive a random suggestion.\n...we do all this in a\nsingle simple line\n. 🤯 Don't you love Python? 🐍\nPython 3.10+\n# Code above omitted 👆\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nid\n:\nAnnotated\n[\nstr\n|\nNone\n,\nAfterValidator\n(\ncheck_valid_id\n)]\n=\nNone\n,\n):\nif\nid\n:\nitem\n=\ndata\n.\nget\n(\nid\n)\nelse\n:\nid\n,\nitem\n=\nrandom\n.\nchoice\n(\nlist\n(\ndata\n.\nitems\n()))\nreturn\n{\n\"id\"\n:\nid\n,\n\"name\"\n:\nitem\n}\n👀 Full file preview\nPython 3.10+\nimport\nrandom\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nAfterValidator\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"isbn-9781529046137\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"imdb-tt0371724\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"isbn-9781439512982\"\n:\n\"Isaac Asimov: The Complete Stories, Vol. 2\"\n,\n}\ndef\ncheck_valid_id\n(\nid\n:\nstr\n):\nif\nnot\nid\n.\nstartswith\n((\n\"isbn-\"\n,\n\"imdb-\"\n)):\nraise\nValueError\n(\n'Invalid ID format, it must start with \"isbn-\" or \"imdb-\"'\n)\nreturn\nid\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nid\n:\nAnnotated\n[\nstr\n|\nNone\n,\nAfterValidator\n(\ncheck_valid_id\n)]\n=\nNone\n,\n):\nif\nid\n:\nitem\n=\ndata\n.\nget\n(\nid\n)\nelse\n:\nid\n,\nitem\n=\nrandom\n.\nchoice\n(\nlist\n(\ndata\n.\nitems\n()))\nreturn\n{\n\"id\"\n:\nid\n,\n\"name\"\n:\nitem\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nimport\nrandom\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nAfterValidator\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"isbn-9781529046137\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"imdb-tt0371724\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"isbn-9781439512982\"\n:\n\"Isaac Asimov: The Complete Stories, Vol. 2\"\n,\n}\ndef\ncheck_valid_id\n(\nid\n:\nstr\n):\nif\nnot\nid\n.\nstartswith\n((\n\"isbn-\"\n,\n\"imdb-\"\n)):\nraise\nValueError\n(\n'Invalid ID format, it must start with \"isbn-\" or \"imdb-\"'\n)\nreturn\nid\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nid\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nAfterValidator\n(\ncheck_valid_id\n)]\n=\nNone\n,\n):\nif\nid\n:\nitem\n=\ndata\n.\nget\n(\nid\n)\nelse\n:\nid\n,\nitem\n=\nrandom\n.\nchoice\n(\nlist\n(\ndata\n.\nitems\n()))\nreturn\n{\n\"id\"\n:\nid\n,\n\"name\"\n:\nitem\n}\nimport\nrandom\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nAfterValidator\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"isbn-9781529046137\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"imdb-tt0371724\"\n:\n\"The Hitchhiker's Guide to the Galaxy\"\n,\n\"isbn-9781439512982\"\n:\n\"Isaac Asimov: The Complete Stories, Vol. 2\"\n,\n}\ndef\ncheck_valid_id\n(\nid\n:\nstr\n):\nif\nnot\nid\n.\nstartswith\n((\n\"isbn-\"\n,\n\"imdb-\"\n)):\nraise\nValueError\n(\n'Invalid ID format, it must start with \"isbn-\" or \"imdb-\"'\n)\nreturn\nid\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nid\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nAfterValidator\n(\ncheck_valid_id\n)]\n=\nNone\n,\n):\nif\nid\n:\nitem\n=\ndata\n.\nget\n(\nid\n)\nelse\n:\nid\n,\nitem\n=\nrandom\n.\nchoice\n(\nlist\n(\ndata\n.\nitems\n()))\nreturn\n{\n\"id\"\n:\nid\n,\n\"name\"\n:\nitem\n}\nRecap\n¶\nYou can declare additional validations and metadata for your parameters.\nGeneric validations and metadata:\nalias\ntitle\ndescription\ndeprecated\nValidations specific for strings:\nmin_length\nmax_length\npattern\nCustom validations using\nAfterValidator\n.\nIn these examples you saw how to declare validations for\nstr\nvalues.\nSee the next chapters to learn how to declare validations for other types, like numbers.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/project-generation/",
    "title": "Full Stack FastAPI Template¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nFull Stack FastAPI Template\nTable of contents\nFull Stack FastAPI Template - Technology Stack and Features\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nFull Stack FastAPI Template - Technology Stack and Features\nFastAPI\nResources\nFull Stack FastAPI Template\n¶\nTemplates, while typically come with a specific setup, are designed to be flexible and customizable. This allows you to modify and adapt them to your project's requirements, making them an excellent starting point. 🏁\nYou can use this template to get started, as it includes a lot of the initial set up, security, database and some API endpoints already done for you.\nGitHub Repository:\nFull Stack FastAPI Template\nFull Stack FastAPI Template - Technology Stack and Features\n¶\n⚡\nFastAPI\nfor the Python backend API.\n🧰\nSQLModel\nfor the Python SQL database interactions (ORM).\n🔍\nPydantic\n, used by FastAPI, for the data validation and settings management.\n💾\nPostgreSQL\nas the SQL database.\n🚀\nReact\nfor the frontend.\n💃 Using TypeScript, hooks,\nVite\n, and other parts of a modern frontend stack.\n🎨\nChakra UI\nfor the frontend components.\n🤖 An automatically generated frontend client.\n🧪\nPlaywright\nfor End-to-End testing.\n🦇 Dark mode support.\n🐋\nDocker Compose\nfor development and production.\n🔒 Secure password hashing by default.\n🔑 JWT token authentication.\n📫 Email based password recovery.\n✅ Tests with\nPytest\n.\n📞\nTraefik\nas a reverse proxy / load balancer.\n🚢 Deployment instructions using Docker Compose, including how to set up a frontend Traefik proxy to handle automatic HTTPS certificates.\n🏭 CI (continuous integration) and CD (continuous deployment) based on GitHub Actions.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/httpconnection/",
    "title": "HTTPConnectionclass¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nHTTPConnection\nclass\nTable of contents\nHTTPConnection\nscope\napp\nurl\nbase_url\nheaders\nquery_params\npath_params\ncookies\nclient\nsession\nauth\nuser\nstate\nurl_for\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nHTTPConnection\nscope\napp\nurl\nbase_url\nheaders\nquery_params\npath_params\ncookies\nclient\nsession\nauth\nuser\nstate\nurl_for\nFastAPI\nReference\nHTTPConnection\nclass\n¶\nWhen you want to define dependencies that should be compatible with both HTTP and WebSockets, you can define a parameter that takes an\nHTTPConnection\ninstead of a\nRequest\nor a\nWebSocket\n.\nYou can import it from\nfastapi.requests\n:\nfrom\nfastapi.requests\nimport\nHTTPConnection\nfastapi.requests.HTTPConnection\n¶\nHTTPConnection\n(\nscope\n,\nreceive\n=\nNone\n)\nBases:\nMapping\n[\nstr\n,\nAny\n]\nA base class for incoming HTTP connections, that is used to provide\nany functionality that is common to both\nRequest\nand\nWebSocket\n.\nSource code in\nstarlette/requests.py\n77\n78\n79\ndef\n__init__\n(\nself\n,\nscope\n:\nScope\n,\nreceive\n:\nReceive\n|\nNone\n=\nNone\n)\n->\nNone\n:\nassert\nscope\n[\n\"type\"\n]\nin\n(\n\"http\"\n,\n\"websocket\"\n)\nself\n.\nscope\n=\nscope\nscope\ninstance-attribute\n¶\nscope\n=\nscope\napp\nproperty\n¶\napp\nurl\nproperty\n¶\nurl\nbase_url\nproperty\n¶\nbase_url\nheaders\nproperty\n¶\nheaders\nquery_params\nproperty\n¶\nquery_params\npath_params\nproperty\n¶\npath_params\ncookies\nproperty\n¶\ncookies\nclient\nproperty\n¶\nclient\nsession\nproperty\n¶\nsession\nauth\nproperty\n¶\nauth\nuser\nproperty\n¶\nuser\nstate\nproperty\n¶\nstate\nurl_for\n¶\nurl_for\n(\nname\n,\n/\n,\n**\npath_params\n)\nSource code in\nstarlette/requests.py\n183\n184\n185\n186\n187\n188\ndef\nurl_for\n(\nself\n,\nname\n:\nstr\n,\n/\n,\n**\npath_params\n:\nAny\n)\n->\nURL\n:\nurl_path_provider\n:\nRouter\n|\nStarlette\n|\nNone\n=\nself\n.\nscope\n.\nget\n(\n\"router\"\n)\nor\nself\n.\nscope\n.\nget\n(\n\"app\"\n)\nif\nurl_path_provider\nis\nNone\n:\nraise\nRuntimeError\n(\n\"The `url_for` method can only be used inside a Starlette application or with a router.\"\n)\nurl_path\n=\nurl_path_provider\n.\nurl_path_for\n(\nname\n,\n**\npath_params\n)\nreturn\nurl_path\n.\nmake_absolute_url\n(\nbase_url\n=\nself\n.\nbase_url\n)\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/",
    "title": "Reference¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nFastAPI\nReference\nReference\n¶\nHere's the reference or code API, the classes, functions, parameters, attributes, and\nall the FastAPI parts you can use in your applications.\nIf you want to\nlearn FastAPI\nyou are much better off reading the\nFastAPI Tutorial\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/templating/",
    "title": "Templating -Jinja2Templates¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTemplating -\nJinja2Templates\nTable of contents\nJinja2Templates\ncontext_processors\nenv\nget_template\nTemplateResponse\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nJinja2Templates\ncontext_processors\nenv\nget_template\nTemplateResponse\nFastAPI\nReference\nTemplating -\nJinja2Templates\n¶\nYou can use the\nJinja2Templates\nclass to render Jinja templates.\nRead more about it in the\nFastAPI docs for Templates\n.\nYou can import it directly from\nfastapi.templating\n:\nfrom\nfastapi.templating\nimport\nJinja2Templates\nfastapi.templating.Jinja2Templates\n¶\nJinja2Templates\n(\ndirectory\n:\n(\nstr\n|\nPathLike\n[\nstr\n]\n|\nSequence\n[\nstr\n|\nPathLike\n[\nstr\n]]\n),\n*\n,\ncontext_processors\n:\n(\nlist\n[\nCallable\n[[\nRequest\n],\ndict\n[\nstr\n,\nAny\n]]]\n|\nNone\n)\n=\nNone\n,\n**\nenv_options\n:\nAny\n)\nJinja2Templates\n(\n*\n,\nenv\n:\nEnvironment\n,\ncontext_processors\n:\n(\nlist\n[\nCallable\n[[\nRequest\n],\ndict\n[\nstr\n,\nAny\n]]]\n|\nNone\n)\n=\nNone\n)\nJinja2Templates\n(\ndirectory\n=\nNone\n,\n*\n,\ncontext_processors\n=\nNone\n,\nenv\n=\nNone\n,\n**\nenv_options\n)\ntemplates = Jinja2Templates(\"templates\")\nreturn templates.TemplateResponse(\"index.html\", {\"request\": request})\nSource code in\nstarlette/templating.py\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\ndef\n__init__\n(\nself\n,\ndirectory\n:\nstr\n|\nPathLike\n[\nstr\n]\n|\nSequence\n[\nstr\n|\nPathLike\n[\nstr\n]]\n|\nNone\n=\nNone\n,\n*\n,\ncontext_processors\n:\nlist\n[\nCallable\n[[\nRequest\n],\ndict\n[\nstr\n,\nAny\n]]]\n|\nNone\n=\nNone\n,\nenv\n:\njinja2\n.\nEnvironment\n|\nNone\n=\nNone\n,\n**\nenv_options\n:\nAny\n,\n)\n->\nNone\n:\nif\nenv_options\n:\nwarnings\n.\nwarn\n(\n\"Extra environment options are deprecated. Use a preconfigured jinja2.Environment instead.\"\n,\nDeprecationWarning\n,\n)\nassert\njinja2\nis\nnot\nNone\n,\n\"jinja2 must be installed to use Jinja2Templates\"\nassert\nbool\n(\ndirectory\n)\n^\nbool\n(\nenv\n),\n\"either 'directory' or 'env' arguments must be passed\"\nself\n.\ncontext_processors\n=\ncontext_processors\nor\n[]\nif\ndirectory\nis\nnot\nNone\n:\nself\n.\nenv\n=\nself\n.\n_create_env\n(\ndirectory\n,\n**\nenv_options\n)\nelif\nenv\nis\nnot\nNone\n:\n# pragma: no branch\nself\n.\nenv\n=\nenv\nself\n.\n_setup_env_defaults\n(\nself\n.\nenv\n)\ncontext_processors\ninstance-attribute\n¶\ncontext_processors\n=\ncontext_processors\nor\n[]\nenv\ninstance-attribute\n¶\nenv\n=\n_create_env\n(\ndirectory\n,\n**\nenv_options\n)\nget_template\n¶\nget_template\n(\nname\n)\nSource code in\nstarlette/templating.py\n131\n132\ndef\nget_template\n(\nself\n,\nname\n:\nstr\n)\n->\njinja2\n.\nTemplate\n:\nreturn\nself\n.\nenv\n.\nget_template\n(\nname\n)\nTemplateResponse\n¶\nTemplateResponse\n(\nrequest\n:\nRequest\n,\nname\n:\nstr\n,\ncontext\n:\ndict\n[\nstr\n,\nAny\n]\n|\nNone\n=\nNone\n,\nstatus_code\n:\nint\n=\n200\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nmedia_type\n:\nstr\n|\nNone\n=\nNone\n,\nbackground\n:\nBackgroundTask\n|\nNone\n=\nNone\n,\n)\n->\n_TemplateResponse\nTemplateResponse\n(\nname\n:\nstr\n,\ncontext\n:\ndict\n[\nstr\n,\nAny\n]\n|\nNone\n=\nNone\n,\nstatus_code\n:\nint\n=\n200\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nmedia_type\n:\nstr\n|\nNone\n=\nNone\n,\nbackground\n:\nBackgroundTask\n|\nNone\n=\nNone\n,\n)\n->\n_TemplateResponse\nTemplateResponse\n(\n*\nargs\n,\n**\nkwargs\n)\nSource code in\nstarlette/templating.py\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\ndef\nTemplateResponse\n(\nself\n,\n*\nargs\n:\nAny\n,\n**\nkwargs\n:\nAny\n)\n->\n_TemplateResponse\n:\nif\nargs\n:\nif\nisinstance\n(\nargs\n[\n0\n],\nstr\n):\n# the first argument is template name (old style)\nwarnings\n.\nwarn\n(\n\"The `name` is not the first parameter anymore. \"\n\"The first parameter should be the `Request` instance.\n\\n\n\"\n'Replace `TemplateResponse(name, {\"request\": request})` by `TemplateResponse(request, name)`.'\n,\nDeprecationWarning\n,\n)\nname\n=\nargs\n[\n0\n]\ncontext\n=\nargs\n[\n1\n]\nif\nlen\n(\nargs\n)\n>\n1\nelse\nkwargs\n.\nget\n(\n\"context\"\n,\n{})\nstatus_code\n=\nargs\n[\n2\n]\nif\nlen\n(\nargs\n)\n>\n2\nelse\nkwargs\n.\nget\n(\n\"status_code\"\n,\n200\n)\nheaders\n=\nargs\n[\n3\n]\nif\nlen\n(\nargs\n)\n>\n3\nelse\nkwargs\n.\nget\n(\n\"headers\"\n)\nmedia_type\n=\nargs\n[\n4\n]\nif\nlen\n(\nargs\n)\n>\n4\nelse\nkwargs\n.\nget\n(\n\"media_type\"\n)\nbackground\n=\nargs\n[\n5\n]\nif\nlen\n(\nargs\n)\n>\n5\nelse\nkwargs\n.\nget\n(\n\"background\"\n)\nif\n\"request\"\nnot\nin\ncontext\n:\nraise\nValueError\n(\n'context must include a \"request\" key'\n)\nrequest\n=\ncontext\n[\n\"request\"\n]\nelse\n:\n# the first argument is a request instance (new style)\nrequest\n=\nargs\n[\n0\n]\nname\n=\nargs\n[\n1\n]\nif\nlen\n(\nargs\n)\n>\n1\nelse\nkwargs\n[\n\"name\"\n]\ncontext\n=\nargs\n[\n2\n]\nif\nlen\n(\nargs\n)\n>\n2\nelse\nkwargs\n.\nget\n(\n\"context\"\n,\n{})\nstatus_code\n=\nargs\n[\n3\n]\nif\nlen\n(\nargs\n)\n>\n3\nelse\nkwargs\n.\nget\n(\n\"status_code\"\n,\n200\n)\nheaders\n=\nargs\n[\n4\n]\nif\nlen\n(\nargs\n)\n>\n4\nelse\nkwargs\n.\nget\n(\n\"headers\"\n)\nmedia_type\n=\nargs\n[\n5\n]\nif\nlen\n(\nargs\n)\n>\n5\nelse\nkwargs\n.\nget\n(\n\"media_type\"\n)\nbackground\n=\nargs\n[\n6\n]\nif\nlen\n(\nargs\n)\n>\n6\nelse\nkwargs\n.\nget\n(\n\"background\"\n)\nelse\n:\n# all arguments are kwargs\nif\n\"request\"\nnot\nin\nkwargs\n:\nwarnings\n.\nwarn\n(\n\"The `TemplateResponse` now requires the `request` argument.\n\\n\n\"\n'Replace `TemplateResponse(name, {\"context\": context})` by `TemplateResponse(request, name)`.'\n,\nDeprecationWarning\n,\n)\nif\n\"request\"\nnot\nin\nkwargs\n.\nget\n(\n\"context\"\n,\n{}):\nraise\nValueError\n(\n'context must include a \"request\" key'\n)\ncontext\n=\nkwargs\n.\nget\n(\n\"context\"\n,\n{})\nrequest\n=\nkwargs\n.\nget\n(\n\"request\"\n,\ncontext\n.\nget\n(\n\"request\"\n))\nname\n=\ncast\n(\nstr\n,\nkwargs\n[\n\"name\"\n])\nstatus_code\n=\nkwargs\n.\nget\n(\n\"status_code\"\n,\n200\n)\nheaders\n=\nkwargs\n.\nget\n(\n\"headers\"\n)\nmedia_type\n=\nkwargs\n.\nget\n(\n\"media_type\"\n)\nbackground\n=\nkwargs\n.\nget\n(\n\"background\"\n)\ncontext\n.\nsetdefault\n(\n\"request\"\n,\nrequest\n)\nfor\ncontext_processor\nin\nself\n.\ncontext_processors\n:\ncontext\n.\nupdate\n(\ncontext_processor\n(\nrequest\n))\ntemplate\n=\nself\n.\nget_template\n(\nname\n)\nreturn\n_TemplateResponse\n(\ntemplate\n,\ncontext\n,\nstatus_code\n=\nstatus_code\n,\nheaders\n=\nheaders\n,\nmedia_type\n=\nmedia_type\n,\nbackground\n=\nbackground\n,\n)\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/testing-websockets/",
    "title": "Testing WebSockets¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nFastAPI\nLearn\nAdvanced User Guide\nTesting WebSockets\n¶\nYou can use the same\nTestClient\nto test WebSockets.\nFor this, you use the\nTestClient\nin a\nwith\nstatement, connecting to the WebSocket:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.testclient\nimport\nTestClient\nfrom\nfastapi.websockets\nimport\nWebSocket\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nread_main\n():\nreturn\n{\n\"msg\"\n:\n\"Hello World\"\n}\n@app\n.\nwebsocket\n(\n\"/ws\"\n)\nasync\ndef\nwebsocket\n(\nwebsocket\n:\nWebSocket\n):\nawait\nwebsocket\n.\naccept\n()\nawait\nwebsocket\n.\nsend_json\n({\n\"msg\"\n:\n\"Hello WebSocket\"\n})\nawait\nwebsocket\n.\nclose\n()\ndef\ntest_read_main\n():\nclient\n=\nTestClient\n(\napp\n)\nresponse\n=\nclient\n.\nget\n(\n\"/\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"msg\"\n:\n\"Hello World\"\n}\ndef\ntest_websocket\n():\nclient\n=\nTestClient\n(\napp\n)\nwith\nclient\n.\nwebsocket_connect\n(\n\"/ws\"\n)\nas\nwebsocket\n:\ndata\n=\nwebsocket\n.\nreceive_json\n()\nassert\ndata\n==\n{\n\"msg\"\n:\n\"Hello WebSocket\"\n}\nNote\nFor more details, check Starlette's documentation for\ntesting WebSockets\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/encoders/",
    "title": "Encoders -jsonable_encoder¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nEncoders -\njsonable_encoder\nTable of contents\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\njsonable_encoder\nFastAPI\nReference\nEncoders -\njsonable_encoder\n¶\nfastapi.encoders.jsonable_encoder\n¶\njsonable_encoder\n(\nobj\n,\ninclude\n=\nNone\n,\nexclude\n=\nNone\n,\nby_alias\n=\nTrue\n,\nexclude_unset\n=\nFalse\n,\nexclude_defaults\n=\nFalse\n,\nexclude_none\n=\nFalse\n,\ncustom_encoder\n=\nNone\n,\nsqlalchemy_safe\n=\nTrue\n,\n)\nConvert any object to something that can be encoded in JSON.\nThis is used internally by FastAPI to make sure anything you return can be\nencoded as JSON before it is sent to the client.\nYou can also use it yourself, for example to convert objects before saving them\nin a database that supports only JSON.\nRead more about it in the\nFastAPI docs for JSON Compatible Encoder\n.\nPARAMETER\nDESCRIPTION\nobj\nThe input object to convert to JSON.\nTYPE:\nAny\ninclude\nPydantic's\ninclude\nparameter, passed to Pydantic models to set the\nfields to include.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nexclude\nPydantic's\nexclude\nparameter, passed to Pydantic models to set the\nfields to exclude.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nby_alias\nPydantic's\nby_alias\nparameter, passed to Pydantic models to define if\nthe output should use the alias names (when provided) or the Python\nattribute names. In an API, if you set an alias, it's probably because you\nwant to use it in the result, so you probably want to leave this set to\nTrue\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nexclude_unset\nPydantic's\nexclude_unset\nparameter, passed to Pydantic models to define\nif it should exclude from the output the fields that were not explicitly\nset (and that only had their default values).\nTYPE:\nbool\nDEFAULT:\nFalse\nexclude_defaults\nPydantic's\nexclude_defaults\nparameter, passed to Pydantic models to define\nif it should exclude from the output the fields that had the same default\nvalue, even when they were explicitly set.\nTYPE:\nbool\nDEFAULT:\nFalse\nexclude_none\nPydantic's\nexclude_none\nparameter, passed to Pydantic models to define\nif it should exclude from the output any fields that have a\nNone\nvalue.\nTYPE:\nbool\nDEFAULT:\nFalse\ncustom_encoder\nPydantic's\ncustom_encoder\nparameter, passed to Pydantic models to define\na custom encoder.\nTYPE:\nOptional\n[\nDict\n[\nAny\n,\nCallable\n[[\nAny\n],\nAny\n]]]\nDEFAULT:\nNone\nsqlalchemy_safe\nExclude from the output any fields that start with the name\n_sa\n.\nThis is mainly a hack for compatibility with SQLAlchemy objects, they\nstore internal SQLAlchemy-specific state in attributes named with\n_sa\n,\nand those objects can't (and shouldn't be) serialized to JSON.\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/encoders.py\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\ndef\njsonable_encoder\n(\nobj\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe input object to convert to JSON.\n\"\"\"\n),\n],\ninclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nPydantic's `include` parameter, passed to Pydantic models to set the\nfields to include.\n\"\"\"\n),\n]\n=\nNone\n,\nexclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nPydantic's `exclude` parameter, passed to Pydantic models to set the\nfields to exclude.\n\"\"\"\n),\n]\n=\nNone\n,\nby_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nPydantic's `by_alias` parameter, passed to Pydantic models to define if\nthe output should use the alias names (when provided) or the Python\nattribute names. In an API, if you set an alias, it's probably because you\nwant to use it in the result, so you probably want to leave this set to\n`True`.\n\"\"\"\n),\n]\n=\nTrue\n,\nexclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nPydantic's `exclude_unset` parameter, passed to Pydantic models to define\nif it should exclude from the output the fields that were not explicitly\nset (and that only had their default values).\n\"\"\"\n),\n]\n=\nFalse\n,\nexclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nPydantic's `exclude_defaults` parameter, passed to Pydantic models to define\nif it should exclude from the output the fields that had the same default\nvalue, even when they were explicitly set.\n\"\"\"\n),\n]\n=\nFalse\n,\nexclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nPydantic's `exclude_none` parameter, passed to Pydantic models to define\nif it should exclude from the output any fields that have a `None` value.\n\"\"\"\n),\n]\n=\nFalse\n,\ncustom_encoder\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nAny\n,\nCallable\n[[\nAny\n],\nAny\n]]],\nDoc\n(\n\"\"\"\nPydantic's `custom_encoder` parameter, passed to Pydantic models to define\na custom encoder.\n\"\"\"\n),\n]\n=\nNone\n,\nsqlalchemy_safe\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nExclude from the output any fields that start with the name `_sa`.\nThis is mainly a hack for compatibility with SQLAlchemy objects, they\nstore internal SQLAlchemy-specific state in attributes named with `_sa`,\nand those objects can't (and shouldn't be) serialized to JSON.\n\"\"\"\n),\n]\n=\nTrue\n,\n)\n->\nAny\n:\n\"\"\"\nConvert any object to something that can be encoded in JSON.\nThis is used internally by FastAPI to make sure anything you return can be\nencoded as JSON before it is sent to the client.\nYou can also use it yourself, for example to convert objects before saving them\nin a database that supports only JSON.\nRead more about it in the\n[FastAPI docs for JSON Compatible Encoder](https://fastapi.tiangolo.com/tutorial/encoder/).\n\"\"\"\ncustom_encoder\n=\ncustom_encoder\nor\n{}\nif\ncustom_encoder\n:\nif\ntype\n(\nobj\n)\nin\ncustom_encoder\n:\nreturn\ncustom_encoder\n[\ntype\n(\nobj\n)](\nobj\n)\nelse\n:\nfor\nencoder_type\n,\nencoder_instance\nin\ncustom_encoder\n.\nitems\n():\nif\nisinstance\n(\nobj\n,\nencoder_type\n):\nreturn\nencoder_instance\n(\nobj\n)\nif\ninclude\nis\nnot\nNone\nand\nnot\nisinstance\n(\ninclude\n,\n(\nset\n,\ndict\n)):\ninclude\n=\nset\n(\ninclude\n)\nif\nexclude\nis\nnot\nNone\nand\nnot\nisinstance\n(\nexclude\n,\n(\nset\n,\ndict\n)):\nexclude\n=\nset\n(\nexclude\n)\nif\nisinstance\n(\nobj\n,\n(\nBaseModel\n,\nv1\n.\nBaseModel\n)):\n# TODO: remove when deprecating Pydantic v1\nencoders\n:\nDict\n[\nAny\n,\nAny\n]\n=\n{}\nif\nisinstance\n(\nobj\n,\nv1\n.\nBaseModel\n):\nencoders\n=\ngetattr\n(\nobj\n.\n__config__\n,\n\"json_encoders\"\n,\n{})\n# type: ignore[attr-defined]\nif\ncustom_encoder\n:\nencoders\n=\n{\n**\nencoders\n,\n**\ncustom_encoder\n}\nobj_dict\n=\n_model_dump\n(\nobj\n,\nmode\n=\n\"json\"\n,\ninclude\n=\ninclude\n,\nexclude\n=\nexclude\n,\nby_alias\n=\nby_alias\n,\nexclude_unset\n=\nexclude_unset\n,\nexclude_none\n=\nexclude_none\n,\nexclude_defaults\n=\nexclude_defaults\n,\n)\nif\n\"__root__\"\nin\nobj_dict\n:\nobj_dict\n=\nobj_dict\n[\n\"__root__\"\n]\nreturn\njsonable_encoder\n(\nobj_dict\n,\nexclude_none\n=\nexclude_none\n,\nexclude_defaults\n=\nexclude_defaults\n,\n# TODO: remove when deprecating Pydantic v1\ncustom_encoder\n=\nencoders\n,\nsqlalchemy_safe\n=\nsqlalchemy_safe\n,\n)\nif\ndataclasses\n.\nis_dataclass\n(\nobj\n):\nassert\nnot\nisinstance\n(\nobj\n,\ntype\n)\nobj_dict\n=\ndataclasses\n.\nasdict\n(\nobj\n)\nreturn\njsonable_encoder\n(\nobj_dict\n,\ninclude\n=\ninclude\n,\nexclude\n=\nexclude\n,\nby_alias\n=\nby_alias\n,\nexclude_unset\n=\nexclude_unset\n,\nexclude_defaults\n=\nexclude_defaults\n,\nexclude_none\n=\nexclude_none\n,\ncustom_encoder\n=\ncustom_encoder\n,\nsqlalchemy_safe\n=\nsqlalchemy_safe\n,\n)\nif\nisinstance\n(\nobj\n,\nEnum\n):\nreturn\nobj\n.\nvalue\nif\nisinstance\n(\nobj\n,\nPurePath\n):\nreturn\nstr\n(\nobj\n)\nif\nisinstance\n(\nobj\n,\n(\nstr\n,\nint\n,\nfloat\n,\ntype\n(\nNone\n))):\nreturn\nobj\nif\n_is_undefined\n(\nobj\n):\nreturn\nNone\nif\nisinstance\n(\nobj\n,\ndict\n):\nencoded_dict\n=\n{}\nallowed_keys\n=\nset\n(\nobj\n.\nkeys\n())\nif\ninclude\nis\nnot\nNone\n:\nallowed_keys\n&=\nset\n(\ninclude\n)\nif\nexclude\nis\nnot\nNone\n:\nallowed_keys\n-=\nset\n(\nexclude\n)\nfor\nkey\n,\nvalue\nin\nobj\n.\nitems\n():\nif\n(\n(\nnot\nsqlalchemy_safe\nor\n(\nnot\nisinstance\n(\nkey\n,\nstr\n))\nor\n(\nnot\nkey\n.\nstartswith\n(\n\"_sa\"\n))\n)\nand\n(\nvalue\nis\nnot\nNone\nor\nnot\nexclude_none\n)\nand\nkey\nin\nallowed_keys\n):\nencoded_key\n=\njsonable_encoder\n(\nkey\n,\nby_alias\n=\nby_alias\n,\nexclude_unset\n=\nexclude_unset\n,\nexclude_none\n=\nexclude_none\n,\ncustom_encoder\n=\ncustom_encoder\n,\nsqlalchemy_safe\n=\nsqlalchemy_safe\n,\n)\nencoded_value\n=\njsonable_encoder\n(\nvalue\n,\nby_alias\n=\nby_alias\n,\nexclude_unset\n=\nexclude_unset\n,\nexclude_none\n=\nexclude_none\n,\ncustom_encoder\n=\ncustom_encoder\n,\nsqlalchemy_safe\n=\nsqlalchemy_safe\n,\n)\nencoded_dict\n[\nencoded_key\n]\n=\nencoded_value\nreturn\nencoded_dict\nif\nisinstance\n(\nobj\n,\n(\nlist\n,\nset\n,\nfrozenset\n,\nGeneratorType\n,\ntuple\n,\ndeque\n)):\nencoded_list\n=\n[]\nfor\nitem\nin\nobj\n:\nencoded_list\n.\nappend\n(\njsonable_encoder\n(\nitem\n,\ninclude\n=\ninclude\n,\nexclude\n=\nexclude\n,\nby_alias\n=\nby_alias\n,\nexclude_unset\n=\nexclude_unset\n,\nexclude_defaults\n=\nexclude_defaults\n,\nexclude_none\n=\nexclude_none\n,\ncustom_encoder\n=\ncustom_encoder\n,\nsqlalchemy_safe\n=\nsqlalchemy_safe\n,\n)\n)\nreturn\nencoded_list\nif\ntype\n(\nobj\n)\nin\nENCODERS_BY_TYPE\n:\nreturn\nENCODERS_BY_TYPE\n[\ntype\n(\nobj\n)](\nobj\n)\nfor\nencoder\n,\nclasses_tuple\nin\nencoders_by_class_tuples\n.\nitems\n():\nif\nisinstance\n(\nobj\n,\nclasses_tuple\n):\nreturn\nencoder\n(\nobj\n)\ntry\n:\ndata\n=\ndict\n(\nobj\n)\nexcept\nException\nas\ne\n:\nerrors\n:\nList\n[\nException\n]\n=\n[]\nerrors\n.\nappend\n(\ne\n)\ntry\n:\ndata\n=\nvars\n(\nobj\n)\nexcept\nException\nas\ne\n:\nerrors\n.\nappend\n(\ne\n)\nraise\nValueError\n(\nerrors\n)\nfrom\ne\nreturn\njsonable_encoder\n(\ndata\n,\ninclude\n=\ninclude\n,\nexclude\n=\nexclude\n,\nby_alias\n=\nby_alias\n,\nexclude_unset\n=\nexclude_unset\n,\nexclude_defaults\n=\nexclude_defaults\n,\nexclude_none\n=\nexclude_none\n,\ncustom_encoder\n=\ncustom_encoder\n,\nsqlalchemy_safe\n=\nsqlalchemy_safe\n,\n)\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/how-to/",
    "title": "How To - Recipes¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nFastAPI\nLearn\nHow To - Recipes\nHow To - Recipes\n¶\nHere you will see different recipes or \"how to\" guides for\nseveral topics\n.\nMost of these ideas would be more or less\nindependent\n, and in most cases you should only need to study them if they apply directly to\nyour project\n.\nIf something seems interesting and useful to your project, go ahead and check it, but otherwise, you might probably just skip them.\nTip\nIf you want to\nlearn FastAPI\nin a structured way (recommended), go and read the\nTutorial - User Guide\nchapter by chapter instead.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/middleware/",
    "title": "Middleware¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nMiddleware\nTable of contents\nCreate a middleware\nBefore and after the\nresponse\nMultiple middleware execution order\nOther middlewares\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nCreate a middleware\nBefore and after the\nresponse\nMultiple middleware execution order\nOther middlewares\nFastAPI\nLearn\nTutorial - User Guide\nMiddleware\n¶\nYou can add middleware to\nFastAPI\napplications.\nA \"middleware\" is a function that works with every\nrequest\nbefore it is processed by any specific\npath operation\n. And also with every\nresponse\nbefore returning it.\nIt takes each\nrequest\nthat comes to your application.\nIt can then do something to that\nrequest\nor run any needed code.\nThen it passes the\nrequest\nto be processed by the rest of the application (by some\npath operation\n).\nIt then takes the\nresponse\ngenerated by the application (by some\npath operation\n).\nIt can do something to that\nresponse\nor run any needed code.\nThen it returns the\nresponse\n.\nTechnical Details\nIf you have dependencies with\nyield\n, the exit code will run\nafter\nthe middleware.\nIf there were any background tasks (covered in the\nBackground Tasks\nsection, you will see it later), they will run\nafter\nall the middleware.\nCreate a middleware\n¶\nTo create a middleware you use the decorator\n@app.middleware(\"http\")\non top of a function.\nThe middleware function receives:\nThe\nrequest\n.\nA function\ncall_next\nthat will receive the\nrequest\nas a parameter.\nThis function will pass the\nrequest\nto the corresponding\npath operation\n.\nThen it returns the\nresponse\ngenerated by the corresponding\npath operation\n.\nYou can then further modify the\nresponse\nbefore returning it.\nPython 3.8+\nimport\ntime\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\napp\n=\nFastAPI\n()\n@app\n.\nmiddleware\n(\n\"http\"\n)\nasync\ndef\nadd_process_time_header\n(\nrequest\n:\nRequest\n,\ncall_next\n):\nstart_time\n=\ntime\n.\nperf_counter\n()\nresponse\n=\nawait\ncall_next\n(\nrequest\n)\nprocess_time\n=\ntime\n.\nperf_counter\n()\n-\nstart_time\nresponse\n.\nheaders\n[\n\"X-Process-Time\"\n]\n=\nstr\n(\nprocess_time\n)\nreturn\nresponse\nTip\nKeep in mind that custom proprietary headers can be added\nusing the\nX-\nprefix\n.\nBut if you have custom headers that you want a client in a browser to be able to see, you need to add them to your CORS configurations (\nCORS (Cross-Origin Resource Sharing)\n) using the parameter\nexpose_headers\ndocumented in\nStarlette's CORS docs\n.\nTechnical Details\nYou could also use\nfrom starlette.requests import Request\n.\nFastAPI\nprovides it as a convenience for you, the developer. But it comes directly from Starlette.\nBefore and after the\nresponse\n¶\nYou can add code to be run with the\nrequest\n,  before any\npath operation\nreceives it.\nAnd also after the\nresponse\nis generated, before returning it.\nFor example, you could add a custom header\nX-Process-Time\ncontaining the time in seconds that it took to process the request and generate a response:\nPython 3.8+\nimport\ntime\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\napp\n=\nFastAPI\n()\n@app\n.\nmiddleware\n(\n\"http\"\n)\nasync\ndef\nadd_process_time_header\n(\nrequest\n:\nRequest\n,\ncall_next\n):\nstart_time\n=\ntime\n.\nperf_counter\n()\nresponse\n=\nawait\ncall_next\n(\nrequest\n)\nprocess_time\n=\ntime\n.\nperf_counter\n()\n-\nstart_time\nresponse\n.\nheaders\n[\n\"X-Process-Time\"\n]\n=\nstr\n(\nprocess_time\n)\nreturn\nresponse\nTip\nHere we use\ntime.perf_counter()\ninstead of\ntime.time()\nbecause it can be more precise for these use cases. 🤓\nMultiple middleware execution order\n¶\nWhen you add multiple middlewares using either\n@app.middleware()\ndecorator or\napp.add_middleware()\nmethod, each new middleware wraps the application, forming a stack. The last middleware added is the\noutermost\n, and the first is the\ninnermost\n.\nOn the request path, the\noutermost\nmiddleware runs first.\nOn the response path, it runs last.\nFor example:\napp\n.\nadd_middleware\n(\nMiddlewareA\n)\napp\n.\nadd_middleware\n(\nMiddlewareB\n)\nThis results in the following execution order:\nRequest\n: MiddlewareB → MiddlewareA → route\nResponse\n: route → MiddlewareA → MiddlewareB\nThis stacking behavior ensures that middlewares are executed in a predictable and controllable order.\nOther middlewares\n¶\nYou can later read more about other middlewares in the\nAdvanced User Guide: Advanced Middleware\n.\nYou will read about how to handle\nCORS\nwith a middleware in the next section.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/parameters/",
    "title": "Request Parameters¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nRequest Parameters\nTable of contents\nQuery\nPath\nBody\nCookie\nHeader\nForm\nFile\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nQuery\nPath\nBody\nCookie\nHeader\nForm\nFile\nFastAPI\nReference\nRequest Parameters\n¶\nHere's the reference information for the request parameters.\nThese are the special functions that you can put in\npath operation function\nparameters or dependency functions with\nAnnotated\nto get data from the request.\nIt includes:\nQuery()\nPath()\nBody()\nCookie()\nHeader()\nForm()\nFile()\nYou can import them all directly from\nfastapi\n:\nfrom\nfastapi\nimport\nBody\n,\nCookie\n,\nFile\n,\nForm\n,\nHeader\n,\nPath\n,\nQuery\nfastapi.Query\n¶\nQuery\n(\ndefault\n=\nUndefined\n,\n*\n,\ndefault_factory\n=\n_Unset\n,\nalias\n=\nNone\n,\nalias_priority\n=\n_Unset\n,\nvalidation_alias\n=\nNone\n,\nserialization_alias\n=\nNone\n,\ntitle\n=\nNone\n,\ndescription\n=\nNone\n,\ngt\n=\nNone\n,\nge\n=\nNone\n,\nlt\n=\nNone\n,\nle\n=\nNone\n,\nmin_length\n=\nNone\n,\nmax_length\n=\nNone\n,\npattern\n=\nNone\n,\nregex\n=\nNone\n,\ndiscriminator\n=\nNone\n,\nstrict\n=\n_Unset\n,\nmultiple_of\n=\n_Unset\n,\nallow_inf_nan\n=\n_Unset\n,\nmax_digits\n=\n_Unset\n,\ndecimal_places\n=\n_Unset\n,\nexamples\n=\nNone\n,\nexample\n=\n_Unset\n,\nopenapi_examples\n=\nNone\n,\ndeprecated\n=\nNone\n,\ninclude_in_schema\n=\nTrue\n,\njson_schema_extra\n=\nNone\n,\n**\nextra\n)\nPARAMETER\nDESCRIPTION\ndefault\nDefault value if the parameter field is not set.\nTYPE:\nAny\nDEFAULT:\nUndefined\ndefault_factory\nA callable to generate the default value.\nThis doesn't affect\nPath\nparameters as the value is always required.\nThe parameter is available only for compatibility.\nTYPE:\nUnion\n[\nCallable\n[[],\nAny\n], None]\nDEFAULT:\n_Unset\nalias\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nalias_priority\nPriority of the alias. This affects whether an alias generator is used.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nvalidation_alias\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nserialization_alias\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\ntitle\nHuman-readable title.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nHuman-readable description.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ngt\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nge\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nlt\nLess than. If set, value must be less than this. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nle\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nmin_length\nMinimum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\nmax_length\nMaximum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\npattern\nRegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nregex\nDeprecated in FastAPI 0.100.0 and Pydantic v2, use\npattern\ninstead. RegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndiscriminator\nParameter field name for discriminating the type in a tagged union.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nstrict\nIf\nTrue\n, strict validation is applied to the field.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmultiple_of\nValue must be a multiple of this. Only applicable to numbers.\nTYPE:\nUnion\n[\nfloat\n, None]\nDEFAULT:\n_Unset\nallow_inf_nan\nAllow\ninf\n,\n-inf\n,\nnan\n. Only applicable to numbers.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmax_digits\nMaximum number of allow digits for strings.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\ndecimal_places\nMaximum number of decimal places allowed for numbers.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nexamples\nExample values for this field.\nTYPE:\nOptional\n[\nList\n[\nAny\n]]\nDEFAULT:\nNone\nexample\nDeprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, although still supported. Use examples instead.\nTYPE:\nOptional\n[\nAny\n]\nDEFAULT:\n_Unset\nopenapi_examples\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nSwagger UI (that provides the\n/docs\ninterface) has better support for the\nOpenAPI-specific examples than the JSON Schema\nexamples\n, that's the main\nuse case for this.\nRead more about it in the\nFastAPI docs for Declare Request Example Data\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nExample\n]]\nDEFAULT:\nNone\ndeprecated\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n, None]\nDEFAULT:\nNone\ninclude_in_schema\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nbool\nDEFAULT:\nTrue\njson_schema_extra\nAny additional JSON schema data.\nTYPE:\nUnion\n[\nDict\n[\nstr\n,\nAny\n], None]\nDEFAULT:\nNone\n**extra\nThe\nextra\nkwargs is deprecated. Use\njson_schema_extra\ninstead. Include extra fields used by the JSON Schema.\nTYPE:\nAny\nDEFAULT:\n{}\nSource code in\nfastapi/param_functions.py\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\ndef\nQuery\n(\n# noqa: N802\ndefault\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nDefault value if the parameter field is not set.\n\"\"\"\n),\n]\n=\nUndefined\n,\n*\n,\ndefault_factory\n:\nAnnotated\n[\nUnion\n[\nCallable\n[[],\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nA callable to generate the default value.\nThis doesn't affect `Path` parameters as the value is always required.\nThe parameter is available only for compatibility.\n\"\"\"\n),\n]\n=\n_Unset\n,\nalias\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\n\"\"\"\n),\n]\n=\nNone\n,\nalias_priority\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nPriority of the alias. This affects whether an alias generator is used.\n\"\"\"\n),\n]\n=\n_Unset\n,\n# TODO: update when deprecating Pydantic v1, import these types\n# validation_alias: str | AliasPath | AliasChoices | None\nvalidation_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\n\"\"\"\n),\n]\n=\nNone\n,\nserialization_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\n\"\"\"\n),\n]\n=\nNone\n,\ntitle\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable title.\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable description.\n\"\"\"\n),\n]\n=\nNone\n,\ngt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\n\"\"\"\n),\n]\n=\nNone\n,\nge\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nlt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than. If set, value must be less than this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nle\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nmin_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMinimum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nmax_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMaximum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\npattern\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nregex\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\ndeprecated\n(\n\"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n),\n]\n=\nNone\n,\ndiscriminator\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\nParameter field name for discriminating the type in a tagged union.\n\"\"\"\n),\n]\n=\nNone\n,\nstrict\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nIf `True`, strict validation is applied to the field.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmultiple_of\n:\nAnnotated\n[\nUnion\n[\nfloat\n,\nNone\n],\nDoc\n(\n\"\"\"\nValue must be a multiple of this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nallow_inf_nan\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nAllow `inf`, `-inf`, `nan`. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmax_digits\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of allow digits for strings.\n\"\"\"\n),\n]\n=\n_Unset\n,\ndecimal_places\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of decimal places allowed for numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nexamples\n:\nAnnotated\n[\nOptional\n[\nList\n[\nAny\n]],\nDoc\n(\n\"\"\"\nExample values for this field.\n\"\"\"\n),\n]\n=\nNone\n,\nexample\n:\nAnnotated\n[\nOptional\n[\nAny\n],\ndeprecated\n(\n\"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n\"although still supported. Use examples instead.\"\n),\n]\n=\n_Unset\n,\nopenapi_examples\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nExample\n]],\nDoc\n(\n\"\"\"\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nSwagger UI (that provides the `/docs` interface) has better support for the\nOpenAPI-specific examples than the JSON Schema `examples`, that's the main\nuse case for this.\nRead more about it in the\n[FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nTrue\n,\njson_schema_extra\n:\nAnnotated\n[\nUnion\n[\nDict\n[\nstr\n,\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nAny additional JSON schema data.\n\"\"\"\n),\n]\n=\nNone\n,\n**\nextra\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nInclude extra fields used by the JSON Schema.\n\"\"\"\n),\ndeprecated\n(\n\"\"\"\nThe `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n\"\"\"\n),\n],\n)\n->\nAny\n:\nreturn\nparams\n.\nQuery\n(\ndefault\n=\ndefault\n,\ndefault_factory\n=\ndefault_factory\n,\nalias\n=\nalias\n,\nalias_priority\n=\nalias_priority\n,\nvalidation_alias\n=\nvalidation_alias\n,\nserialization_alias\n=\nserialization_alias\n,\ntitle\n=\ntitle\n,\ndescription\n=\ndescription\n,\ngt\n=\ngt\n,\nge\n=\nge\n,\nlt\n=\nlt\n,\nle\n=\nle\n,\nmin_length\n=\nmin_length\n,\nmax_length\n=\nmax_length\n,\npattern\n=\npattern\n,\nregex\n=\nregex\n,\ndiscriminator\n=\ndiscriminator\n,\nstrict\n=\nstrict\n,\nmultiple_of\n=\nmultiple_of\n,\nallow_inf_nan\n=\nallow_inf_nan\n,\nmax_digits\n=\nmax_digits\n,\ndecimal_places\n=\ndecimal_places\n,\nexample\n=\nexample\n,\nexamples\n=\nexamples\n,\nopenapi_examples\n=\nopenapi_examples\n,\ndeprecated\n=\ndeprecated\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\njson_schema_extra\n=\njson_schema_extra\n,\n**\nextra\n,\n)\nfastapi.Path\n¶\nPath\n(\ndefault\n=...\n,\n*\n,\ndefault_factory\n=\n_Unset\n,\nalias\n=\nNone\n,\nalias_priority\n=\n_Unset\n,\nvalidation_alias\n=\nNone\n,\nserialization_alias\n=\nNone\n,\ntitle\n=\nNone\n,\ndescription\n=\nNone\n,\ngt\n=\nNone\n,\nge\n=\nNone\n,\nlt\n=\nNone\n,\nle\n=\nNone\n,\nmin_length\n=\nNone\n,\nmax_length\n=\nNone\n,\npattern\n=\nNone\n,\nregex\n=\nNone\n,\ndiscriminator\n=\nNone\n,\nstrict\n=\n_Unset\n,\nmultiple_of\n=\n_Unset\n,\nallow_inf_nan\n=\n_Unset\n,\nmax_digits\n=\n_Unset\n,\ndecimal_places\n=\n_Unset\n,\nexamples\n=\nNone\n,\nexample\n=\n_Unset\n,\nopenapi_examples\n=\nNone\n,\ndeprecated\n=\nNone\n,\ninclude_in_schema\n=\nTrue\n,\njson_schema_extra\n=\nNone\n,\n**\nextra\n)\nDeclare a path parameter for a\npath operation\n.\nRead more about it in the\nFastAPI docs for Path Parameters and Numeric Validations\n.\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n)],\n):\nreturn\n{\n\"item_id\"\n:\nitem_id\n}\nPARAMETER\nDESCRIPTION\ndefault\nDefault value if the parameter field is not set.\nThis doesn't affect\nPath\nparameters as the value is always required.\nThe parameter is available only for compatibility.\nTYPE:\nAny\nDEFAULT:\n...\ndefault_factory\nA callable to generate the default value.\nThis doesn't affect\nPath\nparameters as the value is always required.\nThe parameter is available only for compatibility.\nTYPE:\nUnion\n[\nCallable\n[[],\nAny\n], None]\nDEFAULT:\n_Unset\nalias\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nalias_priority\nPriority of the alias. This affects whether an alias generator is used.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nvalidation_alias\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nserialization_alias\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\ntitle\nHuman-readable title.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nHuman-readable description.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ngt\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nge\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nlt\nLess than. If set, value must be less than this. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nle\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nmin_length\nMinimum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\nmax_length\nMaximum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\npattern\nRegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nregex\nDeprecated in FastAPI 0.100.0 and Pydantic v2, use\npattern\ninstead. RegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndiscriminator\nParameter field name for discriminating the type in a tagged union.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nstrict\nIf\nTrue\n, strict validation is applied to the field.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmultiple_of\nValue must be a multiple of this. Only applicable to numbers.\nTYPE:\nUnion\n[\nfloat\n, None]\nDEFAULT:\n_Unset\nallow_inf_nan\nAllow\ninf\n,\n-inf\n,\nnan\n. Only applicable to numbers.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmax_digits\nMaximum number of allow digits for strings.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\ndecimal_places\nMaximum number of decimal places allowed for numbers.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nexamples\nExample values for this field.\nTYPE:\nOptional\n[\nList\n[\nAny\n]]\nDEFAULT:\nNone\nexample\nDeprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, although still supported. Use examples instead.\nTYPE:\nOptional\n[\nAny\n]\nDEFAULT:\n_Unset\nopenapi_examples\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nSwagger UI (that provides the\n/docs\ninterface) has better support for the\nOpenAPI-specific examples than the JSON Schema\nexamples\n, that's the main\nuse case for this.\nRead more about it in the\nFastAPI docs for Declare Request Example Data\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nExample\n]]\nDEFAULT:\nNone\ndeprecated\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n, None]\nDEFAULT:\nNone\ninclude_in_schema\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nbool\nDEFAULT:\nTrue\njson_schema_extra\nAny additional JSON schema data.\nTYPE:\nUnion\n[\nDict\n[\nstr\n,\nAny\n], None]\nDEFAULT:\nNone\n**extra\nThe\nextra\nkwargs is deprecated. Use\njson_schema_extra\ninstead. Include extra fields used by the JSON Schema.\nTYPE:\nAny\nDEFAULT:\n{}\nSource code in\nfastapi/param_functions.py\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\ndef\nPath\n(\n# noqa: N802\ndefault\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nDefault value if the parameter field is not set.\nThis doesn't affect `Path` parameters as the value is always required.\nThe parameter is available only for compatibility.\n\"\"\"\n),\n]\n=\n...\n,\n*\n,\ndefault_factory\n:\nAnnotated\n[\nUnion\n[\nCallable\n[[],\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nA callable to generate the default value.\nThis doesn't affect `Path` parameters as the value is always required.\nThe parameter is available only for compatibility.\n\"\"\"\n),\n]\n=\n_Unset\n,\nalias\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\n\"\"\"\n),\n]\n=\nNone\n,\nalias_priority\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nPriority of the alias. This affects whether an alias generator is used.\n\"\"\"\n),\n]\n=\n_Unset\n,\n# TODO: update when deprecating Pydantic v1, import these types\n# validation_alias: str | AliasPath | AliasChoices | None\nvalidation_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\n\"\"\"\n),\n]\n=\nNone\n,\nserialization_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\n\"\"\"\n),\n]\n=\nNone\n,\ntitle\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable title.\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable description.\n\"\"\"\n),\n]\n=\nNone\n,\ngt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\n\"\"\"\n),\n]\n=\nNone\n,\nge\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nlt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than. If set, value must be less than this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nle\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nmin_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMinimum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nmax_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMaximum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\npattern\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nregex\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\ndeprecated\n(\n\"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n),\n]\n=\nNone\n,\ndiscriminator\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\nParameter field name for discriminating the type in a tagged union.\n\"\"\"\n),\n]\n=\nNone\n,\nstrict\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nIf `True`, strict validation is applied to the field.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmultiple_of\n:\nAnnotated\n[\nUnion\n[\nfloat\n,\nNone\n],\nDoc\n(\n\"\"\"\nValue must be a multiple of this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nallow_inf_nan\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nAllow `inf`, `-inf`, `nan`. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmax_digits\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of allow digits for strings.\n\"\"\"\n),\n]\n=\n_Unset\n,\ndecimal_places\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of decimal places allowed for numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nexamples\n:\nAnnotated\n[\nOptional\n[\nList\n[\nAny\n]],\nDoc\n(\n\"\"\"\nExample values for this field.\n\"\"\"\n),\n]\n=\nNone\n,\nexample\n:\nAnnotated\n[\nOptional\n[\nAny\n],\ndeprecated\n(\n\"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n\"although still supported. Use examples instead.\"\n),\n]\n=\n_Unset\n,\nopenapi_examples\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nExample\n]],\nDoc\n(\n\"\"\"\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nSwagger UI (that provides the `/docs` interface) has better support for the\nOpenAPI-specific examples than the JSON Schema `examples`, that's the main\nuse case for this.\nRead more about it in the\n[FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nTrue\n,\njson_schema_extra\n:\nAnnotated\n[\nUnion\n[\nDict\n[\nstr\n,\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nAny additional JSON schema data.\n\"\"\"\n),\n]\n=\nNone\n,\n**\nextra\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nInclude extra fields used by the JSON Schema.\n\"\"\"\n),\ndeprecated\n(\n\"\"\"\nThe `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n\"\"\"\n),\n],\n)\n->\nAny\n:\n\"\"\"\nDeclare a path parameter for a *path operation*.\nRead more about it in the\n[FastAPI docs for Path Parameters and Numeric Validations](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/).\n```python\nfrom typing import Annotated\nfrom fastapi import FastAPI, Path\napp = FastAPI()\n@app.get(\"/items/{item_id}\")\nasync def read_items(\nitem_id: Annotated[int, Path(title=\"The ID of the item to get\")],\n):\nreturn {\"item_id\": item_id}\n```\n\"\"\"\nreturn\nparams\n.\nPath\n(\ndefault\n=\ndefault\n,\ndefault_factory\n=\ndefault_factory\n,\nalias\n=\nalias\n,\nalias_priority\n=\nalias_priority\n,\nvalidation_alias\n=\nvalidation_alias\n,\nserialization_alias\n=\nserialization_alias\n,\ntitle\n=\ntitle\n,\ndescription\n=\ndescription\n,\ngt\n=\ngt\n,\nge\n=\nge\n,\nlt\n=\nlt\n,\nle\n=\nle\n,\nmin_length\n=\nmin_length\n,\nmax_length\n=\nmax_length\n,\npattern\n=\npattern\n,\nregex\n=\nregex\n,\ndiscriminator\n=\ndiscriminator\n,\nstrict\n=\nstrict\n,\nmultiple_of\n=\nmultiple_of\n,\nallow_inf_nan\n=\nallow_inf_nan\n,\nmax_digits\n=\nmax_digits\n,\ndecimal_places\n=\ndecimal_places\n,\nexample\n=\nexample\n,\nexamples\n=\nexamples\n,\nopenapi_examples\n=\nopenapi_examples\n,\ndeprecated\n=\ndeprecated\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\njson_schema_extra\n=\njson_schema_extra\n,\n**\nextra\n,\n)\nfastapi.Body\n¶\nBody\n(\ndefault\n=\nUndefined\n,\n*\n,\ndefault_factory\n=\n_Unset\n,\nembed\n=\nNone\n,\nmedia_type\n=\n\"application/json\"\n,\nalias\n=\nNone\n,\nalias_priority\n=\n_Unset\n,\nvalidation_alias\n=\nNone\n,\nserialization_alias\n=\nNone\n,\ntitle\n=\nNone\n,\ndescription\n=\nNone\n,\ngt\n=\nNone\n,\nge\n=\nNone\n,\nlt\n=\nNone\n,\nle\n=\nNone\n,\nmin_length\n=\nNone\n,\nmax_length\n=\nNone\n,\npattern\n=\nNone\n,\nregex\n=\nNone\n,\ndiscriminator\n=\nNone\n,\nstrict\n=\n_Unset\n,\nmultiple_of\n=\n_Unset\n,\nallow_inf_nan\n=\n_Unset\n,\nmax_digits\n=\n_Unset\n,\ndecimal_places\n=\n_Unset\n,\nexamples\n=\nNone\n,\nexample\n=\n_Unset\n,\nopenapi_examples\n=\nNone\n,\ndeprecated\n=\nNone\n,\ninclude_in_schema\n=\nTrue\n,\njson_schema_extra\n=\nNone\n,\n**\nextra\n)\nPARAMETER\nDESCRIPTION\ndefault\nDefault value if the parameter field is not set.\nTYPE:\nAny\nDEFAULT:\nUndefined\ndefault_factory\nA callable to generate the default value.\nThis doesn't affect\nPath\nparameters as the value is always required.\nThe parameter is available only for compatibility.\nTYPE:\nUnion\n[\nCallable\n[[],\nAny\n], None]\nDEFAULT:\n_Unset\nembed\nWhen\nembed\nis\nTrue\n, the parameter will be expected in a JSON body as a\nkey instead of being the JSON body itself.\nThis happens automatically when more than one\nBody\nparameter is declared.\nRead more about it in the\nFastAPI docs for Body - Multiple Parameters\n.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\nNone\nmedia_type\nThe media type of this parameter field. Changing it would affect the\ngenerated OpenAPI, but currently it doesn't affect the parsing of the data.\nTYPE:\nstr\nDEFAULT:\n'application/json'\nalias\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nalias_priority\nPriority of the alias. This affects whether an alias generator is used.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nvalidation_alias\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nserialization_alias\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\ntitle\nHuman-readable title.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nHuman-readable description.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ngt\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nge\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nlt\nLess than. If set, value must be less than this. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nle\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nmin_length\nMinimum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\nmax_length\nMaximum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\npattern\nRegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nregex\nDeprecated in FastAPI 0.100.0 and Pydantic v2, use\npattern\ninstead. RegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndiscriminator\nParameter field name for discriminating the type in a tagged union.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nstrict\nIf\nTrue\n, strict validation is applied to the field.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmultiple_of\nValue must be a multiple of this. Only applicable to numbers.\nTYPE:\nUnion\n[\nfloat\n, None]\nDEFAULT:\n_Unset\nallow_inf_nan\nAllow\ninf\n,\n-inf\n,\nnan\n. Only applicable to numbers.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmax_digits\nMaximum number of allow digits for strings.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\ndecimal_places\nMaximum number of decimal places allowed for numbers.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nexamples\nExample values for this field.\nTYPE:\nOptional\n[\nList\n[\nAny\n]]\nDEFAULT:\nNone\nexample\nDeprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, although still supported. Use examples instead.\nTYPE:\nOptional\n[\nAny\n]\nDEFAULT:\n_Unset\nopenapi_examples\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nSwagger UI (that provides the\n/docs\ninterface) has better support for the\nOpenAPI-specific examples than the JSON Schema\nexamples\n, that's the main\nuse case for this.\nRead more about it in the\nFastAPI docs for Declare Request Example Data\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nExample\n]]\nDEFAULT:\nNone\ndeprecated\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n, None]\nDEFAULT:\nNone\ninclude_in_schema\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nbool\nDEFAULT:\nTrue\njson_schema_extra\nAny additional JSON schema data.\nTYPE:\nUnion\n[\nDict\n[\nstr\n,\nAny\n], None]\nDEFAULT:\nNone\n**extra\nThe\nextra\nkwargs is deprecated. Use\njson_schema_extra\ninstead. Include extra fields used by the JSON Schema.\nTYPE:\nAny\nDEFAULT:\n{}\nSource code in\nfastapi/param_functions.py\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\ndef\nBody\n(\n# noqa: N802\ndefault\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nDefault value if the parameter field is not set.\n\"\"\"\n),\n]\n=\nUndefined\n,\n*\n,\ndefault_factory\n:\nAnnotated\n[\nUnion\n[\nCallable\n[[],\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nA callable to generate the default value.\nThis doesn't affect `Path` parameters as the value is always required.\nThe parameter is available only for compatibility.\n\"\"\"\n),\n]\n=\n_Unset\n,\nembed\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nWhen `embed` is `True`, the parameter will be expected in a JSON body as a\nkey instead of being the JSON body itself.\nThis happens automatically when more than one `Body` parameter is declared.\nRead more about it in the\n[FastAPI docs for Body - Multiple Parameters](https://fastapi.tiangolo.com/tutorial/body-multiple-params/#embed-a-single-body-parameter).\n\"\"\"\n),\n]\n=\nNone\n,\nmedia_type\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe media type of this parameter field. Changing it would affect the\ngenerated OpenAPI, but currently it doesn't affect the parsing of the data.\n\"\"\"\n),\n]\n=\n\"application/json\"\n,\nalias\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\n\"\"\"\n),\n]\n=\nNone\n,\nalias_priority\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nPriority of the alias. This affects whether an alias generator is used.\n\"\"\"\n),\n]\n=\n_Unset\n,\n# TODO: update when deprecating Pydantic v1, import these types\n# validation_alias: str | AliasPath | AliasChoices | None\nvalidation_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\n\"\"\"\n),\n]\n=\nNone\n,\nserialization_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\n\"\"\"\n),\n]\n=\nNone\n,\ntitle\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable title.\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable description.\n\"\"\"\n),\n]\n=\nNone\n,\ngt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\n\"\"\"\n),\n]\n=\nNone\n,\nge\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nlt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than. If set, value must be less than this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nle\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nmin_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMinimum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nmax_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMaximum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\npattern\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nregex\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\ndeprecated\n(\n\"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n),\n]\n=\nNone\n,\ndiscriminator\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\nParameter field name for discriminating the type in a tagged union.\n\"\"\"\n),\n]\n=\nNone\n,\nstrict\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nIf `True`, strict validation is applied to the field.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmultiple_of\n:\nAnnotated\n[\nUnion\n[\nfloat\n,\nNone\n],\nDoc\n(\n\"\"\"\nValue must be a multiple of this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nallow_inf_nan\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nAllow `inf`, `-inf`, `nan`. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmax_digits\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of allow digits for strings.\n\"\"\"\n),\n]\n=\n_Unset\n,\ndecimal_places\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of decimal places allowed for numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nexamples\n:\nAnnotated\n[\nOptional\n[\nList\n[\nAny\n]],\nDoc\n(\n\"\"\"\nExample values for this field.\n\"\"\"\n),\n]\n=\nNone\n,\nexample\n:\nAnnotated\n[\nOptional\n[\nAny\n],\ndeprecated\n(\n\"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n\"although still supported. Use examples instead.\"\n),\n]\n=\n_Unset\n,\nopenapi_examples\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nExample\n]],\nDoc\n(\n\"\"\"\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nSwagger UI (that provides the `/docs` interface) has better support for the\nOpenAPI-specific examples than the JSON Schema `examples`, that's the main\nuse case for this.\nRead more about it in the\n[FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nTrue\n,\njson_schema_extra\n:\nAnnotated\n[\nUnion\n[\nDict\n[\nstr\n,\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nAny additional JSON schema data.\n\"\"\"\n),\n]\n=\nNone\n,\n**\nextra\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nInclude extra fields used by the JSON Schema.\n\"\"\"\n),\ndeprecated\n(\n\"\"\"\nThe `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n\"\"\"\n),\n],\n)\n->\nAny\n:\nreturn\nparams\n.\nBody\n(\ndefault\n=\ndefault\n,\ndefault_factory\n=\ndefault_factory\n,\nembed\n=\nembed\n,\nmedia_type\n=\nmedia_type\n,\nalias\n=\nalias\n,\nalias_priority\n=\nalias_priority\n,\nvalidation_alias\n=\nvalidation_alias\n,\nserialization_alias\n=\nserialization_alias\n,\ntitle\n=\ntitle\n,\ndescription\n=\ndescription\n,\ngt\n=\ngt\n,\nge\n=\nge\n,\nlt\n=\nlt\n,\nle\n=\nle\n,\nmin_length\n=\nmin_length\n,\nmax_length\n=\nmax_length\n,\npattern\n=\npattern\n,\nregex\n=\nregex\n,\ndiscriminator\n=\ndiscriminator\n,\nstrict\n=\nstrict\n,\nmultiple_of\n=\nmultiple_of\n,\nallow_inf_nan\n=\nallow_inf_nan\n,\nmax_digits\n=\nmax_digits\n,\ndecimal_places\n=\ndecimal_places\n,\nexample\n=\nexample\n,\nexamples\n=\nexamples\n,\nopenapi_examples\n=\nopenapi_examples\n,\ndeprecated\n=\ndeprecated\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\njson_schema_extra\n=\njson_schema_extra\n,\n**\nextra\n,\n)\nfastapi.Cookie\n¶\nCookie\n(\ndefault\n=\nUndefined\n,\n*\n,\ndefault_factory\n=\n_Unset\n,\nalias\n=\nNone\n,\nalias_priority\n=\n_Unset\n,\nvalidation_alias\n=\nNone\n,\nserialization_alias\n=\nNone\n,\ntitle\n=\nNone\n,\ndescription\n=\nNone\n,\ngt\n=\nNone\n,\nge\n=\nNone\n,\nlt\n=\nNone\n,\nle\n=\nNone\n,\nmin_length\n=\nNone\n,\nmax_length\n=\nNone\n,\npattern\n=\nNone\n,\nregex\n=\nNone\n,\ndiscriminator\n=\nNone\n,\nstrict\n=\n_Unset\n,\nmultiple_of\n=\n_Unset\n,\nallow_inf_nan\n=\n_Unset\n,\nmax_digits\n=\n_Unset\n,\ndecimal_places\n=\n_Unset\n,\nexamples\n=\nNone\n,\nexample\n=\n_Unset\n,\nopenapi_examples\n=\nNone\n,\ndeprecated\n=\nNone\n,\ninclude_in_schema\n=\nTrue\n,\njson_schema_extra\n=\nNone\n,\n**\nextra\n)\nPARAMETER\nDESCRIPTION\ndefault\nDefault value if the parameter field is not set.\nTYPE:\nAny\nDEFAULT:\nUndefined\ndefault_factory\nA callable to generate the default value.\nThis doesn't affect\nPath\nparameters as the value is always required.\nThe parameter is available only for compatibility.\nTYPE:\nUnion\n[\nCallable\n[[],\nAny\n], None]\nDEFAULT:\n_Unset\nalias\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nalias_priority\nPriority of the alias. This affects whether an alias generator is used.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nvalidation_alias\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nserialization_alias\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\ntitle\nHuman-readable title.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nHuman-readable description.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ngt\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nge\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nlt\nLess than. If set, value must be less than this. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nle\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nmin_length\nMinimum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\nmax_length\nMaximum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\npattern\nRegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nregex\nDeprecated in FastAPI 0.100.0 and Pydantic v2, use\npattern\ninstead. RegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndiscriminator\nParameter field name for discriminating the type in a tagged union.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nstrict\nIf\nTrue\n, strict validation is applied to the field.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmultiple_of\nValue must be a multiple of this. Only applicable to numbers.\nTYPE:\nUnion\n[\nfloat\n, None]\nDEFAULT:\n_Unset\nallow_inf_nan\nAllow\ninf\n,\n-inf\n,\nnan\n. Only applicable to numbers.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmax_digits\nMaximum number of allow digits for strings.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\ndecimal_places\nMaximum number of decimal places allowed for numbers.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nexamples\nExample values for this field.\nTYPE:\nOptional\n[\nList\n[\nAny\n]]\nDEFAULT:\nNone\nexample\nDeprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, although still supported. Use examples instead.\nTYPE:\nOptional\n[\nAny\n]\nDEFAULT:\n_Unset\nopenapi_examples\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nSwagger UI (that provides the\n/docs\ninterface) has better support for the\nOpenAPI-specific examples than the JSON Schema\nexamples\n, that's the main\nuse case for this.\nRead more about it in the\nFastAPI docs for Declare Request Example Data\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nExample\n]]\nDEFAULT:\nNone\ndeprecated\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n, None]\nDEFAULT:\nNone\ninclude_in_schema\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nbool\nDEFAULT:\nTrue\njson_schema_extra\nAny additional JSON schema data.\nTYPE:\nUnion\n[\nDict\n[\nstr\n,\nAny\n], None]\nDEFAULT:\nNone\n**extra\nThe\nextra\nkwargs is deprecated. Use\njson_schema_extra\ninstead. Include extra fields used by the JSON Schema.\nTYPE:\nAny\nDEFAULT:\n{}\nSource code in\nfastapi/param_functions.py\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\n995\n996\n997\n998\n999\n1000\n1001\n1002\n1003\n1004\n1005\n1006\n1007\n1008\n1009\n1010\n1011\n1012\n1013\n1014\n1015\n1016\n1017\n1018\n1019\n1020\n1021\n1022\n1023\n1024\n1025\n1026\n1027\n1028\n1029\n1030\n1031\n1032\n1033\n1034\n1035\n1036\n1037\n1038\n1039\n1040\n1041\n1042\n1043\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\n1076\n1077\n1078\n1079\n1080\n1081\n1082\n1083\n1084\n1085\n1086\n1087\n1088\n1089\n1090\n1091\n1092\n1093\n1094\n1095\n1096\n1097\n1098\n1099\n1100\n1101\n1102\n1103\n1104\n1105\n1106\n1107\n1108\n1109\n1110\n1111\n1112\n1113\n1114\n1115\n1116\n1117\n1118\n1119\n1120\n1121\n1122\n1123\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\n1190\n1191\n1192\n1193\n1194\n1195\n1196\n1197\n1198\n1199\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\ndef\nCookie\n(\n# noqa: N802\ndefault\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nDefault value if the parameter field is not set.\n\"\"\"\n),\n]\n=\nUndefined\n,\n*\n,\ndefault_factory\n:\nAnnotated\n[\nUnion\n[\nCallable\n[[],\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nA callable to generate the default value.\nThis doesn't affect `Path` parameters as the value is always required.\nThe parameter is available only for compatibility.\n\"\"\"\n),\n]\n=\n_Unset\n,\nalias\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\n\"\"\"\n),\n]\n=\nNone\n,\nalias_priority\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nPriority of the alias. This affects whether an alias generator is used.\n\"\"\"\n),\n]\n=\n_Unset\n,\n# TODO: update when deprecating Pydantic v1, import these types\n# validation_alias: str | AliasPath | AliasChoices | None\nvalidation_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\n\"\"\"\n),\n]\n=\nNone\n,\nserialization_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\n\"\"\"\n),\n]\n=\nNone\n,\ntitle\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable title.\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable description.\n\"\"\"\n),\n]\n=\nNone\n,\ngt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\n\"\"\"\n),\n]\n=\nNone\n,\nge\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nlt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than. If set, value must be less than this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nle\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nmin_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMinimum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nmax_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMaximum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\npattern\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nregex\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\ndeprecated\n(\n\"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n),\n]\n=\nNone\n,\ndiscriminator\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\nParameter field name for discriminating the type in a tagged union.\n\"\"\"\n),\n]\n=\nNone\n,\nstrict\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nIf `True`, strict validation is applied to the field.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmultiple_of\n:\nAnnotated\n[\nUnion\n[\nfloat\n,\nNone\n],\nDoc\n(\n\"\"\"\nValue must be a multiple of this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nallow_inf_nan\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nAllow `inf`, `-inf`, `nan`. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmax_digits\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of allow digits for strings.\n\"\"\"\n),\n]\n=\n_Unset\n,\ndecimal_places\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of decimal places allowed for numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nexamples\n:\nAnnotated\n[\nOptional\n[\nList\n[\nAny\n]],\nDoc\n(\n\"\"\"\nExample values for this field.\n\"\"\"\n),\n]\n=\nNone\n,\nexample\n:\nAnnotated\n[\nOptional\n[\nAny\n],\ndeprecated\n(\n\"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n\"although still supported. Use examples instead.\"\n),\n]\n=\n_Unset\n,\nopenapi_examples\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nExample\n]],\nDoc\n(\n\"\"\"\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nSwagger UI (that provides the `/docs` interface) has better support for the\nOpenAPI-specific examples than the JSON Schema `examples`, that's the main\nuse case for this.\nRead more about it in the\n[FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nTrue\n,\njson_schema_extra\n:\nAnnotated\n[\nUnion\n[\nDict\n[\nstr\n,\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nAny additional JSON schema data.\n\"\"\"\n),\n]\n=\nNone\n,\n**\nextra\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nInclude extra fields used by the JSON Schema.\n\"\"\"\n),\ndeprecated\n(\n\"\"\"\nThe `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n\"\"\"\n),\n],\n)\n->\nAny\n:\nreturn\nparams\n.\nCookie\n(\ndefault\n=\ndefault\n,\ndefault_factory\n=\ndefault_factory\n,\nalias\n=\nalias\n,\nalias_priority\n=\nalias_priority\n,\nvalidation_alias\n=\nvalidation_alias\n,\nserialization_alias\n=\nserialization_alias\n,\ntitle\n=\ntitle\n,\ndescription\n=\ndescription\n,\ngt\n=\ngt\n,\nge\n=\nge\n,\nlt\n=\nlt\n,\nle\n=\nle\n,\nmin_length\n=\nmin_length\n,\nmax_length\n=\nmax_length\n,\npattern\n=\npattern\n,\nregex\n=\nregex\n,\ndiscriminator\n=\ndiscriminator\n,\nstrict\n=\nstrict\n,\nmultiple_of\n=\nmultiple_of\n,\nallow_inf_nan\n=\nallow_inf_nan\n,\nmax_digits\n=\nmax_digits\n,\ndecimal_places\n=\ndecimal_places\n,\nexample\n=\nexample\n,\nexamples\n=\nexamples\n,\nopenapi_examples\n=\nopenapi_examples\n,\ndeprecated\n=\ndeprecated\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\njson_schema_extra\n=\njson_schema_extra\n,\n**\nextra\n,\n)\nfastapi.Header\n¶\nHeader\n(\ndefault\n=\nUndefined\n,\n*\n,\ndefault_factory\n=\n_Unset\n,\nalias\n=\nNone\n,\nalias_priority\n=\n_Unset\n,\nvalidation_alias\n=\nNone\n,\nserialization_alias\n=\nNone\n,\nconvert_underscores\n=\nTrue\n,\ntitle\n=\nNone\n,\ndescription\n=\nNone\n,\ngt\n=\nNone\n,\nge\n=\nNone\n,\nlt\n=\nNone\n,\nle\n=\nNone\n,\nmin_length\n=\nNone\n,\nmax_length\n=\nNone\n,\npattern\n=\nNone\n,\nregex\n=\nNone\n,\ndiscriminator\n=\nNone\n,\nstrict\n=\n_Unset\n,\nmultiple_of\n=\n_Unset\n,\nallow_inf_nan\n=\n_Unset\n,\nmax_digits\n=\n_Unset\n,\ndecimal_places\n=\n_Unset\n,\nexamples\n=\nNone\n,\nexample\n=\n_Unset\n,\nopenapi_examples\n=\nNone\n,\ndeprecated\n=\nNone\n,\ninclude_in_schema\n=\nTrue\n,\njson_schema_extra\n=\nNone\n,\n**\nextra\n)\nPARAMETER\nDESCRIPTION\ndefault\nDefault value if the parameter field is not set.\nTYPE:\nAny\nDEFAULT:\nUndefined\ndefault_factory\nA callable to generate the default value.\nThis doesn't affect\nPath\nparameters as the value is always required.\nThe parameter is available only for compatibility.\nTYPE:\nUnion\n[\nCallable\n[[],\nAny\n], None]\nDEFAULT:\n_Unset\nalias\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nalias_priority\nPriority of the alias. This affects whether an alias generator is used.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nvalidation_alias\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nserialization_alias\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nconvert_underscores\nAutomatically convert underscores to hyphens in the parameter field name.\nRead more about it in the\nFastAPI docs for Header Parameters\nTYPE:\nbool\nDEFAULT:\nTrue\ntitle\nHuman-readable title.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nHuman-readable description.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ngt\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nge\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nlt\nLess than. If set, value must be less than this. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nle\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nmin_length\nMinimum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\nmax_length\nMaximum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\npattern\nRegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nregex\nDeprecated in FastAPI 0.100.0 and Pydantic v2, use\npattern\ninstead. RegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndiscriminator\nParameter field name for discriminating the type in a tagged union.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nstrict\nIf\nTrue\n, strict validation is applied to the field.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmultiple_of\nValue must be a multiple of this. Only applicable to numbers.\nTYPE:\nUnion\n[\nfloat\n, None]\nDEFAULT:\n_Unset\nallow_inf_nan\nAllow\ninf\n,\n-inf\n,\nnan\n. Only applicable to numbers.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmax_digits\nMaximum number of allow digits for strings.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\ndecimal_places\nMaximum number of decimal places allowed for numbers.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nexamples\nExample values for this field.\nTYPE:\nOptional\n[\nList\n[\nAny\n]]\nDEFAULT:\nNone\nexample\nDeprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, although still supported. Use examples instead.\nTYPE:\nOptional\n[\nAny\n]\nDEFAULT:\n_Unset\nopenapi_examples\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nSwagger UI (that provides the\n/docs\ninterface) has better support for the\nOpenAPI-specific examples than the JSON Schema\nexamples\n, that's the main\nuse case for this.\nRead more about it in the\nFastAPI docs for Declare Request Example Data\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nExample\n]]\nDEFAULT:\nNone\ndeprecated\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n, None]\nDEFAULT:\nNone\ninclude_in_schema\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nbool\nDEFAULT:\nTrue\njson_schema_extra\nAny additional JSON schema data.\nTYPE:\nUnion\n[\nDict\n[\nstr\n,\nAny\n], None]\nDEFAULT:\nNone\n**extra\nThe\nextra\nkwargs is deprecated. Use\njson_schema_extra\ninstead. Include extra fields used by the JSON Schema.\nTYPE:\nAny\nDEFAULT:\n{}\nSource code in\nfastapi/param_functions.py\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\ndef\nHeader\n(\n# noqa: N802\ndefault\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nDefault value if the parameter field is not set.\n\"\"\"\n),\n]\n=\nUndefined\n,\n*\n,\ndefault_factory\n:\nAnnotated\n[\nUnion\n[\nCallable\n[[],\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nA callable to generate the default value.\nThis doesn't affect `Path` parameters as the value is always required.\nThe parameter is available only for compatibility.\n\"\"\"\n),\n]\n=\n_Unset\n,\nalias\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\n\"\"\"\n),\n]\n=\nNone\n,\nalias_priority\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nPriority of the alias. This affects whether an alias generator is used.\n\"\"\"\n),\n]\n=\n_Unset\n,\n# TODO: update when deprecating Pydantic v1, import these types\n# validation_alias: str | AliasPath | AliasChoices | None\nvalidation_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\n\"\"\"\n),\n]\n=\nNone\n,\nserialization_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\n\"\"\"\n),\n]\n=\nNone\n,\nconvert_underscores\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nAutomatically convert underscores to hyphens in the parameter field name.\nRead more about it in the\n[FastAPI docs for Header Parameters](https://fastapi.tiangolo.com/tutorial/header-params/#automatic-conversion)\n\"\"\"\n),\n]\n=\nTrue\n,\ntitle\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable title.\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable description.\n\"\"\"\n),\n]\n=\nNone\n,\ngt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\n\"\"\"\n),\n]\n=\nNone\n,\nge\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nlt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than. If set, value must be less than this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nle\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nmin_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMinimum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nmax_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMaximum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\npattern\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nregex\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\ndeprecated\n(\n\"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n),\n]\n=\nNone\n,\ndiscriminator\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\nParameter field name for discriminating the type in a tagged union.\n\"\"\"\n),\n]\n=\nNone\n,\nstrict\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nIf `True`, strict validation is applied to the field.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmultiple_of\n:\nAnnotated\n[\nUnion\n[\nfloat\n,\nNone\n],\nDoc\n(\n\"\"\"\nValue must be a multiple of this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nallow_inf_nan\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nAllow `inf`, `-inf`, `nan`. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmax_digits\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of allow digits for strings.\n\"\"\"\n),\n]\n=\n_Unset\n,\ndecimal_places\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of decimal places allowed for numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nexamples\n:\nAnnotated\n[\nOptional\n[\nList\n[\nAny\n]],\nDoc\n(\n\"\"\"\nExample values for this field.\n\"\"\"\n),\n]\n=\nNone\n,\nexample\n:\nAnnotated\n[\nOptional\n[\nAny\n],\ndeprecated\n(\n\"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n\"although still supported. Use examples instead.\"\n),\n]\n=\n_Unset\n,\nopenapi_examples\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nExample\n]],\nDoc\n(\n\"\"\"\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nSwagger UI (that provides the `/docs` interface) has better support for the\nOpenAPI-specific examples than the JSON Schema `examples`, that's the main\nuse case for this.\nRead more about it in the\n[FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nTrue\n,\njson_schema_extra\n:\nAnnotated\n[\nUnion\n[\nDict\n[\nstr\n,\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nAny additional JSON schema data.\n\"\"\"\n),\n]\n=\nNone\n,\n**\nextra\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nInclude extra fields used by the JSON Schema.\n\"\"\"\n),\ndeprecated\n(\n\"\"\"\nThe `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n\"\"\"\n),\n],\n)\n->\nAny\n:\nreturn\nparams\n.\nHeader\n(\ndefault\n=\ndefault\n,\ndefault_factory\n=\ndefault_factory\n,\nalias\n=\nalias\n,\nalias_priority\n=\nalias_priority\n,\nvalidation_alias\n=\nvalidation_alias\n,\nserialization_alias\n=\nserialization_alias\n,\nconvert_underscores\n=\nconvert_underscores\n,\ntitle\n=\ntitle\n,\ndescription\n=\ndescription\n,\ngt\n=\ngt\n,\nge\n=\nge\n,\nlt\n=\nlt\n,\nle\n=\nle\n,\nmin_length\n=\nmin_length\n,\nmax_length\n=\nmax_length\n,\npattern\n=\npattern\n,\nregex\n=\nregex\n,\ndiscriminator\n=\ndiscriminator\n,\nstrict\n=\nstrict\n,\nmultiple_of\n=\nmultiple_of\n,\nallow_inf_nan\n=\nallow_inf_nan\n,\nmax_digits\n=\nmax_digits\n,\ndecimal_places\n=\ndecimal_places\n,\nexample\n=\nexample\n,\nexamples\n=\nexamples\n,\nopenapi_examples\n=\nopenapi_examples\n,\ndeprecated\n=\ndeprecated\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\njson_schema_extra\n=\njson_schema_extra\n,\n**\nextra\n,\n)\nfastapi.Form\n¶\nForm\n(\ndefault\n=\nUndefined\n,\n*\n,\ndefault_factory\n=\n_Unset\n,\nmedia_type\n=\n\"application/x-www-form-urlencoded\"\n,\nalias\n=\nNone\n,\nalias_priority\n=\n_Unset\n,\nvalidation_alias\n=\nNone\n,\nserialization_alias\n=\nNone\n,\ntitle\n=\nNone\n,\ndescription\n=\nNone\n,\ngt\n=\nNone\n,\nge\n=\nNone\n,\nlt\n=\nNone\n,\nle\n=\nNone\n,\nmin_length\n=\nNone\n,\nmax_length\n=\nNone\n,\npattern\n=\nNone\n,\nregex\n=\nNone\n,\ndiscriminator\n=\nNone\n,\nstrict\n=\n_Unset\n,\nmultiple_of\n=\n_Unset\n,\nallow_inf_nan\n=\n_Unset\n,\nmax_digits\n=\n_Unset\n,\ndecimal_places\n=\n_Unset\n,\nexamples\n=\nNone\n,\nexample\n=\n_Unset\n,\nopenapi_examples\n=\nNone\n,\ndeprecated\n=\nNone\n,\ninclude_in_schema\n=\nTrue\n,\njson_schema_extra\n=\nNone\n,\n**\nextra\n)\nPARAMETER\nDESCRIPTION\ndefault\nDefault value if the parameter field is not set.\nTYPE:\nAny\nDEFAULT:\nUndefined\ndefault_factory\nA callable to generate the default value.\nThis doesn't affect\nPath\nparameters as the value is always required.\nThe parameter is available only for compatibility.\nTYPE:\nUnion\n[\nCallable\n[[],\nAny\n], None]\nDEFAULT:\n_Unset\nmedia_type\nThe media type of this parameter field. Changing it would affect the\ngenerated OpenAPI, but currently it doesn't affect the parsing of the data.\nTYPE:\nstr\nDEFAULT:\n'application/x-www-form-urlencoded'\nalias\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nalias_priority\nPriority of the alias. This affects whether an alias generator is used.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nvalidation_alias\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nserialization_alias\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\ntitle\nHuman-readable title.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nHuman-readable description.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ngt\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nge\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nlt\nLess than. If set, value must be less than this. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nle\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nmin_length\nMinimum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\nmax_length\nMaximum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\npattern\nRegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nregex\nDeprecated in FastAPI 0.100.0 and Pydantic v2, use\npattern\ninstead. RegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndiscriminator\nParameter field name for discriminating the type in a tagged union.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nstrict\nIf\nTrue\n, strict validation is applied to the field.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmultiple_of\nValue must be a multiple of this. Only applicable to numbers.\nTYPE:\nUnion\n[\nfloat\n, None]\nDEFAULT:\n_Unset\nallow_inf_nan\nAllow\ninf\n,\n-inf\n,\nnan\n. Only applicable to numbers.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmax_digits\nMaximum number of allow digits for strings.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\ndecimal_places\nMaximum number of decimal places allowed for numbers.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nexamples\nExample values for this field.\nTYPE:\nOptional\n[\nList\n[\nAny\n]]\nDEFAULT:\nNone\nexample\nDeprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, although still supported. Use examples instead.\nTYPE:\nOptional\n[\nAny\n]\nDEFAULT:\n_Unset\nopenapi_examples\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nSwagger UI (that provides the\n/docs\ninterface) has better support for the\nOpenAPI-specific examples than the JSON Schema\nexamples\n, that's the main\nuse case for this.\nRead more about it in the\nFastAPI docs for Declare Request Example Data\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nExample\n]]\nDEFAULT:\nNone\ndeprecated\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n, None]\nDEFAULT:\nNone\ninclude_in_schema\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nbool\nDEFAULT:\nTrue\njson_schema_extra\nAny additional JSON schema data.\nTYPE:\nUnion\n[\nDict\n[\nstr\n,\nAny\n], None]\nDEFAULT:\nNone\n**extra\nThe\nextra\nkwargs is deprecated. Use\njson_schema_extra\ninstead. Include extra fields used by the JSON Schema.\nTYPE:\nAny\nDEFAULT:\n{}\nSource code in\nfastapi/param_functions.py\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\ndef\nForm\n(\n# noqa: N802\ndefault\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nDefault value if the parameter field is not set.\n\"\"\"\n),\n]\n=\nUndefined\n,\n*\n,\ndefault_factory\n:\nAnnotated\n[\nUnion\n[\nCallable\n[[],\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nA callable to generate the default value.\nThis doesn't affect `Path` parameters as the value is always required.\nThe parameter is available only for compatibility.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmedia_type\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe media type of this parameter field. Changing it would affect the\ngenerated OpenAPI, but currently it doesn't affect the parsing of the data.\n\"\"\"\n),\n]\n=\n\"application/x-www-form-urlencoded\"\n,\nalias\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\n\"\"\"\n),\n]\n=\nNone\n,\nalias_priority\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nPriority of the alias. This affects whether an alias generator is used.\n\"\"\"\n),\n]\n=\n_Unset\n,\n# TODO: update when deprecating Pydantic v1, import these types\n# validation_alias: str | AliasPath | AliasChoices | None\nvalidation_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\n\"\"\"\n),\n]\n=\nNone\n,\nserialization_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\n\"\"\"\n),\n]\n=\nNone\n,\ntitle\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable title.\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable description.\n\"\"\"\n),\n]\n=\nNone\n,\ngt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\n\"\"\"\n),\n]\n=\nNone\n,\nge\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nlt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than. If set, value must be less than this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nle\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nmin_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMinimum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nmax_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMaximum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\npattern\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nregex\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\ndeprecated\n(\n\"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n),\n]\n=\nNone\n,\ndiscriminator\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\nParameter field name for discriminating the type in a tagged union.\n\"\"\"\n),\n]\n=\nNone\n,\nstrict\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nIf `True`, strict validation is applied to the field.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmultiple_of\n:\nAnnotated\n[\nUnion\n[\nfloat\n,\nNone\n],\nDoc\n(\n\"\"\"\nValue must be a multiple of this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nallow_inf_nan\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nAllow `inf`, `-inf`, `nan`. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmax_digits\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of allow digits for strings.\n\"\"\"\n),\n]\n=\n_Unset\n,\ndecimal_places\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of decimal places allowed for numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nexamples\n:\nAnnotated\n[\nOptional\n[\nList\n[\nAny\n]],\nDoc\n(\n\"\"\"\nExample values for this field.\n\"\"\"\n),\n]\n=\nNone\n,\nexample\n:\nAnnotated\n[\nOptional\n[\nAny\n],\ndeprecated\n(\n\"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n\"although still supported. Use examples instead.\"\n),\n]\n=\n_Unset\n,\nopenapi_examples\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nExample\n]],\nDoc\n(\n\"\"\"\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nSwagger UI (that provides the `/docs` interface) has better support for the\nOpenAPI-specific examples than the JSON Schema `examples`, that's the main\nuse case for this.\nRead more about it in the\n[FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nTrue\n,\njson_schema_extra\n:\nAnnotated\n[\nUnion\n[\nDict\n[\nstr\n,\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nAny additional JSON schema data.\n\"\"\"\n),\n]\n=\nNone\n,\n**\nextra\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nInclude extra fields used by the JSON Schema.\n\"\"\"\n),\ndeprecated\n(\n\"\"\"\nThe `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n\"\"\"\n),\n],\n)\n->\nAny\n:\nreturn\nparams\n.\nForm\n(\ndefault\n=\ndefault\n,\ndefault_factory\n=\ndefault_factory\n,\nmedia_type\n=\nmedia_type\n,\nalias\n=\nalias\n,\nalias_priority\n=\nalias_priority\n,\nvalidation_alias\n=\nvalidation_alias\n,\nserialization_alias\n=\nserialization_alias\n,\ntitle\n=\ntitle\n,\ndescription\n=\ndescription\n,\ngt\n=\ngt\n,\nge\n=\nge\n,\nlt\n=\nlt\n,\nle\n=\nle\n,\nmin_length\n=\nmin_length\n,\nmax_length\n=\nmax_length\n,\npattern\n=\npattern\n,\nregex\n=\nregex\n,\ndiscriminator\n=\ndiscriminator\n,\nstrict\n=\nstrict\n,\nmultiple_of\n=\nmultiple_of\n,\nallow_inf_nan\n=\nallow_inf_nan\n,\nmax_digits\n=\nmax_digits\n,\ndecimal_places\n=\ndecimal_places\n,\nexample\n=\nexample\n,\nexamples\n=\nexamples\n,\nopenapi_examples\n=\nopenapi_examples\n,\ndeprecated\n=\ndeprecated\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\njson_schema_extra\n=\njson_schema_extra\n,\n**\nextra\n,\n)\nfastapi.File\n¶\nFile\n(\ndefault\n=\nUndefined\n,\n*\n,\ndefault_factory\n=\n_Unset\n,\nmedia_type\n=\n\"multipart/form-data\"\n,\nalias\n=\nNone\n,\nalias_priority\n=\n_Unset\n,\nvalidation_alias\n=\nNone\n,\nserialization_alias\n=\nNone\n,\ntitle\n=\nNone\n,\ndescription\n=\nNone\n,\ngt\n=\nNone\n,\nge\n=\nNone\n,\nlt\n=\nNone\n,\nle\n=\nNone\n,\nmin_length\n=\nNone\n,\nmax_length\n=\nNone\n,\npattern\n=\nNone\n,\nregex\n=\nNone\n,\ndiscriminator\n=\nNone\n,\nstrict\n=\n_Unset\n,\nmultiple_of\n=\n_Unset\n,\nallow_inf_nan\n=\n_Unset\n,\nmax_digits\n=\n_Unset\n,\ndecimal_places\n=\n_Unset\n,\nexamples\n=\nNone\n,\nexample\n=\n_Unset\n,\nopenapi_examples\n=\nNone\n,\ndeprecated\n=\nNone\n,\ninclude_in_schema\n=\nTrue\n,\njson_schema_extra\n=\nNone\n,\n**\nextra\n)\nPARAMETER\nDESCRIPTION\ndefault\nDefault value if the parameter field is not set.\nTYPE:\nAny\nDEFAULT:\nUndefined\ndefault_factory\nA callable to generate the default value.\nThis doesn't affect\nPath\nparameters as the value is always required.\nThe parameter is available only for compatibility.\nTYPE:\nUnion\n[\nCallable\n[[],\nAny\n], None]\nDEFAULT:\n_Unset\nmedia_type\nThe media type of this parameter field. Changing it would affect the\ngenerated OpenAPI, but currently it doesn't affect the parsing of the data.\nTYPE:\nstr\nDEFAULT:\n'multipart/form-data'\nalias\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nalias_priority\nPriority of the alias. This affects whether an alias generator is used.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nvalidation_alias\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nserialization_alias\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\ntitle\nHuman-readable title.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nHuman-readable description.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ngt\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nge\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nlt\nLess than. If set, value must be less than this. Only applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nle\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\nTYPE:\nOptional\n[\nfloat\n]\nDEFAULT:\nNone\nmin_length\nMinimum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\nmax_length\nMaximum length for strings.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\npattern\nRegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nregex\nDeprecated in FastAPI 0.100.0 and Pydantic v2, use\npattern\ninstead. RegEx pattern for strings.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndiscriminator\nParameter field name for discriminating the type in a tagged union.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nstrict\nIf\nTrue\n, strict validation is applied to the field.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmultiple_of\nValue must be a multiple of this. Only applicable to numbers.\nTYPE:\nUnion\n[\nfloat\n, None]\nDEFAULT:\n_Unset\nallow_inf_nan\nAllow\ninf\n,\n-inf\n,\nnan\n. Only applicable to numbers.\nTYPE:\nUnion\n[\nbool\n, None]\nDEFAULT:\n_Unset\nmax_digits\nMaximum number of allow digits for strings.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\ndecimal_places\nMaximum number of decimal places allowed for numbers.\nTYPE:\nUnion\n[\nint\n, None]\nDEFAULT:\n_Unset\nexamples\nExample values for this field.\nTYPE:\nOptional\n[\nList\n[\nAny\n]]\nDEFAULT:\nNone\nexample\nDeprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, although still supported. Use examples instead.\nTYPE:\nOptional\n[\nAny\n]\nDEFAULT:\n_Unset\nopenapi_examples\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nSwagger UI (that provides the\n/docs\ninterface) has better support for the\nOpenAPI-specific examples than the JSON Schema\nexamples\n, that's the main\nuse case for this.\nRead more about it in the\nFastAPI docs for Declare Request Example Data\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nExample\n]]\nDEFAULT:\nNone\ndeprecated\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n, None]\nDEFAULT:\nNone\ninclude_in_schema\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nbool\nDEFAULT:\nTrue\njson_schema_extra\nAny additional JSON schema data.\nTYPE:\nUnion\n[\nDict\n[\nstr\n,\nAny\n], None]\nDEFAULT:\nNone\n**extra\nThe\nextra\nkwargs is deprecated. Use\njson_schema_extra\ninstead. Include extra fields used by the JSON Schema.\nTYPE:\nAny\nDEFAULT:\n{}\nSource code in\nfastapi/param_functions.py\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\ndef\nFile\n(\n# noqa: N802\ndefault\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nDefault value if the parameter field is not set.\n\"\"\"\n),\n]\n=\nUndefined\n,\n*\n,\ndefault_factory\n:\nAnnotated\n[\nUnion\n[\nCallable\n[[],\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nA callable to generate the default value.\nThis doesn't affect `Path` parameters as the value is always required.\nThe parameter is available only for compatibility.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmedia_type\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe media type of this parameter field. Changing it would affect the\ngenerated OpenAPI, but currently it doesn't affect the parsing of the data.\n\"\"\"\n),\n]\n=\n\"multipart/form-data\"\n,\nalias\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nAn alternative name for the parameter field.\nThis will be used to extract the data and for the generated OpenAPI.\nIt is particularly useful when you can't use the name you want because it\nis a Python reserved keyword or similar.\n\"\"\"\n),\n]\n=\nNone\n,\nalias_priority\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nPriority of the alias. This affects whether an alias generator is used.\n\"\"\"\n),\n]\n=\n_Unset\n,\n# TODO: update when deprecating Pydantic v1, import these types\n# validation_alias: str | AliasPath | AliasChoices | None\nvalidation_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Whitelist' validation step. The parameter field will be the single one\nallowed by the alias or set of aliases defined.\n\"\"\"\n),\n]\n=\nNone\n,\nserialization_alias\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\n'Blacklist' validation step. The vanilla parameter field will be the\nsingle one of the alias' or set of aliases' fields and all the other\nfields will be ignored at serialization time.\n\"\"\"\n),\n]\n=\nNone\n,\ntitle\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable title.\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHuman-readable description.\n\"\"\"\n),\n]\n=\nNone\n,\ngt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than. If set, value must be greater than this. Only applicable to\nnumbers.\n\"\"\"\n),\n]\n=\nNone\n,\nge\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nGreater than or equal. If set, value must be greater than or equal to\nthis. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nlt\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than. If set, value must be less than this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nle\n:\nAnnotated\n[\nOptional\n[\nfloat\n],\nDoc\n(\n\"\"\"\nLess than or equal. If set, value must be less than or equal to this.\nOnly applicable to numbers.\n\"\"\"\n),\n]\n=\nNone\n,\nmin_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMinimum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nmax_length\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nMaximum length for strings.\n\"\"\"\n),\n]\n=\nNone\n,\npattern\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\n]\n=\nNone\n,\nregex\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nRegEx pattern for strings.\n\"\"\"\n),\ndeprecated\n(\n\"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n),\n]\n=\nNone\n,\ndiscriminator\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\nParameter field name for discriminating the type in a tagged union.\n\"\"\"\n),\n]\n=\nNone\n,\nstrict\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nIf `True`, strict validation is applied to the field.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmultiple_of\n:\nAnnotated\n[\nUnion\n[\nfloat\n,\nNone\n],\nDoc\n(\n\"\"\"\nValue must be a multiple of this. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nallow_inf_nan\n:\nAnnotated\n[\nUnion\n[\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nAllow `inf`, `-inf`, `nan`. Only applicable to numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nmax_digits\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of allow digits for strings.\n\"\"\"\n),\n]\n=\n_Unset\n,\ndecimal_places\n:\nAnnotated\n[\nUnion\n[\nint\n,\nNone\n],\nDoc\n(\n\"\"\"\nMaximum number of decimal places allowed for numbers.\n\"\"\"\n),\n]\n=\n_Unset\n,\nexamples\n:\nAnnotated\n[\nOptional\n[\nList\n[\nAny\n]],\nDoc\n(\n\"\"\"\nExample values for this field.\n\"\"\"\n),\n]\n=\nNone\n,\nexample\n:\nAnnotated\n[\nOptional\n[\nAny\n],\ndeprecated\n(\n\"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n\"although still supported. Use examples instead.\"\n),\n]\n=\n_Unset\n,\nopenapi_examples\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nExample\n]],\nDoc\n(\n\"\"\"\nOpenAPI-specific examples.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nSwagger UI (that provides the `/docs` interface) has better support for the\nOpenAPI-specific examples than the JSON Schema `examples`, that's the main\nuse case for this.\nRead more about it in the\n[FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nUnion\n[\ndeprecated\n,\nstr\n,\nbool\n,\nNone\n],\nDoc\n(\n\"\"\"\nMark this parameter field as deprecated.\nIt will affect the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nTo include (or not) this parameter field in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nTrue\n,\njson_schema_extra\n:\nAnnotated\n[\nUnion\n[\nDict\n[\nstr\n,\nAny\n],\nNone\n],\nDoc\n(\n\"\"\"\nAny additional JSON schema data.\n\"\"\"\n),\n]\n=\nNone\n,\n**\nextra\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nInclude extra fields used by the JSON Schema.\n\"\"\"\n),\ndeprecated\n(\n\"\"\"\nThe `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n\"\"\"\n),\n],\n)\n->\nAny\n:\nreturn\nparams\n.\nFile\n(\ndefault\n=\ndefault\n,\ndefault_factory\n=\ndefault_factory\n,\nmedia_type\n=\nmedia_type\n,\nalias\n=\nalias\n,\nalias_priority\n=\nalias_priority\n,\nvalidation_alias\n=\nvalidation_alias\n,\nserialization_alias\n=\nserialization_alias\n,\ntitle\n=\ntitle\n,\ndescription\n=\ndescription\n,\ngt\n=\ngt\n,\nge\n=\nge\n,\nlt\n=\nlt\n,\nle\n=\nle\n,\nmin_length\n=\nmin_length\n,\nmax_length\n=\nmax_length\n,\npattern\n=\npattern\n,\nregex\n=\nregex\n,\ndiscriminator\n=\ndiscriminator\n,\nstrict\n=\nstrict\n,\nmultiple_of\n=\nmultiple_of\n,\nallow_inf_nan\n=\nallow_inf_nan\n,\nmax_digits\n=\nmax_digits\n,\ndecimal_places\n=\ndecimal_places\n,\nexample\n=\nexample\n,\nexamples\n=\nexamples\n,\nopenapi_examples\n=\nopenapi_examples\n,\ndeprecated\n=\ndeprecated\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\njson_schema_extra\n=\njson_schema_extra\n,\n**\nextra\n,\n)\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/cookie-param-models/",
    "title": "Cookie Parameter Models¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nCookie Parameter Models\nTable of contents\nCookies with a Pydantic Model\nCheck the Docs\nForbid Extra Cookies\nSummary\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nCookies with a Pydantic Model\nCheck the Docs\nForbid Extra Cookies\nSummary\nFastAPI\nLearn\nTutorial - User Guide\nCookie Parameter Models\n¶\nIf you have a group of\ncookies\nthat are related, you can create a\nPydantic model\nto declare them. 🍪\nThis would allow you to\nre-use the model\nin\nmultiple places\nand also to declare validations and metadata for all the parameters at once. 😎\nNote\nThis is supported since FastAPI version\n0.115.0\n. 🤓\nTip\nThis same technique applies to\nQuery\n,\nCookie\n, and\nHeader\n. 😎\nCookies with a Pydantic Model\n¶\nDeclare the\ncookie\nparameters that you need in a\nPydantic model\n, and then declare the parameter as\nCookie\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCookies\n(\nBaseModel\n):\nsession_id\n:\nstr\nfatebook_tracker\n:\nstr\n|\nNone\n=\nNone\ngoogall_tracker\n:\nstr\n|\nNone\n=\nNone\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncookies\n:\nAnnotated\n[\nCookies\n,\nCookie\n()]):\nreturn\ncookies\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCookies\n(\nBaseModel\n):\nsession_id\n:\nstr\nfatebook_tracker\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ngoogall_tracker\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncookies\n:\nAnnotated\n[\nCookies\n,\nCookie\n()]):\nreturn\ncookies\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nCookies\n(\nBaseModel\n):\nsession_id\n:\nstr\nfatebook_tracker\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ngoogall_tracker\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncookies\n:\nAnnotated\n[\nCookies\n,\nCookie\n()]):\nreturn\ncookies\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCookies\n(\nBaseModel\n):\nsession_id\n:\nstr\nfatebook_tracker\n:\nstr\n|\nNone\n=\nNone\ngoogall_tracker\n:\nstr\n|\nNone\n=\nNone\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncookies\n:\nCookies\n=\nCookie\n()):\nreturn\ncookies\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCookies\n(\nBaseModel\n):\nsession_id\n:\nstr\nfatebook_tracker\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ngoogall_tracker\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncookies\n:\nCookies\n=\nCookie\n()):\nreturn\ncookies\nFastAPI\nwill\nextract\nthe data for\neach field\nfrom the\ncookies\nreceived in the request and give you the Pydantic model you defined.\nCheck the Docs\n¶\nYou can see the defined cookies in the docs UI at\n/docs\n:\nInfo\nHave in mind that, as\nbrowsers handle cookies\nin special ways and behind the scenes, they\ndon't\neasily allow\nJavaScript\nto touch them.\nIf you go to the\nAPI docs UI\nat\n/docs\nyou will be able to see the\ndocumentation\nfor cookies for your\npath operations\n.\nBut even if you\nfill the data\nand click \"Execute\", because the docs UI works with\nJavaScript\n, the cookies won't be sent, and you will see an\nerror\nmessage as if you didn't write any values.\nForbid Extra Cookies\n¶\nIn some special use cases (probably not very common), you might want to\nrestrict\nthe cookies that you want to receive.\nYour API now has the power to control its own\ncookie consent\n. 🤪🍪\nYou can use Pydantic's model configuration to\nforbid\nany\nextra\nfields:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCookies\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nsession_id\n:\nstr\nfatebook_tracker\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ngoogall_tracker\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncookies\n:\nAnnotated\n[\nCookies\n,\nCookie\n()]):\nreturn\ncookies\n🤓 Other versions and variants\nPython 3.10+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCookies\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nsession_id\n:\nstr\nfatebook_tracker\n:\nstr\n|\nNone\n=\nNone\ngoogall_tracker\n:\nstr\n|\nNone\n=\nNone\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncookies\n:\nAnnotated\n[\nCookies\n,\nCookie\n()]):\nreturn\ncookies\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nCookies\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nsession_id\n:\nstr\nfatebook_tracker\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ngoogall_tracker\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncookies\n:\nAnnotated\n[\nCookies\n,\nCookie\n()]):\nreturn\ncookies\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCookies\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nsession_id\n:\nstr\nfatebook_tracker\n:\nstr\n|\nNone\n=\nNone\ngoogall_tracker\n:\nstr\n|\nNone\n=\nNone\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncookies\n:\nCookies\n=\nCookie\n()):\nreturn\ncookies\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCookies\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nsession_id\n:\nstr\nfatebook_tracker\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ngoogall_tracker\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncookies\n:\nCookies\n=\nCookie\n()):\nreturn\ncookies\nIf a client tries to send some\nextra cookies\n, they will receive an\nerror\nresponse.\nPoor cookie banners with all their effort to get your consent for the\nAPI to reject it\n. 🍪\nFor example, if the client tries to send a\nsanta_tracker\ncookie with a value of\ngood-list-please\n, the client will receive an\nerror\nresponse telling them that the\nsanta_tracker\ncookie is not allowed\n:\n{\n\"detail\"\n:\n[\n{\n\"type\"\n:\n\"extra_forbidden\"\n,\n\"loc\"\n:\n[\n\"cookie\"\n,\n\"santa_tracker\"\n],\n\"msg\"\n:\n\"Extra inputs are not permitted\"\n,\n\"input\"\n:\n\"good-list-please\"\n,\n}\n]\n}\nSummary\n¶\nYou can use\nPydantic models\nto declare\ncookies\nin\nFastAPI\n. 😎\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/security/get-current-user/",
    "title": "Get Current User¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nGet Current User\nTable of contents\nCreate a user model\nCreate a\nget_current_user\ndependency\nGet the user\nInject the current user\nOther models\nCode size\nRecap\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nCreate a user model\nCreate a\nget_current_user\ndependency\nGet the user\nInject the current user\nOther models\nCode size\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nSecurity\nGet Current User\n¶\nIn the previous chapter the security system (which is based on the dependency injection system) was giving the\npath operation function\na\ntoken\nas a\nstr\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nreturn\n{\n\"token\"\n:\ntoken\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nreturn\n{\n\"token\"\n:\ntoken\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nreturn\n{\n\"token\"\n:\ntoken\n}\nBut that is still not that useful.\nLet's make it give us the current user.\nCreate a user model\n¶\nFirst, let's create a Pydantic user model.\nThe same way we use Pydantic to declare bodies, we can use it anywhere else:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\ncurrent_user\nCreate a\nget_current_user\ndependency\n¶\nLet's create a dependency\nget_current_user\n.\nRemember that dependencies can have sub-dependencies?\nget_current_user\nwill have a dependency with the same\noauth2_scheme\nwe created before.\nThe same as we were doing before in the\npath operation\ndirectly, our new dependency\nget_current_user\nwill receive a\ntoken\nas a\nstr\nfrom the sub-dependency\noauth2_scheme\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\ncurrent_user\nGet the user\n¶\nget_current_user\nwill use a (fake) utility function we created, that takes a token as a\nstr\nand returns our Pydantic\nUser\nmodel:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\ncurrent_user\nInject the current user\n¶\nSo now we can use the same\nDepends\nwith our\nget_current_user\nin the\npath operation\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\ncurrent_user\nNotice that we declare the type of\ncurrent_user\nas the Pydantic model\nUser\n.\nThis will help us inside of the function with all the completion and type checks.\nTip\nYou might remember that request bodies are also declared with Pydantic models.\nHere\nFastAPI\nwon't get confused because you are using\nDepends\n.\nCheck\nThe way this dependency system is designed allows us to have different dependencies (different \"dependables\") that all return a\nUser\nmodel.\nWe are not restricted to having only one dependency that can return that type of data.\nOther models\n¶\nYou can now get the current user directly in the\npath operation functions\nand deal with the security mechanisms at the\nDependency Injection\nlevel, using\nDepends\n.\nAnd you can use any model or data for the security requirements (in this case, a Pydantic model\nUser\n).\nBut you are not restricted to using some specific data model, class or type.\nDo you want to have an\nid\nand\nemail\nand not have any\nusername\nin your model? Sure. You can use these same tools.\nDo you want to just have a\nstr\n? Or just a\ndict\n? Or a database class model instance directly? It all works the same way.\nYou actually don't have users that log in to your application but robots, bots, or other systems, that have just an access token? Again, it all works the same.\nJust use any kind of model, any kind of class, any kind of database that you need for your application.\nFastAPI\nhas you covered with the dependency injection system.\nCode size\n¶\nThis example might seem verbose. Keep in mind that we are mixing security, data models, utility functions and\npath operations\nin the same file.\nBut here's the key point.\nThe security and dependency injection stuff is written once.\nAnd you can make it as complex as you want. And still, have it written only once, in a single place. With all the flexibility.\nBut you can have thousands of endpoints (\npath operations\n) using the same security system.\nAnd all of them (or any portion of them that you want) can take advantage of re-using these dependencies or any other dependencies you create.\nAnd all these thousands of\npath operations\ncan be as small as 3 lines:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nstr\n|\nNone\n=\nNone\nfull_name\n:\nstr\n|\nNone\n=\nNone\ndisabled\n:\nbool\n|\nNone\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\ncurrent_user\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndisabled\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\ndef\nfake_decode_token\n(\ntoken\n):\nreturn\nUser\n(\nusername\n=\ntoken\n+\n\"fakedecoded\"\n,\nemail\n=\n\"john@example.com\"\n,\nfull_name\n=\n\"John Doe\"\n)\nasync\ndef\nget_current_user\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nuser\n=\nfake_decode_token\n(\ntoken\n)\nreturn\nuser\n@app\n.\nget\n(\n\"/users/me\"\n)\nasync\ndef\nread_users_me\n(\ncurrent_user\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\nreturn\ncurrent_user\nRecap\n¶\nYou can now get the current user directly in your\npath operation function\n.\nWe are already halfway there.\nWe just need to add a\npath operation\nfor the user/client to actually send the\nusername\nand\npassword\n.\nThat comes next.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/advanced-dependencies/",
    "title": "Advanced Dependencies¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Dependencies\nTable of contents\nParameterized dependencies\nA \"callable\" instance\nParameterize the instance\nCreate an instance\nUse the instance as a dependency\nDependencies with\nyield\n,\nHTTPException\n,\nexcept\nand Background Tasks\nDependencies with\nyield\nand\nStreamingResponse\n, Technical Details\nUse Cases with Early Exit Code\nDependencies with\nyield\nand\nexcept\n, Technical Details\nBackground Tasks and Dependencies with\nyield\n, Technical Details\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nParameterized dependencies\nA \"callable\" instance\nParameterize the instance\nCreate an instance\nUse the instance as a dependency\nDependencies with\nyield\n,\nHTTPException\n,\nexcept\nand Background Tasks\nDependencies with\nyield\nand\nStreamingResponse\n, Technical Details\nUse Cases with Early Exit Code\nDependencies with\nyield\nand\nexcept\n, Technical Details\nBackground Tasks and Dependencies with\nyield\n, Technical Details\nFastAPI\nLearn\nAdvanced User Guide\nAdvanced Dependencies\n¶\nParameterized dependencies\n¶\nAll the dependencies we have seen are a fixed function or class.\nBut there could be cases where you want to be able to set parameters on the dependency, without having to declare many different functions or classes.\nLet's imagine that we want to have a dependency that checks if the query parameter\nq\ncontains some fixed content.\nBut we want to be able to parameterize that fixed content.\nA \"callable\" instance\n¶\nIn Python there's a way to make an instance of a class a \"callable\".\nNot the class itself (which is already a callable), but an instance of that class.\nTo do that, we declare a method\n__call__\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nclass\nFixedContentQueryChecker\n:\ndef\n__init__\n(\nself\n,\nfixed_content\n:\nstr\n):\nself\n.\nfixed_content\n=\nfixed_content\ndef\n__call__\n(\nself\n,\nq\n:\nstr\n=\n\"\"\n):\nif\nq\n:\nreturn\nself\n.\nfixed_content\nin\nq\nreturn\nFalse\nchecker\n=\nFixedContentQueryChecker\n(\n\"bar\"\n)\n@app\n.\nget\n(\n\"/query-checker/\"\n)\nasync\ndef\nread_query_check\n(\nfixed_content_included\n:\nAnnotated\n[\nbool\n,\nDepends\n(\nchecker\n)]):\nreturn\n{\n\"fixed_content_in_query\"\n:\nfixed_content_included\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nFixedContentQueryChecker\n:\ndef\n__init__\n(\nself\n,\nfixed_content\n:\nstr\n):\nself\n.\nfixed_content\n=\nfixed_content\ndef\n__call__\n(\nself\n,\nq\n:\nstr\n=\n\"\"\n):\nif\nq\n:\nreturn\nself\n.\nfixed_content\nin\nq\nreturn\nFalse\nchecker\n=\nFixedContentQueryChecker\n(\n\"bar\"\n)\n@app\n.\nget\n(\n\"/query-checker/\"\n)\nasync\ndef\nread_query_check\n(\nfixed_content_included\n:\nAnnotated\n[\nbool\n,\nDepends\n(\nchecker\n)]):\nreturn\n{\n\"fixed_content_in_query\"\n:\nfixed_content_included\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nclass\nFixedContentQueryChecker\n:\ndef\n__init__\n(\nself\n,\nfixed_content\n:\nstr\n):\nself\n.\nfixed_content\n=\nfixed_content\ndef\n__call__\n(\nself\n,\nq\n:\nstr\n=\n\"\"\n):\nif\nq\n:\nreturn\nself\n.\nfixed_content\nin\nq\nreturn\nFalse\nchecker\n=\nFixedContentQueryChecker\n(\n\"bar\"\n)\n@app\n.\nget\n(\n\"/query-checker/\"\n)\nasync\ndef\nread_query_check\n(\nfixed_content_included\n:\nbool\n=\nDepends\n(\nchecker\n)):\nreturn\n{\n\"fixed_content_in_query\"\n:\nfixed_content_included\n}\nIn this case, this\n__call__\nis what\nFastAPI\nwill use to check for additional parameters and sub-dependencies, and this is what will be called to pass a value to the parameter in your\npath operation function\nlater.\nParameterize the instance\n¶\nAnd now, we can use\n__init__\nto declare the parameters of the instance that we can use to \"parameterize\" the dependency:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nclass\nFixedContentQueryChecker\n:\ndef\n__init__\n(\nself\n,\nfixed_content\n:\nstr\n):\nself\n.\nfixed_content\n=\nfixed_content\ndef\n__call__\n(\nself\n,\nq\n:\nstr\n=\n\"\"\n):\nif\nq\n:\nreturn\nself\n.\nfixed_content\nin\nq\nreturn\nFalse\nchecker\n=\nFixedContentQueryChecker\n(\n\"bar\"\n)\n@app\n.\nget\n(\n\"/query-checker/\"\n)\nasync\ndef\nread_query_check\n(\nfixed_content_included\n:\nAnnotated\n[\nbool\n,\nDepends\n(\nchecker\n)]):\nreturn\n{\n\"fixed_content_in_query\"\n:\nfixed_content_included\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nFixedContentQueryChecker\n:\ndef\n__init__\n(\nself\n,\nfixed_content\n:\nstr\n):\nself\n.\nfixed_content\n=\nfixed_content\ndef\n__call__\n(\nself\n,\nq\n:\nstr\n=\n\"\"\n):\nif\nq\n:\nreturn\nself\n.\nfixed_content\nin\nq\nreturn\nFalse\nchecker\n=\nFixedContentQueryChecker\n(\n\"bar\"\n)\n@app\n.\nget\n(\n\"/query-checker/\"\n)\nasync\ndef\nread_query_check\n(\nfixed_content_included\n:\nAnnotated\n[\nbool\n,\nDepends\n(\nchecker\n)]):\nreturn\n{\n\"fixed_content_in_query\"\n:\nfixed_content_included\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nclass\nFixedContentQueryChecker\n:\ndef\n__init__\n(\nself\n,\nfixed_content\n:\nstr\n):\nself\n.\nfixed_content\n=\nfixed_content\ndef\n__call__\n(\nself\n,\nq\n:\nstr\n=\n\"\"\n):\nif\nq\n:\nreturn\nself\n.\nfixed_content\nin\nq\nreturn\nFalse\nchecker\n=\nFixedContentQueryChecker\n(\n\"bar\"\n)\n@app\n.\nget\n(\n\"/query-checker/\"\n)\nasync\ndef\nread_query_check\n(\nfixed_content_included\n:\nbool\n=\nDepends\n(\nchecker\n)):\nreturn\n{\n\"fixed_content_in_query\"\n:\nfixed_content_included\n}\nIn this case,\nFastAPI\nwon't ever touch or care about\n__init__\n, we will use it directly in our code.\nCreate an instance\n¶\nWe could create an instance of this class with:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nclass\nFixedContentQueryChecker\n:\ndef\n__init__\n(\nself\n,\nfixed_content\n:\nstr\n):\nself\n.\nfixed_content\n=\nfixed_content\ndef\n__call__\n(\nself\n,\nq\n:\nstr\n=\n\"\"\n):\nif\nq\n:\nreturn\nself\n.\nfixed_content\nin\nq\nreturn\nFalse\nchecker\n=\nFixedContentQueryChecker\n(\n\"bar\"\n)\n@app\n.\nget\n(\n\"/query-checker/\"\n)\nasync\ndef\nread_query_check\n(\nfixed_content_included\n:\nAnnotated\n[\nbool\n,\nDepends\n(\nchecker\n)]):\nreturn\n{\n\"fixed_content_in_query\"\n:\nfixed_content_included\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nFixedContentQueryChecker\n:\ndef\n__init__\n(\nself\n,\nfixed_content\n:\nstr\n):\nself\n.\nfixed_content\n=\nfixed_content\ndef\n__call__\n(\nself\n,\nq\n:\nstr\n=\n\"\"\n):\nif\nq\n:\nreturn\nself\n.\nfixed_content\nin\nq\nreturn\nFalse\nchecker\n=\nFixedContentQueryChecker\n(\n\"bar\"\n)\n@app\n.\nget\n(\n\"/query-checker/\"\n)\nasync\ndef\nread_query_check\n(\nfixed_content_included\n:\nAnnotated\n[\nbool\n,\nDepends\n(\nchecker\n)]):\nreturn\n{\n\"fixed_content_in_query\"\n:\nfixed_content_included\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nclass\nFixedContentQueryChecker\n:\ndef\n__init__\n(\nself\n,\nfixed_content\n:\nstr\n):\nself\n.\nfixed_content\n=\nfixed_content\ndef\n__call__\n(\nself\n,\nq\n:\nstr\n=\n\"\"\n):\nif\nq\n:\nreturn\nself\n.\nfixed_content\nin\nq\nreturn\nFalse\nchecker\n=\nFixedContentQueryChecker\n(\n\"bar\"\n)\n@app\n.\nget\n(\n\"/query-checker/\"\n)\nasync\ndef\nread_query_check\n(\nfixed_content_included\n:\nbool\n=\nDepends\n(\nchecker\n)):\nreturn\n{\n\"fixed_content_in_query\"\n:\nfixed_content_included\n}\nAnd that way we are able to \"parameterize\" our dependency, that now has\n\"bar\"\ninside of it, as the attribute\nchecker.fixed_content\n.\nUse the instance as a dependency\n¶\nThen, we could use this\nchecker\nin a\nDepends(checker)\n, instead of\nDepends(FixedContentQueryChecker)\n, because the dependency is the instance,\nchecker\n, not the class itself.\nAnd when solving the dependency,\nFastAPI\nwill call this\nchecker\nlike:\nchecker\n(\nq\n=\n\"somequery\"\n)\n...and pass whatever that returns as the value of the dependency in our\npath operation function\nas the parameter\nfixed_content_included\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nclass\nFixedContentQueryChecker\n:\ndef\n__init__\n(\nself\n,\nfixed_content\n:\nstr\n):\nself\n.\nfixed_content\n=\nfixed_content\ndef\n__call__\n(\nself\n,\nq\n:\nstr\n=\n\"\"\n):\nif\nq\n:\nreturn\nself\n.\nfixed_content\nin\nq\nreturn\nFalse\nchecker\n=\nFixedContentQueryChecker\n(\n\"bar\"\n)\n@app\n.\nget\n(\n\"/query-checker/\"\n)\nasync\ndef\nread_query_check\n(\nfixed_content_included\n:\nAnnotated\n[\nbool\n,\nDepends\n(\nchecker\n)]):\nreturn\n{\n\"fixed_content_in_query\"\n:\nfixed_content_included\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nFixedContentQueryChecker\n:\ndef\n__init__\n(\nself\n,\nfixed_content\n:\nstr\n):\nself\n.\nfixed_content\n=\nfixed_content\ndef\n__call__\n(\nself\n,\nq\n:\nstr\n=\n\"\"\n):\nif\nq\n:\nreturn\nself\n.\nfixed_content\nin\nq\nreturn\nFalse\nchecker\n=\nFixedContentQueryChecker\n(\n\"bar\"\n)\n@app\n.\nget\n(\n\"/query-checker/\"\n)\nasync\ndef\nread_query_check\n(\nfixed_content_included\n:\nAnnotated\n[\nbool\n,\nDepends\n(\nchecker\n)]):\nreturn\n{\n\"fixed_content_in_query\"\n:\nfixed_content_included\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nclass\nFixedContentQueryChecker\n:\ndef\n__init__\n(\nself\n,\nfixed_content\n:\nstr\n):\nself\n.\nfixed_content\n=\nfixed_content\ndef\n__call__\n(\nself\n,\nq\n:\nstr\n=\n\"\"\n):\nif\nq\n:\nreturn\nself\n.\nfixed_content\nin\nq\nreturn\nFalse\nchecker\n=\nFixedContentQueryChecker\n(\n\"bar\"\n)\n@app\n.\nget\n(\n\"/query-checker/\"\n)\nasync\ndef\nread_query_check\n(\nfixed_content_included\n:\nbool\n=\nDepends\n(\nchecker\n)):\nreturn\n{\n\"fixed_content_in_query\"\n:\nfixed_content_included\n}\nTip\nAll this might seem contrived. And it might not be very clear how is it useful yet.\nThese examples are intentionally simple, but show how it all works.\nIn the chapters about security, there are utility functions that are implemented in this same way.\nIf you understood all this, you already know how those utility tools for security work underneath.\nDependencies with\nyield\n,\nHTTPException\n,\nexcept\nand Background Tasks\n¶\nWarning\nYou most probably don't need these technical details.\nThese details are useful mainly if you had a FastAPI application older than 0.118.0 and you are facing issues with dependencies with\nyield\n.\nDependencies with\nyield\nhave evolved over time to account for the different use cases and to fix some issues, here's a summary of what has changed.\nDependencies with\nyield\nand\nStreamingResponse\n, Technical Details\n¶\nBefore FastAPI 0.118.0, if you used a dependency with\nyield\n, it would run the exit code after the\npath operation function\nreturned but right before sending the response.\nThe intention was to avoid holding resources for longer than necessary, waiting for the response to travel through the network.\nThis change also meant that if you returned a\nStreamingResponse\n, the exit code of the dependency with\nyield\nwould have been already run.\nFor example, if you had a database session in a dependency with\nyield\n, the\nStreamingResponse\nwould not be able to use that session while streaming data because the session would have already been closed in the exit code after\nyield\n.\nThis behavior was reverted in 0.118.0, to make the exit code after\nyield\nbe executed after the response is sent.\nInfo\nAs you will see below, this is very similar to the behavior before version 0.106.0, but with several improvements and bug fixes for corner cases.\nUse Cases with Early Exit Code\n¶\nThere are some use cases with specific conditions that could benefit from the old behavior of running the exit code of dependencies with\nyield\nbefore sending the response.\nFor example, imagine you have code that uses a database session in a dependency with\nyield\nonly to verify a user, but the database session is never used again in the\npath operation function\n, only in the dependency,\nand\nthe response takes a long time to be sent, like a\nStreamingResponse\nthat sends data slowly, but for some reason doesn't use the database.\nIn this case, the database session would be held until the response is finished being sent, but if you don't use it, then it wouldn't be necessary to hold it.\nHere's how it could look like:\nPython 3.10+\nimport\ntime\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\nfrom\nfastapi.responses\nimport\nStreamingResponse\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\nengine\n=\ncreate_engine\n(\n\"postgresql+psycopg://postgres:postgres@localhost/db\"\n)\nclass\nUser\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\napp\n=\nFastAPI\n()\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\ndef\nget_user\n(\nuser_id\n:\nint\n,\nsession\n:\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]):\nuser\n=\nsession\n.\nget\n(\nUser\n,\nuser_id\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n403\n,\ndetail\n=\n\"Not authorized\"\n)\ndef\ngenerate_stream\n(\nquery\n:\nstr\n):\nfor\nch\nin\nquery\n:\nyield\nch\ntime\n.\nsleep\n(\n0.1\n)\n@app\n.\nget\n(\n\"/generate\"\n,\ndependencies\n=\n[\nDepends\n(\nget_user\n)])\ndef\ngenerate\n(\nquery\n:\nstr\n):\nreturn\nStreamingResponse\n(\ncontent\n=\ngenerate_stream\n(\nquery\n))\nThe exit code, the automatic closing of the\nSession\nin:\nPython 3.10+\n# Code above omitted 👆\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nimport\ntime\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\nfrom\nfastapi.responses\nimport\nStreamingResponse\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\nengine\n=\ncreate_engine\n(\n\"postgresql+psycopg://postgres:postgres@localhost/db\"\n)\nclass\nUser\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\napp\n=\nFastAPI\n()\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\ndef\nget_user\n(\nuser_id\n:\nint\n,\nsession\n:\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]):\nuser\n=\nsession\n.\nget\n(\nUser\n,\nuser_id\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n403\n,\ndetail\n=\n\"Not authorized\"\n)\ndef\ngenerate_stream\n(\nquery\n:\nstr\n):\nfor\nch\nin\nquery\n:\nyield\nch\ntime\n.\nsleep\n(\n0.1\n)\n@app\n.\nget\n(\n\"/generate\"\n,\ndependencies\n=\n[\nDepends\n(\nget_user\n)])\ndef\ngenerate\n(\nquery\n:\nstr\n):\nreturn\nStreamingResponse\n(\ncontent\n=\ngenerate_stream\n(\nquery\n))\n...would be run after the the response finishes sending the slow data:\nPython 3.10+\n# Code above omitted 👆\ndef\ngenerate_stream\n(\nquery\n:\nstr\n):\nfor\nch\nin\nquery\n:\nyield\nch\ntime\n.\nsleep\n(\n0.1\n)\n@app\n.\nget\n(\n\"/generate\"\n,\ndependencies\n=\n[\nDepends\n(\nget_user\n)])\ndef\ngenerate\n(\nquery\n:\nstr\n):\nreturn\nStreamingResponse\n(\ncontent\n=\ngenerate_stream\n(\nquery\n))\n👀 Full file preview\nPython 3.10+\nimport\ntime\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\nfrom\nfastapi.responses\nimport\nStreamingResponse\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\nengine\n=\ncreate_engine\n(\n\"postgresql+psycopg://postgres:postgres@localhost/db\"\n)\nclass\nUser\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\napp\n=\nFastAPI\n()\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\ndef\nget_user\n(\nuser_id\n:\nint\n,\nsession\n:\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]):\nuser\n=\nsession\n.\nget\n(\nUser\n,\nuser_id\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n403\n,\ndetail\n=\n\"Not authorized\"\n)\ndef\ngenerate_stream\n(\nquery\n:\nstr\n):\nfor\nch\nin\nquery\n:\nyield\nch\ntime\n.\nsleep\n(\n0.1\n)\n@app\n.\nget\n(\n\"/generate\"\n,\ndependencies\n=\n[\nDepends\n(\nget_user\n)])\ndef\ngenerate\n(\nquery\n:\nstr\n):\nreturn\nStreamingResponse\n(\ncontent\n=\ngenerate_stream\n(\nquery\n))\nBut as\ngenerate_stream()\ndoesn't use the database session, it is not really necessary to keep the session open while sending the response.\nIf you have this specific use case using SQLModel (or SQLAlchemy), you could explicitly close the session after you don't need it anymore:\nPython 3.10+\n# Code above omitted 👆\ndef\nget_user\n(\nuser_id\n:\nint\n,\nsession\n:\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]):\nuser\n=\nsession\n.\nget\n(\nUser\n,\nuser_id\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n403\n,\ndetail\n=\n\"Not authorized\"\n)\nsession\n.\nclose\n()\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nimport\ntime\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\nfrom\nfastapi.responses\nimport\nStreamingResponse\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\nengine\n=\ncreate_engine\n(\n\"postgresql+psycopg://postgres:postgres@localhost/db\"\n)\nclass\nUser\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\napp\n=\nFastAPI\n()\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\ndef\nget_user\n(\nuser_id\n:\nint\n,\nsession\n:\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]):\nuser\n=\nsession\n.\nget\n(\nUser\n,\nuser_id\n)\nif\nnot\nuser\n:\nraise\nHTTPException\n(\nstatus_code\n=\n403\n,\ndetail\n=\n\"Not authorized\"\n)\nsession\n.\nclose\n()\ndef\ngenerate_stream\n(\nquery\n:\nstr\n):\nfor\nch\nin\nquery\n:\nyield\nch\ntime\n.\nsleep\n(\n0.1\n)\n@app\n.\nget\n(\n\"/generate\"\n,\ndependencies\n=\n[\nDepends\n(\nget_user\n)])\ndef\ngenerate\n(\nquery\n:\nstr\n):\nreturn\nStreamingResponse\n(\ncontent\n=\ngenerate_stream\n(\nquery\n))\nThat way the session would release the database connection, so other requests could use it.\nIf you have a different use case that needs to exit early from a dependency with\nyield\n, please create a\nGitHub Discussion Question\nwith your specific use case and why you would benefit from having early closing for dependencies with\nyield\n.\nIf there are compelling use cases for early closing in dependencies with\nyield\n, I would consider adding a new way to opt in to early closing.\nDependencies with\nyield\nand\nexcept\n, Technical Details\n¶\nBefore FastAPI 0.110.0, if you used a dependency with\nyield\n, and then you captured an exception with\nexcept\nin that dependency, and you didn't raise the exception again, the exception would be automatically raised/forwarded to any exception handlers or the internal server error handler.\nThis was changed in version 0.110.0 to fix unhandled memory consumption from forwarded exceptions without a handler (internal server errors), and to make it consistent with the behavior of regular Python code.\nBackground Tasks and Dependencies with\nyield\n, Technical Details\n¶\nBefore FastAPI 0.106.0, raising exceptions after\nyield\nwas not possible, the exit code in dependencies with\nyield\nwas executed\nafter\nthe response was sent, so\nException Handlers\nwould have already run.\nThis was designed this way mainly to allow using the same objects \"yielded\" by dependencies inside of background tasks, because the exit code would be executed after the background tasks were finished.\nThis was changed in FastAPI 0.106.0 with the intention to not hold resources while waiting for the response to travel through the network.\nTip\nAdditionally, a background task is normally an independent set of logic that should be handled separately, with its own resources (e.g. its own database connection).\nSo, this way you will probably have cleaner code.\nIf you used to rely on this behavior, now you should create the resources for background tasks inside the background task itself, and use internally only data that doesn't depend on the resources of dependencies with\nyield\n.\nFor example, instead of using the same database session, you would create a new database session inside of the background task, and you would obtain the objects from the database using this new session. And then instead of passing the object from the database as a parameter to the background task function, you would pass the ID of that object and then obtain the object again inside the background task function.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/events/",
    "title": "Lifespan Events¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nLifespan Events\nTable of contents\nUse Case\nLifespan\nLifespan function\nAsync Context Manager\nAlternative Events (deprecated)\nstartup\nevent\nshutdown\nevent\nstartup\nand\nshutdown\ntogether\nTechnical Details\nSub Applications\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUse Case\nLifespan\nLifespan function\nAsync Context Manager\nAlternative Events (deprecated)\nstartup\nevent\nshutdown\nevent\nstartup\nand\nshutdown\ntogether\nTechnical Details\nSub Applications\nFastAPI\nLearn\nAdvanced User Guide\nLifespan Events\n¶\nYou can define logic (code) that should be executed before the application\nstarts up\n. This means that this code will be executed\nonce\n,\nbefore\nthe application\nstarts receiving requests\n.\nThe same way, you can define logic (code) that should be executed when the application is\nshutting down\n. In this case, this code will be executed\nonce\n,\nafter\nhaving handled possibly\nmany requests\n.\nBecause this code is executed before the application\nstarts\ntaking requests, and right after it\nfinishes\nhandling requests, it covers the whole application\nlifespan\n(the word \"lifespan\" will be important in a second 😉).\nThis can be very useful for setting up\nresources\nthat you need to use for the whole app, and that are\nshared\namong requests, and/or that you need to\nclean up\nafterwards. For example, a database connection pool, or loading a shared machine learning model.\nUse Case\n¶\nLet's start with an example\nuse case\nand then see how to solve it with this.\nLet's imagine that you have some\nmachine learning models\nthat you want to use to handle requests. 🤖\nThe same models are shared among requests, so, it's not one model per request, or one per user or something similar.\nLet's imagine that loading the model can\ntake quite some time\n, because it has to read a lot of\ndata from disk\n. So you don't want to do it for every request.\nYou could load it at the top level of the module/file, but that would also mean that it would\nload the model\neven if you are just running a simple automated test, then that test would be\nslow\nbecause it would have to wait for the model to load before being able to run an independent part of the code.\nThat's what we'll solve, let's load the model before the requests are handled, but only right before the application starts receiving requests, not while  the code is being loaded.\nLifespan\n¶\nYou can define this\nstartup\nand\nshutdown\nlogic using the\nlifespan\nparameter of the\nFastAPI\napp, and a \"context manager\" (I'll show you what that is in a second).\nLet's start with an example and then see it in detail.\nWe create an async function\nlifespan()\nwith\nyield\nlike this:\nPython 3.8+\nfrom\ncontextlib\nimport\nasynccontextmanager\nfrom\nfastapi\nimport\nFastAPI\ndef\nfake_answer_to_everything_ml_model\n(\nx\n:\nfloat\n):\nreturn\nx\n*\n42\nml_models\n=\n{}\n@asynccontextmanager\nasync\ndef\nlifespan\n(\napp\n:\nFastAPI\n):\n# Load the ML model\nml_models\n[\n\"answer_to_everything\"\n]\n=\nfake_answer_to_everything_ml_model\nyield\n# Clean up the ML models and release the resources\nml_models\n.\nclear\n()\napp\n=\nFastAPI\n(\nlifespan\n=\nlifespan\n)\n@app\n.\nget\n(\n\"/predict\"\n)\nasync\ndef\npredict\n(\nx\n:\nfloat\n):\nresult\n=\nml_models\n[\n\"answer_to_everything\"\n](\nx\n)\nreturn\n{\n\"result\"\n:\nresult\n}\nHere we are simulating the expensive\nstartup\noperation of loading the model by putting the (fake) model function in the dictionary with machine learning models before the\nyield\n. This code will be executed\nbefore\nthe application\nstarts taking requests\n, during the\nstartup\n.\nAnd then, right after the\nyield\n, we unload the model. This code will be executed\nafter\nthe application\nfinishes handling requests\n, right before the\nshutdown\n. This could, for example, release resources like memory or a GPU.\nTip\nThe\nshutdown\nwould happen when you are\nstopping\nthe application.\nMaybe you need to start a new version, or you just got tired of running it. 🤷\nLifespan function\n¶\nThe first thing to notice, is that we are defining an async function with\nyield\n. This is very similar to Dependencies with\nyield\n.\nPython 3.8+\nfrom\ncontextlib\nimport\nasynccontextmanager\nfrom\nfastapi\nimport\nFastAPI\ndef\nfake_answer_to_everything_ml_model\n(\nx\n:\nfloat\n):\nreturn\nx\n*\n42\nml_models\n=\n{}\n@asynccontextmanager\nasync\ndef\nlifespan\n(\napp\n:\nFastAPI\n):\n# Load the ML model\nml_models\n[\n\"answer_to_everything\"\n]\n=\nfake_answer_to_everything_ml_model\nyield\n# Clean up the ML models and release the resources\nml_models\n.\nclear\n()\napp\n=\nFastAPI\n(\nlifespan\n=\nlifespan\n)\n@app\n.\nget\n(\n\"/predict\"\n)\nasync\ndef\npredict\n(\nx\n:\nfloat\n):\nresult\n=\nml_models\n[\n\"answer_to_everything\"\n](\nx\n)\nreturn\n{\n\"result\"\n:\nresult\n}\nThe first part of the function, before the\nyield\n, will be executed\nbefore\nthe application starts.\nAnd the part after the\nyield\nwill be executed\nafter\nthe application has finished.\nAsync Context Manager\n¶\nIf you check, the function is decorated with an\n@asynccontextmanager\n.\nThat converts the function into something called an \"\nasync context manager\n\".\nPython 3.8+\nfrom\ncontextlib\nimport\nasynccontextmanager\nfrom\nfastapi\nimport\nFastAPI\ndef\nfake_answer_to_everything_ml_model\n(\nx\n:\nfloat\n):\nreturn\nx\n*\n42\nml_models\n=\n{}\n@asynccontextmanager\nasync\ndef\nlifespan\n(\napp\n:\nFastAPI\n):\n# Load the ML model\nml_models\n[\n\"answer_to_everything\"\n]\n=\nfake_answer_to_everything_ml_model\nyield\n# Clean up the ML models and release the resources\nml_models\n.\nclear\n()\napp\n=\nFastAPI\n(\nlifespan\n=\nlifespan\n)\n@app\n.\nget\n(\n\"/predict\"\n)\nasync\ndef\npredict\n(\nx\n:\nfloat\n):\nresult\n=\nml_models\n[\n\"answer_to_everything\"\n](\nx\n)\nreturn\n{\n\"result\"\n:\nresult\n}\nA\ncontext manager\nin Python is something that you can use in a\nwith\nstatement, for example,\nopen()\ncan be used as a context manager:\nwith\nopen\n(\n\"file.txt\"\n)\nas\nfile\n:\nfile\n.\nread\n()\nIn recent versions of Python, there's also an\nasync context manager\n. You would use it with\nasync with\n:\nasync\nwith\nlifespan\n(\napp\n):\nawait\ndo_stuff\n()\nWhen you create a context manager or an async context manager like above, what it does is that, before entering the\nwith\nblock, it will execute the code before the\nyield\n, and after exiting the\nwith\nblock, it will execute the code after the\nyield\n.\nIn our code example above, we don't use it directly, but we pass it to FastAPI for it to use it.\nThe\nlifespan\nparameter of the\nFastAPI\napp takes an\nasync context manager\n, so we can pass our new\nlifespan\nasync context manager to it.\nPython 3.8+\nfrom\ncontextlib\nimport\nasynccontextmanager\nfrom\nfastapi\nimport\nFastAPI\ndef\nfake_answer_to_everything_ml_model\n(\nx\n:\nfloat\n):\nreturn\nx\n*\n42\nml_models\n=\n{}\n@asynccontextmanager\nasync\ndef\nlifespan\n(\napp\n:\nFastAPI\n):\n# Load the ML model\nml_models\n[\n\"answer_to_everything\"\n]\n=\nfake_answer_to_everything_ml_model\nyield\n# Clean up the ML models and release the resources\nml_models\n.\nclear\n()\napp\n=\nFastAPI\n(\nlifespan\n=\nlifespan\n)\n@app\n.\nget\n(\n\"/predict\"\n)\nasync\ndef\npredict\n(\nx\n:\nfloat\n):\nresult\n=\nml_models\n[\n\"answer_to_everything\"\n](\nx\n)\nreturn\n{\n\"result\"\n:\nresult\n}\nAlternative Events (deprecated)\n¶\nWarning\nThe recommended way to handle the\nstartup\nand\nshutdown\nis using the\nlifespan\nparameter of the\nFastAPI\napp as described above. If you provide a\nlifespan\nparameter,\nstartup\nand\nshutdown\nevent handlers will no longer be called. It's all\nlifespan\nor all events, not both.\nYou can probably skip this part.\nThere's an alternative way to define this logic to be executed during\nstartup\nand during\nshutdown\n.\nYou can define event handlers (functions) that need to be executed before the application starts up, or when the application is shutting down.\nThese functions can be declared with\nasync def\nor normal\ndef\n.\nstartup\nevent\n¶\nTo add a function that should be run before the application starts, declare it with the event\n\"startup\"\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\nitems\n=\n{}\n@app\n.\non_event\n(\n\"startup\"\n)\nasync\ndef\nstartup_event\n():\nitems\n[\n\"foo\"\n]\n=\n{\n\"name\"\n:\n\"Fighters\"\n}\nitems\n[\n\"bar\"\n]\n=\n{\n\"name\"\n:\n\"Tenders\"\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\nIn this case, the\nstartup\nevent handler function will initialize the items \"database\" (just a\ndict\n) with some values.\nYou can add more than one event handler function.\nAnd your application won't start receiving requests until all the\nstartup\nevent handlers have completed.\nshutdown\nevent\n¶\nTo add a function that should be run when the application is shutting down, declare it with the event\n\"shutdown\"\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"shutdown\"\n)\ndef\nshutdown_event\n():\nwith\nopen\n(\n\"log.txt\"\n,\nmode\n=\n\"a\"\n)\nas\nlog\n:\nlog\n.\nwrite\n(\n\"Application shutdown\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Foo\"\n}]\nHere, the\nshutdown\nevent handler function will write a text line\n\"Application shutdown\"\nto a file\nlog.txt\n.\nInfo\nIn the\nopen()\nfunction, the\nmode=\"a\"\nmeans \"append\", so, the line will be added after whatever is on that file, without overwriting the previous contents.\nTip\nNotice that in this case we are using a standard Python\nopen()\nfunction that interacts with a file.\nSo, it involves I/O (input/output), that requires \"waiting\" for things to be written to disk.\nBut\nopen()\ndoesn't use\nasync\nand\nawait\n.\nSo, we declare the event handler function with standard\ndef\ninstead of\nasync def\n.\nstartup\nand\nshutdown\ntogether\n¶\nThere's a high chance that the logic for your\nstartup\nand\nshutdown\nis connected, you might want to start something and then finish it, acquire a resource and then release it, etc.\nDoing that in separated functions that don't share logic or variables together is more difficult as you would need to store values in global variables or similar tricks.\nBecause of that, it's now recommended to instead use the\nlifespan\nas explained above.\nTechnical Details\n¶\nJust a technical detail for the curious nerds. 🤓\nUnderneath, in the ASGI technical specification, this is part of the\nLifespan Protocol\n, and it defines events called\nstartup\nand\nshutdown\n.\nInfo\nYou can read more about the Starlette\nlifespan\nhandlers in\nStarlette's  Lifespan' docs\n.\nIncluding how to handle lifespan state that can be used in other areas of your code.\nSub Applications\n¶\n🚨 Keep in mind that these lifespan events (startup and shutdown) will only be executed for the main application, not for\nSub Applications - Mounts\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/",
    "title": "Path Operation Advanced Configuration¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nPath Operation Advanced Configuration\nTable of contents\nOpenAPI operationId\nUsing the\npath operation function\nname as the operationId\nExclude from OpenAPI\nAdvanced description from docstring\nAdditional Responses\nOpenAPI Extra\nOpenAPI Extensions\nCustom OpenAPI\npath operation\nschema\nCustom OpenAPI content type\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nOpenAPI operationId\nUsing the\npath operation function\nname as the operationId\nExclude from OpenAPI\nAdvanced description from docstring\nAdditional Responses\nOpenAPI Extra\nOpenAPI Extensions\nCustom OpenAPI\npath operation\nschema\nCustom OpenAPI content type\nFastAPI\nLearn\nAdvanced User Guide\nPath Operation Advanced Configuration\n¶\nOpenAPI operationId\n¶\nWarning\nIf you are not an \"expert\" in OpenAPI, you probably don't need this.\nYou can set the OpenAPI\noperationId\nto be used in your\npath operation\nwith the parameter\noperation_id\n.\nYou would have to make sure that it is unique for each operation.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n,\noperation_id\n=\n\"some_specific_id_you_define\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n}]\nUsing the\npath operation function\nname as the operationId\n¶\nIf you want to use your APIs' function names as\noperationId\ns, you can iterate over all of them and override each\npath operation's\noperation_id\nusing their\nAPIRoute.name\n.\nYou should do it after adding all your\npath operations\n.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.routing\nimport\nAPIRoute\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n}]\ndef\nuse_route_names_as_operation_ids\n(\napp\n:\nFastAPI\n)\n->\nNone\n:\n\"\"\"\nSimplify operation IDs so that generated API clients have simpler function\nnames.\nShould be called only after all routes have been added.\n\"\"\"\nfor\nroute\nin\napp\n.\nroutes\n:\nif\nisinstance\n(\nroute\n,\nAPIRoute\n):\nroute\n.\noperation_id\n=\nroute\n.\nname\n# in this case, 'read_items'\nuse_route_names_as_operation_ids\n(\napp\n)\nTip\nIf you manually call\napp.openapi()\n, you should update the\noperationId\ns before that.\nWarning\nIf you do this, you have to make sure each one of your\npath operation functions\nhas a unique name.\nEven if they are in different modules (Python files).\nExclude from OpenAPI\n¶\nTo exclude a\npath operation\nfrom the generated OpenAPI schema (and thus, from the automatic documentation systems), use the parameter\ninclude_in_schema\nand set it to\nFalse\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n}]\nAdvanced description from docstring\n¶\nYou can limit the lines used from the docstring of a\npath operation function\nfor OpenAPI.\nAdding an\n\\f\n(an escaped \"form feed\" character) causes\nFastAPI\nto truncate the output used for OpenAPI at this point.\nIt won't show up in the documentation, but other tools (such as Sphinx) will be able to use the rest.\nPython 3.8+\nfrom\ntyping\nimport\nSet\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nSet\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nsummary\n=\n\"Create an item\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\n\"\"\"\nCreate an item with all the information:\n- **name**: each item must have a name\n- **description**: a long description\n- **price**: required\n- **tax**: if the item doesn't have tax, you can omit this\n- **tags**: a set of unique tag strings for this item\n\\f\n:param item: User input.\n\"\"\"\nreturn\nitem\nAdditional Responses\n¶\nYou probably have seen how to declare the\nresponse_model\nand\nstatus_code\nfor a\npath operation\n.\nThat defines the metadata about the main response of a\npath operation\n.\nYou can also declare additional responses with their models, status codes, etc.\nThere's a whole chapter here in the documentation about it, you can read it at\nAdditional Responses in OpenAPI\n.\nOpenAPI Extra\n¶\nWhen you declare a\npath operation\nin your application,\nFastAPI\nautomatically generates the relevant metadata about that\npath operation\nto be included in the OpenAPI schema.\nTechnical details\nIn the OpenAPI specification it is called the\nOperation Object\n.\nIt has all the information about the\npath operation\nand is used to generate the automatic documentation.\nIt includes the\ntags\n,\nparameters\n,\nrequestBody\n,\nresponses\n, etc.\nThis\npath operation\n-specific OpenAPI schema is normally generated automatically by\nFastAPI\n, but you can also extend it.\nTip\nThis is a low level extension point.\nIf you only need to declare additional responses, a more convenient way to do it is with\nAdditional Responses in OpenAPI\n.\nYou can extend the OpenAPI schema for a\npath operation\nusing the parameter\nopenapi_extra\n.\nOpenAPI Extensions\n¶\nThis\nopenapi_extra\ncan be helpful, for example, to declare\nOpenAPI Extensions\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n,\nopenapi_extra\n=\n{\n\"x-aperture-labs-portal\"\n:\n\"blue\"\n})\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item_id\"\n:\n\"portal-gun\"\n}]\nIf you open the automatic API docs, your extension will show up at the bottom of the specific\npath operation\n.\nAnd if you see the resulting OpenAPI (at\n/openapi.json\nin your API), you will see your extension as part of the specific\npath operation\ntoo:\n{\n\"openapi\"\n:\n\"3.1.0\"\n,\n\"info\"\n:\n{\n\"title\"\n:\n\"FastAPI\"\n,\n\"version\"\n:\n\"0.1.0\"\n},\n\"paths\"\n:\n{\n\"/items/\"\n:\n{\n\"get\"\n:\n{\n\"summary\"\n:\n\"Read Items\"\n,\n\"operationId\"\n:\n\"read_items_items__get\"\n,\n\"responses\"\n:\n{\n\"200\"\n:\n{\n\"description\"\n:\n\"Successful Response\"\n,\n\"content\"\n:\n{\n\"application/json\"\n:\n{\n\"schema\"\n:\n{}\n}\n}\n}\n},\n\"x-aperture-labs-portal\"\n:\n\"blue\"\n}\n}\n}\n}\nCustom OpenAPI\npath operation\nschema\n¶\nThe dictionary in\nopenapi_extra\nwill be deeply merged with the automatically generated OpenAPI schema for the\npath operation\n.\nSo, you could add additional data to the automatically generated schema.\nFor example, you could decide to read and validate the request with your own code, without using the automatic features of FastAPI with Pydantic, but you could still want to define the request in the OpenAPI schema.\nYou could do that with\nopenapi_extra\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\napp\n=\nFastAPI\n()\ndef\nmagic_data_reader\n(\nraw_body\n:\nbytes\n):\nreturn\n{\n\"size\"\n:\nlen\n(\nraw_body\n),\n\"content\"\n:\n{\n\"name\"\n:\n\"Maaaagic\"\n,\n\"price\"\n:\n42\n,\n\"description\"\n:\n\"Just kiddin', no magic here. ✨\"\n,\n},\n}\n@app\n.\npost\n(\n\"/items/\"\n,\nopenapi_extra\n=\n{\n\"requestBody\"\n:\n{\n\"content\"\n:\n{\n\"application/json\"\n:\n{\n\"schema\"\n:\n{\n\"required\"\n:\n[\n\"name\"\n,\n\"price\"\n],\n\"type\"\n:\n\"object\"\n,\n\"properties\"\n:\n{\n\"name\"\n:\n{\n\"type\"\n:\n\"string\"\n},\n\"price\"\n:\n{\n\"type\"\n:\n\"number\"\n},\n\"description\"\n:\n{\n\"type\"\n:\n\"string\"\n},\n},\n}\n}\n},\n\"required\"\n:\nTrue\n,\n},\n},\n)\nasync\ndef\ncreate_item\n(\nrequest\n:\nRequest\n):\nraw_body\n=\nawait\nrequest\n.\nbody\n()\ndata\n=\nmagic_data_reader\n(\nraw_body\n)\nreturn\ndata\nIn this example, we didn't declare any Pydantic model. In fact, the request body is not even\nparsed\nas JSON, it is read directly as\nbytes\n, and the function\nmagic_data_reader()\nwould be in charge of parsing it in some way.\nNevertheless, we can declare the expected schema for the request body.\nCustom OpenAPI content type\n¶\nUsing this same trick, you could use a Pydantic model to define the JSON Schema that is then included in the custom OpenAPI schema section for the\npath operation\n.\nAnd you could do this even if the data type in the request is not JSON.\nFor example, in this application we don't use FastAPI's integrated functionality to extract the JSON Schema from Pydantic models nor the automatic validation for JSON. In fact, we are declaring the request content type as YAML, not JSON:\nPydantic v2\nPydantic v1\nPython 3.8+\nfrom\ntyping\nimport\nList\nimport\nyaml\nfrom\nfastapi\nimport\nFastAPI\n,\nHTTPException\n,\nRequest\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ntags\n:\nList\n[\nstr\n]\n@app\n.\npost\n(\n\"/items/\"\n,\nopenapi_extra\n=\n{\n\"requestBody\"\n:\n{\n\"content\"\n:\n{\n\"application/x-yaml\"\n:\n{\n\"schema\"\n:\nItem\n.\nmodel_json_schema\n()}},\n\"required\"\n:\nTrue\n,\n},\n},\n)\nasync\ndef\ncreate_item\n(\nrequest\n:\nRequest\n):\nraw_body\n=\nawait\nrequest\n.\nbody\n()\ntry\n:\ndata\n=\nyaml\n.\nsafe_load\n(\nraw_body\n)\nexcept\nyaml\n.\nYAMLError\n:\nraise\nHTTPException\n(\nstatus_code\n=\n422\n,\ndetail\n=\n\"Invalid YAML\"\n)\ntry\n:\nitem\n=\nItem\n.\nmodel_validate\n(\ndata\n)\nexcept\nValidationError\nas\ne\n:\nraise\nHTTPException\n(\nstatus_code\n=\n422\n,\ndetail\n=\ne\n.\nerrors\n(\ninclude_url\n=\nFalse\n))\nreturn\nitem\nPython 3.8+\nfrom\ntyping\nimport\nList\nimport\nyaml\nfrom\nfastapi\nimport\nFastAPI\n,\nHTTPException\n,\nRequest\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ntags\n:\nList\n[\nstr\n]\n@app\n.\npost\n(\n\"/items/\"\n,\nopenapi_extra\n=\n{\n\"requestBody\"\n:\n{\n\"content\"\n:\n{\n\"application/x-yaml\"\n:\n{\n\"schema\"\n:\nItem\n.\nschema\n()}},\n\"required\"\n:\nTrue\n,\n},\n},\n)\nasync\ndef\ncreate_item\n(\nrequest\n:\nRequest\n):\nraw_body\n=\nawait\nrequest\n.\nbody\n()\ntry\n:\ndata\n=\nyaml\n.\nsafe_load\n(\nraw_body\n)\nexcept\nyaml\n.\nYAMLError\n:\nraise\nHTTPException\n(\nstatus_code\n=\n422\n,\ndetail\n=\n\"Invalid YAML\"\n)\ntry\n:\nitem\n=\nItem\n.\nparse_obj\n(\ndata\n)\nexcept\nValidationError\nas\ne\n:\nraise\nHTTPException\n(\nstatus_code\n=\n422\n,\ndetail\n=\ne\n.\nerrors\n())\nreturn\nitem\nInfo\nIn Pydantic version 1 the method to get the JSON Schema for a model was called\nItem.schema()\n, in Pydantic version 2, the method is called\nItem.model_json_schema()\n.\nNevertheless, although we are not using the default integrated functionality, we are still using a Pydantic model to manually generate the JSON Schema for the data that we want to receive in YAML.\nThen we use the request directly, and extract the body as\nbytes\n. This means that FastAPI won't even try to parse the request payload as JSON.\nAnd then in our code, we parse that YAML content directly, and then we are again using the same Pydantic model to validate the YAML content:\nPydantic v2\nPydantic v1\nPython 3.8+\nfrom\ntyping\nimport\nList\nimport\nyaml\nfrom\nfastapi\nimport\nFastAPI\n,\nHTTPException\n,\nRequest\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ntags\n:\nList\n[\nstr\n]\n@app\n.\npost\n(\n\"/items/\"\n,\nopenapi_extra\n=\n{\n\"requestBody\"\n:\n{\n\"content\"\n:\n{\n\"application/x-yaml\"\n:\n{\n\"schema\"\n:\nItem\n.\nmodel_json_schema\n()}},\n\"required\"\n:\nTrue\n,\n},\n},\n)\nasync\ndef\ncreate_item\n(\nrequest\n:\nRequest\n):\nraw_body\n=\nawait\nrequest\n.\nbody\n()\ntry\n:\ndata\n=\nyaml\n.\nsafe_load\n(\nraw_body\n)\nexcept\nyaml\n.\nYAMLError\n:\nraise\nHTTPException\n(\nstatus_code\n=\n422\n,\ndetail\n=\n\"Invalid YAML\"\n)\ntry\n:\nitem\n=\nItem\n.\nmodel_validate\n(\ndata\n)\nexcept\nValidationError\nas\ne\n:\nraise\nHTTPException\n(\nstatus_code\n=\n422\n,\ndetail\n=\ne\n.\nerrors\n(\ninclude_url\n=\nFalse\n))\nreturn\nitem\nPython 3.8+\nfrom\ntyping\nimport\nList\nimport\nyaml\nfrom\nfastapi\nimport\nFastAPI\n,\nHTTPException\n,\nRequest\nfrom\npydantic\nimport\nBaseModel\n,\nValidationError\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ntags\n:\nList\n[\nstr\n]\n@app\n.\npost\n(\n\"/items/\"\n,\nopenapi_extra\n=\n{\n\"requestBody\"\n:\n{\n\"content\"\n:\n{\n\"application/x-yaml\"\n:\n{\n\"schema\"\n:\nItem\n.\nschema\n()}},\n\"required\"\n:\nTrue\n,\n},\n},\n)\nasync\ndef\ncreate_item\n(\nrequest\n:\nRequest\n):\nraw_body\n=\nawait\nrequest\n.\nbody\n()\ntry\n:\ndata\n=\nyaml\n.\nsafe_load\n(\nraw_body\n)\nexcept\nyaml\n.\nYAMLError\n:\nraise\nHTTPException\n(\nstatus_code\n=\n422\n,\ndetail\n=\n\"Invalid YAML\"\n)\ntry\n:\nitem\n=\nItem\n.\nparse_obj\n(\ndata\n)\nexcept\nValidationError\nas\ne\n:\nraise\nHTTPException\n(\nstatus_code\n=\n422\n,\ndetail\n=\ne\n.\nerrors\n())\nreturn\nitem\nInfo\nIn Pydantic version 1 the method to parse and validate an object was\nItem.parse_obj()\n, in Pydantic version 2, the method is called\nItem.model_validate()\n.\nTip\nHere we reuse the same Pydantic model.\nBut the same way, we could have validated it in some other way.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/how-to/conditional-openapi/",
    "title": "Conditional OpenAPI¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nConditional OpenAPI\nTable of contents\nAbout security, APIs, and docs\nConditional OpenAPI from settings and env vars\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAbout security, APIs, and docs\nConditional OpenAPI from settings and env vars\nFastAPI\nLearn\nHow To - Recipes\nConditional OpenAPI\n¶\nIf you needed to, you could use settings and environment variables to configure OpenAPI conditionally depending on the environment, and even disable it entirely.\nAbout security, APIs, and docs\n¶\nHiding your documentation user interfaces in production\nshouldn't\nbe the way to protect your API.\nThat doesn't add any extra security to your API, the\npath operations\nwill still be available where they are.\nIf there's a security flaw in your code, it will still exist.\nHiding the documentation just makes it more difficult to understand how to interact with your API, and could make it more difficult for you to debug it in production. It could be considered simply a form of\nSecurity through obscurity\n.\nIf you want to secure your API, there are several better things you can do, for example:\nMake sure you have well defined Pydantic models for your request bodies and responses.\nConfigure any required permissions and roles using dependencies.\nNever store plaintext passwords, only password hashes.\nImplement and use well-known cryptographic tools, like pwdlib and JWT tokens, etc.\nAdd more granular permission controls with OAuth2 scopes where needed.\n...etc.\nNevertheless, you might have a very specific use case where you really need to disable the API docs for some environment (e.g. for production) or depending on configurations from environment variables.\nConditional OpenAPI from settings and env vars\n¶\nYou can easily use the same Pydantic settings to configure your generated OpenAPI and the docs UIs.\nFor example:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic_settings\nimport\nBaseSettings\nclass\nSettings\n(\nBaseSettings\n):\nopenapi_url\n:\nstr\n=\n\"/openapi.json\"\nsettings\n=\nSettings\n()\napp\n=\nFastAPI\n(\nopenapi_url\n=\nsettings\n.\nopenapi_url\n)\n@app\n.\nget\n(\n\"/\"\n)\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nHere we declare the setting\nopenapi_url\nwith the same default of\n\"/openapi.json\"\n.\nAnd then we use it when creating the\nFastAPI\napp.\nThen you could disable OpenAPI (including the UI docs) by setting the environment variable\nOPENAPI_URL\nto the empty string, like:\n$\nOPENAPI_URL\n=\nuvicorn\nmain:app\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nThen if you go to the URLs at\n/openapi.json\n,\n/docs\n, or\n/redoc\nyou will just get a\n404 Not Found\nerror like:\n{\n\"detail\"\n:\n\"Not Found\"\n}\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/deployment/",
    "title": "Deployment¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nWhat Does Deployment Mean\nDeployment Strategies\nFastAPI\nLearn\nDeployment\nDeployment\n¶\nDeploying a\nFastAPI\napplication is relatively easy.\nWhat Does Deployment Mean\n¶\nTo\ndeploy\nan application means to perform the necessary steps to make it\navailable to the users\n.\nFor a\nweb API\n, it normally involves putting it in a\nremote machine\n, with a\nserver program\nthat provides good performance, stability, etc, so that your\nusers\ncan\naccess\nthe application efficiently and without interruptions or problems.\nThis is in contrast to the\ndevelopment\nstages, where you are constantly changing the code, breaking it and fixing it, stopping and restarting the development server, etc.\nDeployment Strategies\n¶\nThere are several ways to do it depending on your specific use case and the tools that you use.\nYou could\ndeploy a server\nyourself using a combination of tools, you could use a\ncloud service\nthat does part of the work for you, or other possible options.\nI will show you some of the main concepts you should probably keep in mind when deploying a\nFastAPI\napplication (although most of it applies to any other type of web application).\nYou will see more details to keep in mind and some of the techniques to do it in the next sections. ✨\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/path-operation-configuration/",
    "title": "Path Operation Configuration¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nPath Operation Configuration\nTable of contents\nResponse Status Code\nTags\nTags with Enums\nSummary and description\nDescription from docstring\nResponse description\nDeprecate a\npath operation\nRecap\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nResponse Status Code\nTags\nTags with Enums\nSummary and description\nDescription from docstring\nResponse description\nDeprecate a\npath operation\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nPath Operation Configuration\n¶\nThere are several parameters that you can pass to your\npath operation decorator\nto configure it.\nWarning\nNotice that these parameters are passed directly to the\npath operation decorator\n, not to your\npath operation function\n.\nResponse Status Code\n¶\nYou can define the (HTTP)\nstatus_code\nto be used in the response of your\npath operation\n.\nYou can pass directly the\nint\ncode, like\n404\n.\nBut if you don't remember what each number code is for, you can use the shortcut constants in\nstatus\n:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\n,\nstatus\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nstatus_code\n=\nstatus\n.\nHTTP_201_CREATED\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nstatus\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nstatus_code\n=\nstatus\n.\nHTTP_201_CREATED\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\nfrom\ntyping\nimport\nSet\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nstatus\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nSet\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nstatus_code\n=\nstatus\n.\nHTTP_201_CREATED\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\nThat status code will be used in the response and will be added to the OpenAPI schema.\nTechnical Details\nYou could also use\nfrom starlette import status\n.\nFastAPI\nprovides the same\nstarlette.status\nas\nfastapi.status\njust as a convenience for you, the developer. But it comes directly from Starlette.\nTags\n¶\nYou can add tags to your\npath operation\n, pass the parameter\ntags\nwith a\nlist\nof\nstr\n(commonly just one\nstr\n):\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n42\n}]\n@app\n.\nget\n(\n\"/users/\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nread_users\n():\nreturn\n[{\n\"username\"\n:\n\"johndoe\"\n}]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n42\n}]\n@app\n.\nget\n(\n\"/users/\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nread_users\n():\nreturn\n[{\n\"username\"\n:\n\"johndoe\"\n}]\nfrom\ntyping\nimport\nSet\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nSet\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n42\n}]\n@app\n.\nget\n(\n\"/users/\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nread_users\n():\nreturn\n[{\n\"username\"\n:\n\"johndoe\"\n}]\nThey will be added to the OpenAPI schema and used by the automatic documentation interfaces:\nTags with Enums\n¶\nIf you have a big application, you might end up accumulating\nseveral tags\n, and you would want to make sure you always use the\nsame tag\nfor related\npath operations\n.\nIn these cases, it could make sense to store the tags in an\nEnum\n.\nFastAPI\nsupports that the same way as with plain strings:\nPython 3.8+\nfrom\nenum\nimport\nEnum\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\nclass\nTags\n(\nEnum\n):\nitems\n=\n\"items\"\nusers\n=\n\"users\"\n@app\n.\nget\n(\n\"/items/\"\n,\ntags\n=\n[\nTags\n.\nitems\n])\nasync\ndef\nget_items\n():\nreturn\n[\n\"Portal gun\"\n,\n\"Plumbus\"\n]\n@app\n.\nget\n(\n\"/users/\"\n,\ntags\n=\n[\nTags\n.\nusers\n])\nasync\ndef\nread_users\n():\nreturn\n[\n\"Rick\"\n,\n\"Morty\"\n]\nSummary and description\n¶\nYou can add a\nsummary\nand\ndescription\n:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nsummary\n=\n\"Create an item\"\n,\ndescription\n=\n\"Create an item with all the information, name, description, price, tax and a set of unique tags\"\n,\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nsummary\n=\n\"Create an item\"\n,\ndescription\n=\n\"Create an item with all the information, name, description, price, tax and a set of unique tags\"\n,\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\nfrom\ntyping\nimport\nSet\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nSet\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nsummary\n=\n\"Create an item\"\n,\ndescription\n=\n\"Create an item with all the information, name, description, price, tax and a set of unique tags\"\n,\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\nDescription from docstring\n¶\nAs descriptions tend to be long and cover multiple lines, you can declare the\npath operation\ndescription in the function\ndocstring\nand\nFastAPI\nwill read it from there.\nYou can write\nMarkdown\nin the docstring, it will be interpreted and displayed correctly (taking into account docstring indentation).\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nsummary\n=\n\"Create an item\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\n\"\"\"\nCreate an item with all the information:\n- **name**: each item must have a name\n- **description**: a long description\n- **price**: required\n- **tax**: if the item doesn't have tax, you can omit this\n- **tags**: a set of unique tag strings for this item\n\"\"\"\nreturn\nitem\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nsummary\n=\n\"Create an item\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\n\"\"\"\nCreate an item with all the information:\n- **name**: each item must have a name\n- **description**: a long description\n- **price**: required\n- **tax**: if the item doesn't have tax, you can omit this\n- **tags**: a set of unique tag strings for this item\n\"\"\"\nreturn\nitem\nfrom\ntyping\nimport\nSet\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nSet\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nsummary\n=\n\"Create an item\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\n\"\"\"\nCreate an item with all the information:\n- **name**: each item must have a name\n- **description**: a long description\n- **price**: required\n- **tax**: if the item doesn't have tax, you can omit this\n- **tags**: a set of unique tag strings for this item\n\"\"\"\nreturn\nitem\nIt will be used in the interactive docs:\nResponse description\n¶\nYou can specify the response description with the parameter\nresponse_description\n:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nsummary\n=\n\"Create an item\"\n,\nresponse_description\n=\n\"The created item\"\n,\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\n\"\"\"\nCreate an item with all the information:\n- **name**: each item must have a name\n- **description**: a long description\n- **price**: required\n- **tax**: if the item doesn't have tax, you can omit this\n- **tags**: a set of unique tag strings for this item\n\"\"\"\nreturn\nitem\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nset\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nsummary\n=\n\"Create an item\"\n,\nresponse_description\n=\n\"The created item\"\n,\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\n\"\"\"\nCreate an item with all the information:\n- **name**: each item must have a name\n- **description**: a long description\n- **price**: required\n- **tax**: if the item doesn't have tax, you can omit this\n- **tags**: a set of unique tag strings for this item\n\"\"\"\nreturn\nitem\nfrom\ntyping\nimport\nSet\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nSet\n[\nstr\n]\n=\nset\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n,\nsummary\n=\n\"Create an item\"\n,\nresponse_description\n=\n\"The created item\"\n,\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\n\"\"\"\nCreate an item with all the information:\n- **name**: each item must have a name\n- **description**: a long description\n- **price**: required\n- **tax**: if the item doesn't have tax, you can omit this\n- **tags**: a set of unique tag strings for this item\n\"\"\"\nreturn\nitem\nInfo\nNotice that\nresponse_description\nrefers specifically to the response, the\ndescription\nrefers to the\npath operation\nin general.\nCheck\nOpenAPI specifies that each\npath operation\nrequires a response description.\nSo, if you don't provide one,\nFastAPI\nwill automatically generate one of \"Successful response\".\nDeprecate a\npath operation\n¶\nIf you need to mark a\npath operation\nas\ndeprecated\n, but without removing it, pass the parameter\ndeprecated\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n42\n}]\n@app\n.\nget\n(\n\"/users/\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nread_users\n():\nreturn\n[{\n\"username\"\n:\n\"johndoe\"\n}]\n@app\n.\nget\n(\n\"/elements/\"\n,\ntags\n=\n[\n\"items\"\n],\ndeprecated\n=\nTrue\n)\nasync\ndef\nread_elements\n():\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n}]\nIt will be clearly marked as deprecated in the interactive docs:\nCheck how deprecated and non-deprecated\npath operations\nlook like:\nRecap\n¶\nYou can configure and add metadata for your\npath operations\neasily by passing parameters to the\npath operation decorators\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/schema-extra-example/",
    "title": "Declare Request Example Data¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nDeclare Request Example Data\nTable of contents\nExtra JSON Schema data in Pydantic models\nField\nadditional arguments\nexamples\nin JSON Schema - OpenAPI\nBody\nwith\nexamples\nExample in the docs UI\nBody\nwith multiple\nexamples\nOpenAPI-specific\nexamples\nUsing the\nopenapi_examples\nParameter\nOpenAPI Examples in the Docs UI\nTechnical Details\nJSON Schema's\nexamples\nfield\nPydantic and FastAPI\nexamples\nSwagger UI and OpenAPI-specific\nexamples\nSummary\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nExtra JSON Schema data in Pydantic models\nField\nadditional arguments\nexamples\nin JSON Schema - OpenAPI\nBody\nwith\nexamples\nExample in the docs UI\nBody\nwith multiple\nexamples\nOpenAPI-specific\nexamples\nUsing the\nopenapi_examples\nParameter\nOpenAPI Examples in the Docs UI\nTechnical Details\nJSON Schema's\nexamples\nfield\nPydantic and FastAPI\nexamples\nSwagger UI and OpenAPI-specific\nexamples\nSummary\nFastAPI\nLearn\nTutorial - User Guide\nDeclare Request Example Data\n¶\nYou can declare examples of the data your app can receive.\nHere are several ways to do it.\nExtra JSON Schema data in Pydantic models\n¶\nYou can declare\nexamples\nfor a Pydantic model that will be added to the generated JSON Schema.\nPydantic v2\nPydantic v1\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\nmodel_config\n=\n{\n\"json_schema_extra\"\n:\n{\n\"examples\"\n:\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n}\n]\n}\n}\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\nmodel_config\n=\n{\n\"json_schema_extra\"\n:\n{\n\"examples\"\n:\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n}\n]\n}\n}\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\nclass\nConfig\n:\nschema_extra\n=\n{\n\"examples\"\n:\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n}\n]\n}\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\nclass\nConfig\n:\nschema_extra\n=\n{\n\"examples\"\n:\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n}\n]\n}\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nThat extra info will be added as-is to the output\nJSON Schema\nfor that model, and it will be used in the API docs.\nPydantic v2\nPydantic v1\nIn Pydantic version 2, you would use the attribute\nmodel_config\n, that takes a\ndict\nas described in\nPydantic's docs: Configuration\n.\nYou can set\n\"json_schema_extra\"\nwith a\ndict\ncontaining any additional data you would like to show up in the generated JSON Schema, including\nexamples\n.\nIn Pydantic version 1, you would use an internal class\nConfig\nand\nschema_extra\n, as described in\nPydantic's docs: Schema customization\n.\nYou can set\nschema_extra\nwith a\ndict\ncontaining any additional data you would like to show up in the generated JSON Schema, including\nexamples\n.\nTip\nYou could use the same technique to extend the JSON Schema and add your own custom extra info.\nFor example you could use it to add metadata for a frontend user interface, etc.\nInfo\nOpenAPI 3.1.0 (used since FastAPI 0.99.0) added support for\nexamples\n, which is part of the\nJSON Schema\nstandard.\nBefore that, it only supported the keyword\nexample\nwith a single example. That is still supported by OpenAPI 3.1.0, but is deprecated and is not part of the JSON Schema standard. So you are encouraged to migrate\nexample\nto\nexamples\n. 🤓\nYou can read more at the end of this page.\nField\nadditional arguments\n¶\nWhen using\nField()\nwith Pydantic models, you can also declare additional\nexamples\n:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\n=\nField\n(\nexamples\n=\n[\n\"Foo\"\n])\ndescription\n:\nstr\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nexamples\n=\n[\n\"A very nice Item\"\n])\nprice\n:\nfloat\n=\nField\n(\nexamples\n=\n[\n35.4\n])\ntax\n:\nfloat\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nexamples\n=\n[\n3.2\n])\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\n=\nField\n(\nexamples\n=\n[\n\"Foo\"\n])\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nexamples\n=\n[\n\"A very nice Item\"\n])\nprice\n:\nfloat\n=\nField\n(\nexamples\n=\n[\n35.4\n])\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nexamples\n=\n[\n3.2\n])\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nexamples\nin JSON Schema - OpenAPI\n¶\nWhen using any of:\nPath()\nQuery()\nHeader()\nCookie()\nBody()\nForm()\nFile()\nyou can also declare a group of\nexamples\nwith additional information that will be added to their\nJSON Schemas\ninside of\nOpenAPI\n.\nBody\nwith\nexamples\n¶\nHere we pass\nexamples\ncontaining one example of the data expected in\nBody()\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nexamples\n=\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n}\n],\n),\n],\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nexamples\n=\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n}\n],\n),\n],\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nexamples\n=\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n}\n],\n),\n],\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n=\nBody\n(\nexamples\n=\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n}\n],\n),\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n=\nBody\n(\nexamples\n=\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n}\n],\n),\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nExample in the docs UI\n¶\nWith any of the methods above it would look like this in the\n/docs\n:\nBody\nwith multiple\nexamples\n¶\nYou can of course also pass multiple\nexamples\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nexamples\n=\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n},\n{\n\"name\"\n:\n\"Bar\"\n,\n\"price\"\n:\n\"35.4\"\n,\n},\n{\n\"name\"\n:\n\"Baz\"\n,\n\"price\"\n:\n\"thirty five point four\"\n,\n},\n],\n),\n],\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nexamples\n=\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n},\n{\n\"name\"\n:\n\"Bar\"\n,\n\"price\"\n:\n\"35.4\"\n,\n},\n{\n\"name\"\n:\n\"Baz\"\n,\n\"price\"\n:\n\"thirty five point four\"\n,\n},\n],\n),\n],\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nexamples\n=\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n},\n{\n\"name\"\n:\n\"Bar\"\n,\n\"price\"\n:\n\"35.4\"\n,\n},\n{\n\"name\"\n:\n\"Baz\"\n,\n\"price\"\n:\n\"thirty five point four\"\n,\n},\n],\n),\n],\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nItem\n=\nBody\n(\nexamples\n=\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n},\n{\n\"name\"\n:\n\"Bar\"\n,\n\"price\"\n:\n\"35.4\"\n,\n},\n{\n\"name\"\n:\n\"Baz\"\n,\n\"price\"\n:\n\"thirty five point four\"\n,\n},\n],\n),\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nItem\n=\nBody\n(\nexamples\n=\n[\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n},\n{\n\"name\"\n:\n\"Bar\"\n,\n\"price\"\n:\n\"35.4\"\n,\n},\n{\n\"name\"\n:\n\"Baz\"\n,\n\"price\"\n:\n\"thirty five point four\"\n,\n},\n],\n),\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nWhen you do this, the examples will be part of the internal\nJSON Schema\nfor that body data.\nNevertheless, at the\ntime of writing this\n, Swagger UI, the tool in charge of showing the docs UI, doesn't support showing multiple examples for the data in\nJSON Schema\n. But read below for a workaround.\nOpenAPI-specific\nexamples\n¶\nSince before\nJSON Schema\nsupported\nexamples\nOpenAPI had support for a different field also called\nexamples\n.\nThis\nOpenAPI-specific\nexamples\ngoes in another section in the OpenAPI specification. It goes in the\ndetails for each\npath operation\n, not inside each JSON Schema.\nAnd Swagger UI has supported this particular\nexamples\nfield for a while. So, you can use it to\nshow\ndifferent\nexamples in the docs UI\n.\nThe shape of this OpenAPI-specific field\nexamples\nis a\ndict\nwith\nmultiple examples\n(instead of a\nlist\n), each with extra information that will be added to\nOpenAPI\ntoo.\nThis doesn't go inside of each JSON Schema contained in OpenAPI, this goes outside, in the\npath operation\ndirectly.\nUsing the\nopenapi_examples\nParameter\n¶\nYou can declare the OpenAPI-specific\nexamples\nin FastAPI with the parameter\nopenapi_examples\nfor:\nPath()\nQuery()\nHeader()\nCookie()\nBody()\nForm()\nFile()\nThe keys of the\ndict\nidentify each example, and each value is another\ndict\n.\nEach specific example\ndict\nin the\nexamples\ncan contain:\nsummary\n: Short description for the example.\ndescription\n: A long description that can contain Markdown text.\nvalue\n: This is the actual example shown, e.g. a\ndict\n.\nexternalValue\n: alternative to\nvalue\n, a URL pointing to the example. Although this might not be supported by as many tools as\nvalue\n.\nYou can use it like this:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nopenapi_examples\n=\n{\n\"normal\"\n:\n{\n\"summary\"\n:\n\"A normal example\"\n,\n\"description\"\n:\n\"A **normal** item works correctly.\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n},\n},\n\"converted\"\n:\n{\n\"summary\"\n:\n\"An example with converted data\"\n,\n\"description\"\n:\n\"FastAPI can convert price `strings` to actual `numbers` automatically\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"price\"\n:\n\"35.4\"\n,\n},\n},\n\"invalid\"\n:\n{\n\"summary\"\n:\n\"Invalid data is rejected with an error\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"price\"\n:\n\"thirty five point four\"\n,\n},\n},\n},\n),\n],\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nopenapi_examples\n=\n{\n\"normal\"\n:\n{\n\"summary\"\n:\n\"A normal example\"\n,\n\"description\"\n:\n\"A **normal** item works correctly.\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n},\n},\n\"converted\"\n:\n{\n\"summary\"\n:\n\"An example with converted data\"\n,\n\"description\"\n:\n\"FastAPI can convert price `strings` to actual `numbers` automatically\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"price\"\n:\n\"35.4\"\n,\n},\n},\n\"invalid\"\n:\n{\n\"summary\"\n:\n\"Invalid data is rejected with an error\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"price\"\n:\n\"thirty five point four\"\n,\n},\n},\n},\n),\n],\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nopenapi_examples\n=\n{\n\"normal\"\n:\n{\n\"summary\"\n:\n\"A normal example\"\n,\n\"description\"\n:\n\"A **normal** item works correctly.\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n},\n},\n\"converted\"\n:\n{\n\"summary\"\n:\n\"An example with converted data\"\n,\n\"description\"\n:\n\"FastAPI can convert price `strings` to actual `numbers` automatically\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"price\"\n:\n\"35.4\"\n,\n},\n},\n\"invalid\"\n:\n{\n\"summary\"\n:\n\"Invalid data is rejected with an error\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"price\"\n:\n\"thirty five point four\"\n,\n},\n},\n},\n),\n],\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nItem\n=\nBody\n(\nopenapi_examples\n=\n{\n\"normal\"\n:\n{\n\"summary\"\n:\n\"A normal example\"\n,\n\"description\"\n:\n\"A **normal** item works correctly.\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n},\n},\n\"converted\"\n:\n{\n\"summary\"\n:\n\"An example with converted data\"\n,\n\"description\"\n:\n\"FastAPI can convert price `strings` to actual `numbers` automatically\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"price\"\n:\n\"35.4\"\n,\n},\n},\n\"invalid\"\n:\n{\n\"summary\"\n:\n\"Invalid data is rejected with an error\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"price\"\n:\n\"thirty five point four\"\n,\n},\n},\n},\n),\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nItem\n=\nBody\n(\nopenapi_examples\n=\n{\n\"normal\"\n:\n{\n\"summary\"\n:\n\"A normal example\"\n,\n\"description\"\n:\n\"A **normal** item works correctly.\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"A very nice Item\"\n,\n\"price\"\n:\n35.4\n,\n\"tax\"\n:\n3.2\n,\n},\n},\n\"converted\"\n:\n{\n\"summary\"\n:\n\"An example with converted data\"\n,\n\"description\"\n:\n\"FastAPI can convert price `strings` to actual `numbers` automatically\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"price\"\n:\n\"35.4\"\n,\n},\n},\n\"invalid\"\n:\n{\n\"summary\"\n:\n\"Invalid data is rejected with an error\"\n,\n\"value\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"price\"\n:\n\"thirty five point four\"\n,\n},\n},\n},\n),\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nOpenAPI Examples in the Docs UI\n¶\nWith\nopenapi_examples\nadded to\nBody()\nthe\n/docs\nwould look like:\nTechnical Details\n¶\nTip\nIf you are already using\nFastAPI\nversion\n0.99.0 or above\n, you can probably\nskip\nthese details.\nThey are more relevant for older versions, before OpenAPI 3.1.0 was available.\nYou can consider this a brief OpenAPI and JSON Schema\nhistory lesson\n. 🤓\nWarning\nThese are very technical details about the standards\nJSON Schema\nand\nOpenAPI\n.\nIf the ideas above already work for you, that might be enough, and you probably don't need these details, feel free to skip them.\nBefore OpenAPI 3.1.0, OpenAPI used an older and modified version of\nJSON Schema\n.\nJSON Schema didn't have\nexamples\n, so OpenAPI added its own\nexample\nfield to its own modified version.\nOpenAPI also added\nexample\nand\nexamples\nfields to other parts of the specification:\nParameter Object\n(in the specification)\nthat was used by FastAPI's:\nPath()\nQuery()\nHeader()\nCookie()\nRequest Body Object\n, in the field\ncontent\n, on the\nMedia Type Object\n(in the specification)\nthat was used by FastAPI's:\nBody()\nFile()\nForm()\nInfo\nThis old OpenAPI-specific\nexamples\nparameter is now\nopenapi_examples\nsince FastAPI\n0.103.0\n.\nJSON Schema's\nexamples\nfield\n¶\nBut then JSON Schema added an\nexamples\nfield to a new version of the specification.\nAnd then the new OpenAPI 3.1.0 was based on the latest version (JSON Schema 2020-12) that included this new field\nexamples\n.\nAnd now this new\nexamples\nfield takes precedence over the old single (and custom)\nexample\nfield, that is now deprecated.\nThis new\nexamples\nfield in JSON Schema is\njust a\nlist\nof examples, not a dict with extra metadata as in the other places in OpenAPI (described above).\nInfo\nEven after OpenAPI 3.1.0 was released with this new simpler integration with JSON Schema, for a while, Swagger UI, the tool that provides the automatic docs, didn't support OpenAPI 3.1.0 (it does since version 5.0.0 🎉).\nBecause of that, versions of FastAPI previous to 0.99.0 still used versions of OpenAPI lower than 3.1.0.\nPydantic and FastAPI\nexamples\n¶\nWhen you add\nexamples\ninside a Pydantic model, using\nschema_extra\nor\nField(examples=[\"something\"])\nthat example is added to the\nJSON Schema\nfor that Pydantic model.\nAnd that\nJSON Schema\nof the Pydantic model is included in the\nOpenAPI\nof your API, and then it's used in the docs UI.\nIn versions of FastAPI before 0.99.0 (0.99.0 and above use the newer OpenAPI 3.1.0) when you used\nexample\nor\nexamples\nwith any of the other utilities (\nQuery()\n,\nBody()\n, etc.) those examples were not added to the JSON Schema that describes that data (not even to OpenAPI's own version of JSON Schema), they were added directly to the\npath operation\ndeclaration in OpenAPI (outside the parts of OpenAPI that use JSON Schema).\nBut now that FastAPI 0.99.0 and above uses OpenAPI 3.1.0, that uses JSON Schema 2020-12, and Swagger UI 5.0.0 and above, everything is more consistent and the examples are included in JSON Schema.\nSwagger UI and OpenAPI-specific\nexamples\n¶\nNow, as Swagger UI didn't support multiple JSON Schema examples (as of 2023-08-26), users didn't have a way to show multiple examples in the docs.\nTo solve that, FastAPI\n0.103.0\nadded support\nfor declaring the same old\nOpenAPI-specific\nexamples\nfield with the new parameter\nopenapi_examples\n. 🤓\nSummary\n¶\nI used to say I didn't like history that much... and look at me now giving \"tech history\" lessons. 😅\nIn short,\nupgrade to FastAPI 0.99.0 or above\n, and things are much\nsimpler, consistent, and intuitive\n, and you don't have to know all these historic details. 😎\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/fastapi-people/",
    "title": "FastAPI People¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nFastAPI People\nTable of contents\nCreator\nTeam\nFastAPI Experts\nFastAPI Experts - Last Month\nFastAPI Experts - 3 Months\nFastAPI Experts - 6 Months\nFastAPI Experts - 1 Year\nFastAPI Experts - All Time\nTop Contributors\nTop Translators\nTop Translation Reviewers\nSponsors\nGold Sponsors\nSilver Sponsors\nBronze Sponsors\nIndividual Sponsors\nAbout the data - technical details\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nCreator\nTeam\nFastAPI Experts\nFastAPI Experts - Last Month\nFastAPI Experts - 3 Months\nFastAPI Experts - 6 Months\nFastAPI Experts - 1 Year\nFastAPI Experts - All Time\nTop Contributors\nTop Translators\nTop Translation Reviewers\nSponsors\nGold Sponsors\nSilver Sponsors\nBronze Sponsors\nIndividual Sponsors\nAbout the data - technical details\nFastAPI People\n¶\nFastAPI has an amazing community that welcomes people from all backgrounds.\nCreator\n¶\nHey! 👋\nThis is me:\n@tiangolo\nAnswers: 1900\nPull Requests: 782\nI'm the creator of\nFastAPI\n. You can read more about that in\nHelp FastAPI - Get Help - Connect with the author\n.\n...But here I want to show you the community.\nFastAPI\nreceives a lot of support from the community. And I want to highlight their contributions.\nThese are the people that:\nHelp others with questions in GitHub\n.\nCreate Pull Requests\n.\nReview Pull Requests,\nespecially important for translations\n.\nHelp\nmanage the repository\n(team members).\nAll these tasks help maintain the repository.\nA round of applause to them. 👏 🙇\nTeam\n¶\nThis is the current list of team members. 😎\nThey have different levels of involvement and permissions, they can perform\nrepository management tasks\nand together we\nmanage the FastAPI repository\n.\n@tiangolo\n@Kludex\n@alejsdev\n@svlandeg\n@YuriiMotov\n@patrick91\n@luzzodev\nAlthough the team members have the permissions to perform privileged tasks, all the\nhelp from others maintaining FastAPI\nis very much appreciated! 🙇‍♂️\nFastAPI Experts\n¶\nThese are the users that have been\nhelping others the most with questions in GitHub\n. 🙇\nThey have proven to be\nFastAPI Experts\nby helping many others. ✨\nTip\nYou could become an official FastAPI Expert too!\nJust\nhelp others with questions in GitHub\n. 🤓\nYou can see the\nFastAPI Experts\nfor:\nLast Month\n🤓\n3 Months\n😎\n6 Months\n🧐\n1 Year\n🧑‍🔬\nAll Time\n🧙\nFastAPI Experts - Last Month\n¶\nThese are the users that have been\nhelping others the most with questions in GitHub\nduring the last month. 🤓\n@YuriiMotov\nQuestions replied: 17\n@valentinDruzhinin\nQuestions replied: 5\n@yinziyan1206\nQuestions replied: 4\n@luzzodev\nQuestions replied: 2\nFastAPI Experts - 3 Months\n¶\nThese are the users that have been\nhelping others the most with questions in GitHub\nduring the last 3 months. 😎\n@YuriiMotov\nQuestions replied: 397\n@valentinDruzhinin\nQuestions replied: 24\n@luzzodev\nQuestions replied: 17\n@raceychan\nQuestions replied: 6\n@yinziyan1206\nQuestions replied: 5\n@DoctorJohn\nQuestions replied: 5\n@sachinh35\nQuestions replied: 4\n@eqsdxr\nQuestions replied: 4\n@Jelle-tenB\nQuestions replied: 3\nFastAPI Experts - 6 Months\n¶\nThese are the users that have been\nhelping others the most with questions in GitHub\nduring the last 6 months. 🧐\n@YuriiMotov\nQuestions replied: 763\n@luzzodev\nQuestions replied: 45\n@valentinDruzhinin\nQuestions replied: 24\n@alv2017\nQuestions replied: 16\n@sachinh35\nQuestions replied: 9\n@yauhen-sobaleu\nQuestions replied: 9\n@JavierSanchezCastro\nQuestions replied: 6\n@raceychan\nQuestions replied: 6\n@yinziyan1206\nQuestions replied: 5\nFastAPI Experts - 1 Year\n¶\nThese are the users that have been\nhelping others the most with questions in GitHub\nduring the last year. 🧑‍🔬\n@YuriiMotov\nQuestions replied: 824\n@luzzodev\nQuestions replied: 89\n@Kludex\nQuestions replied: 50\n@sinisaos\nQuestions replied: 33\n@alv2017\nQuestions replied: 26\n@valentinDruzhinin\nQuestions replied: 24\n@JavierSanchezCastro\nQuestions replied: 24\n@jgould22\nQuestions replied: 17\n@Kfir-G\nQuestions replied: 13\n@sehraramiz\nQuestions replied: 11\n@sachinh35\nQuestions replied: 9\n@yauhen-sobaleu\nQuestions replied: 9\n@estebanx64\nQuestions replied: 7\n@ceb10n\nQuestions replied: 7\n@yvallois\nQuestions replied: 7\n@raceychan\nQuestions replied: 6\n@yinziyan1206\nQuestions replied: 5\n@DoctorJohn\nQuestions replied: 5\n@n8sty\nQuestions replied: 5\nFastAPI Experts - All Time\n¶\nHere are the all time\nFastAPI Experts\n. 🤓🤯\nThese are the users that have\nhelped others the most with questions in GitHub\nthrough\nall time\n. 🧙\n@YuriiMotov\nQuestions replied: 971\n@Kludex\nQuestions replied: 654\n@jgould22\nQuestions replied: 263\n@dmontagu\nQuestions replied: 240\n@Mause\nQuestions replied: 219\n@ycd\nQuestions replied: 216\n@JarroVGIT\nQuestions replied: 190\n@euri10\nQuestions replied: 153\n@iudeen\nQuestions replied: 128\n@phy25\nQuestions replied: 126\n@JavierSanchezCastro\nQuestions replied: 94\n@luzzodev\nQuestions replied: 89\n@raphaelauv\nQuestions replied: 83\n@ArcLightSlavik\nQuestions replied: 71\n@ghandic\nQuestions replied: 71\n@n8sty\nQuestions replied: 67\n@falkben\nQuestions replied: 59\n@yinziyan1206\nQuestions replied: 54\n@sm-Fifteen\nQuestions replied: 49\n@acidjunk\nQuestions replied: 49\n@adriangb\nQuestions replied: 46\n@Dustyposa\nQuestions replied: 45\n@insomnes\nQuestions replied: 45\n@frankie567\nQuestions replied: 43\n@odiseo0\nQuestions replied: 43\n@sinisaos\nQuestions replied: 41\n@includeamin\nQuestions replied: 40\n@STeveShary\nQuestions replied: 37\n@chbndrhnns\nQuestions replied: 37\n@krishnardt\nQuestions replied: 35\n@panla\nQuestions replied: 32\n@prostomarkeloff\nQuestions replied: 28\n@hasansezertasan\nQuestions replied: 27\n@alv2017\nQuestions replied: 26\n@dbanty\nQuestions replied: 26\n@wshayes\nQuestions replied: 25\n@valentinDruzhinin\nQuestions replied: 24\n@SirTelemak\nQuestions replied: 23\n@connebs\nQuestions replied: 22\n@nymous\nQuestions replied: 22\n@chrisK824\nQuestions replied: 22\n@rafsaf\nQuestions replied: 21\n@nsidnev\nQuestions replied: 20\n@chris-allnutt\nQuestions replied: 20\n@ebottos94\nQuestions replied: 20\n@estebanx64\nQuestions replied: 19\n@sehraramiz\nQuestions replied: 18\n@retnikt\nQuestions replied: 18\nTop Contributors\n¶\nHere are the\nTop Contributors\n. 👷\nThese users have\ncreated the most Pull Requests\nthat have been\nmerged\n.\nThey have contributed source code, documentation, etc. 📦\n@alejsdev\nPull Requests: 52\n@Kludex\nPull Requests: 24\n@dmontagu\nPull Requests: 17\n@euri10\nPull Requests: 13\n@nilslindemann\nPull Requests: 13\n@kantandane\nPull Requests: 13\n@svlandeg\nPull Requests: 11\n@zhaohan-dong\nPull Requests: 11\n@YuriiMotov\nPull Requests: 10\n@mariacamilagl\nPull Requests: 9\n@handabaldeep\nPull Requests: 9\n@vishnuvskvkl\nPull Requests: 8\n@alissadb\nPull Requests: 6\n@alv2017\nPull Requests: 6\n@wshayes\nPull Requests: 5\n@samuelcolvin\nPull Requests: 5\n@waynerv\nPull Requests: 5\n@krishnamadhavan\nPull Requests: 5\n@jekirl\nPull Requests: 4\n@hitrust\nPull Requests: 4\n@ShahriyarR\nPull Requests: 4\n@adriangb\nPull Requests: 4\n@iudeen\nPull Requests: 4\n@musicinmybrain\nPull Requests: 4\n@philipokiokio\nPull Requests: 4\n@AlexWendland\nPull Requests: 4\n@divums\nPull Requests: 3\n@prostomarkeloff\nPull Requests: 3\n@nsidnev\nPull Requests: 3\n@pawamoy\nPull Requests: 3\n@patrickmckenna\nPull Requests: 3\n@hukkin\nPull Requests: 3\n@marcosmmb\nPull Requests: 3\n@Serrones\nPull Requests: 3\n@uriyyo\nPull Requests: 3\n@andrew222651\nPull Requests: 3\n@rkbeatss\nPull Requests: 3\n@asheux\nPull Requests: 3\n@blkst8\nPull Requests: 3\n@ghandic\nPull Requests: 3\n@TeoZosa\nPull Requests: 3\n@graingert\nPull Requests: 3\n@jaystone776\nPull Requests: 3\n@zanieb\nPull Requests: 3\n@MicaelJarniac\nPull Requests: 3\n@papb\nPull Requests: 3\nThere are hundreds of other contributors, you can see them all in the\nFastAPI GitHub Contributors page\n. 👷\nTop Translators\n¶\nThese are the\nTop Translators\n. 🌐\nThese users have created the most Pull Requests with\ntranslations to other languages\nthat have been\nmerged\n.\n@nilslindemann\nTranslations: 122\n@jaystone776\nTranslations: 46\n@valentinDruzhinin\nTranslations: 29\n@ceb10n\nTranslations: 27\n@tokusumi\nTranslations: 23\n@SwftAlpc\nTranslations: 23\n@hasansezertasan\nTranslations: 22\n@waynerv\nTranslations: 20\n@AlertRED\nTranslations: 16\n@hard-coders\nTranslations: 15\n@Joao-Pedro-P-Holanda\nTranslations: 14\n@codingjenny\nTranslations: 14\n@Xewus\nTranslations: 13\n@Zhongheng-Cheng\nTranslations: 13\n@Smlep\nTranslations: 11\n@marcelomarkus\nTranslations: 11\n@KaniKim\nTranslations: 10\n@Vincy1230\nTranslations: 9\n@rjNemo\nTranslations: 8\n@xzmeng\nTranslations: 8\n@pablocm83\nTranslations: 8\n@ptt3199\nTranslations: 7\n@NinaHwang\nTranslations: 6\n@batlopes\nTranslations: 6\n@lucasbalieiro\nTranslations: 6\n@Alexandrhub\nTranslations: 6\n@Serrones\nTranslations: 5\n@RunningIkkyu\nTranslations: 5\n@Attsun1031\nTranslations: 5\n@rostik1410\nTranslations: 5\n@alv2017\nTranslations: 5\n@komtaki\nTranslations: 4\n@JulianMaurin\nTranslations: 4\n@stlucasgarcia\nTranslations: 4\n@ComicShrimp\nTranslations: 4\n@BilalAlpaslan\nTranslations: 4\n@axel584\nTranslations: 4\n@tamtam-fitness\nTranslations: 4\n@Limsunoh\nTranslations: 4\n@kwang1215\nTranslations: 4\n@k94-ishi\nTranslations: 4\n@Mohammad222PR\nTranslations: 4\n@NavesSapnis\nTranslations: 4\n@jfunez\nTranslations: 3\n@ycd\nTranslations: 3\n@mariacamilagl\nTranslations: 3\n@maoyibo\nTranslations: 3\n@blt232018\nTranslations: 3\n@magiskboy\nTranslations: 3\nTop Translation Reviewers\n¶\nThese users are the\nTop Translation Reviewers\n. 🕵️\nI only speak a few languages (and not very well 😅). So, the reviewers are the ones that have the\npower to approve translations\nof the documentation. Without them, there wouldn't be documentation in several other languages.\n@s111d\nReviews: 147\n@Xewus\nReviews: 140\n@sodaMelon\nReviews: 127\n@ceb10n\nReviews: 116\n@tokusumi\nReviews: 104\n@hasansezertasan\nReviews: 95\n@hard-coders\nReviews: 93\n@alv2017\nReviews: 88\n@nazarepiedady\nReviews: 86\n@AlertRED\nReviews: 81\n@Alexandrhub\nReviews: 68\n@waynerv\nReviews: 63\n@cassiobotaro\nReviews: 62\n@nilslindemann\nReviews: 59\n@mattwang44\nReviews: 59\n@Laineyzhang55\nReviews: 48\n@Kludex\nReviews: 47\n@komtaki\nReviews: 45\n@rostik1410\nReviews: 42\n@svlandeg\nReviews: 42\n@alperiox\nReviews: 42\n@Rishat-F\nReviews: 42\n@Winand\nReviews: 40\n@YuriiMotov\nReviews: 40\n@solomein-sv\nReviews: 38\n@JavierSanchezCastro\nReviews: 38\n@alejsdev\nReviews: 37\n@stlucasgarcia\nReviews: 36\n@SwftAlpc\nReviews: 36\n@timothy-jeong\nReviews: 36\n@mezgoodle\nReviews: 35\n@rjNemo\nReviews: 34\n@codingjenny\nReviews: 34\n@akarev0\nReviews: 33\n@romashevchenko\nReviews: 32\n@LorhanSohaky\nReviews: 30\n@Vincy1230\nReviews: 30\n@black-redoc\nReviews: 29\n@pedabraham\nReviews: 28\n@Smlep\nReviews: 28\n@dedkot01\nReviews: 28\n@hsuanchi\nReviews: 28\n@dpinezich\nReviews: 28\n@maoyibo\nReviews: 27\n@0417taehyun\nReviews: 27\n@BilalAlpaslan\nReviews: 26\n@junah201\nReviews: 26\n@zy7y\nReviews: 25\n@mycaule\nReviews: 25\nSponsors\n¶\nThese are the\nSponsors\n. 😎\nThey are supporting my work with\nFastAPI\n(and others), mainly through\nGitHub Sponsors\n.\nGold Sponsors\n¶\nSilver Sponsors\n¶\nBronze Sponsors\n¶\nIndividual Sponsors\n¶\n@marvin-robot\n@mercedes-benz\n@Ponte-Energy-Partners\n@BoostryJP\n@acsone\n@Trivie\n@takashi-yoneya\n@mainframeindustries\n@yasyf\n@alixlahuec\n@primer-io\n@nilslindemann\n@upciti\n@thisisfixer\n@samuelcolvin\n@otosky\n@ramonalmeidam\n@roboflow\n@ehaca\n@raphaellaude\n@timlrx\n@Leay15\n@kaoru0310\n@DelfinaCare\n@Karine-Bauch\n@jugeeem\n@dudikbender\n@patsatsia\n@anthonycepeda\n@patricioperezv\n@chickenandstats\n@dodo5522\n@knallgelb\n@dblackrun\n@zsinx6\n@kennywakeland\n@aacayaco\n@anomaly\n@mj0331\n@gorhack\n@Ryandaydev\n@vincentkoc\n@jstanden\n@paulcwatts\n@robintw\n@pamelafox\n@wshayes\n@koxudaxi\n@falkben\n@mintuhouse\n@wdwinslow\n@jsoques\n@dannywade\n@khadrawy\n@mjohnsey\n@ashi-agrawal\n@RaamEEIL\n@jaredtrog\n@oliverxchen\n@ternaus\n@eseglem\n@FernandoCelmer\n@Rehket\n@hiancdtrsnm\n@manoelpqueiroz\n@pawamoy\n@siavashyj\n@mobyw\n@ArtyomVancyan\n@caviri\n@hgalytoby\n@nisutec\n@hoenie-ams\n@joerambo\n@engineerjoe440\n@bnkc\n@petercool\n@JulioPeixoto\n@johnl28\n@PunRabbit\n@PelicanQ\n@miguelgr\n@WillHogan\n@my3\n@Alisa-lisa\n@moonape1226\n@ddanier\n@bryanculbertson\n@slafs\n@ceb10n\n@tochikuji\n@xncbf\n@DMantis\n@hard-coders\n@supdann\n@mntolia\n@Zuzah\n@TheR1D\n@joshuatz\n@danielunderwood\n@rangulvers\n@sdevkota\n@Baghdady92\n@KentShikama\n@katnoria\n@harsh183\n@KOZ39\n@rwxd\n@morzan1001\n@azharthegeek\n@Olegt0rr\n@larsyngvelundin\n@andrecorumba\n@ChenPu2002\n@CoderDeltaLAN\n@aghents\n@0ne-stone\n@nayasinghania\n@Toothwitch\n@andreagrandi\n@msserpa\nAbout the data - technical details\n¶\nThe main intention of this page is to highlight the effort of the community to help others.\nEspecially including efforts that are normally less visible, and in many cases more arduous, like helping others with questions and reviewing Pull Requests with translations.\nThe data is calculated each month, you can read the\nsource code here\n.\nHere I'm also highlighting contributions from sponsors.\nI also reserve the right to update the algorithm, sections, thresholds, etc (just in case 🤷).\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/body-updates/",
    "title": "Body - Updates¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nBody - Updates\nTable of contents\nUpdate replacing with\nPUT\nWarning about replacing\nPartial updates with\nPATCH\nUsing Pydantic's\nexclude_unset\nparameter\nUsing Pydantic's\nupdate\nparameter\nPartial updates recap\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUpdate replacing with\nPUT\nWarning about replacing\nPartial updates with\nPATCH\nUsing Pydantic's\nexclude_unset\nparameter\nUsing Pydantic's\nupdate\nparameter\nPartial updates recap\nFastAPI\nLearn\nTutorial - User Guide\nBody - Updates\n¶\nUpdate replacing with\nPUT\n¶\nTo update an item you can use the\nHTTP\nPUT\noperation.\nYou can use the\njsonable_encoder\nto convert the input data to data that can be stored as JSON (e.g. with a NoSQL database). For example, converting\ndatetime\nto\nstr\n.\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\n|\nNone\n=\nNone\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\n|\nNone\n=\nNone\ntax\n:\nfloat\n=\n10.5\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nupdate_item_encoded\n=\njsonable_encoder\n(\nitem\n)\nitems\n[\nitem_id\n]\n=\nupdate_item_encoded\nreturn\nupdate_item_encoded\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntax\n:\nfloat\n=\n10.5\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nupdate_item_encoded\n=\njsonable_encoder\n(\nitem\n)\nitems\n[\nitem_id\n]\n=\nupdate_item_encoded\nreturn\nupdate_item_encoded\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntax\n:\nfloat\n=\n10.5\ntags\n:\nList\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nupdate_item_encoded\n=\njsonable_encoder\n(\nitem\n)\nitems\n[\nitem_id\n]\n=\nupdate_item_encoded\nreturn\nupdate_item_encoded\nPUT\nis used to receive data that should replace the existing data.\nWarning about replacing\n¶\nThat means that if you want to update the item\nbar\nusing\nPUT\nwith a body containing:\n{\n\"name\"\n:\n\"Barz\"\n,\n\"price\"\n:\n3\n,\n\"description\"\n:\nNone\n,\n}\nbecause it doesn't include the already stored attribute\n\"tax\": 20.2\n, the input model would take the default value of\n\"tax\": 10.5\n.\nAnd the data would be saved with that \"new\"\ntax\nof\n10.5\n.\nPartial updates with\nPATCH\n¶\nYou can also use the\nHTTP\nPATCH\noperation to\npartially\nupdate data.\nThis means that you can send only the data that you want to update, leaving the rest intact.\nNote\nPATCH\nis less commonly used and known than\nPUT\n.\nAnd many teams use only\nPUT\n, even for partial updates.\nYou are\nfree\nto use them however you want,\nFastAPI\ndoesn't impose any restrictions.\nBut this guide shows you, more or less, how they are intended to be used.\nUsing Pydantic's\nexclude_unset\nparameter\n¶\nIf you want to receive partial updates, it's very useful to use the parameter\nexclude_unset\nin Pydantic's model's\n.model_dump()\n.\nLike\nitem.model_dump(exclude_unset=True)\n.\nInfo\nIn Pydantic v1 the method was called\n.dict()\n, it was deprecated (but still supported) in Pydantic v2, and renamed to\n.model_dump()\n.\nThe examples here use\n.dict()\nfor compatibility with Pydantic v1, but you should use\n.model_dump()\ninstead if you can use Pydantic v2.\nThat would generate a\ndict\nwith only the data that was set when creating the\nitem\nmodel, excluding default values.\nThen you can use this to generate a\ndict\nwith only the data that was set (sent in the request), omitting default values:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\n|\nNone\n=\nNone\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\n|\nNone\n=\nNone\ntax\n:\nfloat\n=\n10.5\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\npatch\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nstored_item_data\n=\nitems\n[\nitem_id\n]\nstored_item_model\n=\nItem\n(\n**\nstored_item_data\n)\nupdate_data\n=\nitem\n.\ndict\n(\nexclude_unset\n=\nTrue\n)\nupdated_item\n=\nstored_item_model\n.\ncopy\n(\nupdate\n=\nupdate_data\n)\nitems\n[\nitem_id\n]\n=\njsonable_encoder\n(\nupdated_item\n)\nreturn\nupdated_item\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntax\n:\nfloat\n=\n10.5\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\npatch\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nstored_item_data\n=\nitems\n[\nitem_id\n]\nstored_item_model\n=\nItem\n(\n**\nstored_item_data\n)\nupdate_data\n=\nitem\n.\ndict\n(\nexclude_unset\n=\nTrue\n)\nupdated_item\n=\nstored_item_model\n.\ncopy\n(\nupdate\n=\nupdate_data\n)\nitems\n[\nitem_id\n]\n=\njsonable_encoder\n(\nupdated_item\n)\nreturn\nupdated_item\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntax\n:\nfloat\n=\n10.5\ntags\n:\nList\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\npatch\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nstored_item_data\n=\nitems\n[\nitem_id\n]\nstored_item_model\n=\nItem\n(\n**\nstored_item_data\n)\nupdate_data\n=\nitem\n.\ndict\n(\nexclude_unset\n=\nTrue\n)\nupdated_item\n=\nstored_item_model\n.\ncopy\n(\nupdate\n=\nupdate_data\n)\nitems\n[\nitem_id\n]\n=\njsonable_encoder\n(\nupdated_item\n)\nreturn\nupdated_item\nUsing Pydantic's\nupdate\nparameter\n¶\nNow, you can create a copy of the existing model using\n.model_copy()\n, and pass the\nupdate\nparameter with a\ndict\ncontaining the data to update.\nInfo\nIn Pydantic v1 the method was called\n.copy()\n, it was deprecated (but still supported) in Pydantic v2, and renamed to\n.model_copy()\n.\nThe examples here use\n.copy()\nfor compatibility with Pydantic v1, but you should use\n.model_copy()\ninstead if you can use Pydantic v2.\nLike\nstored_item_model.model_copy(update=update_data)\n:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\n|\nNone\n=\nNone\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\n|\nNone\n=\nNone\ntax\n:\nfloat\n=\n10.5\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\npatch\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nstored_item_data\n=\nitems\n[\nitem_id\n]\nstored_item_model\n=\nItem\n(\n**\nstored_item_data\n)\nupdate_data\n=\nitem\n.\ndict\n(\nexclude_unset\n=\nTrue\n)\nupdated_item\n=\nstored_item_model\n.\ncopy\n(\nupdate\n=\nupdate_data\n)\nitems\n[\nitem_id\n]\n=\njsonable_encoder\n(\nupdated_item\n)\nreturn\nupdated_item\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntax\n:\nfloat\n=\n10.5\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\npatch\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nstored_item_data\n=\nitems\n[\nitem_id\n]\nstored_item_model\n=\nItem\n(\n**\nstored_item_data\n)\nupdate_data\n=\nitem\n.\ndict\n(\nexclude_unset\n=\nTrue\n)\nupdated_item\n=\nstored_item_model\n.\ncopy\n(\nupdate\n=\nupdate_data\n)\nitems\n[\nitem_id\n]\n=\njsonable_encoder\n(\nupdated_item\n)\nreturn\nupdated_item\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntax\n:\nfloat\n=\n10.5\ntags\n:\nList\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\npatch\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nstored_item_data\n=\nitems\n[\nitem_id\n]\nstored_item_model\n=\nItem\n(\n**\nstored_item_data\n)\nupdate_data\n=\nitem\n.\ndict\n(\nexclude_unset\n=\nTrue\n)\nupdated_item\n=\nstored_item_model\n.\ncopy\n(\nupdate\n=\nupdate_data\n)\nitems\n[\nitem_id\n]\n=\njsonable_encoder\n(\nupdated_item\n)\nreturn\nupdated_item\nPartial updates recap\n¶\nIn summary, to apply partial updates you would:\n(Optionally) use\nPATCH\ninstead of\nPUT\n.\nRetrieve the stored data.\nPut that data in a Pydantic model.\nGenerate a\ndict\nwithout default values from the input model (using\nexclude_unset\n).\nThis way you can update only the values actually set by the user, instead of overriding values already stored with default values in your model.\nCreate a copy of the stored model, updating its attributes with the received partial updates (using the\nupdate\nparameter).\nConvert the copied model to something that can be stored in your DB (for example, using the\njsonable_encoder\n).\nThis is comparable to using the model's\n.model_dump()\nmethod again, but it makes sure (and converts) the values to data types that can be converted to JSON, for example,\ndatetime\nto\nstr\n.\nSave the data to your DB.\nReturn the updated model.\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\n|\nNone\n=\nNone\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\n|\nNone\n=\nNone\ntax\n:\nfloat\n=\n10.5\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\npatch\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nstored_item_data\n=\nitems\n[\nitem_id\n]\nstored_item_model\n=\nItem\n(\n**\nstored_item_data\n)\nupdate_data\n=\nitem\n.\ndict\n(\nexclude_unset\n=\nTrue\n)\nupdated_item\n=\nstored_item_model\n.\ncopy\n(\nupdate\n=\nupdate_data\n)\nitems\n[\nitem_id\n]\n=\njsonable_encoder\n(\nupdated_item\n)\nreturn\nupdated_item\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntax\n:\nfloat\n=\n10.5\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\npatch\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nstored_item_data\n=\nitems\n[\nitem_id\n]\nstored_item_model\n=\nItem\n(\n**\nstored_item_data\n)\nupdate_data\n=\nitem\n.\ndict\n(\nexclude_unset\n=\nTrue\n)\nupdated_item\n=\nstored_item_model\n.\ncopy\n(\nupdate\n=\nupdate_data\n)\nitems\n[\nitem_id\n]\n=\njsonable_encoder\n(\nupdated_item\n)\nreturn\nupdated_item\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntax\n:\nfloat\n=\n10.5\ntags\n:\nList\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\npatch\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nstored_item_data\n=\nitems\n[\nitem_id\n]\nstored_item_model\n=\nItem\n(\n**\nstored_item_data\n)\nupdate_data\n=\nitem\n.\ndict\n(\nexclude_unset\n=\nTrue\n)\nupdated_item\n=\nstored_item_model\n.\ncopy\n(\nupdate\n=\nupdate_data\n)\nitems\n[\nitem_id\n]\n=\njsonable_encoder\n(\nupdated_item\n)\nreturn\nupdated_item\nTip\nYou can actually use this same technique with an HTTP\nPUT\noperation.\nBut the example here uses\nPATCH\nbecause it was created for these use cases.\nNote\nNotice that the input model is still validated.\nSo, if you want to receive partial updates that can omit all the attributes, you need to have a model with all the attributes marked as optional (with default values or\nNone\n).\nTo distinguish from the models with all optional values for\nupdates\nand models with required values for\ncreation\n, you can use the ideas described in\nExtra Models\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/features/",
    "title": "Features¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nFeatures\nTable of contents\nFastAPI features\nBased on open standards\nAutomatic docs\nJust Modern Python\nEditor support\nShort\nValidation\nSecurity and authentication\nDependency Injection\nUnlimited \"plug-ins\"\nTested\nStarlette features\nPydantic features\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nFastAPI features\nBased on open standards\nAutomatic docs\nJust Modern Python\nEditor support\nShort\nValidation\nSecurity and authentication\nDependency Injection\nUnlimited \"plug-ins\"\nTested\nStarlette features\nPydantic features\nFeatures\n¶\nFastAPI features\n¶\nFastAPI\ngives you the following:\nBased on open standards\n¶\nOpenAPI\nfor API creation, including declarations of\npath\noperations\n, parameters, request bodies, security, etc.\nAutomatic data model documentation with\nJSON Schema\n(as OpenAPI itself is based on JSON Schema).\nDesigned around these standards, after a meticulous study. Instead of an afterthought layer on top.\nThis also allows using automatic\nclient code generation\nin many languages.\nAutomatic docs\n¶\nInteractive API documentation and exploration web user interfaces. As the framework is based on OpenAPI, there are multiple options, 2 included by default.\nSwagger UI\n, with interactive exploration, call and test your API directly from the browser.\nAlternative API documentation with\nReDoc\n.\nJust Modern Python\n¶\nIt's all based on standard\nPython type\ndeclarations (thanks to Pydantic). No new syntax to learn. Just standard modern Python.\nIf you need a 2 minute refresher of how to use Python types (even if you don't use FastAPI), check the short tutorial:\nPython Types\n.\nYou write standard Python with types:\nfrom\ndatetime\nimport\ndate\nfrom\npydantic\nimport\nBaseModel\n# Declare a variable as a str\n# and get editor support inside the function\ndef\nmain\n(\nuser_id\n:\nstr\n):\nreturn\nuser_id\n# A Pydantic model\nclass\nUser\n(\nBaseModel\n):\nid\n:\nint\nname\n:\nstr\njoined\n:\ndate\nThat can then be used like:\nmy_user\n:\nUser\n=\nUser\n(\nid\n=\n3\n,\nname\n=\n\"John Doe\"\n,\njoined\n=\n\"2018-07-19\"\n)\nsecond_user_data\n=\n{\n\"id\"\n:\n4\n,\n\"name\"\n:\n\"Mary\"\n,\n\"joined\"\n:\n\"2018-11-30\"\n,\n}\nmy_second_user\n:\nUser\n=\nUser\n(\n**\nsecond_user_data\n)\nInfo\n**second_user_data\nmeans:\nPass the keys and values of the\nsecond_user_data\ndict directly as key-value arguments, equivalent to:\nUser(id=4, name=\"Mary\", joined=\"2018-11-30\")\nEditor support\n¶\nAll the framework was designed to be easy and intuitive to use, all the decisions were tested on multiple editors even before starting development, to ensure the best development experience.\nIn the Python developer surveys, it's clear\nthat one of the most used features is \"autocompletion\"\n.\nThe whole\nFastAPI\nframework is based to satisfy that. Autocompletion works everywhere.\nYou will rarely need to come back to the docs.\nHere's how your editor might help you:\nin\nVisual Studio Code\n:\nin\nPyCharm\n:\nYou will get completion in code you might even consider impossible before. As for example, the\nprice\nkey inside a JSON body (that could have been nested) that comes from a request.\nNo more typing the wrong key names, coming back and forth between docs, or scrolling up and down to find if you finally used\nusername\nor\nuser_name\n.\nShort\n¶\nIt has sensible\ndefaults\nfor everything, with optional configurations everywhere. All the parameters can be fine-tuned to do what you need and to define the API you need.\nBut by default, it all\n\"just works\"\n.\nValidation\n¶\nValidation for most (or all?) Python\ndata types\n, including:\nJSON objects (\ndict\n).\nJSON array (\nlist\n) defining item types.\nString (\nstr\n) fields, defining min and max lengths.\nNumbers (\nint\n,\nfloat\n) with min and max values, etc.\nValidation for more exotic types, like:\nURL.\nEmail.\nUUID.\n...and others.\nAll the validation is handled by the well-established and robust\nPydantic\n.\nSecurity and authentication\n¶\nSecurity and authentication integrated. Without any compromise with databases or data models.\nAll the security schemes defined in OpenAPI, including:\nHTTP Basic.\nOAuth2\n(also with\nJWT tokens\n). Check the tutorial on\nOAuth2 with JWT\n.\nAPI keys in:\nHeaders.\nQuery parameters.\nCookies, etc.\nPlus all the security features from Starlette (including\nsession cookies\n).\nAll built as reusable tools and components that are easy to integrate with your systems, data stores, relational and NoSQL databases, etc.\nDependency Injection\n¶\nFastAPI includes an extremely easy to use, but extremely powerful\nDependency Injection\nsystem.\nEven dependencies can have dependencies, creating a hierarchy or\n\"graph\" of dependencies\n.\nAll\nautomatically handled\nby the framework.\nAll the dependencies can require data from requests and\naugment the path operation\nconstraints and automatic documentation.\nAutomatic validation\neven for\npath operation\nparameters defined in dependencies.\nSupport for complex user authentication systems,\ndatabase connections\n, etc.\nNo compromise\nwith databases, frontends, etc. But easy integration with all of them.\nUnlimited \"plug-ins\"\n¶\nOr in other way, no need for them, import and use the code you need.\nAny integration is designed to be so simple to use (with dependencies) that you can create a \"plug-in\" for your application in 2 lines of code using the same structure and syntax used for your\npath operations\n.\nTested\n¶\n100%\ntest coverage\n.\n100%\ntype annotated\ncode base.\nUsed in production applications.\nStarlette features\n¶\nFastAPI\nis fully compatible with (and based on)\nStarlette\n. So, any additional Starlette code you have, will also work.\nFastAPI\nis actually a sub-class of\nStarlette\n. So, if you already know or use Starlette, most of the functionality will work the same way.\nWith\nFastAPI\nyou get all of\nStarlette\n's features (as FastAPI is just Starlette on steroids):\nSeriously impressive performance. It is\none of the fastest Python frameworks available, on par with\nNodeJS\nand\nGo\n.\nWebSocket\nsupport.\nIn-process background tasks.\nStartup and shutdown events.\nTest client built on HTTPX.\nCORS\n, GZip, Static Files, Streaming responses.\nSession and Cookie\nsupport.\n100% test coverage.\n100% type annotated codebase.\nPydantic features\n¶\nFastAPI\nis fully compatible with (and based on)\nPydantic\n. So, any additional Pydantic code you have, will also work.\nIncluding external libraries also based on Pydantic, as\nORM\ns,\nODM\ns for databases.\nThis also means that in many cases you can pass the same object you get from a request\ndirectly to the database\n, as everything is validated automatically.\nThe same applies the other way around, in many cases you can just pass the object you get from the database\ndirectly to the client\n.\nWith\nFastAPI\nyou get all of\nPydantic\n's features (as FastAPI is based on Pydantic for all the data handling):\nNo brainfuck\n:\nNo new schema definition micro-language to learn.\nIf you know Python types you know how to use Pydantic.\nPlays nicely with your\nIDE\n/\nlinter\n/brain\n:\nBecause pydantic data structures are just instances of classes you define; auto-completion, linting, mypy and your intuition should all work properly with your validated data.\nValidate\ncomplex structures\n:\nUse of hierarchical Pydantic models, Python\ntyping\n’s\nList\nand\nDict\n, etc.\nAnd validators allow complex data schemas to be clearly and easily defined, checked and documented as JSON Schema.\nYou can have deeply\nnested JSON\nobjects and have them all validated and annotated.\nExtensible\n:\nPydantic allows custom data types to be defined or you can extend validation with methods on a model decorated with the validator decorator.\n100% test coverage.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/dependencies/global-dependencies/",
    "title": "Global Dependencies¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nGlobal Dependencies\nTable of contents\nDependencies for groups of\npath operations\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nDependencies for groups of\npath operations\nFastAPI\nLearn\nTutorial - User Guide\nDependencies\nGlobal Dependencies\n¶\nFor some types of applications you might want to add dependencies to the whole application.\nSimilar to the way you can\nadd\ndependencies\nto the\npath operation decorators\n, you can add them to the\nFastAPI\napplication.\nIn that case, they will be applied to all the\npath operations\nin the application:\nPython 3.9+\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\nfrom\ntyping_extensions\nimport\nAnnotated\nasync\ndef\nverify_token\n(\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\napp\n=\nFastAPI\n(\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Portal Gun\"\n},\n{\n\"item\"\n:\n\"Plumbus\"\n}]\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n():\nreturn\n[{\n\"username\"\n:\n\"Rick\"\n},\n{\n\"username\"\n:\n\"Morty\"\n}]\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\nfrom\ntyping_extensions\nimport\nAnnotated\nasync\ndef\nverify_token\n(\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\napp\n=\nFastAPI\n(\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Portal Gun\"\n},\n{\n\"item\"\n:\n\"Plumbus\"\n}]\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n():\nreturn\n[{\n\"username\"\n:\n\"Rick\"\n},\n{\n\"username\"\n:\n\"Morty\"\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\nasync\ndef\nverify_token\n(\nx_token\n:\nstr\n=\nHeader\n()):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nstr\n=\nHeader\n()):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\napp\n=\nFastAPI\n(\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Portal Gun\"\n},\n{\n\"item\"\n:\n\"Plumbus\"\n}]\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n():\nreturn\n[{\n\"username\"\n:\n\"Rick\"\n},\n{\n\"username\"\n:\n\"Morty\"\n}]\nAnd all the ideas in the section about\nadding\ndependencies\nto the\npath operation decorators\nstill apply, but in this case, to all of the\npath operations\nin the app.\nDependencies for groups of\npath operations\n¶\nLater, when reading about how to structure bigger applications (\nBigger Applications - Multiple Files\n), possibly with multiple files, you will learn how to declare a single\ndependencies\nparameter for a group of\npath operations\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/python-types/",
    "title": "Python Types Intro¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nPython Types Intro\nTable of contents\nMotivation\nEdit it\nAdd types\nMore motivation\nDeclaring types\nSimple types\nGeneric types with type parameters\nNewer versions of Python\nList\nTuple and Set\nDict\nUnion\nPossibly\nNone\nUsing\nUnion\nor\nOptional\nGeneric types\nClasses as types\nPydantic models\nType Hints with Metadata Annotations\nType hints in\nFastAPI\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nMotivation\nEdit it\nAdd types\nMore motivation\nDeclaring types\nSimple types\nGeneric types with type parameters\nNewer versions of Python\nList\nTuple and Set\nDict\nUnion\nPossibly\nNone\nUsing\nUnion\nor\nOptional\nGeneric types\nClasses as types\nPydantic models\nType Hints with Metadata Annotations\nType hints in\nFastAPI\nFastAPI\nLearn\nPython Types Intro\n¶\nPython has support for optional \"type hints\" (also called \"type annotations\").\nThese\n\"type hints\"\nor annotations are a special syntax that allow declaring the\ntype\nof a variable.\nBy declaring types for your variables, editors and tools can give you better support.\nThis is just a\nquick tutorial / refresher\nabout Python type hints. It covers only the minimum necessary to use them with\nFastAPI\n... which is actually very little.\nFastAPI\nis all based on these type hints, they give it many advantages and benefits.\nBut even if you never use\nFastAPI\n, you would benefit from learning a bit about them.\nNote\nIf you are a Python expert, and you already know everything about type hints, skip to the next chapter.\nMotivation\n¶\nLet's start with a simple example:\nPython 3.8+\ndef\nget_full_name\n(\nfirst_name\n,\nlast_name\n):\nfull_name\n=\nfirst_name\n.\ntitle\n()\n+\n\" \"\n+\nlast_name\n.\ntitle\n()\nreturn\nfull_name\nprint\n(\nget_full_name\n(\n\"john\"\n,\n\"doe\"\n))\nCalling this program outputs:\nJohn Doe\nThe function does the following:\nTakes a\nfirst_name\nand\nlast_name\n.\nConverts the first letter of each one to upper case with\ntitle()\n.\nConcatenates\nthem with a space in the middle.\nPython 3.8+\ndef\nget_full_name\n(\nfirst_name\n,\nlast_name\n):\nfull_name\n=\nfirst_name\n.\ntitle\n()\n+\n\" \"\n+\nlast_name\n.\ntitle\n()\nreturn\nfull_name\nprint\n(\nget_full_name\n(\n\"john\"\n,\n\"doe\"\n))\nEdit it\n¶\nIt's a very simple program.\nBut now imagine that you were writing it from scratch.\nAt some point you would have started the definition of the function, you had the parameters ready...\nBut then you have to call \"that method that converts the first letter to upper case\".\nWas it\nupper\n? Was it\nuppercase\n?\nfirst_uppercase\n?\ncapitalize\n?\nThen, you try with the old programmer's friend, editor autocompletion.\nYou type the first parameter of the function,\nfirst_name\n, then a dot (\n.\n) and then hit\nCtrl+Space\nto trigger the completion.\nBut, sadly, you get nothing useful:\nAdd types\n¶\nLet's modify a single line from the previous version.\nWe will change exactly this fragment, the parameters of the function, from:\nfirst_name\n,\nlast_name\nto:\nfirst_name\n:\nstr\n,\nlast_name\n:\nstr\nThat's it.\nThose are the \"type hints\":\nPython 3.8+\ndef\nget_full_name\n(\nfirst_name\n:\nstr\n,\nlast_name\n:\nstr\n):\nfull_name\n=\nfirst_name\n.\ntitle\n()\n+\n\" \"\n+\nlast_name\n.\ntitle\n()\nreturn\nfull_name\nprint\n(\nget_full_name\n(\n\"john\"\n,\n\"doe\"\n))\nThat is not the same as declaring default values like would be with:\nfirst_name\n=\n\"john\"\n,\nlast_name\n=\n\"doe\"\nIt's a different thing.\nWe are using colons (\n:\n), not equals (\n=\n).\nAnd adding type hints normally doesn't change what happens from what would happen without them.\nBut now, imagine you are again in the middle of creating that function, but with type hints.\nAt the same point, you try to trigger the autocomplete with\nCtrl+Space\nand you see:\nWith that, you can scroll, seeing the options, until you find the one that \"rings a bell\":\nMore motivation\n¶\nCheck this function, it already has type hints:\nPython 3.8+\ndef\nget_name_with_age\n(\nname\n:\nstr\n,\nage\n:\nint\n):\nname_with_age\n=\nname\n+\n\" is this old: \"\n+\nage\nreturn\nname_with_age\nBecause the editor knows the types of the variables, you don't only get completion, you also get error checks:\nNow you know that you have to fix it, convert\nage\nto a string with\nstr(age)\n:\nPython 3.8+\ndef\nget_name_with_age\n(\nname\n:\nstr\n,\nage\n:\nint\n):\nname_with_age\n=\nname\n+\n\" is this old: \"\n+\nstr\n(\nage\n)\nreturn\nname_with_age\nDeclaring types\n¶\nYou just saw the main place to declare type hints. As function parameters.\nThis is also the main place you would use them with\nFastAPI\n.\nSimple types\n¶\nYou can declare all the standard Python types, not only\nstr\n.\nYou can use, for example:\nint\nfloat\nbool\nbytes\nPython 3.8+\ndef\nget_items\n(\nitem_a\n:\nstr\n,\nitem_b\n:\nint\n,\nitem_c\n:\nfloat\n,\nitem_d\n:\nbool\n,\nitem_e\n:\nbytes\n):\nreturn\nitem_a\n,\nitem_b\n,\nitem_c\n,\nitem_d\n,\nitem_d\n,\nitem_e\nGeneric types with type parameters\n¶\nThere are some data structures that can contain other values, like\ndict\n,\nlist\n,\nset\nand\ntuple\n. And the internal values can have their own type too.\nThese types that have internal types are called \"\ngeneric\n\" types. And it's possible to declare them, even with their internal types.\nTo declare those types and the internal types, you can use the standard Python module\ntyping\n. It exists specifically to support these type hints.\nNewer versions of Python\n¶\nThe syntax using\ntyping\nis\ncompatible\nwith all versions, from Python 3.6 to the latest ones, including Python 3.9, Python 3.10, etc.\nAs Python advances,\nnewer versions\ncome with improved support for these type annotations and in many cases you won't even need to import and use the\ntyping\nmodule to declare the type annotations.\nIf you can choose a more recent version of Python for your project, you will be able to take advantage of that extra simplicity.\nIn all the docs there are examples compatible with each version of Python (when there's a difference).\nFor example \"\nPython 3.6+\n\" means it's compatible with Python 3.6 or above (including 3.7, 3.8, 3.9, 3.10, etc). And \"\nPython 3.9+\n\" means it's compatible with Python 3.9 or above (including 3.10, etc).\nIf you can use the\nlatest versions of Python\n, use the examples for the latest version, those will have the\nbest and simplest syntax\n, for example, \"\nPython 3.10+\n\".\nList\n¶\nFor example, let's define a variable to be a\nlist\nof\nstr\n.\nPython 3.9+\nPython 3.8+\nDeclare the variable, with the same colon (\n:\n) syntax.\nAs the type, put\nlist\n.\nAs the list is a type that contains some internal types, you put them in square brackets:\ndef\nprocess_items\n(\nitems\n:\nlist\n[\nstr\n]):\nfor\nitem\nin\nitems\n:\nprint\n(\nitem\n)\nFrom\ntyping\n, import\nList\n(with a capital\nL\n):\nfrom\ntyping\nimport\nList\ndef\nprocess_items\n(\nitems\n:\nList\n[\nstr\n]):\nfor\nitem\nin\nitems\n:\nprint\n(\nitem\n)\nDeclare the variable, with the same colon (\n:\n) syntax.\nAs the type, put the\nList\nthat you imported from\ntyping\n.\nAs the list is a type that contains some internal types, you put them in square brackets:\nfrom\ntyping\nimport\nList\ndef\nprocess_items\n(\nitems\n:\nList\n[\nstr\n]):\nfor\nitem\nin\nitems\n:\nprint\n(\nitem\n)\nInfo\nThose internal types in the square brackets are called \"type parameters\".\nIn this case,\nstr\nis the type parameter passed to\nList\n(or\nlist\nin Python 3.9 and above).\nThat means: \"the variable\nitems\nis a\nlist\n, and each of the items in this list is a\nstr\n\".\nTip\nIf you use Python 3.9 or above, you don't have to import\nList\nfrom\ntyping\n, you can use the same regular\nlist\ntype instead.\nBy doing that, your editor can provide support even while processing items from the list:\nWithout types, that's almost impossible to achieve.\nNotice that the variable\nitem\nis one of the elements in the list\nitems\n.\nAnd still, the editor knows it is a\nstr\n, and provides support for that.\nTuple and Set\n¶\nYou would do the same to declare\ntuple\ns and\nset\ns:\nPython 3.9+\nPython 3.8+\ndef\nprocess_items\n(\nitems_t\n:\ntuple\n[\nint\n,\nint\n,\nstr\n],\nitems_s\n:\nset\n[\nbytes\n]):\nreturn\nitems_t\n,\nitems_s\nfrom\ntyping\nimport\nSet\n,\nTuple\ndef\nprocess_items\n(\nitems_t\n:\nTuple\n[\nint\n,\nint\n,\nstr\n],\nitems_s\n:\nSet\n[\nbytes\n]):\nreturn\nitems_t\n,\nitems_s\nThis means:\nThe variable\nitems_t\nis a\ntuple\nwith 3 items, an\nint\n, another\nint\n, and a\nstr\n.\nThe variable\nitems_s\nis a\nset\n, and each of its items is of type\nbytes\n.\nDict\n¶\nTo define a\ndict\n, you pass 2 type parameters, separated by commas.\nThe first type parameter is for the keys of the\ndict\n.\nThe second type parameter is for the values of the\ndict\n:\nPython 3.9+\nPython 3.8+\ndef\nprocess_items\n(\nprices\n:\ndict\n[\nstr\n,\nfloat\n]):\nfor\nitem_name\n,\nitem_price\nin\nprices\n.\nitems\n():\nprint\n(\nitem_name\n)\nprint\n(\nitem_price\n)\nfrom\ntyping\nimport\nDict\ndef\nprocess_items\n(\nprices\n:\nDict\n[\nstr\n,\nfloat\n]):\nfor\nitem_name\n,\nitem_price\nin\nprices\n.\nitems\n():\nprint\n(\nitem_name\n)\nprint\n(\nitem_price\n)\nThis means:\nThe variable\nprices\nis a\ndict\n:\nThe keys of this\ndict\nare of type\nstr\n(let's say, the name of each item).\nThe values of this\ndict\nare of type\nfloat\n(let's say, the price of each item).\nUnion\n¶\nYou can declare that a variable can be any of\nseveral types\n, for example, an\nint\nor a\nstr\n.\nIn Python 3.6 and above (including Python 3.10) you can use the\nUnion\ntype from\ntyping\nand put inside the square brackets the possible types to accept.\nIn Python 3.10 there's also a\nnew syntax\nwhere you can put the possible types separated by a\nvertical bar (\n|\n)\n.\nPython 3.10+\nPython 3.8+\ndef\nprocess_item\n(\nitem\n:\nint\n|\nstr\n):\nprint\n(\nitem\n)\nfrom\ntyping\nimport\nUnion\ndef\nprocess_item\n(\nitem\n:\nUnion\n[\nint\n,\nstr\n]):\nprint\n(\nitem\n)\nIn both cases this means that\nitem\ncould be an\nint\nor a\nstr\n.\nPossibly\nNone\n¶\nYou can declare that a value could have a type, like\nstr\n, but that it could also be\nNone\n.\nIn Python 3.6 and above (including Python 3.10) you can declare it by importing and using\nOptional\nfrom the\ntyping\nmodule.\nfrom\ntyping\nimport\nOptional\ndef\nsay_hi\n(\nname\n:\nOptional\n[\nstr\n]\n=\nNone\n):\nif\nname\nis\nnot\nNone\n:\nprint\n(\nf\n\"Hey\n{\nname\n}\n!\"\n)\nelse\n:\nprint\n(\n\"Hello World\"\n)\nUsing\nOptional[str]\ninstead of just\nstr\nwill let the editor help you detect errors where you could be assuming that a value is always a\nstr\n, when it could actually be\nNone\ntoo.\nOptional[Something]\nis actually a shortcut for\nUnion[Something, None]\n, they are equivalent.\nThis also means that in Python 3.10, you can use\nSomething | None\n:\nPython 3.10+\nPython 3.8+\nPython 3.8+ alternative\ndef\nsay_hi\n(\nname\n:\nstr\n|\nNone\n=\nNone\n):\nif\nname\nis\nnot\nNone\n:\nprint\n(\nf\n\"Hey\n{\nname\n}\n!\"\n)\nelse\n:\nprint\n(\n\"Hello World\"\n)\nfrom\ntyping\nimport\nOptional\ndef\nsay_hi\n(\nname\n:\nOptional\n[\nstr\n]\n=\nNone\n):\nif\nname\nis\nnot\nNone\n:\nprint\n(\nf\n\"Hey\n{\nname\n}\n!\"\n)\nelse\n:\nprint\n(\n\"Hello World\"\n)\nfrom\ntyping\nimport\nUnion\ndef\nsay_hi\n(\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nif\nname\nis\nnot\nNone\n:\nprint\n(\nf\n\"Hey\n{\nname\n}\n!\"\n)\nelse\n:\nprint\n(\n\"Hello World\"\n)\nUsing\nUnion\nor\nOptional\n¶\nIf you are using a Python version below 3.10, here's a tip from my very\nsubjective\npoint of view:\n🚨 Avoid using\nOptional[SomeType]\nInstead ✨\nuse\nUnion[SomeType, None]\n✨.\nBoth are equivalent and underneath they are the same, but I would recommend\nUnion\ninstead of\nOptional\nbecause the word \"\noptional\n\" would seem to imply that the value is optional, and it actually means \"it can be\nNone\n\", even if it's not optional and is still required.\nI think\nUnion[SomeType, None]\nis more explicit about what it means.\nIt's just about the words and names. But those words can affect how you and your teammates think about the code.\nAs an example, let's take this function:\nPython 3.8+\nfrom\ntyping\nimport\nOptional\ndef\nsay_hi\n(\nname\n:\nOptional\n[\nstr\n]):\nprint\n(\nf\n\"Hey\n{\nname\n}\n!\"\n)\n🤓 Other versions and variants\nPython 3.10+\ndef\nsay_hi\n(\nname\n:\nstr\n|\nNone\n):\nprint\n(\nf\n\"Hey\n{\nname\n}\n!\"\n)\nThe parameter\nname\nis defined as\nOptional[str]\n, but it is\nnot optional\n, you cannot call the function without the parameter:\nsay_hi\n()\n# Oh, no, this throws an error! 😱\nThe\nname\nparameter is\nstill required\n(not\noptional\n) because it doesn't have a default value. Still,\nname\naccepts\nNone\nas the value:\nsay_hi\n(\nname\n=\nNone\n)\n# This works, None is valid 🎉\nThe good news is, once you are on Python 3.10 you won't have to worry about that, as you will be able to simply use\n|\nto define unions of types:\nPython 3.10+\ndef\nsay_hi\n(\nname\n:\nstr\n|\nNone\n):\nprint\n(\nf\n\"Hey\n{\nname\n}\n!\"\n)\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nOptional\ndef\nsay_hi\n(\nname\n:\nOptional\n[\nstr\n]):\nprint\n(\nf\n\"Hey\n{\nname\n}\n!\"\n)\nAnd then you won't have to worry about names like\nOptional\nand\nUnion\n. 😎\nGeneric types\n¶\nThese types that take type parameters in square brackets are called\nGeneric types\nor\nGenerics\n, for example:\nPython 3.10+\nPython 3.9+\nPython 3.8+\nYou can use the same builtin types as generics (with square brackets and types inside):\nlist\ntuple\nset\ndict\nAnd the same as with Python 3.8, from the\ntyping\nmodule:\nUnion\nOptional\n(the same as with Python 3.8)\n...and others.\nIn Python 3.10, as an alternative to using the generics\nUnion\nand\nOptional\n, you can use the\nvertical bar (\n|\n)\nto declare unions of types, that's a lot better and simpler.\nYou can use the same builtin types as generics (with square brackets and types inside):\nlist\ntuple\nset\ndict\nAnd the same as with Python 3.8, from the\ntyping\nmodule:\nUnion\nOptional\n...and others.\nList\nTuple\nSet\nDict\nUnion\nOptional\n...and others.\nClasses as types\n¶\nYou can also declare a class as the type of a variable.\nLet's say you have a class\nPerson\n, with a name:\nPython 3.8+\nclass\nPerson\n:\ndef\n__init__\n(\nself\n,\nname\n:\nstr\n):\nself\n.\nname\n=\nname\ndef\nget_person_name\n(\none_person\n:\nPerson\n):\nreturn\none_person\n.\nname\nThen you can declare a variable to be of type\nPerson\n:\nPython 3.8+\nclass\nPerson\n:\ndef\n__init__\n(\nself\n,\nname\n:\nstr\n):\nself\n.\nname\n=\nname\ndef\nget_person_name\n(\none_person\n:\nPerson\n):\nreturn\none_person\n.\nname\nAnd then, again, you get all the editor support:\nNotice that this means \"\none_person\nis an\ninstance\nof the class\nPerson\n\".\nIt doesn't mean \"\none_person\nis the\nclass\ncalled\nPerson\n\".\nPydantic models\n¶\nPydantic\nis a Python library to perform data validation.\nYou declare the \"shape\" of the data as classes with attributes.\nAnd each attribute has a type.\nThen you create an instance of that class with some values and it will validate the values, convert them to the appropriate type (if that's the case) and give you an object with all the data.\nAnd you get all the editor support with that resulting object.\nAn example from the official Pydantic docs:\nPython 3.10+\nPython 3.9+\nPython 3.8+\nfrom\ndatetime\nimport\ndatetime\nfrom\npydantic\nimport\nBaseModel\nclass\nUser\n(\nBaseModel\n):\nid\n:\nint\nname\n:\nstr\n=\n\"John Doe\"\nsignup_ts\n:\ndatetime\n|\nNone\n=\nNone\nfriends\n:\nlist\n[\nint\n]\n=\n[]\nexternal_data\n=\n{\n\"id\"\n:\n\"123\"\n,\n\"signup_ts\"\n:\n\"2017-06-01 12:22\"\n,\n\"friends\"\n:\n[\n1\n,\n\"2\"\n,\nb\n\"3\"\n],\n}\nuser\n=\nUser\n(\n**\nexternal_data\n)\nprint\n(\nuser\n)\n# > User id=123 name='John Doe' signup_ts=datetime.datetime(2017, 6, 1, 12, 22) friends=[1, 2, 3]\nprint\n(\nuser\n.\nid\n)\n# > 123\nfrom\ndatetime\nimport\ndatetime\nfrom\ntyping\nimport\nUnion\nfrom\npydantic\nimport\nBaseModel\nclass\nUser\n(\nBaseModel\n):\nid\n:\nint\nname\n:\nstr\n=\n\"John Doe\"\nsignup_ts\n:\nUnion\n[\ndatetime\n,\nNone\n]\n=\nNone\nfriends\n:\nlist\n[\nint\n]\n=\n[]\nexternal_data\n=\n{\n\"id\"\n:\n\"123\"\n,\n\"signup_ts\"\n:\n\"2017-06-01 12:22\"\n,\n\"friends\"\n:\n[\n1\n,\n\"2\"\n,\nb\n\"3\"\n],\n}\nuser\n=\nUser\n(\n**\nexternal_data\n)\nprint\n(\nuser\n)\n# > User id=123 name='John Doe' signup_ts=datetime.datetime(2017, 6, 1, 12, 22) friends=[1, 2, 3]\nprint\n(\nuser\n.\nid\n)\n# > 123\nfrom\ndatetime\nimport\ndatetime\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\npydantic\nimport\nBaseModel\nclass\nUser\n(\nBaseModel\n):\nid\n:\nint\nname\n:\nstr\n=\n\"John Doe\"\nsignup_ts\n:\nUnion\n[\ndatetime\n,\nNone\n]\n=\nNone\nfriends\n:\nList\n[\nint\n]\n=\n[]\nexternal_data\n=\n{\n\"id\"\n:\n\"123\"\n,\n\"signup_ts\"\n:\n\"2017-06-01 12:22\"\n,\n\"friends\"\n:\n[\n1\n,\n\"2\"\n,\nb\n\"3\"\n],\n}\nuser\n=\nUser\n(\n**\nexternal_data\n)\nprint\n(\nuser\n)\n# > User id=123 name='John Doe' signup_ts=datetime.datetime(2017, 6, 1, 12, 22) friends=[1, 2, 3]\nprint\n(\nuser\n.\nid\n)\n# > 123\nInfo\nTo learn more about\nPydantic, check its docs\n.\nFastAPI\nis all based on Pydantic.\nYou will see a lot more of all this in practice in the\nTutorial - User Guide\n.\nTip\nPydantic has a special behavior when you use\nOptional\nor\nUnion[Something, None]\nwithout a default value, you can read more about it in the Pydantic docs about\nRequired Optional fields\n.\nType Hints with Metadata Annotations\n¶\nPython also has a feature that allows putting\nadditional\nmetadata\nin these type hints using\nAnnotated\n.\nPython 3.9+\nPython 3.8+\nIn Python 3.9,\nAnnotated\nis part of the standard library, so you can import it from\ntyping\n.\nfrom\ntyping\nimport\nAnnotated\ndef\nsay_hello\n(\nname\n:\nAnnotated\n[\nstr\n,\n\"this is just metadata\"\n])\n->\nstr\n:\nreturn\nf\n\"Hello\n{\nname\n}\n\"\nIn versions below Python 3.9, you import\nAnnotated\nfrom\ntyping_extensions\n.\nIt will already be installed with\nFastAPI\n.\nfrom\ntyping_extensions\nimport\nAnnotated\ndef\nsay_hello\n(\nname\n:\nAnnotated\n[\nstr\n,\n\"this is just metadata\"\n])\n->\nstr\n:\nreturn\nf\n\"Hello\n{\nname\n}\n\"\nPython itself doesn't do anything with this\nAnnotated\n. And for editors and other tools, the type is still\nstr\n.\nBut you can use this space in\nAnnotated\nto provide\nFastAPI\nwith additional metadata about how you want your application to behave.\nThe important thing to remember is that\nthe first\ntype parameter\nyou pass to\nAnnotated\nis the\nactual type\n. The rest, is just metadata for other tools.\nFor now, you just need to know that\nAnnotated\nexists, and that it's standard Python. 😎\nLater you will see how\npowerful\nit can be.\nTip\nThe fact that this is\nstandard Python\nmeans that you will still get the\nbest possible developer experience\nin your editor, with the tools you use to analyze and refactor your code, etc. ✨\nAnd also that your code will be very compatible with many other Python tools and libraries. 🚀\nType hints in\nFastAPI\n¶\nFastAPI\ntakes advantage of these type hints to do several things.\nWith\nFastAPI\nyou declare parameters with type hints and you get:\nEditor support\n.\nType checks\n.\n...and\nFastAPI\nuses the same declarations to:\nDefine requirements\n: from request path parameters, query parameters, headers, bodies, dependencies, etc.\nConvert data\n: from the request to the required type.\nValidate data\n: coming from each request:\nGenerating\nautomatic errors\nreturned to the client when the data is invalid.\nDocument\nthe API using OpenAPI:\nwhich is then used by the automatic interactive documentation user interfaces.\nThis might all sound abstract. Don't worry. You'll see all this in action in the\nTutorial - User Guide\n.\nThe important thing is that by using standard Python types, in a single place (instead of adding more classes, decorators, etc),\nFastAPI\nwill do a lot of the work for you.\nInfo\nIf you already went through all the tutorial and came back to see more about types, a good resource is\nthe \"cheat sheet\" from\nmypy\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/middleware/",
    "title": "Advanced Middleware¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nAdvanced Middleware\nTable of contents\nAdding ASGI middlewares\nIntegrated middlewares\nHTTPSRedirectMiddleware\nTrustedHostMiddleware\nGZipMiddleware\nOther middlewares\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAdding ASGI middlewares\nIntegrated middlewares\nHTTPSRedirectMiddleware\nTrustedHostMiddleware\nGZipMiddleware\nOther middlewares\nFastAPI\nLearn\nAdvanced User Guide\nAdvanced Middleware\n¶\nIn the main tutorial you read how to add\nCustom Middleware\nto your application.\nAnd then you also read how to handle\nCORS with the\nCORSMiddleware\n.\nIn this section we'll see how to use other middlewares.\nAdding ASGI middlewares\n¶\nAs\nFastAPI\nis based on Starlette and implements the\nASGI\nspecification, you can use any ASGI middleware.\nA middleware doesn't have to be made for FastAPI or Starlette to work, as long as it follows the ASGI spec.\nIn general, ASGI middlewares are classes that expect to receive an ASGI app as the first argument.\nSo, in the documentation for third-party ASGI middlewares they will probably tell you to do something like:\nfrom\nunicorn\nimport\nUnicornMiddleware\napp\n=\nSomeASGIApp\n()\nnew_app\n=\nUnicornMiddleware\n(\napp\n,\nsome_config\n=\n\"rainbow\"\n)\nBut FastAPI (actually Starlette) provides a simpler way to do it that makes sure that the internal middlewares handle server errors and custom exception handlers work properly.\nFor that, you use\napp.add_middleware()\n(as in the example for CORS).\nfrom\nfastapi\nimport\nFastAPI\nfrom\nunicorn\nimport\nUnicornMiddleware\napp\n=\nFastAPI\n()\napp\n.\nadd_middleware\n(\nUnicornMiddleware\n,\nsome_config\n=\n\"rainbow\"\n)\napp.add_middleware()\nreceives a middleware class as the first argument and any additional arguments to be passed to the middleware.\nIntegrated middlewares\n¶\nFastAPI\nincludes several middlewares for common use cases, we'll see next how to use them.\nTechnical Details\nFor the next examples, you could also use\nfrom starlette.middleware.something import SomethingMiddleware\n.\nFastAPI\nprovides several middlewares in\nfastapi.middleware\njust as a convenience for you, the developer. But most of the available middlewares come directly from Starlette.\nHTTPSRedirectMiddleware\n¶\nEnforces that all incoming requests must either be\nhttps\nor\nwss\n.\nAny incoming request to\nhttp\nor\nws\nwill be redirected to the secure scheme instead.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.middleware.httpsredirect\nimport\nHTTPSRedirectMiddleware\napp\n=\nFastAPI\n()\napp\n.\nadd_middleware\n(\nHTTPSRedirectMiddleware\n)\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nTrustedHostMiddleware\n¶\nEnforces that all incoming requests have a correctly set\nHost\nheader, in order to guard against HTTP Host Header attacks.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.middleware.trustedhost\nimport\nTrustedHostMiddleware\napp\n=\nFastAPI\n()\napp\n.\nadd_middleware\n(\nTrustedHostMiddleware\n,\nallowed_hosts\n=\n[\n\"example.com\"\n,\n\"*.example.com\"\n]\n)\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nThe following arguments are supported:\nallowed_hosts\n- A list of domain names that should be allowed as hostnames. Wildcard domains such as\n*.example.com\nare supported for matching subdomains. To allow any hostname either use\nallowed_hosts=[\"*\"]\nor omit the middleware.\nwww_redirect\n- If set to True, requests to non-www versions of the allowed hosts will be redirected to their www counterparts. Defaults to\nTrue\n.\nIf an incoming request does not validate correctly then a\n400\nresponse will be sent.\nGZipMiddleware\n¶\nHandles GZip responses for any request that includes\n\"gzip\"\nin the\nAccept-Encoding\nheader.\nThe middleware will handle both standard and streaming responses.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.middleware.gzip\nimport\nGZipMiddleware\napp\n=\nFastAPI\n()\napp\n.\nadd_middleware\n(\nGZipMiddleware\n,\nminimum_size\n=\n1000\n,\ncompresslevel\n=\n5\n)\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\nreturn\n\"somebigcontent\"\nThe following arguments are supported:\nminimum_size\n- Do not GZip responses that are smaller than this minimum size in bytes. Defaults to\n500\n.\ncompresslevel\n- Used during GZip compression. It is an integer ranging from 1 to 9. Defaults to\n9\n. Lower value results in faster compression but larger file sizes, while higher value results in slower compression but smaller file sizes.\nOther middlewares\n¶\nThere are many other ASGI middlewares.\nFor example:\nUvicorn's\nProxyHeadersMiddleware\nMessagePack\nTo see other available middlewares check\nStarlette's Middleware docs\nand the\nASGI Awesome List\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/response-change-status-code/",
    "title": "Response - Change Status Code¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nResponse - Change Status Code\nTable of contents\nUse case\nUse a\nResponse\nparameter\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUse case\nUse a\nResponse\nparameter\nFastAPI\nLearn\nAdvanced User Guide\nResponse - Change Status Code\n¶\nYou probably read before that you can set a default\nResponse Status Code\n.\nBut in some cases you need to return a different status code than the default.\nUse case\n¶\nFor example, imagine that you want to return an HTTP status code of \"OK\"\n200\nby default.\nBut if the data didn't exist, you want to create it, and return an HTTP status code of \"CREATED\"\n201\n.\nBut you still want to be able to filter and convert the data you return with a\nresponse_model\n.\nFor those cases, you can use a\nResponse\nparameter.\nUse a\nResponse\nparameter\n¶\nYou can declare a parameter of type\nResponse\nin your\npath operation function\n(as you can do for cookies and headers).\nAnd then you can set the\nstatus_code\nin that\ntemporal\nresponse object.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nResponse\n,\nstatus\napp\n=\nFastAPI\n()\ntasks\n=\n{\n\"foo\"\n:\n\"Listen to the Bar Fighters\"\n}\n@app\n.\nput\n(\n\"/get-or-create-task/\n{task_id}\n\"\n,\nstatus_code\n=\n200\n)\ndef\nget_or_create_task\n(\ntask_id\n:\nstr\n,\nresponse\n:\nResponse\n):\nif\ntask_id\nnot\nin\ntasks\n:\ntasks\n[\ntask_id\n]\n=\n\"This didn't exist before\"\nresponse\n.\nstatus_code\n=\nstatus\n.\nHTTP_201_CREATED\nreturn\ntasks\n[\ntask_id\n]\nAnd then you can return any object you need, as you normally would (a\ndict\n, a database model, etc).\nAnd if you declared a\nresponse_model\n, it will still be used to filter and convert the object you returned.\nFastAPI\nwill use that\ntemporal\nresponse to extract the status code (also cookies and headers), and will put them in the final response that contains the value you returned, filtered by any\nresponse_model\n.\nYou can also declare the\nResponse\nparameter in dependencies, and set the status code in them. But keep in mind that the last one to be set will win.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/static-files/",
    "title": "Static Files¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nStatic Files\nTable of contents\nUse\nStaticFiles\nWhat is \"Mounting\"\nDetails\nMore info\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUse\nStaticFiles\nWhat is \"Mounting\"\nDetails\nMore info\nFastAPI\nLearn\nTutorial - User Guide\nStatic Files\n¶\nYou can serve static files automatically from a directory using\nStaticFiles\n.\nUse\nStaticFiles\n¶\nImport\nStaticFiles\n.\n\"Mount\" a\nStaticFiles()\ninstance in a specific path.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.staticfiles\nimport\nStaticFiles\napp\n=\nFastAPI\n()\napp\n.\nmount\n(\n\"/static\"\n,\nStaticFiles\n(\ndirectory\n=\n\"static\"\n),\nname\n=\n\"static\"\n)\nTechnical Details\nYou could also use\nfrom starlette.staticfiles import StaticFiles\n.\nFastAPI\nprovides the same\nstarlette.staticfiles\nas\nfastapi.staticfiles\njust as a convenience for you, the developer. But it actually comes directly from Starlette.\nWhat is \"Mounting\"\n¶\n\"Mounting\" means adding a complete \"independent\" application in a specific path, that then takes care of handling all the sub-paths.\nThis is different from using an\nAPIRouter\nas a mounted application is completely independent. The OpenAPI and docs from your main application won't include anything from the mounted application, etc.\nYou can read more about this in the\nAdvanced User Guide\n.\nDetails\n¶\nThe first\n\"/static\"\nrefers to the sub-path this \"sub-application\" will be \"mounted\" on. So, any path that starts with\n\"/static\"\nwill be handled by it.\nThe\ndirectory=\"static\"\nrefers to the name of the directory that contains your static files.\nThe\nname=\"static\"\ngives it a name that can be used internally by\nFastAPI\n.\nAll these parameters can be different than \"\nstatic\n\", adjust them with the needs and specific details of your own application.\nMore info\n¶\nFor more details and options check\nStarlette's docs about Static Files\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/",
    "title": "Custom Docs UI Static Assets (Self-Hosting)¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nCustom Docs UI Static Assets (Self-Hosting)\nTable of contents\nCustom CDN for JavaScript and CSS\nDisable the automatic docs\nInclude the custom docs\nCreate a\npath operation\nto test it\nTest it\nSelf-hosting JavaScript and CSS for docs\nProject file structure\nDownload the files\nServe the static files\nTest the static files\nDisable the automatic docs for static files\nInclude the custom docs for static files\nCreate a\npath operation\nto test static files\nTest Static Files UI\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nCustom CDN for JavaScript and CSS\nDisable the automatic docs\nInclude the custom docs\nCreate a\npath operation\nto test it\nTest it\nSelf-hosting JavaScript and CSS for docs\nProject file structure\nDownload the files\nServe the static files\nTest the static files\nDisable the automatic docs for static files\nInclude the custom docs for static files\nCreate a\npath operation\nto test static files\nTest Static Files UI\nFastAPI\nLearn\nHow To - Recipes\nCustom Docs UI Static Assets (Self-Hosting)\n¶\nThe API docs use\nSwagger UI\nand\nReDoc\n, and each of those need some JavaScript and CSS files.\nBy default, those files are served from a\nCDN\n.\nBut it's possible to customize it, you can set a specific CDN, or serve the files yourself.\nCustom CDN for JavaScript and CSS\n¶\nLet's say that you want to use a different\nCDN\n, for example you want to use\nhttps://unpkg.com/\n.\nThis could be useful if for example you live in a country that restricts some URLs.\nDisable the automatic docs\n¶\nThe first step is to disable the automatic docs, as by default, those use the default CDN.\nTo disable them, set their URLs to\nNone\nwhen creating your\nFastAPI\napp:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.openapi.docs\nimport\n(\nget_redoc_html\n,\nget_swagger_ui_html\n,\nget_swagger_ui_oauth2_redirect_html\n,\n)\napp\n=\nFastAPI\n(\ndocs_url\n=\nNone\n,\nredoc_url\n=\nNone\n)\n@app\n.\nget\n(\n\"/docs\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\ncustom_swagger_ui_html\n():\nreturn\nget_swagger_ui_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - Swagger UI\"\n,\noauth2_redirect_url\n=\napp\n.\nswagger_ui_oauth2_redirect_url\n,\nswagger_js_url\n=\n\"https://unpkg.com/swagger-ui-dist@5/swagger-ui-bundle.js\"\n,\nswagger_css_url\n=\n\"https://unpkg.com/swagger-ui-dist@5/swagger-ui.css\"\n,\n)\n@app\n.\nget\n(\napp\n.\nswagger_ui_oauth2_redirect_url\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nswagger_ui_redirect\n():\nreturn\nget_swagger_ui_oauth2_redirect_html\n()\n@app\n.\nget\n(\n\"/redoc\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nredoc_html\n():\nreturn\nget_redoc_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - ReDoc\"\n,\nredoc_js_url\n=\n\"https://unpkg.com/redoc@2/bundles/redoc.standalone.js\"\n,\n)\n@app\n.\nget\n(\n\"/users/\n{username}\n\"\n)\nasync\ndef\nread_user\n(\nusername\n:\nstr\n):\nreturn\n{\n\"message\"\n:\nf\n\"Hello\n{\nusername\n}\n\"\n}\nInclude the custom docs\n¶\nNow you can create the\npath operations\nfor the custom docs.\nYou can reuse FastAPI's internal functions to create the HTML pages for the docs, and pass them the needed arguments:\nopenapi_url\n: the URL where the HTML page for the docs can get the OpenAPI schema for your API. You can use here the attribute\napp.openapi_url\n.\ntitle\n: the title of your API.\noauth2_redirect_url\n: you can use\napp.swagger_ui_oauth2_redirect_url\nhere to use the default.\nswagger_js_url\n: the URL where the HTML for your Swagger UI docs can get the\nJavaScript\nfile. This is the custom CDN URL.\nswagger_css_url\n: the URL where the HTML for your Swagger UI docs can get the\nCSS\nfile. This is the custom CDN URL.\nAnd similarly for ReDoc...\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.openapi.docs\nimport\n(\nget_redoc_html\n,\nget_swagger_ui_html\n,\nget_swagger_ui_oauth2_redirect_html\n,\n)\napp\n=\nFastAPI\n(\ndocs_url\n=\nNone\n,\nredoc_url\n=\nNone\n)\n@app\n.\nget\n(\n\"/docs\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\ncustom_swagger_ui_html\n():\nreturn\nget_swagger_ui_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - Swagger UI\"\n,\noauth2_redirect_url\n=\napp\n.\nswagger_ui_oauth2_redirect_url\n,\nswagger_js_url\n=\n\"https://unpkg.com/swagger-ui-dist@5/swagger-ui-bundle.js\"\n,\nswagger_css_url\n=\n\"https://unpkg.com/swagger-ui-dist@5/swagger-ui.css\"\n,\n)\n@app\n.\nget\n(\napp\n.\nswagger_ui_oauth2_redirect_url\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nswagger_ui_redirect\n():\nreturn\nget_swagger_ui_oauth2_redirect_html\n()\n@app\n.\nget\n(\n\"/redoc\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nredoc_html\n():\nreturn\nget_redoc_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - ReDoc\"\n,\nredoc_js_url\n=\n\"https://unpkg.com/redoc@2/bundles/redoc.standalone.js\"\n,\n)\n@app\n.\nget\n(\n\"/users/\n{username}\n\"\n)\nasync\ndef\nread_user\n(\nusername\n:\nstr\n):\nreturn\n{\n\"message\"\n:\nf\n\"Hello\n{\nusername\n}\n\"\n}\nTip\nThe\npath operation\nfor\nswagger_ui_redirect\nis a helper for when you use OAuth2.\nIf you integrate your API with an OAuth2 provider, you will be able to authenticate and come back to the API docs with the acquired credentials. And interact with it using the real OAuth2 authentication.\nSwagger UI will handle it behind the scenes for you, but it needs this \"redirect\" helper.\nCreate a\npath operation\nto test it\n¶\nNow, to be able to test that everything works, create a\npath operation\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.openapi.docs\nimport\n(\nget_redoc_html\n,\nget_swagger_ui_html\n,\nget_swagger_ui_oauth2_redirect_html\n,\n)\napp\n=\nFastAPI\n(\ndocs_url\n=\nNone\n,\nredoc_url\n=\nNone\n)\n@app\n.\nget\n(\n\"/docs\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\ncustom_swagger_ui_html\n():\nreturn\nget_swagger_ui_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - Swagger UI\"\n,\noauth2_redirect_url\n=\napp\n.\nswagger_ui_oauth2_redirect_url\n,\nswagger_js_url\n=\n\"https://unpkg.com/swagger-ui-dist@5/swagger-ui-bundle.js\"\n,\nswagger_css_url\n=\n\"https://unpkg.com/swagger-ui-dist@5/swagger-ui.css\"\n,\n)\n@app\n.\nget\n(\napp\n.\nswagger_ui_oauth2_redirect_url\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nswagger_ui_redirect\n():\nreturn\nget_swagger_ui_oauth2_redirect_html\n()\n@app\n.\nget\n(\n\"/redoc\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nredoc_html\n():\nreturn\nget_redoc_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - ReDoc\"\n,\nredoc_js_url\n=\n\"https://unpkg.com/redoc@2/bundles/redoc.standalone.js\"\n,\n)\n@app\n.\nget\n(\n\"/users/\n{username}\n\"\n)\nasync\ndef\nread_user\n(\nusername\n:\nstr\n):\nreturn\n{\n\"message\"\n:\nf\n\"Hello\n{\nusername\n}\n\"\n}\nTest it\n¶\nNow, you should be able to go to your docs at\nhttp://127.0.0.1:8000/docs\n, and reload the page, it will load those assets from the new CDN.\nSelf-hosting JavaScript and CSS for docs\n¶\nSelf-hosting the JavaScript and CSS could be useful if, for example, you need your app to keep working even while offline, without open Internet access, or in a local network.\nHere you'll see how to serve those files yourself, in the same FastAPI app, and configure the docs to use them.\nProject file structure\n¶\nLet's say your project file structure looks like this:\n.\n├── app\n│   ├── __init__.py\n│   ├── main.py\nNow create a directory to store those static files.\nYour new file structure could look like this:\n.\n├── app\n│   ├── __init__.py\n│   ├── main.py\n└── static/\nDownload the files\n¶\nDownload the static files needed for the docs and put them on that\nstatic/\ndirectory.\nYou can probably right-click each link and select an option similar to \"Save link as...\".\nSwagger UI\nuses the files:\nswagger-ui-bundle.js\nswagger-ui.css\nAnd\nReDoc\nuses the file:\nredoc.standalone.js\nAfter that, your file structure could look like:\n.\n├── app\n│   ├── __init__.py\n│   ├── main.py\n└── static\n├── redoc.standalone.js\n├── swagger-ui-bundle.js\n└── swagger-ui.css\nServe the static files\n¶\nImport\nStaticFiles\n.\n\"Mount\" a\nStaticFiles()\ninstance in a specific path.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.openapi.docs\nimport\n(\nget_redoc_html\n,\nget_swagger_ui_html\n,\nget_swagger_ui_oauth2_redirect_html\n,\n)\nfrom\nfastapi.staticfiles\nimport\nStaticFiles\napp\n=\nFastAPI\n(\ndocs_url\n=\nNone\n,\nredoc_url\n=\nNone\n)\napp\n.\nmount\n(\n\"/static\"\n,\nStaticFiles\n(\ndirectory\n=\n\"static\"\n),\nname\n=\n\"static\"\n)\n@app\n.\nget\n(\n\"/docs\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\ncustom_swagger_ui_html\n():\nreturn\nget_swagger_ui_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - Swagger UI\"\n,\noauth2_redirect_url\n=\napp\n.\nswagger_ui_oauth2_redirect_url\n,\nswagger_js_url\n=\n\"/static/swagger-ui-bundle.js\"\n,\nswagger_css_url\n=\n\"/static/swagger-ui.css\"\n,\n)\n@app\n.\nget\n(\napp\n.\nswagger_ui_oauth2_redirect_url\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nswagger_ui_redirect\n():\nreturn\nget_swagger_ui_oauth2_redirect_html\n()\n@app\n.\nget\n(\n\"/redoc\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nredoc_html\n():\nreturn\nget_redoc_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - ReDoc\"\n,\nredoc_js_url\n=\n\"/static/redoc.standalone.js\"\n,\n)\n@app\n.\nget\n(\n\"/users/\n{username}\n\"\n)\nasync\ndef\nread_user\n(\nusername\n:\nstr\n):\nreturn\n{\n\"message\"\n:\nf\n\"Hello\n{\nusername\n}\n\"\n}\nTest the static files\n¶\nStart your application and go to\nhttp://127.0.0.1:8000/static/redoc.standalone.js\n.\nYou should see a very long JavaScript file for\nReDoc\n.\nIt could start with something like:\n/*! For license information please see redoc.standalone.js.LICENSE.txt */\n!\nfunction\n(\ne\n,\nt\n){\n\"object\"\n==\ntypeof\nexports\n&&\n\"object\"\n==\ntypeof\nmodule\n?\nmodule\n.\nexports\n=\nt\n(\nrequire\n(\n\"null\"\n))\n:\n...\nThat confirms that you are being able to serve static files from your app, and that you placed the static files for the docs in the correct place.\nNow we can configure the app to use those static files for the docs.\nDisable the automatic docs for static files\n¶\nThe same as when using a custom CDN, the first step is to disable the automatic docs, as those use the CDN by default.\nTo disable them, set their URLs to\nNone\nwhen creating your\nFastAPI\napp:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.openapi.docs\nimport\n(\nget_redoc_html\n,\nget_swagger_ui_html\n,\nget_swagger_ui_oauth2_redirect_html\n,\n)\nfrom\nfastapi.staticfiles\nimport\nStaticFiles\napp\n=\nFastAPI\n(\ndocs_url\n=\nNone\n,\nredoc_url\n=\nNone\n)\napp\n.\nmount\n(\n\"/static\"\n,\nStaticFiles\n(\ndirectory\n=\n\"static\"\n),\nname\n=\n\"static\"\n)\n@app\n.\nget\n(\n\"/docs\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\ncustom_swagger_ui_html\n():\nreturn\nget_swagger_ui_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - Swagger UI\"\n,\noauth2_redirect_url\n=\napp\n.\nswagger_ui_oauth2_redirect_url\n,\nswagger_js_url\n=\n\"/static/swagger-ui-bundle.js\"\n,\nswagger_css_url\n=\n\"/static/swagger-ui.css\"\n,\n)\n@app\n.\nget\n(\napp\n.\nswagger_ui_oauth2_redirect_url\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nswagger_ui_redirect\n():\nreturn\nget_swagger_ui_oauth2_redirect_html\n()\n@app\n.\nget\n(\n\"/redoc\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nredoc_html\n():\nreturn\nget_redoc_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - ReDoc\"\n,\nredoc_js_url\n=\n\"/static/redoc.standalone.js\"\n,\n)\n@app\n.\nget\n(\n\"/users/\n{username}\n\"\n)\nasync\ndef\nread_user\n(\nusername\n:\nstr\n):\nreturn\n{\n\"message\"\n:\nf\n\"Hello\n{\nusername\n}\n\"\n}\nInclude the custom docs for static files\n¶\nAnd the same way as with a custom CDN, now you can create the\npath operations\nfor the custom docs.\nAgain, you can reuse FastAPI's internal functions to create the HTML pages for the docs, and pass them the needed arguments:\nopenapi_url\n: the URL where the HTML page for the docs can get the OpenAPI schema for your API. You can use here the attribute\napp.openapi_url\n.\ntitle\n: the title of your API.\noauth2_redirect_url\n: you can use\napp.swagger_ui_oauth2_redirect_url\nhere to use the default.\nswagger_js_url\n: the URL where the HTML for your Swagger UI docs can get the\nJavaScript\nfile.\nThis is the one that your own app is now serving\n.\nswagger_css_url\n: the URL where the HTML for your Swagger UI docs can get the\nCSS\nfile.\nThis is the one that your own app is now serving\n.\nAnd similarly for ReDoc...\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.openapi.docs\nimport\n(\nget_redoc_html\n,\nget_swagger_ui_html\n,\nget_swagger_ui_oauth2_redirect_html\n,\n)\nfrom\nfastapi.staticfiles\nimport\nStaticFiles\napp\n=\nFastAPI\n(\ndocs_url\n=\nNone\n,\nredoc_url\n=\nNone\n)\napp\n.\nmount\n(\n\"/static\"\n,\nStaticFiles\n(\ndirectory\n=\n\"static\"\n),\nname\n=\n\"static\"\n)\n@app\n.\nget\n(\n\"/docs\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\ncustom_swagger_ui_html\n():\nreturn\nget_swagger_ui_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - Swagger UI\"\n,\noauth2_redirect_url\n=\napp\n.\nswagger_ui_oauth2_redirect_url\n,\nswagger_js_url\n=\n\"/static/swagger-ui-bundle.js\"\n,\nswagger_css_url\n=\n\"/static/swagger-ui.css\"\n,\n)\n@app\n.\nget\n(\napp\n.\nswagger_ui_oauth2_redirect_url\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nswagger_ui_redirect\n():\nreturn\nget_swagger_ui_oauth2_redirect_html\n()\n@app\n.\nget\n(\n\"/redoc\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nredoc_html\n():\nreturn\nget_redoc_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - ReDoc\"\n,\nredoc_js_url\n=\n\"/static/redoc.standalone.js\"\n,\n)\n@app\n.\nget\n(\n\"/users/\n{username}\n\"\n)\nasync\ndef\nread_user\n(\nusername\n:\nstr\n):\nreturn\n{\n\"message\"\n:\nf\n\"Hello\n{\nusername\n}\n\"\n}\nTip\nThe\npath operation\nfor\nswagger_ui_redirect\nis a helper for when you use OAuth2.\nIf you integrate your API with an OAuth2 provider, you will be able to authenticate and come back to the API docs with the acquired credentials. And interact with it using the real OAuth2 authentication.\nSwagger UI will handle it behind the scenes for you, but it needs this \"redirect\" helper.\nCreate a\npath operation\nto test static files\n¶\nNow, to be able to test that everything works, create a\npath operation\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.openapi.docs\nimport\n(\nget_redoc_html\n,\nget_swagger_ui_html\n,\nget_swagger_ui_oauth2_redirect_html\n,\n)\nfrom\nfastapi.staticfiles\nimport\nStaticFiles\napp\n=\nFastAPI\n(\ndocs_url\n=\nNone\n,\nredoc_url\n=\nNone\n)\napp\n.\nmount\n(\n\"/static\"\n,\nStaticFiles\n(\ndirectory\n=\n\"static\"\n),\nname\n=\n\"static\"\n)\n@app\n.\nget\n(\n\"/docs\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\ncustom_swagger_ui_html\n():\nreturn\nget_swagger_ui_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - Swagger UI\"\n,\noauth2_redirect_url\n=\napp\n.\nswagger_ui_oauth2_redirect_url\n,\nswagger_js_url\n=\n\"/static/swagger-ui-bundle.js\"\n,\nswagger_css_url\n=\n\"/static/swagger-ui.css\"\n,\n)\n@app\n.\nget\n(\napp\n.\nswagger_ui_oauth2_redirect_url\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nswagger_ui_redirect\n():\nreturn\nget_swagger_ui_oauth2_redirect_html\n()\n@app\n.\nget\n(\n\"/redoc\"\n,\ninclude_in_schema\n=\nFalse\n)\nasync\ndef\nredoc_html\n():\nreturn\nget_redoc_html\n(\nopenapi_url\n=\napp\n.\nopenapi_url\n,\ntitle\n=\napp\n.\ntitle\n+\n\" - ReDoc\"\n,\nredoc_js_url\n=\n\"/static/redoc.standalone.js\"\n,\n)\n@app\n.\nget\n(\n\"/users/\n{username}\n\"\n)\nasync\ndef\nread_user\n(\nusername\n:\nstr\n):\nreturn\n{\n\"message\"\n:\nf\n\"Hello\n{\nusername\n}\n\"\n}\nTest Static Files UI\n¶\nNow, you should be able to disconnect your WiFi, go to your docs at\nhttp://127.0.0.1:8000/docs\n, and reload the page.\nAnd even without Internet, you would be able to see the docs for your API and interact with it.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/management/",
    "title": "Repository Management¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRepository Management\nTable of contents\nOwner\nTeam\nFastAPI Experts\nExternal Contributions\nRelease Notes\nTable of contents\nOwner\nTeam\nFastAPI Experts\nExternal Contributions\nFastAPI\nAbout\nRepository Management\n¶\nHere's a short description of how the FastAPI repository is managed and maintained.\nOwner\n¶\nI,\n@tiangolo\n, am the creator and owner of the FastAPI repository. 🤓\nI normally give the final review to each PR before merging them. I make the final decisions on the project, I'm the\nBDFL\n. 😅\nTeam\n¶\nThere's a team of people that help manage and maintain the project. 😎\nThey have different levels of permissions and\nspecific instructions\n.\nSome of the tasks they can perform include:\nAdding labels to PRs.\nEditing PR titles.\nAdding commits on top of PRs to tweak them.\nMark answers in GitHub Discussions questions, etc.\nMerge some specific types of PRs.\nYou can see the current team members in\nFastAPI People - Team\n.\nJoining the team is by invitation only, and I could update or remove permissions, instructions, or membership.\nFastAPI Experts\n¶\nThe people that help others the most in GitHub Discussions can become\nFastAPI Experts\n.\nThis is normally the best way to contribute to the project.\nExternal Contributions\n¶\nExternal contributions are very welcome and appreciated, including answering questions, submitting PRs, etc. 🙇‍♂️\nThere are many ways to\nhelp maintain FastAPI\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/async-tests/",
    "title": "Async Tests¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nAsync Tests\nTable of contents\npytest.mark.anyio\nHTTPX\nExample\nRun it\nIn Detail\nOther Asynchronous Function Calls\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\npytest.mark.anyio\nHTTPX\nExample\nRun it\nIn Detail\nOther Asynchronous Function Calls\nFastAPI\nLearn\nAdvanced User Guide\nAsync Tests\n¶\nYou have already seen how to test your\nFastAPI\napplications using the provided\nTestClient\n. Up to now, you have only seen how to write synchronous tests, without using\nasync\nfunctions.\nBeing able to use asynchronous functions in your tests could be useful, for example, when you're querying your database asynchronously. Imagine you want to test sending requests to your FastAPI application and then verify that your backend successfully wrote the correct data in the database, while using an async database library.\nLet's look at how we can make that work.\npytest.mark.anyio\n¶\nIf we want to call asynchronous functions in our tests, our test functions have to be asynchronous. AnyIO provides a neat plugin for this, that allows us to specify that some test functions are to be called asynchronously.\nHTTPX\n¶\nEven if your\nFastAPI\napplication uses normal\ndef\nfunctions instead of\nasync def\n, it is still an\nasync\napplication underneath.\nThe\nTestClient\ndoes some magic inside to call the asynchronous FastAPI application in your normal\ndef\ntest functions, using standard pytest. But that magic doesn't work anymore when we're using it inside asynchronous functions. By running our tests asynchronously, we can no longer use the\nTestClient\ninside our test functions.\nThe\nTestClient\nis based on\nHTTPX\n, and luckily, we can use it directly to test the API.\nExample\n¶\nFor a simple example, let's consider a file structure similar to the one described in\nBigger Applications\nand\nTesting\n:\n.\n├── app\n│   ├── __init__.py\n│   ├── main.py\n│   └── test_main.py\nThe file\nmain.py\nwould have:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nroot\n():\nreturn\n{\n\"message\"\n:\n\"Tomato\"\n}\nThe file\ntest_main.py\nwould have the tests for\nmain.py\n, it could look like this now:\nPython 3.8+\nimport\npytest\nfrom\nhttpx\nimport\nASGITransport\n,\nAsyncClient\nfrom\n.main\nimport\napp\n@pytest\n.\nmark\n.\nanyio\nasync\ndef\ntest_root\n():\nasync\nwith\nAsyncClient\n(\ntransport\n=\nASGITransport\n(\napp\n=\napp\n),\nbase_url\n=\n\"http://test\"\n)\nas\nac\n:\nresponse\n=\nawait\nac\n.\nget\n(\n\"/\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Tomato\"\n}\nRun it\n¶\nYou can run your tests as usual via:\n$\npytest\n---> 100%\nIn Detail\n¶\nThe marker\n@pytest.mark.anyio\ntells pytest that this test function should be called asynchronously:\nPython 3.8+\nimport\npytest\nfrom\nhttpx\nimport\nASGITransport\n,\nAsyncClient\nfrom\n.main\nimport\napp\n@pytest\n.\nmark\n.\nanyio\nasync\ndef\ntest_root\n():\nasync\nwith\nAsyncClient\n(\ntransport\n=\nASGITransport\n(\napp\n=\napp\n),\nbase_url\n=\n\"http://test\"\n)\nas\nac\n:\nresponse\n=\nawait\nac\n.\nget\n(\n\"/\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Tomato\"\n}\nTip\nNote that the test function is now\nasync def\ninstead of just\ndef\nas before when using the\nTestClient\n.\nThen we can create an\nAsyncClient\nwith the app, and send async requests to it, using\nawait\n.\nPython 3.8+\nimport\npytest\nfrom\nhttpx\nimport\nASGITransport\n,\nAsyncClient\nfrom\n.main\nimport\napp\n@pytest\n.\nmark\n.\nanyio\nasync\ndef\ntest_root\n():\nasync\nwith\nAsyncClient\n(\ntransport\n=\nASGITransport\n(\napp\n=\napp\n),\nbase_url\n=\n\"http://test\"\n)\nas\nac\n:\nresponse\n=\nawait\nac\n.\nget\n(\n\"/\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Tomato\"\n}\nThis is the equivalent to:\nresponse\n=\nclient\n.\nget\n(\n'/'\n)\n...that we used to make our requests with the\nTestClient\n.\nTip\nNote that we're using async/await with the new\nAsyncClient\n- the request is asynchronous.\nWarning\nIf your application relies on lifespan events, the\nAsyncClient\nwon't trigger these events. To ensure they are triggered, use\nLifespanManager\nfrom\nflorimondmanca/asgi-lifespan\n.\nOther Asynchronous Function Calls\n¶\nAs the testing function is now asynchronous, you can now also call (and\nawait\n) other\nasync\nfunctions apart from sending requests to your FastAPI application in your tests, exactly as you would call them anywhere else in your code.\nTip\nIf you encounter a\nRuntimeError: Task attached to a different loop\nwhen integrating asynchronous function calls in your tests (e.g. when using\nMongoDB's MotorClient\n), remember to instantiate objects that need an event loop only within async functions, e.g. an\n@app.on_event(\"startup\")\ncallback.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/query-param-models/",
    "title": "Query Parameter Models¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nQuery Parameter Models\nTable of contents\nQuery Parameters with a Pydantic Model\nCheck the Docs\nForbid Extra Query Parameters\nSummary\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nQuery Parameters with a Pydantic Model\nCheck the Docs\nForbid Extra Query Parameters\nSummary\nFastAPI\nLearn\nTutorial - User Guide\nQuery Parameter Models\n¶\nIf you have a group of\nquery parameters\nthat are related, you can create a\nPydantic model\nto declare them.\nThis would allow you to\nre-use the model\nin\nmultiple places\nand also to declare validations and metadata for all the parameters at once. 😎\nNote\nThis is supported since FastAPI version\n0.115.0\n. 🤓\nQuery Parameters with a Pydantic Model\n¶\nDeclare the\nquery parameters\nthat you need in a\nPydantic model\n, and then declare the parameter as\nQuery\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\n,\nLiteral\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nAnnotated\n[\nFilterParams\n,\nQuery\n()]):\nreturn\nfilter_query\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\nfrom\ntyping_extensions\nimport\nAnnotated\n,\nLiteral\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nAnnotated\n[\nFilterParams\n,\nQuery\n()]):\nreturn\nfilter_query\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\nfrom\ntyping_extensions\nimport\nAnnotated\n,\nLiteral\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nAnnotated\n[\nFilterParams\n,\nQuery\n()]):\nreturn\nfilter_query\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nLiteral\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nFilterParams\n=\nQuery\n()):\nreturn\nfilter_query\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\nfrom\ntyping_extensions\nimport\nLiteral\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nFilterParams\n=\nQuery\n()):\nreturn\nfilter_query\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\nfrom\ntyping_extensions\nimport\nLiteral\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nFilterParams\n=\nQuery\n()):\nreturn\nfilter_query\nFastAPI\nwill\nextract\nthe data for\neach field\nfrom the\nquery parameters\nin the request and give you the Pydantic model you defined.\nCheck the Docs\n¶\nYou can see the query parameters in the docs UI at\n/docs\n:\nForbid Extra Query Parameters\n¶\nIn some special use cases (probably not very common), you might want to\nrestrict\nthe query parameters that you want to receive.\nYou can use Pydantic's model configuration to\nforbid\nany\nextra\nfields:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\n,\nLiteral\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nAnnotated\n[\nFilterParams\n,\nQuery\n()]):\nreturn\nfilter_query\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\nfrom\ntyping_extensions\nimport\nAnnotated\n,\nLiteral\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nAnnotated\n[\nFilterParams\n,\nQuery\n()]):\nreturn\nfilter_query\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\nfrom\ntyping_extensions\nimport\nAnnotated\n,\nLiteral\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nAnnotated\n[\nFilterParams\n,\nQuery\n()]):\nreturn\nfilter_query\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nLiteral\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nFilterParams\n=\nQuery\n()):\nreturn\nfilter_query\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\nfrom\ntyping_extensions\nimport\nLiteral\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nFilterParams\n=\nQuery\n()):\nreturn\nfilter_query\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\nfrom\ntyping_extensions\nimport\nLiteral\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nFilterParams\n=\nQuery\n()):\nreturn\nfilter_query\nIf a client tries to send some\nextra\ndata in the\nquery parameters\n, they will receive an\nerror\nresponse.\nFor example, if the client tries to send a\ntool\nquery parameter with a value of\nplumbus\n, like:\nhttps://example.com/items/?limit=10&tool=plumbus\nThey will receive an\nerror\nresponse telling them that the query parameter\ntool\nis not allowed:\n{\n\"detail\"\n:\n[\n{\n\"type\"\n:\n\"extra_forbidden\"\n,\n\"loc\"\n:\n[\n\"query\"\n,\n\"tool\"\n],\n\"msg\"\n:\n\"Extra inputs are not permitted\"\n,\n\"input\"\n:\n\"plumbus\"\n}\n]\n}\nSummary\n¶\nYou can use\nPydantic models\nto declare\nquery parameters\nin\nFastAPI\n. 😎\nTip\nSpoiler alert: you can also use Pydantic models to declare cookies and headers, but you will read about that later in the tutorial. 🤫\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/deployment/versions/",
    "title": "About FastAPI versions¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout FastAPI versions\nTable of contents\nPin your\nfastapi\nversion\nAvailable versions\nAbout versions\nUpgrading the FastAPI versions\nAbout Starlette\nAbout Pydantic\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nPin your\nfastapi\nversion\nAvailable versions\nAbout versions\nUpgrading the FastAPI versions\nAbout Starlette\nAbout Pydantic\nFastAPI\nLearn\nDeployment\nAbout FastAPI versions\n¶\nFastAPI\nis already being used in production in many applications and systems. And the test coverage is kept at 100%. But its development is still moving quickly.\nNew features are added frequently, bugs are fixed regularly, and the code is still continuously improving.\nThat's why the current versions are still\n0.x.x\n, this reflects that each version could potentially have breaking changes. This follows the\nSemantic Versioning\nconventions.\nYou can create production applications with\nFastAPI\nright now (and you have probably been doing it for some time), you just have to make sure that you use a version that works correctly with the rest of your code.\nPin your\nfastapi\nversion\n¶\nThe first thing you should do is to \"pin\" the version of\nFastAPI\nyou are using to the specific latest version that you know works correctly for your application.\nFor example, let's say you are using version\n0.112.0\nin your app.\nIf you use a\nrequirements.txt\nfile you could specify the version with:\nfastapi[standard]==0.112.0\nthat would mean that you would use exactly the version\n0.112.0\n.\nOr you could also pin it with:\nfastapi[standard]>=0.112.0,<0.113.0\nthat would mean that you would use the versions\n0.112.0\nor above, but less than\n0.113.0\n, for example, a version\n0.112.2\nwould still be accepted.\nIf you use any other tool to manage your installations, like\nuv\n, Poetry, Pipenv, or others, they all have a way that you can use to define specific versions for your packages.\nAvailable versions\n¶\nYou can see the available versions (e.g. to check what is the current latest) in the\nRelease Notes\n.\nAbout versions\n¶\nFollowing the Semantic Versioning conventions, any version below\n1.0.0\ncould potentially add breaking changes.\nFastAPI also follows the convention that any \"PATCH\" version change is for bug fixes and non-breaking changes.\nTip\nThe \"PATCH\" is the last number, for example, in\n0.2.3\n, the PATCH version is\n3\n.\nSo, you should be able to pin to a version like:\nfastapi>=0.45.0,<0.46.0\nBreaking changes and new features are added in \"MINOR\" versions.\nTip\nThe \"MINOR\" is the number in the middle, for example, in\n0.2.3\n, the MINOR version is\n2\n.\nUpgrading the FastAPI versions\n¶\nYou should add tests for your app.\nWith\nFastAPI\nit's very easy (thanks to Starlette), check the docs:\nTesting\nAfter you have tests, then you can upgrade the\nFastAPI\nversion to a more recent one, and make sure that all your code is working correctly by running your tests.\nIf everything is working, or after you make the necessary changes, and all your tests are passing, then you can pin your\nfastapi\nto that new recent version.\nAbout Starlette\n¶\nYou shouldn't pin the version of\nstarlette\n.\nDifferent versions of\nFastAPI\nwill use a specific newer version of Starlette.\nSo, you can just let\nFastAPI\nuse the correct Starlette version.\nAbout Pydantic\n¶\nPydantic includes the tests for\nFastAPI\nwith its own tests, so new versions of Pydantic (above\n1.0.0\n) are always compatible with FastAPI.\nYou can pin Pydantic to any version above\n1.0.0\nthat works for you.\nFor example:\npydantic>=2.7.0,<3.0.0\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/deployment/server-workers/",
    "title": "Server Workers - Uvicorn with Workers¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nServer Workers - Uvicorn with Workers\nTable of contents\nMultiple Workers\nDeployment Concepts\nContainers and Docker\nRecap\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nMultiple Workers\nDeployment Concepts\nContainers and Docker\nRecap\nFastAPI\nLearn\nDeployment\nServer Workers - Uvicorn with Workers\n¶\nLet's check back those deployment concepts from before:\nSecurity - HTTPS\nRunning on startup\nRestarts\nReplication (the number of processes running)\nMemory\nPrevious steps before starting\nUp to this point, with all the tutorials in the docs, you have probably been running a\nserver program\n, for example, using the\nfastapi\ncommand, that runs Uvicorn, running a\nsingle process\n.\nWhen deploying applications you will probably want to have some\nreplication of processes\nto take advantage of\nmultiple cores\nand to be able to handle more requests.\nAs you saw in the previous chapter about\nDeployment Concepts\n, there are multiple strategies you can use.\nHere I'll show you how to use\nUvicorn\nwith\nworker processes\nusing the\nfastapi\ncommand or the\nuvicorn\ncommand directly.\nInfo\nIf you are using containers, for example with Docker or Kubernetes, I'll tell you more about that in the next chapter:\nFastAPI in Containers - Docker\n.\nIn particular, when running on\nKubernetes\nyou will probably\nnot\nwant to use workers and instead run\na single Uvicorn process per container\n, but I'll tell you about it later in that chapter.\nMultiple Workers\n¶\nYou can start multiple workers with the\n--workers\ncommand line option:\nfastapi\nuvicorn\nIf you use the\nfastapi\ncommand:\n$\n<font\ncolor\n=\n\"#4E9A06\"\n>fastapi</font>\nrun\n--workers\n4\n<u\nstyle\n=\n\"text-decoration-style:solid\"\n>main.py</u>\n<span style=\"background-color:#009485\"><font color=\"#D3D7CF\"> FastAPI </font></span>  Starting production server 🚀\nSearching for package file structure from directories with\n<font color=\"#3465A4\">__init__.py</font> files\nImporting from <font color=\"#75507B\">/home/user/code/</font><font color=\"#AD7FA8\">awesomeapp</font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> module </font></span>  🐍 main.py\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> code </font></span>  Importing the FastAPI app object from the module with the\nfollowing code:\n<u style=\"text-decoration-style:solid\">from </u><u style=\"text-decoration-style:solid\"><b>main</b></u><u style=\"text-decoration-style:solid\"> import </u><u style=\"text-decoration-style:solid\"><b>app</b></u>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> app </font></span>  Using import string: <font color=\"#3465A4\">main:app</font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> server </font></span>  Server started at <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://0.0.0.0:8000</u></font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> server </font></span>  Documentation at <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://0.0.0.0:8000/docs</u></font>\nLogs:\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Uvicorn running on <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://0.0.0.0:8000</u></font> <b>(</b>Press CTRL+C to\nquit<b>)</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Started parent process <b>[</b><font color=\"#34E2E2\"><b>27365</b></font><b>]</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Started server process <b>[</b><font color=\"#34E2E2\"><b>27368</b></font><b>]</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Started server process <b>[</b><font color=\"#34E2E2\"><b>27369</b></font><b>]</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Started server process <b>[</b><font color=\"#34E2E2\"><b>27370</b></font><b>]</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Started server process <b>[</b><font color=\"#34E2E2\"><b>27367</b></font><b>]</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Waiting for application startup.\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Waiting for application startup.\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Waiting for application startup.\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Waiting for application startup.\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Application startup complete.\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Application startup complete.\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Application startup complete.\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Application startup complete.\nIf you prefer to use the\nuvicorn\ncommand directly:\n$\nuvicorn\nmain:app\n--host\n0\n.0.0.0\n--port\n8080\n--workers\n4\n<font color=\"#A6E22E\">INFO</font>:     Uvicorn running on <b>http://0.0.0.0:8080</b> (Press CTRL+C to quit)\n<font color=\"#A6E22E\">INFO</font>:     Started parent process [<font color=\"#A1EFE4\"><b>27365</b></font>]\n<font color=\"#A6E22E\">INFO</font>:     Started server process [<font color=\"#A1EFE4\">27368</font>]\n<font color=\"#A6E22E\">INFO</font>:     Waiting for application startup.\n<font color=\"#A6E22E\">INFO</font>:     Application startup complete.\n<font color=\"#A6E22E\">INFO</font>:     Started server process [<font color=\"#A1EFE4\">27369</font>]\n<font color=\"#A6E22E\">INFO</font>:     Waiting for application startup.\n<font color=\"#A6E22E\">INFO</font>:     Application startup complete.\n<font color=\"#A6E22E\">INFO</font>:     Started server process [<font color=\"#A1EFE4\">27370</font>]\n<font color=\"#A6E22E\">INFO</font>:     Waiting for application startup.\n<font color=\"#A6E22E\">INFO</font>:     Application startup complete.\n<font color=\"#A6E22E\">INFO</font>:     Started server process [<font color=\"#A1EFE4\">27367</font>]\n<font color=\"#A6E22E\">INFO</font>:     Waiting for application startup.\n<font color=\"#A6E22E\">INFO</font>:     Application startup complete.\nThe only new option here is\n--workers\ntelling Uvicorn to start 4 worker processes.\nYou can also see that it shows the\nPID\nof each process,\n27365\nfor the parent process (this is the\nprocess manager\n) and one for each worker process:\n27368\n,\n27369\n,\n27370\n, and\n27367\n.\nDeployment Concepts\n¶\nHere you saw how to use multiple\nworkers\nto\nparallelize\nthe execution of the application, take advantage of\nmultiple cores\nin the CPU, and be able to serve\nmore requests\n.\nFrom the list of deployment concepts from above, using workers would mainly help with the\nreplication\npart, and a little bit with the\nrestarts\n, but you still need to take care of the others:\nSecurity - HTTPS\nRunning on startup\nRestarts\nReplication (the number of processes running)\nMemory\nPrevious steps before starting\nContainers and Docker\n¶\nIn the next chapter about\nFastAPI in Containers - Docker\nI'll explain some strategies you could use to handle the other\ndeployment concepts\n.\nI'll show you how to\nbuild your own image from scratch\nto run a single Uvicorn process. It is a simple process and is probably what you would want to do when using a distributed container management system like\nKubernetes\n.\nRecap\n¶\nYou can use multiple worker processes with the\n--workers\nCLI option with the\nfastapi\nor\nuvicorn\ncommands to take advantage of\nmulti-core CPUs\n, to run\nmultiple processes in parallel\n.\nYou could use these tools and ideas if you are setting up\nyour own deployment system\nwhile taking care of the other deployment concepts yourself.\nCheck out the next chapter to learn about\nFastAPI\nwith containers (e.g. Docker and Kubernetes). You will see that those tools have simple ways to solve the other\ndeployment concepts\nas well. ✨\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/handling-errors/",
    "title": "Handling Errors¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nHandling Errors\nTable of contents\nUse\nHTTPException\nImport\nHTTPException\nRaise an\nHTTPException\nin your code\nThe resulting response\nAdd custom headers\nInstall custom exception handlers\nOverride the default exception handlers\nOverride request validation exceptions\nRequestValidationError\nvs\nValidationError\nOverride the\nHTTPException\nerror handler\nUse the\nRequestValidationError\nbody\nFastAPI's\nHTTPException\nvs Starlette's\nHTTPException\nReuse\nFastAPI\n's exception handlers\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUse\nHTTPException\nImport\nHTTPException\nRaise an\nHTTPException\nin your code\nThe resulting response\nAdd custom headers\nInstall custom exception handlers\nOverride the default exception handlers\nOverride request validation exceptions\nRequestValidationError\nvs\nValidationError\nOverride the\nHTTPException\nerror handler\nUse the\nRequestValidationError\nbody\nFastAPI's\nHTTPException\nvs Starlette's\nHTTPException\nReuse\nFastAPI\n's exception handlers\nFastAPI\nLearn\nTutorial - User Guide\nHandling Errors\n¶\nThere are many situations in which you need to notify an error to a client that is using your API.\nThis client could be a browser with a frontend, a code from someone else, an IoT device, etc.\nYou could need to tell the client that:\nThe client doesn't have enough privileges for that operation.\nThe client doesn't have access to that resource.\nThe item the client was trying to access doesn't exist.\netc.\nIn these cases, you would normally return an\nHTTP status code\nin the range of\n400\n(from 400 to 499).\nThis is similar to the 200 HTTP status codes (from 200 to 299). Those \"200\" status codes mean that somehow there was a \"success\" in the request.\nThe status codes in the 400 range mean that there was an error from the client.\nRemember all those\n\"404 Not Found\"\nerrors (and jokes)?\nUse\nHTTPException\n¶\nTo return HTTP responses with errors to the client you use\nHTTPException\n.\nImport\nHTTPException\n¶\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nHTTPException\napp\n=\nFastAPI\n()\nitems\n=\n{\n\"foo\"\n:\n\"The Foo Wrestlers\"\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nif\nitem_id\nnot\nin\nitems\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nreturn\n{\n\"item\"\n:\nitems\n[\nitem_id\n]}\nRaise an\nHTTPException\nin your code\n¶\nHTTPException\nis a normal Python exception with additional data relevant for APIs.\nBecause it's a Python exception, you don't\nreturn\nit, you\nraise\nit.\nThis also means that if you are inside a utility function that you are calling inside of your\npath operation function\n, and you raise the\nHTTPException\nfrom inside of that utility function, it won't run the rest of the code in the\npath operation function\n, it will terminate that request right away and send the HTTP error from the\nHTTPException\nto the client.\nThe benefit of raising an exception over returning a value will be more evident in the section about Dependencies and Security.\nIn this example, when the client requests an item by an ID that doesn't exist, raise an exception with a status code of\n404\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nHTTPException\napp\n=\nFastAPI\n()\nitems\n=\n{\n\"foo\"\n:\n\"The Foo Wrestlers\"\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nif\nitem_id\nnot\nin\nitems\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nreturn\n{\n\"item\"\n:\nitems\n[\nitem_id\n]}\nThe resulting response\n¶\nIf the client requests\nhttp://example.com/items/foo\n(an\nitem_id\n\"foo\"\n), that client will receive an HTTP status code of 200, and a JSON response of:\n{\n\"item\"\n:\n\"The Foo Wrestlers\"\n}\nBut if the client requests\nhttp://example.com/items/bar\n(a non-existent\nitem_id\n\"bar\"\n), that client will receive an HTTP status code of 404 (the \"not found\" error), and a JSON response of:\n{\n\"detail\"\n:\n\"Item not found\"\n}\nTip\nWhen raising an\nHTTPException\n, you can pass any value that can be converted to JSON as the parameter\ndetail\n, not only\nstr\n.\nYou could pass a\ndict\n, a\nlist\n, etc.\nThey are handled automatically by\nFastAPI\nand converted to JSON.\nAdd custom headers\n¶\nThere are some situations in where it's useful to be able to add custom headers to the HTTP error. For example, for some types of security.\nYou probably won't need to use it directly in your code.\nBut in case you needed it for an advanced scenario, you can add custom headers:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nHTTPException\napp\n=\nFastAPI\n()\nitems\n=\n{\n\"foo\"\n:\n\"The Foo Wrestlers\"\n}\n@app\n.\nget\n(\n\"/items-header/\n{item_id}\n\"\n)\nasync\ndef\nread_item_header\n(\nitem_id\n:\nstr\n):\nif\nitem_id\nnot\nin\nitems\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n,\nheaders\n=\n{\n\"X-Error\"\n:\n\"There goes my error\"\n},\n)\nreturn\n{\n\"item\"\n:\nitems\n[\nitem_id\n]}\nInstall custom exception handlers\n¶\nYou can add custom exception handlers with\nthe same exception utilities from Starlette\n.\nLet's say you have a custom exception\nUnicornException\nthat you (or a library you use) might\nraise\n.\nAnd you want to handle this exception globally with FastAPI.\nYou could add a custom exception handler with\n@app.exception_handler()\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\nfrom\nfastapi.responses\nimport\nJSONResponse\nclass\nUnicornException\n(\nException\n):\ndef\n__init__\n(\nself\n,\nname\n:\nstr\n):\nself\n.\nname\n=\nname\napp\n=\nFastAPI\n()\n@app\n.\nexception_handler\n(\nUnicornException\n)\nasync\ndef\nunicorn_exception_handler\n(\nrequest\n:\nRequest\n,\nexc\n:\nUnicornException\n):\nreturn\nJSONResponse\n(\nstatus_code\n=\n418\n,\ncontent\n=\n{\n\"message\"\n:\nf\n\"Oops!\n{\nexc\n.\nname\n}\ndid something. There goes a rainbow...\"\n},\n)\n@app\n.\nget\n(\n\"/unicorns/\n{name}\n\"\n)\nasync\ndef\nread_unicorn\n(\nname\n:\nstr\n):\nif\nname\n==\n\"yolo\"\n:\nraise\nUnicornException\n(\nname\n=\nname\n)\nreturn\n{\n\"unicorn_name\"\n:\nname\n}\nHere, if you request\n/unicorns/yolo\n, the\npath operation\nwill\nraise\na\nUnicornException\n.\nBut it will be handled by the\nunicorn_exception_handler\n.\nSo, you will receive a clean error, with an HTTP status code of\n418\nand a JSON content of:\n{\n\"message\"\n:\n\"Oops! yolo did something. There goes a rainbow...\"\n}\nTechnical Details\nYou could also use\nfrom starlette.requests import Request\nand\nfrom starlette.responses import JSONResponse\n.\nFastAPI\nprovides the same\nstarlette.responses\nas\nfastapi.responses\njust as a convenience for you, the developer. But most of the available responses come directly from Starlette. The same with\nRequest\n.\nOverride the default exception handlers\n¶\nFastAPI\nhas some default exception handlers.\nThese handlers are in charge of returning the default JSON responses when you\nraise\nan\nHTTPException\nand when the request has invalid data.\nYou can override these exception handlers with your own.\nOverride request validation exceptions\n¶\nWhen a request contains invalid data,\nFastAPI\ninternally raises a\nRequestValidationError\n.\nAnd it also includes a default exception handler for it.\nTo override it, import the\nRequestValidationError\nand use it with\n@app.exception_handler(RequestValidationError)\nto decorate the exception handler.\nThe exception handler will receive a\nRequest\nand the exception.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nHTTPException\nfrom\nfastapi.exceptions\nimport\nRequestValidationError\nfrom\nfastapi.responses\nimport\nPlainTextResponse\nfrom\nstarlette.exceptions\nimport\nHTTPException\nas\nStarletteHTTPException\napp\n=\nFastAPI\n()\n@app\n.\nexception_handler\n(\nStarletteHTTPException\n)\nasync\ndef\nhttp_exception_handler\n(\nrequest\n,\nexc\n):\nreturn\nPlainTextResponse\n(\nstr\n(\nexc\n.\ndetail\n),\nstatus_code\n=\nexc\n.\nstatus_code\n)\n@app\n.\nexception_handler\n(\nRequestValidationError\n)\nasync\ndef\nvalidation_exception_handler\n(\nrequest\n,\nexc\n):\nreturn\nPlainTextResponse\n(\nstr\n(\nexc\n),\nstatus_code\n=\n400\n)\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nint\n):\nif\nitem_id\n==\n3\n:\nraise\nHTTPException\n(\nstatus_code\n=\n418\n,\ndetail\n=\n\"Nope! I don't like 3.\"\n)\nreturn\n{\n\"item_id\"\n:\nitem_id\n}\nNow, if you go to\n/items/foo\n, instead of getting the default JSON error with:\n{\n\"detail\"\n:\n[\n{\n\"loc\"\n:\n[\n\"path\"\n,\n\"item_id\"\n],\n\"msg\"\n:\n\"value is not a valid integer\"\n,\n\"type\"\n:\n\"type_error.integer\"\n}\n]\n}\nyou will get a text version, with:\n1 validation error\npath -> item_id\nvalue is not a valid integer (type=type_error.integer)\nRequestValidationError\nvs\nValidationError\n¶\nWarning\nThese are technical details that you might skip if it's not important for you now.\nRequestValidationError\nis a sub-class of Pydantic's\nValidationError\n.\nFastAPI\nuses it so that, if you use a Pydantic model in\nresponse_model\n, and your data has an error, you will see the error in your log.\nBut the client/user will not see it. Instead, the client will receive an \"Internal Server Error\" with an HTTP status code\n500\n.\nIt should be this way because if you have a Pydantic\nValidationError\nin your\nresponse\nor anywhere in your code (not in the client's\nrequest\n), it's actually a bug in your code.\nAnd while you fix it, your clients/users shouldn't have access to internal information about the error, as that could expose a security vulnerability.\nOverride the\nHTTPException\nerror handler\n¶\nThe same way, you can override the\nHTTPException\nhandler.\nFor example, you could want to return a plain text response instead of JSON for these errors:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nHTTPException\nfrom\nfastapi.exceptions\nimport\nRequestValidationError\nfrom\nfastapi.responses\nimport\nPlainTextResponse\nfrom\nstarlette.exceptions\nimport\nHTTPException\nas\nStarletteHTTPException\napp\n=\nFastAPI\n()\n@app\n.\nexception_handler\n(\nStarletteHTTPException\n)\nasync\ndef\nhttp_exception_handler\n(\nrequest\n,\nexc\n):\nreturn\nPlainTextResponse\n(\nstr\n(\nexc\n.\ndetail\n),\nstatus_code\n=\nexc\n.\nstatus_code\n)\n@app\n.\nexception_handler\n(\nRequestValidationError\n)\nasync\ndef\nvalidation_exception_handler\n(\nrequest\n,\nexc\n):\nreturn\nPlainTextResponse\n(\nstr\n(\nexc\n),\nstatus_code\n=\n400\n)\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nint\n):\nif\nitem_id\n==\n3\n:\nraise\nHTTPException\n(\nstatus_code\n=\n418\n,\ndetail\n=\n\"Nope! I don't like 3.\"\n)\nreturn\n{\n\"item_id\"\n:\nitem_id\n}\nTechnical Details\nYou could also use\nfrom starlette.responses import PlainTextResponse\n.\nFastAPI\nprovides the same\nstarlette.responses\nas\nfastapi.responses\njust as a convenience for you, the developer. But most of the available responses come directly from Starlette.\nUse the\nRequestValidationError\nbody\n¶\nThe\nRequestValidationError\ncontains the\nbody\nit received with invalid data.\nYou could use it while developing your app to log the body and debug it, return it to the user, etc.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\nfastapi.exceptions\nimport\nRequestValidationError\nfrom\nfastapi.responses\nimport\nJSONResponse\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\n@app\n.\nexception_handler\n(\nRequestValidationError\n)\nasync\ndef\nvalidation_exception_handler\n(\nrequest\n:\nRequest\n,\nexc\n:\nRequestValidationError\n):\nreturn\nJSONResponse\n(\nstatus_code\n=\n422\n,\ncontent\n=\njsonable_encoder\n({\n\"detail\"\n:\nexc\n.\nerrors\n(),\n\"body\"\n:\nexc\n.\nbody\n}),\n)\nclass\nItem\n(\nBaseModel\n):\ntitle\n:\nstr\nsize\n:\nint\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\nNow try sending an invalid item like:\n{\n\"title\"\n:\n\"towel\"\n,\n\"size\"\n:\n\"XL\"\n}\nYou will receive a response telling you that the data is invalid containing the received body:\n{\n\"detail\"\n:\n[\n{\n\"loc\"\n:\n[\n\"body\"\n,\n\"size\"\n],\n\"msg\"\n:\n\"value is not a valid integer\"\n,\n\"type\"\n:\n\"type_error.integer\"\n}\n],\n\"body\"\n:\n{\n\"title\"\n:\n\"towel\"\n,\n\"size\"\n:\n\"XL\"\n}\n}\nFastAPI's\nHTTPException\nvs Starlette's\nHTTPException\n¶\nFastAPI\nhas its own\nHTTPException\n.\nAnd\nFastAPI\n's\nHTTPException\nerror class inherits from Starlette's\nHTTPException\nerror class.\nThe only difference is that\nFastAPI\n's\nHTTPException\naccepts any JSON-able data for the\ndetail\nfield, while Starlette's\nHTTPException\nonly accepts strings for it.\nSo, you can keep raising\nFastAPI\n's\nHTTPException\nas normally in your code.\nBut when you register an exception handler, you should register it for Starlette's\nHTTPException\n.\nThis way, if any part of Starlette's internal code, or a Starlette extension or plug-in, raises a Starlette\nHTTPException\n, your handler will be able to catch and handle it.\nIn this example, to be able to have both\nHTTPException\ns in the same code, Starlette's exceptions is renamed to\nStarletteHTTPException\n:\nfrom\nstarlette.exceptions\nimport\nHTTPException\nas\nStarletteHTTPException\nReuse\nFastAPI\n's exception handlers\n¶\nIf you want to use the exception along with the same default exception handlers from\nFastAPI\n, you can import and reuse the default exception handlers from\nfastapi.exception_handlers\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nHTTPException\nfrom\nfastapi.exception_handlers\nimport\n(\nhttp_exception_handler\n,\nrequest_validation_exception_handler\n,\n)\nfrom\nfastapi.exceptions\nimport\nRequestValidationError\nfrom\nstarlette.exceptions\nimport\nHTTPException\nas\nStarletteHTTPException\napp\n=\nFastAPI\n()\n@app\n.\nexception_handler\n(\nStarletteHTTPException\n)\nasync\ndef\ncustom_http_exception_handler\n(\nrequest\n,\nexc\n):\nprint\n(\nf\n\"OMG! An HTTP error!:\n{\nrepr\n(\nexc\n)\n}\n\"\n)\nreturn\nawait\nhttp_exception_handler\n(\nrequest\n,\nexc\n)\n@app\n.\nexception_handler\n(\nRequestValidationError\n)\nasync\ndef\nvalidation_exception_handler\n(\nrequest\n,\nexc\n):\nprint\n(\nf\n\"OMG! The client sent invalid data!:\n{\nexc\n}\n\"\n)\nreturn\nawait\nrequest_validation_exception_handler\n(\nrequest\n,\nexc\n)\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nint\n):\nif\nitem_id\n==\n3\n:\nraise\nHTTPException\n(\nstatus_code\n=\n418\n,\ndetail\n=\n\"Nope! I don't like 3.\"\n)\nreturn\n{\n\"item_id\"\n:\nitem_id\n}\nIn this example you are just printing the error with a very expressive message, but you get the idea. You can use the exception and then just reuse the default exception handlers.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/",
    "title": "FastAPI¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFastAPI\nTable of contents\nSponsors\nOpinions\nTyper\n, the FastAPI of CLIs\nRequirements\nInstallation\nExample\nCreate it\nRun it\nCheck it\nInteractive API docs\nAlternative API docs\nExample upgrade\nInteractive API docs upgrade\nAlternative API docs upgrade\nRecap\nPerformance\nDependencies\nstandard\nDependencies\nWithout\nstandard\nDependencies\nWithout\nfastapi-cloud-cli\nAdditional Optional Dependencies\nLicense\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nSponsors\nOpinions\nTyper\n, the FastAPI of CLIs\nRequirements\nInstallation\nExample\nCreate it\nRun it\nCheck it\nInteractive API docs\nAlternative API docs\nExample upgrade\nInteractive API docs upgrade\nAlternative API docs upgrade\nRecap\nPerformance\nDependencies\nstandard\nDependencies\nWithout\nstandard\nDependencies\nWithout\nfastapi-cloud-cli\nAdditional Optional Dependencies\nLicense\nFastAPI\n¶\nFastAPI framework, high performance, easy to learn, fast to code, ready for production\nDocumentation\n:\nhttps://fastapi.tiangolo.com\nSource Code\n:\nhttps://github.com/fastapi/fastapi\nFastAPI is a modern, fast (high-performance), web framework for building APIs with Python based on standard Python type hints.\nThe key features are:\nFast\n: Very high performance, on par with\nNodeJS\nand\nGo\n(thanks to Starlette and Pydantic).\nOne of the fastest Python frameworks available\n.\nFast to code\n: Increase the speed to develop features by about 200% to 300%. *\nFewer bugs\n: Reduce about 40% of human (developer) induced errors. *\nIntuitive\n: Great editor support.\nCompletion\neverywhere. Less time debugging.\nEasy\n: Designed to be easy to use and learn. Less time reading docs.\nShort\n: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.\nRobust\n: Get production-ready code. With automatic interactive documentation.\nStandards-based\n: Based on (and fully compatible with) the open standards for APIs:\nOpenAPI\n(previously known as Swagger) and\nJSON Schema\n.\n* estimation based on tests on an internal development team, building production applications.\nSponsors\n¶\nOther sponsors\nOpinions\n¶\n\"\n[...] I'm using\nFastAPI\na ton these days. [...] I'm actually planning to use it for all of my team's\nML services at Microsoft\n. Some of them are getting integrated into the core\nWindows\nproduct and some\nOffice\nproducts.\n\"\nKabir Khan -\nMicrosoft\n(ref)\n\"\nWe adopted the\nFastAPI\nlibrary to spawn a\nREST\nserver that can be queried to obtain\npredictions\n. [for Ludwig]\n\"\nPiero Molino, Yaroslav Dudin, and Sai Sumanth Miryala -\nUber\n(ref)\n\"\nNetflix\nis pleased to announce the open-source release of our\ncrisis management\norchestration framework:\nDispatch\n! [built with\nFastAPI\n]\n\"\nKevin Glisson, Marc Vilanova, Forest Monsen -\nNetflix\n(ref)\n\"\nI’m over the moon excited about\nFastAPI\n. It’s so fun!\n\"\nBrian Okken -\nPython Bytes\npodcast host\n(ref)\n\"\nHonestly, what you've built looks super solid and polished. In many ways, it's what I wanted\nHug\nto be - it's really inspiring to see someone build that.\n\"\nTimothy Crosley -\nHug\ncreator\n(ref)\n\"\nIf you're looking to learn one\nmodern framework\nfor building REST APIs, check out\nFastAPI\n[...] It's fast, easy to use and easy to learn [...]\n\"\n\"\nWe've switched over to\nFastAPI\nfor our\nAPIs\n[...] I think you'll like it [...]\n\"\nInes Montani - Matthew Honnibal -\nExplosion AI\nfounders -\nspaCy\ncreators\n(ref)\n-\n(ref)\n\"\nIf anyone is looking to build a production Python API, I would highly recommend\nFastAPI\n. It is\nbeautifully designed\n,\nsimple to use\nand\nhighly scalable\n, it has become a\nkey component\nin our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer.\n\"\nDeon Pillsbury -\nCisco\n(ref)\nTyper\n, the FastAPI of CLIs\n¶\nIf you are building a\nCLI\napp to be used in the terminal instead of a web API, check out\nTyper\n.\nTyper\nis FastAPI's little sibling. And it's intended to be the\nFastAPI of CLIs\n. ⌨️ 🚀\nRequirements\n¶\nFastAPI stands on the shoulders of giants:\nStarlette\nfor the web parts.\nPydantic\nfor the data parts.\nInstallation\n¶\nCreate and activate a\nvirtual environment\nand then install FastAPI:\n$\npip\ninstall\n\"fastapi[standard]\"\n---> 100%\nNote\n: Make sure you put\n\"fastapi[standard]\"\nin quotes to ensure it works in all terminals.\nExample\n¶\nCreate it\n¶\nCreate a file\nmain.py\nwith:\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\ndef\nread_root\n():\nreturn\n{\n\"Hello\"\n:\n\"World\"\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nread_item\n(\nitem_id\n:\nint\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"q\"\n:\nq\n}\nOr use\nasync def\n...\nIf your code uses\nasync\n/\nawait\n, use\nasync def\n:\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nread_root\n():\nreturn\n{\n\"Hello\"\n:\n\"World\"\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nint\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"q\"\n:\nq\n}\nNote\n:\nIf you don't know, check the\n\"In a hurry?\"\nsection about\nasync\nand\nawait\nin the docs\n.\nRun it\n¶\nRun the server with:\n$\nfastapi\ndev\nmain.py\n╭────────── FastAPI CLI - Development mode ───────────╮\n│                                                     │\n│  Serving at: http://127.0.0.1:8000                  │\n│                                                     │\n│  API docs: http://127.0.0.1:8000/docs               │\n│                                                     │\n│  Running in development mode, for production use:   │\n│                                                     │\n│  fastapi run                                        │\n│                                                     │\n╰─────────────────────────────────────────────────────╯\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\nAbout the command\nfastapi dev main.py\n...\nThe command\nfastapi dev\nreads your\nmain.py\nfile, detects the\nFastAPI\napp in it, and starts a server using\nUvicorn\n.\nBy default,\nfastapi dev\nwill start with auto-reload enabled for local development.\nYou can read more about it in the\nFastAPI CLI docs\n.\nCheck it\n¶\nOpen your browser at\nhttp://127.0.0.1:8000/items/5?q=somequery\n.\nYou will see the JSON response as:\n{\n\"item_id\"\n:\n5\n,\n\"q\"\n:\n\"somequery\"\n}\nYou already created an API that:\nReceives HTTP requests in the\npaths\n/\nand\n/items/{item_id}\n.\nBoth\npaths\ntake\nGET\noperations\n(also known as HTTP\nmethods\n).\nThe\npath\n/items/{item_id}\nhas a\npath parameter\nitem_id\nthat should be an\nint\n.\nThe\npath\n/items/{item_id}\nhas an optional\nstr\nquery parameter\nq\n.\nInteractive API docs\n¶\nNow go to\nhttp://127.0.0.1:8000/docs\n.\nYou will see the automatic interactive API documentation (provided by\nSwagger UI\n):\nAlternative API docs\n¶\nAnd now, go to\nhttp://127.0.0.1:8000/redoc\n.\nYou will see the alternative automatic documentation (provided by\nReDoc\n):\nExample upgrade\n¶\nNow modify the file\nmain.py\nto receive a body from a\nPUT\nrequest.\nDeclare the body using standard Python types, thanks to Pydantic.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\nprice\n:\nfloat\nis_offer\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\n@app\n.\nget\n(\n\"/\"\n)\ndef\nread_root\n():\nreturn\n{\n\"Hello\"\n:\n\"World\"\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nread_item\n(\nitem_id\n:\nint\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"q\"\n:\nq\n}\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n):\nreturn\n{\n\"item_name\"\n:\nitem\n.\nname\n,\n\"item_id\"\n:\nitem_id\n}\nThe\nfastapi dev\nserver should reload automatically.\nInteractive API docs upgrade\n¶\nNow go to\nhttp://127.0.0.1:8000/docs\n.\nThe interactive API documentation will be automatically updated, including the new body:\nClick on the button \"Try it out\", it allows you to fill the parameters and directly interact with the API:\nThen click on the \"Execute\" button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen:\nAlternative API docs upgrade\n¶\nAnd now, go to\nhttp://127.0.0.1:8000/redoc\n.\nThe alternative documentation will also reflect the new query parameter and body:\nRecap\n¶\nIn summary, you declare\nonce\nthe types of parameters, body, etc. as function parameters.\nYou do that with standard modern Python types.\nYou don't have to learn a new syntax, the methods or classes of a specific library, etc.\nJust standard\nPython\n.\nFor example, for an\nint\n:\nitem_id\n:\nint\nor for a more complex\nItem\nmodel:\nitem\n:\nItem\n...and with that single declaration you get:\nEditor support, including:\nCompletion.\nType checks.\nValidation of data:\nAutomatic and clear errors when the data is invalid.\nValidation even for deeply nested JSON objects.\nConversion\nof input data: coming from the network to Python data and types. Reading from:\nJSON.\nPath parameters.\nQuery parameters.\nCookies.\nHeaders.\nForms.\nFiles.\nConversion\nof output data: converting from Python data and types to network data (as JSON):\nConvert Python types (\nstr\n,\nint\n,\nfloat\n,\nbool\n,\nlist\n, etc).\ndatetime\nobjects.\nUUID\nobjects.\nDatabase models.\n...and many more.\nAutomatic interactive API documentation, including 2 alternative user interfaces:\nSwagger UI.\nReDoc.\nComing back to the previous code example,\nFastAPI\nwill:\nValidate that there is an\nitem_id\nin the path for\nGET\nand\nPUT\nrequests.\nValidate that the\nitem_id\nis of type\nint\nfor\nGET\nand\nPUT\nrequests.\nIf it is not, the client will see a useful, clear error.\nCheck if there is an optional query parameter named\nq\n(as in\nhttp://127.0.0.1:8000/items/foo?q=somequery\n) for\nGET\nrequests.\nAs the\nq\nparameter is declared with\n= None\n, it is optional.\nWithout the\nNone\nit would be required (as is the body in the case with\nPUT\n).\nFor\nPUT\nrequests to\n/items/{item_id}\n, read the body as JSON:\nCheck that it has a required attribute\nname\nthat should be a\nstr\n.\nCheck that it has a required attribute\nprice\nthat has to be a\nfloat\n.\nCheck that it has an optional attribute\nis_offer\n, that should be a\nbool\n, if present.\nAll this would also work for deeply nested JSON objects.\nConvert from and to JSON automatically.\nDocument everything with OpenAPI, that can be used by:\nInteractive documentation systems.\nAutomatic client code generation systems, for many languages.\nProvide 2 interactive documentation web interfaces directly.\nWe just scratched the surface, but you already get the idea of how it all works.\nTry changing the line with:\nreturn\n{\n\"item_name\"\n:\nitem\n.\nname\n,\n\"item_id\"\n:\nitem_id\n}\n...from:\n...\n\"item_name\"\n:\nitem\n.\nname\n...\n...to:\n...\n\"item_price\"\n:\nitem\n.\nprice\n...\n...and see how your editor will auto-complete the attributes and know their types:\nFor a more complete example including more features, see the\nTutorial - User Guide\n.\nSpoiler alert\n: the tutorial - user guide includes:\nDeclaration of\nparameters\nfrom other different places as:\nheaders\n,\ncookies\n,\nform fields\nand\nfiles\n.\nHow to set\nvalidation constraints\nas\nmaximum_length\nor\nregex\n.\nA very powerful and easy to use\nDependency Injection\nsystem.\nSecurity and authentication, including support for\nOAuth2\nwith\nJWT tokens\nand\nHTTP Basic\nauth.\nMore advanced (but equally easy) techniques for declaring\ndeeply nested JSON models\n(thanks to Pydantic).\nGraphQL\nintegration with\nStrawberry\nand other libraries.\nMany extra features (thanks to Starlette) as:\nWebSockets\nextremely easy tests based on HTTPX and\npytest\nCORS\nCookie Sessions\n...and more.\nPerformance\n¶\nIndependent TechEmpower benchmarks show\nFastAPI\napplications running under Uvicorn as\none of the fastest Python frameworks available\n, only below Starlette and Uvicorn themselves (used internally by FastAPI). (*)\nTo understand more about it, see the section\nBenchmarks\n.\nDependencies\n¶\nFastAPI depends on Pydantic and Starlette.\nstandard\nDependencies\n¶\nWhen you install FastAPI with\npip install \"fastapi[standard]\"\nit comes with the\nstandard\ngroup of optional dependencies:\nUsed by Pydantic:\nemail-validator\n- for email validation.\nUsed by Starlette:\nhttpx\n- Required if you want to use the\nTestClient\n.\njinja2\n- Required if you want to use the default template configuration.\npython-multipart\n- Required if you want to support form\n\"parsing\"\n, with\nrequest.form()\n.\nUsed by FastAPI:\nuvicorn\n- for the server that loads and serves your application. This includes\nuvicorn[standard]\n, which includes some dependencies (e.g.\nuvloop\n) needed for high performance serving.\nfastapi-cli[standard]\n- to provide the\nfastapi\ncommand.\nThis includes\nfastapi-cloud-cli\n, which allows you to deploy your FastAPI application to\nFastAPI Cloud\n.\nWithout\nstandard\nDependencies\n¶\nIf you don't want to include the\nstandard\noptional dependencies, you can install with\npip install fastapi\ninstead of\npip install \"fastapi[standard]\"\n.\nWithout\nfastapi-cloud-cli\n¶\nIf you want to install FastAPI with the standard dependencies but without the\nfastapi-cloud-cli\n, you can install with\npip install \"fastapi[standard-no-fastapi-cloud-cli]\"\n.\nAdditional Optional Dependencies\n¶\nThere are some additional dependencies you might want to install.\nAdditional optional Pydantic dependencies:\npydantic-settings\n- for settings management.\npydantic-extra-types\n- for extra types to be used with Pydantic.\nAdditional optional FastAPI dependencies:\norjson\n- Required if you want to use\nORJSONResponse\n.\nujson\n- Required if you want to use\nUJSONResponse\n.\nLicense\n¶\nThis project is licensed under the terms of the MIT license.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/contributing/",
    "title": "Development - Contributing¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nDevelopment - Contributing\nTable of contents\nDeveloping\nVirtual environment\nInstall requirements\nUsing your local FastAPI\nFormat the code\nTests\nDocs\nDocs live\nTyper CLI (optional)\nDocs Structure\nDocs for tests\nApps and docs at the same time\nTranslations\nTips and guidelines\nExisting language\nDon't Translate these Pages\nRequest a New Language\nNew Language\nPreview the result\nTranslation specific tips and guidelines\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nDeveloping\nVirtual environment\nInstall requirements\nUsing your local FastAPI\nFormat the code\nTests\nDocs\nDocs live\nTyper CLI (optional)\nDocs Structure\nDocs for tests\nApps and docs at the same time\nTranslations\nTips and guidelines\nExisting language\nDon't Translate these Pages\nRequest a New Language\nNew Language\nPreview the result\nTranslation specific tips and guidelines\nFastAPI\nResources\nDevelopment - Contributing\n¶\nFirst, you might want to see the basic ways to\nhelp FastAPI and get help\n.\nDeveloping\n¶\nIf you already cloned the\nfastapi repository\nand you want to deep dive in the code, here are some guidelines to set up your environment.\nVirtual environment\n¶\nFollow the instructions to create and activate a\nvirtual environment\nfor the internal code of\nfastapi\n.\nInstall requirements\n¶\nAfter activating the environment, install the required packages:\npip\nuv\n$\npip\ninstall\n-r\nrequirements.txt\n---> 100%\nIf you have\nuv\n:\n$\nuv\npip\ninstall\n-r\nrequirements.txt\n---> 100%\nIt will install all the dependencies and your local FastAPI in your local environment.\nUsing your local FastAPI\n¶\nIf you create a Python file that imports and uses FastAPI, and run it with the Python from your local environment, it will use your cloned local FastAPI source code.\nAnd if you update that local FastAPI source code when you run that Python file again, it will use the fresh version of FastAPI you just edited.\nThat way, you don't have to \"install\" your local version to be able to test every change.\nTechnical Details\nThis only happens when you install using this included\nrequirements.txt\ninstead of running\npip install fastapi\ndirectly.\nThat is because inside the\nrequirements.txt\nfile, the local version of FastAPI is marked to be installed in \"editable\" mode, with the\n-e\noption.\nFormat the code\n¶\nThere is a script that you can run that will format and clean all your code:\n$\nbash\nscripts/format.sh\nIt will also auto-sort all your imports.\nTests\n¶\nThere is a script that you can run locally to test all the code and generate coverage reports in HTML:\n$\nbash\nscripts/test-cov-html.sh\nThis command generates a directory\n./htmlcov/\n, if you open the file\n./htmlcov/index.html\nin your browser, you can explore interactively the regions of code that are covered by the tests, and notice if there is any region missing.\nDocs\n¶\nFirst, make sure you set up your environment as described above, that will install all the requirements.\nDocs live\n¶\nDuring local development, there is a script that builds the site and checks for any changes, live-reloading:\n$\npython\n./scripts/docs.py\nlive\n<span style=\"color: green;\">[INFO]</span> Serving on http://127.0.0.1:8008\n<span style=\"color: green;\">[INFO]</span> Start watching changes\n<span style=\"color: green;\">[INFO]</span> Start detecting changes\nIt will serve the documentation on\nhttp://127.0.0.1:8008\n.\nThat way, you can edit the documentation/source files and see the changes live.\nTip\nAlternatively, you can perform the same steps that scripts does manually.\nGo into the language directory, for the main docs in English it's at\ndocs/en/\n:\n$\ncd\ndocs/en/\nThen run\nmkdocs\nin that directory:\n$\nmkdocs\nserve\n--dev-addr\n127\n.0.0.1:8008\nTyper CLI (optional)\n¶\nThe instructions here show you how to use the script at\n./scripts/docs.py\nwith the\npython\nprogram directly.\nBut you can also use\nTyper CLI\n, and you will get autocompletion in your terminal for the commands after installing completion.\nIf you install Typer CLI, you can install completion with:\n$\ntyper\n--install-completion\nzsh completion installed in /home/user/.bashrc.\nCompletion will take effect once you restart the terminal.\nDocs Structure\n¶\nThe documentation uses\nMkDocs\n.\nAnd there are extra tools/scripts in place to handle translations in\n./scripts/docs.py\n.\nTip\nYou don't need to see the code in\n./scripts/docs.py\n, you just use it in the command line.\nAll the documentation is in Markdown format in the directory\n./docs/en/\n.\nMany of the tutorials have blocks of code.\nIn most of the cases, these blocks of code are actual complete applications that can be run as is.\nIn fact, those blocks of code are not written inside the Markdown, they are Python files in the\n./docs_src/\ndirectory.\nAnd those Python files are included/injected in the documentation when generating the site.\nDocs for tests\n¶\nMost of the tests actually run against the example source files in the documentation.\nThis helps to make sure that:\nThe documentation is up-to-date.\nThe documentation examples can be run as is.\nMost of the features are covered by the documentation, ensured by test coverage.\nApps and docs at the same time\n¶\nIf you run the examples with, e.g.:\n$\nfastapi\ndev\ntutorial001.py\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nas Uvicorn by default will use the port\n8000\n, the documentation on port\n8008\nwon't clash.\nTranslations\n¶\nAttention\nUpdate on Translations\nWe're updating the way we handle documentation translations.\nUntil now, we invited community members to translate pages via pull requests, which were then reviewed by at least two native speakers. While this has helped bring FastAPI to many more users, we’ve also run into several challenges - some languages have only a few translated pages, others are outdated and hard to maintain over time.\nTo improve this, we’re working on automation tools 🤖 to manage translations more efficiently. Once ready, documentation will be machine-translated and still reviewed by at least two native speakers ✅ before publishing. This will allow us to keep translations up-to-date while reducing the review burden on maintainers.\nWhat’s changing now:\n🚫 We’re no longer accepting new community-submitted translation PRs.\n⏳ Existing open PRs will be reviewed and can still be merged if completed within the next 3 weeks (since July 11 2025).\n🌐 In the future, we will only support languages where at least three active native speakers are available to review and maintain translations.\nThis transition will help us keep translations more consistent and timely while better supporting our contributors 🙌. Thank you to everyone who has contributed so far — your help has been invaluable! 💖\nHelp with translations is VERY MUCH appreciated! And it can't be done without the help from the community. 🌎 🚀\nHere are the steps to help with translations.\nTips and guidelines\n¶\nCheck the currently\nexisting pull requests\nfor your language. You can filter the pull requests by the ones with the label for your language. For example, for Spanish, the label is\nlang-es\n.\nReview those pull requests, requesting changes or approving them. For the languages I don't speak, I'll wait for several others to review the translation before merging.\nTip\nYou can\nadd comments with change suggestions\nto existing pull requests.\nCheck the docs about\nadding a pull request review\nto approve it or request changes.\nCheck if there's a\nGitHub Discussion\nto coordinate translations for your language. You can subscribe to it, and when there's a new pull request to review, an automatic comment will be added to the discussion.\nIf you translate pages, add a single pull request per page translated. That will make it much easier for others to review it.\nTo check the 2-letter code for the language you want to translate, you can use the table\nList of ISO 639-1 codes\n.\nExisting language\n¶\nLet's say you want to translate a page for a language that already has translations for some pages, like Spanish.\nIn the case of Spanish, the 2-letter code is\nes\n. So, the directory for Spanish translations is located at\ndocs/es/\n.\nTip\nThe main (\"official\") language is English, located at\ndocs/en/\n.\nNow run the live server for the docs in Spanish:\n// Use the command \"live\" and pass the language code as a CLI argument\n$\npython\n./scripts/docs.py\nlive\nes\n<span style=\"color: green;\">[INFO]</span> Serving on http://127.0.0.1:8008\n<span style=\"color: green;\">[INFO]</span> Start watching changes\n<span style=\"color: green;\">[INFO]</span> Start detecting changes\nTip\nAlternatively, you can perform the same steps that scripts does manually.\nGo into the language directory, for the Spanish translations it's at\ndocs/es/\n:\n$\ncd\ndocs/es/\nThen run\nmkdocs\nin that directory:\n$\nmkdocs\nserve\n--dev-addr\n127\n.0.0.1:8008\nNow you can go to\nhttp://127.0.0.1:8008\nand see your changes live.\nYou will see that every language has all the pages. But some pages are not translated and have an info box at the top, about the missing translation.\nNow let's say that you want to add a translation for the section\nFeatures\n.\nCopy the file at:\ndocs/en/docs/features.md\nPaste it in exactly the same location but for the language you want to translate, e.g.:\ndocs/es/docs/features.md\nTip\nNotice that the only change in the path and file name is the language code, from\nen\nto\nes\n.\nIf you go to your browser you will see that now the docs show your new section (the info box at the top is gone). 🎉\nNow you can translate it all and see how it looks as you save the file.\nDon't Translate these Pages\n¶\n🚨 Don't translate:\nFiles under\nreference/\nrelease-notes.md\nfastapi-people.md\nexternal-links.md\nnewsletter.md\nmanagement-tasks.md\nmanagement.md\ncontributing.md\nSome of these files are updated very frequently and a translation would always be behind, or they include the main content from English source files, etc.\nRequest a New Language\n¶\nLet's say that you want to request translations for a language that is not yet translated, not even some pages. For example, Latin.\nIf there is no discussion for that language, you can start by requesting the new language. For that, you can follow these steps:\nCreate a new discussion following the template.\nGet a few native speakers to comment on the discussion and commit to help review translations for that language.\nOnce there are several people in the discussion, the FastAPI team can evaluate it and can make it an official translation.\nThen the docs will be automatically translated using AI, and the team of native speakers can review the translation, and help tweak the AI prompts.\nOnce there's a new translation, for example if docs are updated or there's a new section, there will be a comment in the same discussion with the link to the new translation to review.\nNew Language\n¶\nNote\nThese steps will be performed by the FastAPI team.\nChecking the link from above (List of ISO 639-1 codes), you can see that the 2-letter code for Latin is\nla\n.\nNow you can create a new directory for the new language, running the following script:\n// Use the command new-lang, pass the language code as a CLI argument\n$\npython\n./scripts/docs.py\nnew-lang\nla\nSuccessfully initialized: docs/la\nNow you can check in your code editor the newly created directory\ndocs/la/\n.\nThat command created a file\ndocs/la/mkdocs.yml\nwith a simple config that inherits everything from the\nen\nversion:\nINHERIT\n:\n../en/mkdocs.yml\nTip\nYou could also simply create that file with those contents manually.\nThat command also created a dummy file\ndocs/la/index.md\nfor the main page, you can start by translating that one.\nYou can continue with the previous instructions for an \"Existing Language\" for that process.\nYou can make the first pull request with those two files,\ndocs/la/mkdocs.yml\nand\ndocs/la/index.md\n. 🎉\nPreview the result\n¶\nAs already mentioned above, you can use the\n./scripts/docs.py\nwith the\nlive\ncommand to preview the results (or\nmkdocs serve\n).\nOnce you are done, you can also test it all as it would look online, including all the other languages.\nTo do that, first build all the docs:\n// Use the command \"build-all\", this will take a bit\n$\npython\n./scripts/docs.py\nbuild-all\nBuilding docs for: en\nBuilding docs for: es\nSuccessfully built docs for: es\nThis builds all those independent MkDocs sites for each language, combines them, and generates the final output at\n./site/\n.\nThen you can serve that with the command\nserve\n:\n// Use the command \"serve\" after running \"build-all\"\n$\npython\n./scripts/docs.py\nserve\nWarning: this is a very simple server. For development, use mkdocs serve instead.\nThis is here only to preview a site with translations already built.\nMake sure you run the build-all command first.\nServing at: http://127.0.0.1:8008\nTranslation specific tips and guidelines\n¶\nTranslate only the Markdown documents (\n.md\n). Do not translate the code examples at\n./docs_src\n.\nIn code blocks within the Markdown document, translate comments (\n# a comment\n), but leave the rest unchanged.\nDo not change anything enclosed in \"``\" (inline code).\nIn lines starting with\n///\ntranslate only the text part after\n|\n. Leave the rest unchanged.\nYou can translate info boxes like\n/// warning\nwith for example\n/// warning | Achtung\n. But do not change the word immediately after the\n///\n, it determines the color of the info box.\nDo not change the paths in links to images, code files, Markdown documents.\nHowever, when a Markdown document is translated, the\n#hash-parts\nin links to its headings may change. Update these links if possible.\nSearch for such links in the translated document using the regex\n#[^# ]\n.\nSearch in all documents already translated into your language for\nyour-translated-document.md\n. For example VS Code has an option \"Edit\" -> \"Find in Files\".\nWhen translating a document, do not \"pre-translate\"\n#hash-parts\nthat link to headings in untranslated documents.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/deployment/manually/",
    "title": "Run a Server Manually¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nRun a Server Manually\nTable of contents\nUse the\nfastapi run\nCommand\nASGI Servers\nServer Machine and Server Program\nInstall the Server Program\nRun the Server Program\nDeployment Concepts\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUse the\nfastapi run\nCommand\nASGI Servers\nServer Machine and Server Program\nInstall the Server Program\nRun the Server Program\nDeployment Concepts\nFastAPI\nLearn\nDeployment\nRun a Server Manually\n¶\nUse the\nfastapi run\nCommand\n¶\nIn short, use\nfastapi run\nto serve your FastAPI application:\n$\n<font\ncolor\n=\n\"#4E9A06\"\n>fastapi</font>\nrun\n<u\nstyle\n=\n\"text-decoration-style:solid\"\n>main.py</u>\n<span style=\"background-color:#009485\"><font color=\"#D3D7CF\"> FastAPI </font></span>  Starting production server 🚀\nSearching for package file structure from directories\nwith <font color=\"#3465A4\">__init__.py</font> files\nImporting from <font color=\"#75507B\">/home/user/code/</font><font color=\"#AD7FA8\">awesomeapp</font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> module </font></span>  🐍 main.py\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> code </font></span>  Importing the FastAPI app object from the module with\nthe following code:\n<u style=\"text-decoration-style:solid\">from </u><u style=\"text-decoration-style:solid\"><b>main</b></u><u style=\"text-decoration-style:solid\"> import </u><u style=\"text-decoration-style:solid\"><b>app</b></u>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> app </font></span>  Using import string: <font color=\"#3465A4\">main:app</font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> server </font></span>  Server started at <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://0.0.0.0:8000</u></font>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> server </font></span>  Documentation at <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://0.0.0.0:8000/docs</u></font>\nLogs:\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Started server process <b>[</b><font color=\"#34E2E2\"><b>2306215</b></font><b>]</b>\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Waiting for application startup.\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Application startup complete.\n<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span>  Uvicorn running on <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://0.0.0.0:8000</u></font> <b>(</b>Press CTRL+C\nto quit<b>)</b>\nThat would work for most of the cases. 😎\nYou could use that command for example to start your\nFastAPI\napp in a container, in a server, etc.\nASGI Servers\n¶\nLet's go a little deeper into the details.\nFastAPI uses a standard for building Python web frameworks and servers called\nASGI\n. FastAPI is an ASGI web framework.\nThe main thing you need to run a\nFastAPI\napplication (or any other ASGI application) in a remote server machine is an ASGI server program like\nUvicorn\n, this is the one that comes by default in the\nfastapi\ncommand.\nThere are several alternatives, including:\nUvicorn\n: a high performance ASGI server.\nHypercorn\n: an ASGI server compatible with HTTP/2 and Trio among other features.\nDaphne\n: the ASGI server built for Django Channels.\nGranian\n: A Rust HTTP server for Python applications.\nNGINX Unit\n: NGINX Unit is a lightweight and versatile web application runtime.\nServer Machine and Server Program\n¶\nThere's a small detail about names to keep in mind. 💡\nThe word \"\nserver\n\" is commonly used to refer to both the remote/cloud computer (the physical or virtual machine) and also the program that is running on that machine (e.g. Uvicorn).\nJust keep in mind that when you read \"server\" in general, it could refer to one of those two things.\nWhen referring to the remote machine, it's common to call it\nserver\n, but also\nmachine\n,\nVM\n(virtual machine),\nnode\n. Those all refer to some type of remote machine, normally running Linux, where you run programs.\nInstall the Server Program\n¶\nWhen you install FastAPI, it comes with a production server, Uvicorn, and you can start it with the\nfastapi run\ncommand.\nBut you can also install an ASGI server manually.\nMake sure you create a\nvirtual environment\n, activate it, and then you can install the server application.\nFor example, to install Uvicorn:\n$\npip\ninstall\n\"uvicorn[standard]\"\n---> 100%\nA similar process would apply to any other ASGI server program.\nTip\nBy adding the\nstandard\n, Uvicorn will install and use some recommended extra dependencies.\nThat including\nuvloop\n, the high-performance drop-in replacement for\nasyncio\n, that provides the big concurrency performance boost.\nWhen you install FastAPI with something like\npip install \"fastapi[standard]\"\nyou already get\nuvicorn[standard]\nas well.\nRun the Server Program\n¶\nIf you installed an ASGI server manually, you would normally need to pass an import string in a special format for it to import your FastAPI application:\n$\nuvicorn\nmain:app\n--host\n0\n.0.0.0\n--port\n80\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://0.0.0.0:80 (Press CTRL+C to quit)\nNote\nThe command\nuvicorn main:app\nrefers to:\nmain\n: the file\nmain.py\n(the Python \"module\").\napp\n: the object created inside of\nmain.py\nwith the line\napp = FastAPI()\n.\nIt is equivalent to:\nfrom\nmain\nimport\napp\nEach alternative ASGI server program would have a similar command, you can read more in their respective documentation.\nWarning\nUvicorn and other servers support a\n--reload\noption that is useful during development.\nThe\n--reload\noption consumes much more resources, is more unstable, etc.\nIt helps a lot during\ndevelopment\n, but you\nshouldn't\nuse it in\nproduction\n.\nDeployment Concepts\n¶\nThese examples run the server program (e.g Uvicorn), starting\na single process\n, listening on all the IPs (\n0.0.0.0\n) on a predefined port (e.g.\n80\n).\nThis is the basic idea. But you will probably want to take care of some additional things, like:\nSecurity - HTTPS\nRunning on startup\nRestarts\nReplication (the number of processes running)\nMemory\nPrevious steps before starting\nI'll tell you more about each of these concepts, how to think about them, and some concrete examples with strategies to handle them in the next chapters. 🚀\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/body-fields/",
    "title": "Body - Fields¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Fields\nTable of contents\nImport\nField\nDeclare model attributes\nAdd extra information\nRecap\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nImport\nField\nDeclare model attributes\nAdd extra information\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nBody - Fields\n¶\nThe same way you can declare additional validation and metadata in\npath operation function\nparameters with\nQuery\n,\nPath\nand\nBody\n, you can declare validation and metadata inside of Pydantic models using Pydantic's\nField\n.\nImport\nField\n¶\nFirst, you have to import it:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"The description of the item\"\n,\nmax_length\n=\n300\n)\nprice\n:\nfloat\n=\nField\n(\ngt\n=\n0\n,\ndescription\n=\n\"The price must be greater than zero\"\n)\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nembed\n=\nTrue\n)]):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"The description of the item\"\n,\nmax_length\n=\n300\n)\nprice\n:\nfloat\n=\nField\n(\ngt\n=\n0\n,\ndescription\n=\n\"The price must be greater than zero\"\n)\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nembed\n=\nTrue\n)]):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nField\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"The description of the item\"\n,\nmax_length\n=\n300\n)\nprice\n:\nfloat\n=\nField\n(\ngt\n=\n0\n,\ndescription\n=\n\"The price must be greater than zero\"\n)\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nembed\n=\nTrue\n)]):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"The description of the item\"\n,\nmax_length\n=\n300\n)\nprice\n:\nfloat\n=\nField\n(\ngt\n=\n0\n,\ndescription\n=\n\"The price must be greater than zero\"\n)\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n=\nBody\n(\nembed\n=\nTrue\n)):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"The description of the item\"\n,\nmax_length\n=\n300\n)\nprice\n:\nfloat\n=\nField\n(\ngt\n=\n0\n,\ndescription\n=\n\"The price must be greater than zero\"\n)\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n=\nBody\n(\nembed\n=\nTrue\n)):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nWarning\nNotice that\nField\nis imported directly from\npydantic\n, not from\nfastapi\nas are all the rest (\nQuery\n,\nPath\n,\nBody\n, etc).\nDeclare model attributes\n¶\nYou can then use\nField\nwith model attributes:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"The description of the item\"\n,\nmax_length\n=\n300\n)\nprice\n:\nfloat\n=\nField\n(\ngt\n=\n0\n,\ndescription\n=\n\"The price must be greater than zero\"\n)\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nembed\n=\nTrue\n)]):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"The description of the item\"\n,\nmax_length\n=\n300\n)\nprice\n:\nfloat\n=\nField\n(\ngt\n=\n0\n,\ndescription\n=\n\"The price must be greater than zero\"\n)\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nembed\n=\nTrue\n)]):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nField\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"The description of the item\"\n,\nmax_length\n=\n300\n)\nprice\n:\nfloat\n=\nField\n(\ngt\n=\n0\n,\ndescription\n=\n\"The price must be greater than zero\"\n)\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nembed\n=\nTrue\n)]):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"The description of the item\"\n,\nmax_length\n=\n300\n)\nprice\n:\nfloat\n=\nField\n(\ngt\n=\n0\n,\ndescription\n=\n\"The price must be greater than zero\"\n)\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n=\nBody\n(\nembed\n=\nTrue\n)):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"The description of the item\"\n,\nmax_length\n=\n300\n)\nprice\n:\nfloat\n=\nField\n(\ngt\n=\n0\n,\ndescription\n=\n\"The price must be greater than zero\"\n)\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n=\nBody\n(\nembed\n=\nTrue\n)):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nField\nworks the same way as\nQuery\n,\nPath\nand\nBody\n, it has all the same parameters, etc.\nTechnical Details\nActually,\nQuery\n,\nPath\nand others you'll see next create objects of subclasses of a common\nParam\nclass, which is itself a subclass of Pydantic's\nFieldInfo\nclass.\nAnd Pydantic's\nField\nreturns an instance of\nFieldInfo\nas well.\nBody\nalso returns objects of a subclass of\nFieldInfo\ndirectly. And there are others you will see later that are subclasses of the\nBody\nclass.\nRemember that when you import\nQuery\n,\nPath\n, and others from\nfastapi\n, those are actually functions that return special classes.\nTip\nNotice how each model's attribute with a type, default value and\nField\nhas the same structure as a\npath operation function's\nparameter, with\nField\ninstead of\nPath\n,\nQuery\nand\nBody\n.\nAdd extra information\n¶\nYou can declare extra information in\nField\n,\nQuery\n,\nBody\n, etc. And it will be included in the generated JSON Schema.\nYou will learn more about adding extra information later in the docs, when learning to declare examples.\nWarning\nExtra keys passed to\nField\nwill also be present in the resulting OpenAPI schema for your application.\nAs these keys may not necessarily be part of the OpenAPI specification, some OpenAPI tools, for example\nthe OpenAPI validator\n, may not work with your generated schema.\nRecap\n¶\nYou can use Pydantic's\nField\nto declare extra validations and metadata for model attributes.\nYou can also use the extra keyword arguments to pass additional JSON Schema metadata.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/response-headers/",
    "title": "Response Headers¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse Headers\nTable of contents\nUse a\nResponse\nparameter\nReturn a\nResponse\ndirectly\nCustom Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUse a\nResponse\nparameter\nReturn a\nResponse\ndirectly\nCustom Headers\nFastAPI\nLearn\nAdvanced User Guide\nResponse Headers\n¶\nUse a\nResponse\nparameter\n¶\nYou can declare a parameter of type\nResponse\nin your\npath operation function\n(as you can do for cookies).\nAnd then you can set headers in that\ntemporal\nresponse object.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/headers-and-object/\"\n)\ndef\nget_headers\n(\nresponse\n:\nResponse\n):\nresponse\n.\nheaders\n[\n\"X-Cat-Dog\"\n]\n=\n\"alone in the world\"\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nAnd then you can return any object you need, as you normally would (a\ndict\n, a database model, etc).\nAnd if you declared a\nresponse_model\n, it will still be used to filter and convert the object you returned.\nFastAPI\nwill use that\ntemporal\nresponse to extract the headers (also cookies and status code), and will put them in the final response that contains the value you returned, filtered by any\nresponse_model\n.\nYou can also declare the\nResponse\nparameter in dependencies, and set headers (and cookies) in them.\nReturn a\nResponse\ndirectly\n¶\nYou can also add headers when you return a\nResponse\ndirectly.\nCreate a response as described in\nReturn a Response Directly\nand pass the headers as an additional parameter:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nJSONResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/headers/\"\n)\ndef\nget_headers\n():\ncontent\n=\n{\n\"message\"\n:\n\"Hello World\"\n}\nheaders\n=\n{\n\"X-Cat-Dog\"\n:\n\"alone in the world\"\n,\n\"Content-Language\"\n:\n\"en-US\"\n}\nreturn\nJSONResponse\n(\ncontent\n=\ncontent\n,\nheaders\n=\nheaders\n)\nTechnical Details\nYou could also use\nfrom starlette.responses import Response\nor\nfrom starlette.responses import JSONResponse\n.\nFastAPI\nprovides the same\nstarlette.responses\nas\nfastapi.responses\njust as a convenience for you, the developer. But most of the available responses come directly from Starlette.\nAnd as the\nResponse\ncan be used frequently to set headers and cookies,\nFastAPI\nalso provides it at\nfastapi.Response\n.\nCustom Headers\n¶\nKeep in mind that custom proprietary headers can be added\nusing the\nX-\nprefix\n.\nBut if you have custom headers that you want a client in a browser to be able to see, you need to add them to your CORS configurations (read more in\nCORS (Cross-Origin Resource Sharing)\n), using the parameter\nexpose_headers\ndocumented in\nStarlette's CORS docs\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/sub-applications/",
    "title": "Sub Applications - Mounts¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nSub Applications - Mounts\nTable of contents\nMounting a\nFastAPI\napplication\nTop-level application\nSub-application\nMount the sub-application\nCheck the automatic API docs\nTechnical Details:\nroot_path\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nMounting a\nFastAPI\napplication\nTop-level application\nSub-application\nMount the sub-application\nCheck the automatic API docs\nTechnical Details:\nroot_path\nFastAPI\nLearn\nAdvanced User Guide\nSub Applications - Mounts\n¶\nIf you need to have two independent FastAPI applications, with their own independent OpenAPI and their own docs UIs, you can have a main app and \"mount\" one (or more) sub-application(s).\nMounting a\nFastAPI\napplication\n¶\n\"Mounting\" means adding a completely \"independent\" application in a specific path, that then takes care of handling everything under that path, with the\npath operations\ndeclared in that sub-application.\nTop-level application\n¶\nFirst, create the main, top-level,\nFastAPI\napplication, and its\npath operations\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/app\"\n)\ndef\nread_main\n():\nreturn\n{\n\"message\"\n:\n\"Hello World from main app\"\n}\nsubapi\n=\nFastAPI\n()\n@subapi\n.\nget\n(\n\"/sub\"\n)\ndef\nread_sub\n():\nreturn\n{\n\"message\"\n:\n\"Hello World from sub API\"\n}\napp\n.\nmount\n(\n\"/subapi\"\n,\nsubapi\n)\nSub-application\n¶\nThen, create your sub-application, and its\npath operations\n.\nThis sub-application is just another standard FastAPI application, but this is the one that will be \"mounted\":\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/app\"\n)\ndef\nread_main\n():\nreturn\n{\n\"message\"\n:\n\"Hello World from main app\"\n}\nsubapi\n=\nFastAPI\n()\n@subapi\n.\nget\n(\n\"/sub\"\n)\ndef\nread_sub\n():\nreturn\n{\n\"message\"\n:\n\"Hello World from sub API\"\n}\napp\n.\nmount\n(\n\"/subapi\"\n,\nsubapi\n)\nMount the sub-application\n¶\nIn your top-level application,\napp\n, mount the sub-application,\nsubapi\n.\nIn this case, it will be mounted at the path\n/subapi\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/app\"\n)\ndef\nread_main\n():\nreturn\n{\n\"message\"\n:\n\"Hello World from main app\"\n}\nsubapi\n=\nFastAPI\n()\n@subapi\n.\nget\n(\n\"/sub\"\n)\ndef\nread_sub\n():\nreturn\n{\n\"message\"\n:\n\"Hello World from sub API\"\n}\napp\n.\nmount\n(\n\"/subapi\"\n,\nsubapi\n)\nCheck the automatic API docs\n¶\nNow, run the\nfastapi\ncommand with your file:\n$\nfastapi\ndev\nmain.py\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nAnd open the docs at\nhttp://127.0.0.1:8000/docs\n.\nYou will see the automatic API docs for the main app, including only its own\npath operations\n:\nAnd then, open the docs for the sub-application, at\nhttp://127.0.0.1:8000/subapi/docs\n.\nYou will see the automatic API docs for the sub-application, including only its own\npath operations\n, all under the correct sub-path prefix\n/subapi\n:\nIf you try interacting with any of the two user interfaces, they will work correctly, because the browser will be able to talk to each specific app or sub-app.\nTechnical Details:\nroot_path\n¶\nWhen you mount a sub-application as described above, FastAPI will take care of communicating the mount path for the sub-application using a mechanism from the ASGI specification called a\nroot_path\n.\nThat way, the sub-application will know to use that path prefix for the docs UI.\nAnd the sub-application could also have its own mounted sub-applications and everything would work correctly, because FastAPI handles all these\nroot_path\ns automatically.\nYou will learn more about the\nroot_path\nand how to use it explicitly in the section about\nBehind a Proxy\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/testing-events/",
    "title": "Testing Events: lifespan and startup - shutdown¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nFastAPI\nLearn\nAdvanced User Guide\nTesting Events: lifespan and startup - shutdown\n¶\nWhen you need\nlifespan\nto run in your tests, you can use the\nTestClient\nwith a\nwith\nstatement:\nPython 3.8+\nfrom\ncontextlib\nimport\nasynccontextmanager\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.testclient\nimport\nTestClient\nitems\n=\n{}\n@asynccontextmanager\nasync\ndef\nlifespan\n(\napp\n:\nFastAPI\n):\nitems\n[\n\"foo\"\n]\n=\n{\n\"name\"\n:\n\"Fighters\"\n}\nitems\n[\n\"bar\"\n]\n=\n{\n\"name\"\n:\n\"Tenders\"\n}\nyield\n# clean up items\nitems\n.\nclear\n()\napp\n=\nFastAPI\n(\nlifespan\n=\nlifespan\n)\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\ndef\ntest_read_items\n():\n# Before the lifespan starts, \"items\" is still empty\nassert\nitems\n==\n{}\nwith\nTestClient\n(\napp\n)\nas\nclient\n:\n# Inside the \"with TestClient\" block, the lifespan starts and items added\nassert\nitems\n==\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Fighters\"\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Tenders\"\n}}\nresponse\n=\nclient\n.\nget\n(\n\"/items/foo\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"name\"\n:\n\"Fighters\"\n}\n# After the requests is done, the items are still there\nassert\nitems\n==\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Fighters\"\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Tenders\"\n}}\n# The end of the \"with TestClient\" block simulates terminating the app, so\n# the lifespan ends and items are cleaned up\nassert\nitems\n==\n{}\nYou can read more details about the\n\"Running lifespan in tests in the official Starlette documentation site.\"\nFor the deprecated\nstartup\nand\nshutdown\nevents, you can use the\nTestClient\nas follows:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.testclient\nimport\nTestClient\napp\n=\nFastAPI\n()\nitems\n=\n{}\n@app\n.\non_event\n(\n\"startup\"\n)\nasync\ndef\nstartup_event\n():\nitems\n[\n\"foo\"\n]\n=\n{\n\"name\"\n:\n\"Fighters\"\n}\nitems\n[\n\"bar\"\n]\n=\n{\n\"name\"\n:\n\"Tenders\"\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\ndef\ntest_read_items\n():\nwith\nTestClient\n(\napp\n)\nas\nclient\n:\nresponse\n=\nclient\n.\nget\n(\n\"/items/foo\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"name\"\n:\n\"Fighters\"\n}\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/openapi-webhooks/",
    "title": "OpenAPI Webhooks¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nOpenAPI Webhooks\nTable of contents\nWebhooks steps\nDocumenting webhooks with\nFastAPI\nand OpenAPI\nAn app with webhooks\nCheck the docs\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nWebhooks steps\nDocumenting webhooks with\nFastAPI\nand OpenAPI\nAn app with webhooks\nCheck the docs\nFastAPI\nLearn\nAdvanced User Guide\nOpenAPI Webhooks\n¶\nThere are cases where you want to tell your API\nusers\nthat your app could call\ntheir\napp (sending a request) with some data, normally to\nnotify\nof some type of\nevent\n.\nThis means that instead of the normal process of your users sending requests to your API, it's\nyour API\n(or your app) that could\nsend requests to their system\n(to their API, their app).\nThis is normally called a\nwebhook\n.\nWebhooks steps\n¶\nThe process normally is that\nyou define\nin your code what is the message that you will send, the\nbody of the request\n.\nYou also define in some way at which\nmoments\nyour app will send those requests or events.\nAnd\nyour users\ndefine in some way (for example in a web dashboard somewhere) the\nURL\nwhere your app should send those requests.\nAll the\nlogic\nabout how to register the URLs for webhooks and the code to actually send those requests is up to you. You write it however you want to in\nyour own code\n.\nDocumenting webhooks with\nFastAPI\nand OpenAPI\n¶\nWith\nFastAPI\n, using OpenAPI, you can define the names of these webhooks, the types of HTTP operations that your app can send (e.g.\nPOST\n,\nPUT\n, etc.) and the request\nbodies\nthat your app would send.\nThis can make it a lot easier for your users to\nimplement their APIs\nto receive your\nwebhook\nrequests, they might even be able to autogenerate some of their own API code.\nInfo\nWebhooks are available in OpenAPI 3.1.0 and above, supported by FastAPI\n0.99.0\nand above.\nAn app with webhooks\n¶\nWhen you create a\nFastAPI\napplication, there is a\nwebhooks\nattribute that you can use to define\nwebhooks\n, the same way you would define\npath operations\n, for example with\n@app.webhooks.post()\n.\nPython 3.8+\nfrom\ndatetime\nimport\ndatetime\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nSubscription\n(\nBaseModel\n):\nusername\n:\nstr\nmonthly_fee\n:\nfloat\nstart_date\n:\ndatetime\n@app\n.\nwebhooks\n.\npost\n(\n\"new-subscription\"\n)\ndef\nnew_subscription\n(\nbody\n:\nSubscription\n):\n\"\"\"\nWhen a new user subscribes to your service we'll send you a POST request with this\ndata to the URL that you register for the event `new-subscription` in the dashboard.\n\"\"\"\n@app\n.\nget\n(\n\"/users/\"\n)\ndef\nread_users\n():\nreturn\n[\n\"Rick\"\n,\n\"Morty\"\n]\nThe webhooks that you define will end up in the\nOpenAPI\nschema and the automatic\ndocs UI\n.\nInfo\nThe\napp.webhooks\nobject is actually just an\nAPIRouter\n, the same type you would use when structuring your app with multiple files.\nNotice that with webhooks you are actually not declaring a\npath\n(like\n/items/\n), the text you pass there is just an\nidentifier\nof the webhook (the name of the event), for example in\n@app.webhooks.post(\"new-subscription\")\n, the webhook name is\nnew-subscription\n.\nThis is because it is expected that\nyour users\nwould define the actual\nURL path\nwhere they want to receive the webhook request in some other way (e.g. a web dashboard).\nCheck the docs\n¶\nNow you can start your app and go to\nhttp://127.0.0.1:8000/docs\n.\nYou will see your docs have the normal\npath operations\nand now also some\nwebhooks\n:\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/deployment/cloud/",
    "title": "Deploy FastAPI on Cloud Providers¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nDeploy FastAPI on Cloud Providers\nTable of contents\nCloud Providers - Sponsors\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nCloud Providers - Sponsors\nFastAPI\nLearn\nDeployment\nDeploy FastAPI on Cloud Providers\n¶\nYou can use virtually\nany cloud provider\nto deploy your FastAPI application.\nIn most of the cases, the main cloud providers have guides to deploy FastAPI with them.\nCloud Providers - Sponsors\n¶\nSome cloud providers ✨\nsponsor FastAPI\n✨, this ensures the continued and healthy\ndevelopment\nof FastAPI and its\necosystem\n.\nAnd it shows their true commitment to FastAPI and its\ncommunity\n(you), as they not only want to provide you a\ngood service\nbut also want to make sure you have a\ngood and healthy framework\n, FastAPI. 🙇\nYou might want to try their services and follow their guides:\nRender\nRailway\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/how-to/separate-openapi-schemas/",
    "title": "Separate OpenAPI Schemas for Input and Output or Not¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nSeparate OpenAPI Schemas for Input and Output or Not\nTable of contents\nPydantic Models for Input and Output\nModel for Input\nInput Model in Docs\nModel for Output\nModel for Output Response Data\nModel for Output in Docs\nModel for Input and Output in Docs\nDo not Separate Schemas\nSame Schema for Input and Output Models in Docs\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nPydantic Models for Input and Output\nModel for Input\nInput Model in Docs\nModel for Output\nModel for Output Response Data\nModel for Output in Docs\nModel for Input and Output in Docs\nDo not Separate Schemas\nSame Schema for Input and Output Models in Docs\nFastAPI\nLearn\nHow To - Recipes\nSeparate OpenAPI Schemas for Input and Output or Not\n¶\nWhen using\nPydantic v2\n, the generated OpenAPI is a bit more exact and\ncorrect\nthan before. 😎\nIn fact, in some cases, it will even have\ntwo JSON Schemas\nin OpenAPI for the same Pydantic model, for input and output, depending on if they have\ndefault values\n.\nLet's see how that works and how to change it if you need to do that.\nPydantic Models for Input and Output\n¶\nLet's say you have a Pydantic model with default values, like this one:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n()\n->\nlist\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\ndescription\n=\n\"Device to travel through the multi-rick-verse\"\n,\n),\nItem\n(\nname\n=\n\"Plumbus\"\n),\n]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nOptional\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nOptional\n[\nstr\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n()\n->\nlist\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\ndescription\n=\n\"Device to travel through the multi-rick-verse\"\n,\n),\nItem\n(\nname\n=\n\"Plumbus\"\n),\n]\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n()\n->\nList\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\ndescription\n=\n\"Device to travel through the multi-rick-verse\"\n,\n),\nItem\n(\nname\n=\n\"Plumbus\"\n),\n]\nModel for Input\n¶\nIf you use this model as an input like here:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n()\n->\nlist\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\ndescription\n=\n\"Device to travel through the multi-rick-verse\"\n,\n),\nItem\n(\nname\n=\n\"Plumbus\"\n),\n]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nOptional\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nOptional\n[\nstr\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n()\n->\nlist\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\ndescription\n=\n\"Device to travel through the multi-rick-verse\"\n,\n),\nItem\n(\nname\n=\n\"Plumbus\"\n),\n]\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n()\n->\nList\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\ndescription\n=\n\"Device to travel through the multi-rick-verse\"\n,\n),\nItem\n(\nname\n=\n\"Plumbus\"\n),\n]\n...then the\ndescription\nfield will\nnot be required\n. Because it has a default value of\nNone\n.\nInput Model in Docs\n¶\nYou can confirm that in the docs, the\ndescription\nfield doesn't have a\nred asterisk\n, it's not marked as required:\nModel for Output\n¶\nBut if you use the same model as an output, like here:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n()\n->\nlist\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\ndescription\n=\n\"Device to travel through the multi-rick-verse\"\n,\n),\nItem\n(\nname\n=\n\"Plumbus\"\n),\n]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nOptional\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nOptional\n[\nstr\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n()\n->\nlist\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\ndescription\n=\n\"Device to travel through the multi-rick-verse\"\n,\n),\nItem\n(\nname\n=\n\"Plumbus\"\n),\n]\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n()\n->\nList\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\ndescription\n=\n\"Device to travel through the multi-rick-verse\"\n,\n),\nItem\n(\nname\n=\n\"Plumbus\"\n),\n]\n...then because\ndescription\nhas a default value, if you\ndon't return anything\nfor that field, it will still have that\ndefault value\n.\nModel for Output Response Data\n¶\nIf you interact with the docs and check the response, even though the code didn't add anything in one of the\ndescription\nfields, the JSON response contains the default value (\nnull\n):\nThis means that it will\nalways have a value\n, it's just that sometimes the value could be\nNone\n(or\nnull\nin JSON).\nThat means that, clients using your API don't have to check if the value exists or not, they can\nassume the field will always be there\n, but just that in some cases it will have the default value of\nNone\n.\nThe way to describe this in OpenAPI, is to mark that field as\nrequired\n, because it will always be there.\nBecause of that, the JSON Schema for a model can be different depending on if it's used for\ninput or output\n:\nfor\ninput\nthe\ndescription\nwill\nnot be required\nfor\noutput\nit will be\nrequired\n(and possibly\nNone\n, or in JSON terms,\nnull\n)\nModel for Output in Docs\n¶\nYou can check the output model in the docs too,\nboth\nname\nand\ndescription\nare marked as\nrequired\nwith a\nred asterisk\n:\nModel for Input and Output in Docs\n¶\nAnd if you check all the available Schemas (JSON Schemas) in OpenAPI, you will see that there are two, one\nItem-Input\nand one\nItem-Output\n.\nFor\nItem-Input\n,\ndescription\nis\nnot required\n, it doesn't have a red asterisk.\nBut for\nItem-Output\n,\ndescription\nis\nrequired\n, it has a red asterisk.\nWith this feature from\nPydantic v2\n, your API documentation is more\nprecise\n, and if you have autogenerated clients and SDKs, they will be more precise too, with a better\ndeveloper experience\nand consistency. 🎉\nDo not Separate Schemas\n¶\nNow, there are some cases where you might want to have the\nsame schema for input and output\n.\nProbably the main use case for this is if you already have some autogenerated client code/SDKs and you don't want to update all the autogenerated client code/SDKs yet, you probably will want to do it at some point, but maybe not right now.\nIn that case, you can disable this feature in\nFastAPI\n, with the parameter\nseparate_input_output_schemas=False\n.\nInfo\nSupport for\nseparate_input_output_schemas\nwas added in FastAPI\n0.102.0\n. 🤓\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n(\nseparate_input_output_schemas\n=\nFalse\n)\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n()\n->\nlist\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\ndescription\n=\n\"Device to travel through the multi-rick-verse\"\n,\n),\nItem\n(\nname\n=\n\"Plumbus\"\n),\n]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nOptional\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nOptional\n[\nstr\n]\n=\nNone\napp\n=\nFastAPI\n(\nseparate_input_output_schemas\n=\nFalse\n)\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n()\n->\nlist\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\ndescription\n=\n\"Device to travel through the multi-rick-verse\"\n,\n),\nItem\n(\nname\n=\n\"Plumbus\"\n),\n]\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n(\nseparate_input_output_schemas\n=\nFalse\n)\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n()\n->\nList\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\ndescription\n=\n\"Device to travel through the multi-rick-verse\"\n,\n),\nItem\n(\nname\n=\n\"Plumbus\"\n),\n]\nSame Schema for Input and Output Models in Docs\n¶\nAnd now there will be one single schema for input and output for the model, only\nItem\n, and it will have\ndescription\nas\nnot required\n:\nThis is the same behavior as in Pydantic v1. 🤓\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/fastapi/",
    "title": "FastAPIclass¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nFastAPI\nclass\nTable of contents\nFastAPI\nExample\nopenapi_version\nwebhooks\nstate\ndependency_overrides\nopenapi\nwebsocket\ninclude_router\nExample\nget\nExample\nput\nExample\npost\nExample\ndelete\nExample\noptions\nExample\nhead\nExample\npatch\nExample\ntrace\nExample\non_event\nmiddleware\nExample\nexception_handler\nExample\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nFastAPI\nExample\nopenapi_version\nwebhooks\nstate\ndependency_overrides\nopenapi\nwebsocket\ninclude_router\nExample\nget\nExample\nput\nExample\npost\nExample\ndelete\nExample\noptions\nExample\nhead\nExample\npatch\nExample\ntrace\nExample\non_event\nmiddleware\nExample\nexception_handler\nExample\nFastAPI\nReference\nFastAPI\nclass\n¶\nHere's the reference information for the\nFastAPI\nclass, with all its parameters, attributes and methods.\nYou can import the\nFastAPI\nclass directly from\nfastapi\n:\nfrom\nfastapi\nimport\nFastAPI\nfastapi.FastAPI\n¶\nFastAPI\n(\n*\n,\ndebug\n=\nFalse\n,\nroutes\n=\nNone\n,\ntitle\n=\n\"FastAPI\"\n,\nsummary\n=\nNone\n,\ndescription\n=\n\"\"\n,\nversion\n=\n\"0.1.0\"\n,\nopenapi_url\n=\n\"/openapi.json\"\n,\nopenapi_tags\n=\nNone\n,\nservers\n=\nNone\n,\ndependencies\n=\nNone\n,\ndefault_response_class\n=\nDefault\n(\nJSONResponse\n),\nredirect_slashes\n=\nTrue\n,\ndocs_url\n=\n\"/docs\"\n,\nredoc_url\n=\n\"/redoc\"\n,\nswagger_ui_oauth2_redirect_url\n=\n\"/docs/oauth2-redirect\"\n,\nswagger_ui_init_oauth\n=\nNone\n,\nmiddleware\n=\nNone\n,\nexception_handlers\n=\nNone\n,\non_startup\n=\nNone\n,\non_shutdown\n=\nNone\n,\nlifespan\n=\nNone\n,\nterms_of_service\n=\nNone\n,\ncontact\n=\nNone\n,\nlicense_info\n=\nNone\n,\nopenapi_prefix\n=\n\"\"\n,\nroot_path\n=\n\"\"\n,\nroot_path_in_servers\n=\nTrue\n,\nresponses\n=\nNone\n,\ncallbacks\n=\nNone\n,\nwebhooks\n=\nNone\n,\ndeprecated\n=\nNone\n,\ninclude_in_schema\n=\nTrue\n,\nswagger_ui_parameters\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n),\nseparate_input_output_schemas\n=\nTrue\n,\nopenapi_external_docs\n=\nNone\n,\n**\nextra\n)\nBases:\nStarlette\nFastAPI\napp class, the main entrypoint to use FastAPI.\nRead more in the\nFastAPI docs for First Steps\n.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\nPARAMETER\nDESCRIPTION\ndebug\nBoolean indicating if debug tracebacks should be returned on server\nerrors.\nRead more in the\nStarlette docs for Applications\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nroutes\nNote\n: you probably shouldn't use this parameter, it is inherited\nfrom Starlette and supported for compatibility.\nA list of routes to serve incoming HTTP and WebSocket requests.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\ntitle\nThe title of the API.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more in the\nFastAPI docs for Metadata and Docs URLs\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\ntitle\n=\n\"ChimichangApp\"\n)\nTYPE:\nstr\nDEFAULT:\n'FastAPI'\nsummary\nA short summary of the API.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more in the\nFastAPI docs for Metadata and Docs URLs\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\nsummary\n=\n\"Deadpond's favorite app. Nuff said.\"\n)\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description of the API. Supports Markdown (using\nCommonMark syntax\n).\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more in the\nFastAPI docs for Metadata and Docs URLs\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\ndescription\n=\n\"\"\"\nChimichangApp API helps you do awesome stuff. 🚀\n## Items\nYou can **read items**.\n## Users\nYou will be able to:\n* **Create users** (_not implemented_).\n* **Read users** (_not implemented_).\n\"\"\"\n)\nTYPE:\nstr\nDEFAULT:\n''\nversion\nThe version of the API.\nNote\nThis is the version of your application, not the version of\nthe OpenAPI specification nor the version of FastAPI being used.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more in the\nFastAPI docs for Metadata and Docs URLs\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\nversion\n=\n\"0.0.1\"\n)\nTYPE:\nstr\nDEFAULT:\n'0.1.0'\nopenapi_url\nThe URL where the OpenAPI schema will be served from.\nIf you set it to\nNone\n, no OpenAPI schema will be served publicly, and\nthe default automatic endpoints\n/docs\nand\n/redoc\nwill also be\ndisabled.\nRead more in the\nFastAPI docs for Metadata and Docs URLs\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\nopenapi_url\n=\n\"/api/v1/openapi.json\"\n)\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\n'/openapi.json'\nopenapi_tags\nA list of tags used by OpenAPI, these are the same\ntags\nyou can set\nin the\npath operations\n, like:\n@app.get(\"/users/\", tags=[\"users\"])\n@app.get(\"/items/\", tags=[\"items\"])\nThe order of the tags can be used to specify the order shown in\ntools like Swagger UI, used in the automatic path\n/docs\n.\nIt's not required to specify all the tags used.\nThe tags that are not declared MAY be organized randomly or based\non the tools' logic. Each tag name in the list MUST be unique.\nThe value of each item is a\ndict\ncontaining:\nname\n: The name of the tag.\ndescription\n: A short description of the tag.\nCommonMark syntax\nMAY be used for rich\n    text representation.\nexternalDocs\n: Additional external documentation for this tag. If\n    provided, it would contain a\ndict\nwith:\ndescription\n: A short description of the target documentation.\nCommonMark syntax\nMAY be used for\n    rich text representation.\nurl\n: The URL for the target documentation. Value MUST be in\n    the form of a URL.\nRead more in the\nFastAPI docs for Metadata and Docs URLs\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\ntags_metadata\n=\n[\n{\n\"name\"\n:\n\"users\"\n,\n\"description\"\n:\n\"Operations with users. The **login** logic is also here.\"\n,\n},\n{\n\"name\"\n:\n\"items\"\n,\n\"description\"\n:\n\"Manage items. So _fancy_ they have their own docs.\"\n,\n\"externalDocs\"\n:\n{\n\"description\"\n:\n\"Items external docs\"\n,\n\"url\"\n:\n\"https://fastapi.tiangolo.com/\"\n,\n},\n},\n]\napp\n=\nFastAPI\n(\nopenapi_tags\n=\ntags_metadata\n)\nTYPE:\nOptional\n[\nList\n[\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\nservers\nA\nlist\nof\ndict\ns with connectivity information to a target server.\nYou would use it, for example, if your application is served from\ndifferent domains and you want to use the same Swagger UI in the\nbrowser to interact with each of them (instead of having multiple\nbrowser tabs open). Or if you want to leave fixed the possible URLs.\nIf the servers\nlist\nis not provided, or is an empty\nlist\n, the\ndefault value would be a\ndict\nwith a\nurl\nvalue of\n/\n.\nEach item in the\nlist\nis a\ndict\ncontaining:\nurl\n: A URL to the target host. This URL supports Server Variables\nand MAY be relative, to indicate that the host location is relative\nto the location where the OpenAPI document is being served. Variable\nsubstitutions will be made when a variable is named in\n{\nbrackets\n}\n.\ndescription\n: An optional string describing the host designated by\nthe URL.\nCommonMark syntax\nMAY be used for\nrich text representation.\nvariables\n: A\ndict\nbetween a variable name and its value. The value\n    is used for substitution in the server's URL template.\nRead more in the\nFastAPI docs for Behind a Proxy\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\nservers\n=\n[\n{\n\"url\"\n:\n\"https://stag.example.com\"\n,\n\"description\"\n:\n\"Staging environment\"\n},\n{\n\"url\"\n:\n\"https://prod.example.com\"\n,\n\"description\"\n:\n\"Production environment\"\n},\n]\n)\nTYPE:\nOptional\n[\nList\n[\nDict\n[\nstr\n,\nUnion\n[\nstr\n,\nAny\n]]]]\nDEFAULT:\nNone\ndependencies\nA list of global dependencies, they will be applied to each\npath operation\n, including in sub-routers.\nRead more about it in the\nFastAPI docs for Global Dependencies\n.\nExample\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\n.dependencies\nimport\nfunc_dep_1\n,\nfunc_dep_2\napp\n=\nFastAPI\n(\ndependencies\n=\n[\nDepends\n(\nfunc_dep_1\n),\nDepends\n(\nfunc_dep_2\n)])\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\ndefault_response_class\nThe default response class to be used.\nRead more in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nORJSONResponse\napp\n=\nFastAPI\n(\ndefault_response_class\n=\nORJSONResponse\n)\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nredirect_slashes\nWhether to detect and redirect slashes in URLs when the client doesn't\nuse the same format.\nExample\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\nredirect_slashes\n=\nTrue\n)\n# the default\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n}]\nWith this app, if a client goes to\n/items\n(without a trailing slash),\nthey will be automatically redirected with an HTTP status code of 307\nto\n/items/\n.\nTYPE:\nbool\nDEFAULT:\nTrue\ndocs_url\nThe path to the automatic interactive API documentation.\nIt is handled in the browser by Swagger UI.\nThe default URL is\n/docs\n. You can disable it by setting it to\nNone\n.\nIf\nopenapi_url\nis set to\nNone\n, this will be automatically disabled.\nRead more in the\nFastAPI docs for Metadata and Docs URLs\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\ndocs_url\n=\n\"/documentation\"\n,\nredoc_url\n=\nNone\n)\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\n'/docs'\nredoc_url\nThe path to the alternative automatic interactive API documentation\nprovided by ReDoc.\nThe default URL is\n/redoc\n. You can disable it by setting it to\nNone\n.\nIf\nopenapi_url\nis set to\nNone\n, this will be automatically disabled.\nRead more in the\nFastAPI docs for Metadata and Docs URLs\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\ndocs_url\n=\n\"/documentation\"\n,\nredoc_url\n=\n\"redocumentation\"\n)\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\n'/redoc'\nswagger_ui_oauth2_redirect_url\nThe OAuth2 redirect endpoint for the Swagger UI.\nBy default it is\n/docs/oauth2-redirect\n.\nThis is only used if you use OAuth2 (with the \"Authorize\" button)\nwith Swagger UI.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\n'/docs/oauth2-redirect'\nswagger_ui_init_oauth\nOAuth2 configuration for the Swagger UI, by default shown at\n/docs\n.\nRead more about the available configuration options in the\nSwagger UI docs\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\nmiddleware\nList of middleware to be added when creating the application.\nIn FastAPI you would normally do this with\napp.add_middleware()\ninstead.\nRead more in the\nFastAPI docs for Middleware\n.\nTYPE:\nOptional\n[\nSequence\n[\nMiddleware\n]]\nDEFAULT:\nNone\nexception_handlers\nA dictionary with handlers for exceptions.\nIn FastAPI, you would normally use the decorator\n@app.exception_handler()\n.\nRead more in the\nFastAPI docs for Handling Errors\n.\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nType\n[\nException\n]],\nCallable\n[[\nRequest\n,\nAny\n],\nCoroutine\n[\nAny\n,\nAny\n,\nResponse\n]]]]\nDEFAULT:\nNone\non_startup\nA list of startup event handler functions.\nYou should instead use the\nlifespan\nhandlers.\nRead more in the\nFastAPI docs for\nlifespan\n.\nTYPE:\nOptional\n[\nSequence\n[\nCallable\n[[],\nAny\n]]]\nDEFAULT:\nNone\non_shutdown\nA list of shutdown event handler functions.\nYou should instead use the\nlifespan\nhandlers.\nRead more in the\nFastAPI docs for\nlifespan\n.\nTYPE:\nOptional\n[\nSequence\n[\nCallable\n[[],\nAny\n]]]\nDEFAULT:\nNone\nlifespan\nA\nLifespan\ncontext manager handler. This replaces\nstartup\nand\nshutdown\nfunctions with a single context manager.\nRead more in the\nFastAPI docs for\nlifespan\n.\nTYPE:\nOptional\n[\nLifespan\n[\nAppType\n]]\nDEFAULT:\nNone\nterms_of_service\nA URL to the Terms of Service for your API.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more at the\nFastAPI docs for Metadata and Docs URLs\n.\nExample\napp\n=\nFastAPI\n(\nterms_of_service\n=\n\"http://example.com/terms/\"\n)\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncontact\nA dictionary with the contact information for the exposed API.\nIt can contain several fields.\nname\n: (\nstr\n) The name of the contact person/organization.\nurl\n: (\nstr\n) A URL pointing to the contact information. MUST be in\n    the format of a URL.\nemail\n: (\nstr\n) The email address of the contact person/organization.\n    MUST be in the format of an email address.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more at the\nFastAPI docs for Metadata and Docs URLs\n.\nExample\napp\n=\nFastAPI\n(\ncontact\n=\n{\n\"name\"\n:\n\"Deadpoolio the Amazing\"\n,\n\"url\"\n:\n\"http://x-force.example.com/contact/\"\n,\n\"email\"\n:\n\"dp@x-force.example.com\"\n,\n}\n)\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nUnion\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\nlicense_info\nA dictionary with the license information for the exposed API.\nIt can contain several fields.\nname\n: (\nstr\n)\nREQUIRED\n(if a\nlicense_info\nis set). The\n    license name used for the API.\nidentifier\n: (\nstr\n) An\nSPDX\nlicense expression\n    for the API. The\nidentifier\nfield is mutually exclusive of the\nurl\nfield. Available since OpenAPI 3.1.0, FastAPI 0.99.0.\nurl\n: (\nstr\n) A URL to the license used for the API. This MUST be\n    the format of a URL.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more at the\nFastAPI docs for Metadata and Docs URLs\n.\nExample\napp\n=\nFastAPI\n(\nlicense_info\n=\n{\n\"name\"\n:\n\"Apache 2.0\"\n,\n\"url\"\n:\n\"https://www.apache.org/licenses/LICENSE-2.0.html\"\n,\n}\n)\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nUnion\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\nopenapi_prefix\nA URL prefix for the OpenAPI URL.\nTYPE:\nstr\nDEFAULT:\n''\nroot_path\nA path prefix handled by a proxy that is not seen by the application\nbut is seen by external clients, which affects things like Swagger UI.\nRead more about it at the\nFastAPI docs for Behind a Proxy\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\nroot_path\n=\n\"/api/v1\"\n)\nTYPE:\nstr\nDEFAULT:\n''\nroot_path_in_servers\nTo disable automatically generating the URLs in the\nservers\nfield\nin the autogenerated OpenAPI using the\nroot_path\n.\nRead more about it in the\nFastAPI docs for Behind a Proxy\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\nroot_path_in_servers\n=\nFalse\n)\nTYPE:\nbool\nDEFAULT:\nTrue\nresponses\nAdditional responses to be shown in OpenAPI.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Additional Responses in OpenAPI\n.\nAnd in the\nFastAPI docs for Bigger Applications\n.\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ncallbacks\nOpenAPI callbacks that should apply to all\npath operations\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nwebhooks\nAdd OpenAPI webhooks. This is similar to\ncallbacks\nbut it doesn't\ndepend on specific\npath operations\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nNote\n: This is available since OpenAPI 3.1.0, FastAPI 0.99.0.\nRead more about it in the\nFastAPI docs for OpenAPI Webhooks\n.\nTYPE:\nOptional\n[\nAPIRouter\n]\nDEFAULT:\nNone\ndeprecated\nMark all\npath operations\nas deprecated. You probably don't need it,\nbut it's available.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\ninclude_in_schema\nTo include (or not) all the\npath operations\nin the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nswagger_ui_parameters\nParameters to configure Swagger UI, the autogenerated interactive API\ndocumentation (by default at\n/docs\n).\nRead more about it in the\nFastAPI docs about how to Configure Swagger UI\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nseparate_input_output_schemas\nWhether to generate separate OpenAPI schemas for request body and\nresponse body when the results would be more precise.\nThis is particularly useful when automatically generating clients.\nFor example, if you have a model like:\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nWhen\nItem\nis used for input, a request body,\ntags\nis not required,\nthe client doesn't have to provide it.\nBut when using\nItem\nfor output, for a response body,\ntags\nis always\navailable because it has a default value, even if it's just an empty\nlist. So, the client should be able to always expect it.\nIn this case, there would be two different schemas, one for input and\nanother one for output.\nTYPE:\nbool\nDEFAULT:\nTrue\nopenapi_external_docs\nThis field allows you to provide additional external documentation links.\nIf provided, it must be a dictionary containing:\ndescription\n: A brief description of the external documentation.\nurl\n: The URL pointing to the external documentation. The value\nMUST\nbe a valid URL format.\nExample\n:\nfrom\nfastapi\nimport\nFastAPI\nexternal_docs\n=\n{\n\"description\"\n:\n\"Detailed API Reference\"\n,\n\"url\"\n:\n\"https://example.com/api-docs\"\n,\n}\napp\n=\nFastAPI\n(\nopenapi_external_docs\n=\nexternal_docs\n)\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\n**extra\nExtra keyword arguments to be stored in the app, not used by FastAPI\nanywhere.\nTYPE:\nAny\nDEFAULT:\n{}\nSource code in\nfastapi/applications.py\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956\n957\n958\n959\n960\n961\n962\n963\n964\n965\n966\n967\n968\n969\n970\n971\n972\n973\n974\n975\n976\n977\n978\n979\n980\n981\n982\n983\n984\n985\n986\n987\n988\n989\n990\n991\n992\n993\n994\ndef\n__init__\n(\nself\n:\nAppType\n,\n*\n,\ndebug\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBoolean indicating if debug tracebacks should be returned on server\nerrors.\nRead more in the\n[Starlette docs for Applications](https://www.starlette.dev/applications/#instantiating-the-application).\n\"\"\"\n),\n]\n=\nFalse\n,\nroutes\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\n**Note**: you probably shouldn't use this parameter, it is inherited\nfrom Starlette and supported for compatibility.\n---\nA list of routes to serve incoming HTTP and WebSocket requests.\n\"\"\"\n),\ndeprecated\n(\n\"\"\"\nYou normally wouldn't use this parameter with FastAPI, it is inherited\nfrom Starlette and supported for compatibility.\nIn FastAPI, you normally would use the *path operation methods*,\nlike `app.get()`, `app.post()`, etc.\n\"\"\"\n),\n]\n=\nNone\n,\ntitle\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe title of the API.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more in the\n[FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n**Example**\n```python\nfrom fastapi import FastAPI\napp = FastAPI(title=\"ChimichangApp\")\n```\n\"\"\"\n),\n]\n=\n\"FastAPI\"\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA short summary of the API.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more in the\n[FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n**Example**\n```python\nfrom fastapi import FastAPI\napp = FastAPI(summary=\"Deadpond's favorite app. Nuff said.\")\n```\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n'''\nA description of the API. Supports Markdown (using\n[CommonMark syntax](https://commonmark.org/)).\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more in the\n[FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n**Example**\n```python\nfrom fastapi import FastAPI\napp = FastAPI(\ndescription=\"\"\"\nChimichangApp API helps you do awesome stuff. 🚀\n## Items\nYou can **read items**.\n## Users\nYou will be able to:\n* **Create users** (_not implemented_).\n* **Read users** (_not implemented_).\n\"\"\"\n)\n```\n'''\n),\n]\n=\n\"\"\n,\nversion\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe version of the API.\n**Note** This is the version of your application, not the version of\nthe OpenAPI specification nor the version of FastAPI being used.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more in the\n[FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n**Example**\n```python\nfrom fastapi import FastAPI\napp = FastAPI(version=\"0.0.1\")\n```\n\"\"\"\n),\n]\n=\n\"0.1.0\"\n,\nopenapi_url\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nThe URL where the OpenAPI schema will be served from.\nIf you set it to `None`, no OpenAPI schema will be served publicly, and\nthe default automatic endpoints `/docs` and `/redoc` will also be\ndisabled.\nRead more in the\n[FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#openapi-url).\n**Example**\n```python\nfrom fastapi import FastAPI\napp = FastAPI(openapi_url=\"/api/v1/openapi.json\")\n```\n\"\"\"\n),\n]\n=\n\"/openapi.json\"\n,\nopenapi_tags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nA list of tags used by OpenAPI, these are the same `tags` you can set\nin the *path operations*, like:\n* `@app.get(\"/users/\", tags=[\"users\"])`\n* `@app.get(\"/items/\", tags=[\"items\"])`\nThe order of the tags can be used to specify the order shown in\ntools like Swagger UI, used in the automatic path `/docs`.\nIt's not required to specify all the tags used.\nThe tags that are not declared MAY be organized randomly or based\non the tools' logic. Each tag name in the list MUST be unique.\nThe value of each item is a `dict` containing:\n* `name`: The name of the tag.\n* `description`: A short description of the tag.\n[CommonMark syntax](https://commonmark.org/) MAY be used for rich\ntext representation.\n* `externalDocs`: Additional external documentation for this tag. If\nprovided, it would contain a `dict` with:\n* `description`: A short description of the target documentation.\n[CommonMark syntax](https://commonmark.org/) MAY be used for\nrich text representation.\n* `url`: The URL for the target documentation. Value MUST be in\nthe form of a URL.\nRead more in the\n[FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-tags).\n**Example**\n```python\nfrom fastapi import FastAPI\ntags_metadata = [\n{\n\"name\": \"users\",\n\"description\": \"Operations with users. The **login** logic is also here.\",\n},\n{\n\"name\": \"items\",\n\"description\": \"Manage items. So _fancy_ they have their own docs.\",\n\"externalDocs\": {\n\"description\": \"Items external docs\",\n\"url\": \"https://fastapi.tiangolo.com/\",\n},\n},\n]\napp = FastAPI(openapi_tags=tags_metadata)\n```\n\"\"\"\n),\n]\n=\nNone\n,\nservers\n:\nAnnotated\n[\nOptional\n[\nList\n[\nDict\n[\nstr\n,\nUnion\n[\nstr\n,\nAny\n]]]],\nDoc\n(\n\"\"\"\nA `list` of `dict`s with connectivity information to a target server.\nYou would use it, for example, if your application is served from\ndifferent domains and you want to use the same Swagger UI in the\nbrowser to interact with each of them (instead of having multiple\nbrowser tabs open). Or if you want to leave fixed the possible URLs.\nIf the servers `list` is not provided, or is an empty `list`, the\ndefault value would be a `dict` with a `url` value of `/`.\nEach item in the `list` is a `dict` containing:\n* `url`: A URL to the target host. This URL supports Server Variables\nand MAY be relative, to indicate that the host location is relative\nto the location where the OpenAPI document is being served. Variable\nsubstitutions will be made when a variable is named in `{`brackets`}`.\n* `description`: An optional string describing the host designated by\nthe URL. [CommonMark syntax](https://commonmark.org/) MAY be used for\nrich text representation.\n* `variables`: A `dict` between a variable name and its value. The value\nis used for substitution in the server's URL template.\nRead more in the\n[FastAPI docs for Behind a Proxy](https://fastapi.tiangolo.com/advanced/behind-a-proxy/#additional-servers).\n**Example**\n```python\nfrom fastapi import FastAPI\napp = FastAPI(\nservers=[\n{\"url\": \"https://stag.example.com\", \"description\": \"Staging environment\"},\n{\"url\": \"https://prod.example.com\", \"description\": \"Production environment\"},\n]\n)\n```\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of global dependencies, they will be applied to each\n*path operation*, including in sub-routers.\nRead more about it in the\n[FastAPI docs for Global Dependencies](https://fastapi.tiangolo.com/tutorial/dependencies/global-dependencies/).\n**Example**\n```python\nfrom fastapi import Depends, FastAPI\nfrom .dependencies import func_dep_1, func_dep_2\napp = FastAPI(dependencies=[Depends(func_dep_1), Depends(func_dep_2)])\n```\n\"\"\"\n),\n]\n=\nNone\n,\ndefault_response_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nThe default response class to be used.\nRead more in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#default-response-class).\n**Example**\n```python\nfrom fastapi import FastAPI\nfrom fastapi.responses import ORJSONResponse\napp = FastAPI(default_response_class=ORJSONResponse)\n```\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nredirect_slashes\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nWhether to detect and redirect slashes in URLs when the client doesn't\nuse the same format.\n**Example**\n```python\nfrom fastapi import FastAPI\napp = FastAPI(redirect_slashes=True)  # the default\n@app.get(\"/items/\")\nasync def read_items():\nreturn [{\"item_id\": \"Foo\"}]\n```\nWith this app, if a client goes to `/items` (without a trailing slash),\nthey will be automatically redirected with an HTTP status code of 307\nto `/items/`.\n\"\"\"\n),\n]\n=\nTrue\n,\ndocs_url\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nThe path to the automatic interactive API documentation.\nIt is handled in the browser by Swagger UI.\nThe default URL is `/docs`. You can disable it by setting it to `None`.\nIf `openapi_url` is set to `None`, this will be automatically disabled.\nRead more in the\n[FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#docs-urls).\n**Example**\n```python\nfrom fastapi import FastAPI\napp = FastAPI(docs_url=\"/documentation\", redoc_url=None)\n```\n\"\"\"\n),\n]\n=\n\"/docs\"\n,\nredoc_url\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nThe path to the alternative automatic interactive API documentation\nprovided by ReDoc.\nThe default URL is `/redoc`. You can disable it by setting it to `None`.\nIf `openapi_url` is set to `None`, this will be automatically disabled.\nRead more in the\n[FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#docs-urls).\n**Example**\n```python\nfrom fastapi import FastAPI\napp = FastAPI(docs_url=\"/documentation\", redoc_url=\"redocumentation\")\n```\n\"\"\"\n),\n]\n=\n\"/redoc\"\n,\nswagger_ui_oauth2_redirect_url\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nThe OAuth2 redirect endpoint for the Swagger UI.\nBy default it is `/docs/oauth2-redirect`.\nThis is only used if you use OAuth2 (with the \"Authorize\" button)\nwith Swagger UI.\n\"\"\"\n),\n]\n=\n\"/docs/oauth2-redirect\"\n,\nswagger_ui_init_oauth\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nOAuth2 configuration for the Swagger UI, by default shown at `/docs`.\nRead more about the available configuration options in the\n[Swagger UI docs](https://swagger.io/docs/open-source-tools/swagger-ui/usage/oauth2/).\n\"\"\"\n),\n]\n=\nNone\n,\nmiddleware\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nMiddleware\n]],\nDoc\n(\n\"\"\"\nList of middleware to be added when creating the application.\nIn FastAPI you would normally do this with `app.add_middleware()`\ninstead.\nRead more in the\n[FastAPI docs for Middleware](https://fastapi.tiangolo.com/tutorial/middleware/).\n\"\"\"\n),\n]\n=\nNone\n,\nexception_handlers\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nType\n[\nException\n]],\nCallable\n[[\nRequest\n,\nAny\n],\nCoroutine\n[\nAny\n,\nAny\n,\nResponse\n]],\n]\n],\nDoc\n(\n\"\"\"\nA dictionary with handlers for exceptions.\nIn FastAPI, you would normally use the decorator\n`@app.exception_handler()`.\nRead more in the\n[FastAPI docs for Handling Errors](https://fastapi.tiangolo.com/tutorial/handling-errors/).\n\"\"\"\n),\n]\n=\nNone\n,\non_startup\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nCallable\n[[],\nAny\n]]],\nDoc\n(\n\"\"\"\nA list of startup event handler functions.\nYou should instead use the `lifespan` handlers.\nRead more in the [FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).\n\"\"\"\n),\n]\n=\nNone\n,\non_shutdown\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nCallable\n[[],\nAny\n]]],\nDoc\n(\n\"\"\"\nA list of shutdown event handler functions.\nYou should instead use the `lifespan` handlers.\nRead more in the\n[FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).\n\"\"\"\n),\n]\n=\nNone\n,\nlifespan\n:\nAnnotated\n[\nOptional\n[\nLifespan\n[\nAppType\n]],\nDoc\n(\n\"\"\"\nA `Lifespan` context manager handler. This replaces `startup` and\n`shutdown` functions with a single context manager.\nRead more in the\n[FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).\n\"\"\"\n),\n]\n=\nNone\n,\nterms_of_service\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA URL to the Terms of Service for your API.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more at the\n[FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n**Example**\n```python\napp = FastAPI(terms_of_service=\"http://example.com/terms/\")\n```\n\"\"\"\n),\n]\n=\nNone\n,\ncontact\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nUnion\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nA dictionary with the contact information for the exposed API.\nIt can contain several fields.\n* `name`: (`str`) The name of the contact person/organization.\n* `url`: (`str`) A URL pointing to the contact information. MUST be in\nthe format of a URL.\n* `email`: (`str`) The email address of the contact person/organization.\nMUST be in the format of an email address.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more at the\n[FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n**Example**\n```python\napp = FastAPI(\ncontact={\n\"name\": \"Deadpoolio the Amazing\",\n\"url\": \"http://x-force.example.com/contact/\",\n\"email\": \"dp@x-force.example.com\",\n}\n)\n```\n\"\"\"\n),\n]\n=\nNone\n,\nlicense_info\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nUnion\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nA dictionary with the license information for the exposed API.\nIt can contain several fields.\n* `name`: (`str`) **REQUIRED** (if a `license_info` is set). The\nlicense name used for the API.\n* `identifier`: (`str`) An [SPDX](https://spdx.dev/) license expression\nfor the API. The `identifier` field is mutually exclusive of the `url`\nfield. Available since OpenAPI 3.1.0, FastAPI 0.99.0.\n* `url`: (`str`) A URL to the license used for the API. This MUST be\nthe format of a URL.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more at the\n[FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n**Example**\n```python\napp = FastAPI(\nlicense_info={\n\"name\": \"Apache 2.0\",\n\"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\",\n}\n)\n```\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_prefix\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nA URL prefix for the OpenAPI URL.\n\"\"\"\n),\ndeprecated\n(\n\"\"\"\n\"openapi_prefix\" has been deprecated in favor of \"root_path\", which\nfollows more closely the ASGI standard, is simpler, and more\nautomatic.\n\"\"\"\n),\n]\n=\n\"\"\n,\nroot_path\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nA path prefix handled by a proxy that is not seen by the application\nbut is seen by external clients, which affects things like Swagger UI.\nRead more about it at the\n[FastAPI docs for Behind a Proxy](https://fastapi.tiangolo.com/advanced/behind-a-proxy/).\n**Example**\n```python\nfrom fastapi import FastAPI\napp = FastAPI(root_path=\"/api/v1\")\n```\n\"\"\"\n),\n]\n=\n\"\"\n,\nroot_path_in_servers\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nTo disable automatically generating the URLs in the `servers` field\nin the autogenerated OpenAPI using the `root_path`.\nRead more about it in the\n[FastAPI docs for Behind a Proxy](https://fastapi.tiangolo.com/advanced/behind-a-proxy/#disable-automatic-server-from-root_path).\n**Example**\n```python\nfrom fastapi import FastAPI\napp = FastAPI(root_path_in_servers=False)\n```\n\"\"\"\n),\n]\n=\nTrue\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses to be shown in OpenAPI.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Additional Responses in OpenAPI](https://fastapi.tiangolo.com/advanced/additional-responses/).\nAnd in the\n[FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nOpenAPI callbacks that should apply to all *path operations*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nwebhooks\n:\nAnnotated\n[\nOptional\n[\nrouting\n.\nAPIRouter\n],\nDoc\n(\n\"\"\"\nAdd OpenAPI webhooks. This is similar to `callbacks` but it doesn't\ndepend on specific *path operations*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n**Note**: This is available since OpenAPI 3.1.0, FastAPI 0.99.0.\nRead more about it in the\n[FastAPI docs for OpenAPI Webhooks](https://fastapi.tiangolo.com/advanced/openapi-webhooks/).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark all *path operations* as deprecated. You probably don't need it,\nbut it's available.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nTo include (or not) all the *path operations* in the generated OpenAPI.\nYou probably don't need it, but it's available.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nswagger_ui_parameters\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nParameters to configure Swagger UI, the autogenerated interactive API\ndocumentation (by default at `/docs`).\nRead more about it in the\n[FastAPI docs about how to Configure Swagger UI](https://fastapi.tiangolo.com/how-to/configure-swagger-ui/).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nrouting\n.\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\nseparate_input_output_schemas\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nWhether to generate separate OpenAPI schemas for request body and\nresponse body when the results would be more precise.\nThis is particularly useful when automatically generating clients.\nFor example, if you have a model like:\n```python\nfrom pydantic import BaseModel\nclass Item(BaseModel):\nname: str\ntags: list[str] = []\n```\nWhen `Item` is used for input, a request body, `tags` is not required,\nthe client doesn't have to provide it.\nBut when using `Item` for output, for a response body, `tags` is always\navailable because it has a default value, even if it's just an empty\nlist. So, the client should be able to always expect it.\nIn this case, there would be two different schemas, one for input and\nanother one for output.\n\"\"\"\n),\n]\n=\nTrue\n,\nopenapi_external_docs\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nThis field allows you to provide additional external documentation links.\nIf provided, it must be a dictionary containing:\n* `description`: A brief description of the external documentation.\n* `url`: The URL pointing to the external documentation. The value **MUST**\nbe a valid URL format.\n**Example**:\n```python\nfrom fastapi import FastAPI\nexternal_docs = {\n\"description\": \"Detailed API Reference\",\n\"url\": \"https://example.com/api-docs\",\n}\napp = FastAPI(openapi_external_docs=external_docs)\n```\n\"\"\"\n),\n]\n=\nNone\n,\n**\nextra\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nExtra keyword arguments to be stored in the app, not used by FastAPI\nanywhere.\n\"\"\"\n),\n],\n)\n->\nNone\n:\nself\n.\ndebug\n=\ndebug\nself\n.\ntitle\n=\ntitle\nself\n.\nsummary\n=\nsummary\nself\n.\ndescription\n=\ndescription\nself\n.\nversion\n=\nversion\nself\n.\nterms_of_service\n=\nterms_of_service\nself\n.\ncontact\n=\ncontact\nself\n.\nlicense_info\n=\nlicense_info\nself\n.\nopenapi_url\n=\nopenapi_url\nself\n.\nopenapi_tags\n=\nopenapi_tags\nself\n.\nroot_path_in_servers\n=\nroot_path_in_servers\nself\n.\ndocs_url\n=\ndocs_url\nself\n.\nredoc_url\n=\nredoc_url\nself\n.\nswagger_ui_oauth2_redirect_url\n=\nswagger_ui_oauth2_redirect_url\nself\n.\nswagger_ui_init_oauth\n=\nswagger_ui_init_oauth\nself\n.\nswagger_ui_parameters\n=\nswagger_ui_parameters\nself\n.\nservers\n=\nservers\nor\n[]\nself\n.\nseparate_input_output_schemas\n=\nseparate_input_output_schemas\nself\n.\nopenapi_external_docs\n=\nopenapi_external_docs\nself\n.\nextra\n=\nextra\nself\n.\nopenapi_version\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe version string of OpenAPI.\nFastAPI will generate OpenAPI version 3.1.0, and will output that as\nthe OpenAPI version. But some tools, even though they might be\ncompatible with OpenAPI 3.1.0, might not recognize it as a valid.\nSo you could override this value to trick those tools into using\nthe generated OpenAPI. Have in mind that this is a hack. But if you\navoid using features added in OpenAPI 3.1.0, it might work for your\nuse case.\nThis is not passed as a parameter to the `FastAPI` class to avoid\ngiving the false idea that FastAPI would generate a different OpenAPI\nschema. It is only available as an attribute.\n**Example**\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\napp.openapi_version = \"3.0.2\"\n```\n\"\"\"\n),\n]\n=\n\"3.1.0\"\nself\n.\nopenapi_schema\n:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\n=\nNone\nif\nself\n.\nopenapi_url\n:\nassert\nself\n.\ntitle\n,\n\"A title must be provided for OpenAPI, e.g.: 'My API'\"\nassert\nself\n.\nversion\n,\n\"A version must be provided for OpenAPI, e.g.: '2.1.0'\"\n# TODO: remove when discarding the openapi_prefix parameter\nif\nopenapi_prefix\n:\nlogger\n.\nwarning\n(\n'\"openapi_prefix\" has been deprecated in favor of \"root_path\", which '\n\"follows more closely the ASGI standard, is simpler, and more \"\n\"automatic. Check the docs at \"\n\"https://fastapi.tiangolo.com/advanced/sub-applications/\"\n)\nself\n.\nwebhooks\n:\nAnnotated\n[\nrouting\n.\nAPIRouter\n,\nDoc\n(\n\"\"\"\nThe `app.webhooks` attribute is an `APIRouter` with the *path\noperations* that will be used just for documentation of webhooks.\nRead more about it in the\n[FastAPI docs for OpenAPI Webhooks](https://fastapi.tiangolo.com/advanced/openapi-webhooks/).\n\"\"\"\n),\n]\n=\nwebhooks\nor\nrouting\n.\nAPIRouter\n()\nself\n.\nroot_path\n=\nroot_path\nor\nopenapi_prefix\nself\n.\nstate\n:\nAnnotated\n[\nState\n,\nDoc\n(\n\"\"\"\nA state object for the application. This is the same object for the\nentire application, it doesn't change from request to request.\nYou normally wouldn't use this in FastAPI, for most of the cases you\nwould instead use FastAPI dependencies.\nThis is simply inherited from Starlette.\nRead more about it in the\n[Starlette docs for Applications](https://www.starlette.dev/applications/#storing-state-on-the-app-instance).\n\"\"\"\n),\n]\n=\nState\n()\nself\n.\ndependency_overrides\n:\nAnnotated\n[\nDict\n[\nCallable\n[\n...\n,\nAny\n],\nCallable\n[\n...\n,\nAny\n]],\nDoc\n(\n\"\"\"\nA dictionary with overrides for the dependencies.\nEach key is the original dependency callable, and the value is the\nactual dependency that should be called.\nThis is for testing, to replace expensive dependencies with testing\nversions.\nRead more about it in the\n[FastAPI docs for Testing Dependencies with Overrides](https://fastapi.tiangolo.com/advanced/testing-dependencies/).\n\"\"\"\n),\n]\n=\n{}\nself\n.\nrouter\n:\nrouting\n.\nAPIRouter\n=\nrouting\n.\nAPIRouter\n(\nroutes\n=\nroutes\n,\nredirect_slashes\n=\nredirect_slashes\n,\ndependency_overrides_provider\n=\nself\n,\non_startup\n=\non_startup\n,\non_shutdown\n=\non_shutdown\n,\nlifespan\n=\nlifespan\n,\ndefault_response_class\n=\ndefault_response_class\n,\ndependencies\n=\ndependencies\n,\ncallbacks\n=\ncallbacks\n,\ndeprecated\n=\ndeprecated\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponses\n=\nresponses\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\nself\n.\nexception_handlers\n:\nDict\n[\nAny\n,\nCallable\n[[\nRequest\n,\nAny\n],\nUnion\n[\nResponse\n,\nAwaitable\n[\nResponse\n]]]\n]\n=\n{}\nif\nexception_handlers\nis\nNone\nelse\ndict\n(\nexception_handlers\n)\nself\n.\nexception_handlers\n.\nsetdefault\n(\nHTTPException\n,\nhttp_exception_handler\n)\nself\n.\nexception_handlers\n.\nsetdefault\n(\nRequestValidationError\n,\nrequest_validation_exception_handler\n)\nself\n.\nexception_handlers\n.\nsetdefault\n(\nWebSocketRequestValidationError\n,\n# Starlette still has incorrect type specification for the handlers\nwebsocket_request_validation_exception_handler\n,\n# type: ignore\n)\nself\n.\nuser_middleware\n:\nList\n[\nMiddleware\n]\n=\n(\n[]\nif\nmiddleware\nis\nNone\nelse\nlist\n(\nmiddleware\n)\n)\nself\n.\nmiddleware_stack\n:\nUnion\n[\nASGIApp\n,\nNone\n]\n=\nNone\nself\n.\nsetup\n()\nopenapi_version\ninstance-attribute\n¶\nopenapi_version\n=\n'3.1.0'\nThe version string of OpenAPI.\nFastAPI will generate OpenAPI version 3.1.0, and will output that as\nthe OpenAPI version. But some tools, even though they might be\ncompatible with OpenAPI 3.1.0, might not recognize it as a valid.\nSo you could override this value to trick those tools into using\nthe generated OpenAPI. Have in mind that this is a hack. But if you\navoid using features added in OpenAPI 3.1.0, it might work for your\nuse case.\nThis is not passed as a parameter to the\nFastAPI\nclass to avoid\ngiving the false idea that FastAPI would generate a different OpenAPI\nschema. It is only available as an attribute.\nExample\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\napp\n.\nopenapi_version\n=\n\"3.0.2\"\nwebhooks\ninstance-attribute\n¶\nwebhooks\n=\nwebhooks\nor\nAPIRouter\n()\nThe\napp.webhooks\nattribute is an\nAPIRouter\nwith the\npath\noperations\nthat will be used just for documentation of webhooks.\nRead more about it in the\nFastAPI docs for OpenAPI Webhooks\n.\nstate\ninstance-attribute\n¶\nstate\n=\nState\n()\nA state object for the application. This is the same object for the\nentire application, it doesn't change from request to request.\nYou normally wouldn't use this in FastAPI, for most of the cases you\nwould instead use FastAPI dependencies.\nThis is simply inherited from Starlette.\nRead more about it in the\nStarlette docs for Applications\n.\ndependency_overrides\ninstance-attribute\n¶\ndependency_overrides\n=\n{}\nA dictionary with overrides for the dependencies.\nEach key is the original dependency callable, and the value is the\nactual dependency that should be called.\nThis is for testing, to replace expensive dependencies with testing\nversions.\nRead more about it in the\nFastAPI docs for Testing Dependencies with Overrides\n.\nopenapi\n¶\nopenapi\n()\nGenerate the OpenAPI schema of the application. This is called by FastAPI\ninternally.\nThe first time it is called it stores the result in the attribute\napp.openapi_schema\n, and next times it is called, it just returns that same\nresult. To avoid the cost of generating the schema every time.\nIf you need to modify the generated OpenAPI schema, you could modify it.\nRead more in the\nFastAPI docs for OpenAPI\n.\nSource code in\nfastapi/applications.py\n1044\n1045\n1046\n1047\n1048\n1049\n1050\n1051\n1052\n1053\n1054\n1055\n1056\n1057\n1058\n1059\n1060\n1061\n1062\n1063\n1064\n1065\n1066\n1067\n1068\n1069\n1070\n1071\n1072\n1073\n1074\n1075\ndef\nopenapi\n(\nself\n)\n->\nDict\n[\nstr\n,\nAny\n]:\n\"\"\"\nGenerate the OpenAPI schema of the application. This is called by FastAPI\ninternally.\nThe first time it is called it stores the result in the attribute\n`app.openapi_schema`, and next times it is called, it just returns that same\nresult. To avoid the cost of generating the schema every time.\nIf you need to modify the generated OpenAPI schema, you could modify it.\nRead more in the\n[FastAPI docs for OpenAPI](https://fastapi.tiangolo.com/how-to/extending-openapi/).\n\"\"\"\nif\nnot\nself\n.\nopenapi_schema\n:\nself\n.\nopenapi_schema\n=\nget_openapi\n(\ntitle\n=\nself\n.\ntitle\n,\nversion\n=\nself\n.\nversion\n,\nopenapi_version\n=\nself\n.\nopenapi_version\n,\nsummary\n=\nself\n.\nsummary\n,\ndescription\n=\nself\n.\ndescription\n,\nterms_of_service\n=\nself\n.\nterms_of_service\n,\ncontact\n=\nself\n.\ncontact\n,\nlicense_info\n=\nself\n.\nlicense_info\n,\nroutes\n=\nself\n.\nroutes\n,\nwebhooks\n=\nself\n.\nwebhooks\n.\nroutes\n,\ntags\n=\nself\n.\nopenapi_tags\n,\nservers\n=\nself\n.\nservers\n,\nseparate_input_output_schemas\n=\nself\n.\nseparate_input_output_schemas\n,\nexternal_docs\n=\nself\n.\nopenapi_external_docs\n,\n)\nreturn\nself\n.\nopenapi_schema\nwebsocket\n¶\nwebsocket\n(\npath\n,\nname\n=\nNone\n,\n*\n,\ndependencies\n=\nNone\n)\nDecorate a WebSocket function.\nRead more about it in the\nFastAPI docs for WebSockets\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\n,\nWebSocket\napp\n=\nFastAPI\n()\n@app\n.\nwebsocket\n(\n\"/ws\"\n)\nasync\ndef\nwebsocket_endpoint\n(\nwebsocket\n:\nWebSocket\n):\nawait\nwebsocket\n.\naccept\n()\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Message text was:\n{\ndata\n}\n\"\n)\nPARAMETER\nDESCRIPTION\npath\nWebSocket path.\nTYPE:\nstr\nname\nA name for the WebSocket. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be used for this\nWebSocket.\nRead more about it in the\nFastAPI docs for WebSockets\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nSource code in\nfastapi/applications.py\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\ndef\nwebsocket\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nWebSocket path.\n\"\"\"\n),\n],\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA name for the WebSocket. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\n*\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be used for this\nWebSocket.\nRead more about it in the\n[FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).\n\"\"\"\n),\n]\n=\nNone\n,\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nDecorate a WebSocket function.\nRead more about it in the\n[FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).\n**Example**\n```python\nfrom fastapi import FastAPI, WebSocket\napp = FastAPI()\n@app.websocket(\"/ws\")\nasync def websocket_endpoint(websocket: WebSocket):\nawait websocket.accept()\nwhile True:\ndata = await websocket.receive_text()\nawait websocket.send_text(f\"Message text was: {data}\")\n```\n\"\"\"\ndef\ndecorator\n(\nfunc\n:\nDecoratedCallable\n)\n->\nDecoratedCallable\n:\nself\n.\nadd_api_websocket_route\n(\npath\n,\nfunc\n,\nname\n=\nname\n,\ndependencies\n=\ndependencies\n,\n)\nreturn\nfunc\nreturn\ndecorator\ninclude_router\n¶\ninclude_router\n(\nrouter\n,\n*\n,\nprefix\n=\n\"\"\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\ninclude_in_schema\n=\nTrue\n,\ndefault_response_class\n=\nDefault\n(\nJSONResponse\n),\ncallbacks\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nInclude an\nAPIRouter\nin the same app.\nRead more about it in the\nFastAPI docs for Bigger Applications\n.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\nfrom\n.users\nimport\nusers_router\napp\n=\nFastAPI\n()\napp\n.\ninclude_router\n(\nusers_router\n)\nPARAMETER\nDESCRIPTION\nrouter\nThe\nAPIRouter\nto include.\nTYPE:\nAPIRouter\nprefix\nAn optional path prefix for the router.\nTYPE:\nstr\nDEFAULT:\n''\ntags\nA list of tags to be applied to all the\npath operations\nin this\nrouter.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to all the\npath operations\nin this router.\nRead more about it in the\nFastAPI docs for Bigger Applications - Multiple Files\n.\nExample\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\n.dependencies\nimport\nget_token_header\nfrom\n.internal\nimport\nadmin\napp\n=\nFastAPI\n()\napp\n.\ninclude_router\n(\nadmin\n.\nrouter\n,\ndependencies\n=\n[\nDepends\n(\nget_token_header\n)],\n)\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nresponses\nAdditional responses to be shown in OpenAPI.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Additional Responses in OpenAPI\n.\nAnd in the\nFastAPI docs for Bigger Applications\n.\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark all the\npath operations\nin this router as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nExample\nfrom\nfastapi\nimport\nFastAPI\nfrom\n.internal\nimport\nold_api\napp\n=\nFastAPI\n()\napp\n.\ninclude_router\n(\nold_api\n.\nrouter\n,\ndeprecated\n=\nTrue\n,\n)\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\ninclude_in_schema\nInclude (or not) all the\npath operations\nin this router in the\ngenerated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nExample\nfrom\nfastapi\nimport\nFastAPI\nfrom\n.internal\nimport\nold_api\napp\n=\nFastAPI\n()\napp\n.\ninclude_router\n(\nold_api\n.\nrouter\n,\ninclude_in_schema\n=\nFalse\n,\n)\nTYPE:\nbool\nDEFAULT:\nTrue\ndefault_response_class\nDefault response class to be used for the\npath operations\nin this\nrouter.\nRead more in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nExample\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nORJSONResponse\nfrom\n.internal\nimport\nold_api\napp\n=\nFastAPI\n()\napp\n.\ninclude_router\n(\nold_api\n.\nrouter\n,\ndefault_response_class\n=\nORJSONResponse\n,\n)\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/applications.py\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\n1443\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\ndef\ninclude_router\n(\nself\n,\nrouter\n:\nAnnotated\n[\nrouting\n.\nAPIRouter\n,\nDoc\n(\n\"The `APIRouter` to include.\"\n)],\n*\n,\nprefix\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"An optional path prefix for the router.\"\n)]\n=\n\"\"\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to all the *path operations* in this\nrouter.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to all the\n*path operations* in this router.\nRead more about it in the\n[FastAPI docs for Bigger Applications - Multiple Files](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n**Example**\n```python\nfrom fastapi import Depends, FastAPI\nfrom .dependencies import get_token_header\nfrom .internal import admin\napp = FastAPI()\napp.include_router(\nadmin.router,\ndependencies=[Depends(get_token_header)],\n)\n```\n\"\"\"\n),\n]\n=\nNone\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses to be shown in OpenAPI.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Additional Responses in OpenAPI](https://fastapi.tiangolo.com/advanced/additional-responses/).\nAnd in the\n[FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark all the *path operations* in this router as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n**Example**\n```python\nfrom fastapi import FastAPI\nfrom .internal import old_api\napp = FastAPI()\napp.include_router(\nold_api.router,\ndeprecated=True,\n)\n```\n\"\"\"\n),\n]\n=\nNone\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude (or not) all the *path operations* in this router in the\ngenerated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\n**Example**\n```python\nfrom fastapi import FastAPI\nfrom .internal import old_api\napp = FastAPI()\napp.include_router(\nold_api.router,\ninclude_in_schema=False,\n)\n```\n\"\"\"\n),\n]\n=\nTrue\n,\ndefault_response_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nDefault response class to be used for the *path operations* in this\nrouter.\nRead more in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#default-response-class).\n**Example**\n```python\nfrom fastapi import FastAPI\nfrom fastapi.responses import ORJSONResponse\nfrom .internal import old_api\napp = FastAPI()\napp.include_router(\nold_api.router,\ndefault_response_class=ORJSONResponse,\n)\n```\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nrouting\n.\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nNone\n:\n\"\"\"\nInclude an `APIRouter` in the same app.\nRead more about it in the\n[FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/).\n## Example\n```python\nfrom fastapi import FastAPI\nfrom .users import users_router\napp = FastAPI()\napp.include_router(users_router)\n```\n\"\"\"\nself\n.\nrouter\n.\ninclude_router\n(\nrouter\n,\nprefix\n=\nprefix\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\ndefault_response_class\n=\ndefault_response_class\n,\ncallbacks\n=\ncallbacks\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\nget\n¶\nget\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP GET operation.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Empanada\"\n},\n{\n\"name\"\n:\n\"Arepa\"\n}]\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/applications.py\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\n1820\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\ndef\nget\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nrouting\n.\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP GET operation.\n## Example\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get(\"/items/\")\ndef read_items():\nreturn [{\"name\": \"Empanada\"}, {\"name\": \"Arepa\"}]\n```\n\"\"\"\nreturn\nself\n.\nrouter\n.\nget\n(\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\nput\n¶\nput\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP PUT operation.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nreplace_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nreturn\n{\n\"message\"\n:\n\"Item replaced\"\n,\n\"id\"\n:\nitem_id\n}\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/applications.py\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\ndef\nput\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nrouting\n.\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP PUT operation.\n## Example\n```python\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nclass Item(BaseModel):\nname: str\ndescription: str | None = None\napp = FastAPI()\n@app.put(\"/items/{item_id}\")\ndef replace_item(item_id: str, item: Item):\nreturn {\"message\": \"Item replaced\", \"id\": item_id}\n```\n\"\"\"\nreturn\nself\n.\nrouter\n.\nput\n(\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\npost\n¶\npost\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP POST operation.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\n{\n\"message\"\n:\n\"Item created\"\n}\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/applications.py\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\n2584\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\ndef\npost\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nrouting\n.\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP POST operation.\n## Example\n```python\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nclass Item(BaseModel):\nname: str\ndescription: str | None = None\napp = FastAPI()\n@app.post(\"/items/\")\ndef create_item(item: Item):\nreturn {\"message\": \"Item created\"}\n```\n\"\"\"\nreturn\nself\n.\nrouter\n.\npost\n(\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\ndelete\n¶\ndelete\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP DELETE operation.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\ndelete\n(\n\"/items/\n{item_id}\n\"\n)\ndef\ndelete_item\n(\nitem_id\n:\nstr\n):\nreturn\n{\n\"message\"\n:\n\"Item deleted\"\n}\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/applications.py\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\n2961\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\ndef\ndelete\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nrouting\n.\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP DELETE operation.\n## Example\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.delete(\"/items/{item_id}\")\ndef delete_item(item_id: str):\nreturn {\"message\": \"Item deleted\"}\n```\n\"\"\"\nreturn\nself\n.\nrouter\n.\ndelete\n(\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\noptions\n¶\noptions\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP OPTIONS operation.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\noptions\n(\n\"/items/\"\n)\ndef\nget_item_options\n():\nreturn\n{\n\"additions\"\n:\n[\n\"Aji\"\n,\n\"Guacamole\"\n]}\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/applications.py\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\n3338\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\ndef\noptions\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nrouting\n.\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP OPTIONS operation.\n## Example\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.options(\"/items/\")\ndef get_item_options():\nreturn {\"additions\": [\"Aji\", \"Guacamole\"]}\n```\n\"\"\"\nreturn\nself\n.\nrouter\n.\noptions\n(\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\nhead\n¶\nhead\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP HEAD operation.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\n,\nResponse\napp\n=\nFastAPI\n()\n@app\n.\nhead\n(\n\"/items/\"\n,\nstatus_code\n=\n204\n)\ndef\nget_items_headers\n(\nresponse\n:\nResponse\n):\nresponse\n.\nheaders\n[\n\"X-Cat-Dog\"\n]\n=\n\"Alone in the world\"\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/applications.py\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\n3720\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\ndef\nhead\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nrouting\n.\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP HEAD operation.\n## Example\n```python\nfrom fastapi import FastAPI, Response\napp = FastAPI()\n@app.head(\"/items/\", status_code=204)\ndef get_items_headers(response: Response):\nresponse.headers[\"X-Cat-Dog\"] = \"Alone in the world\"\n```\n\"\"\"\nreturn\nself\n.\nrouter\n.\nhead\n(\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\npatch\n¶\npatch\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP PATCH operation.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npatch\n(\n\"/items/\"\n)\ndef\nupdate_item\n(\nitem\n:\nItem\n):\nreturn\n{\n\"message\"\n:\n\"Item updated in place\"\n}\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/applications.py\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n4000\n4001\n4002\n4003\n4004\n4005\n4006\n4007\n4008\n4009\n4010\n4011\n4012\n4013\n4014\n4015\n4016\n4017\n4018\n4019\n4020\n4021\n4022\n4023\n4024\n4025\n4026\n4027\n4028\n4029\n4030\n4031\n4032\n4033\n4034\n4035\n4036\n4037\n4038\n4039\n4040\n4041\n4042\n4043\n4044\n4045\n4046\n4047\n4048\n4049\n4050\n4051\n4052\n4053\n4054\n4055\n4056\n4057\n4058\n4059\n4060\n4061\n4062\n4063\n4064\n4065\n4066\n4067\n4068\n4069\n4070\n4071\n4072\n4073\n4074\n4075\n4076\n4077\n4078\n4079\n4080\n4081\n4082\n4083\n4084\n4085\n4086\n4087\n4088\n4089\n4090\n4091\n4092\n4093\n4094\n4095\n4096\n4097\n4098\n4099\n4100\n4101\n4102\n4103\n4104\n4105\n4106\n4107\n4108\n4109\n4110\n4111\n4112\n4113\n4114\n4115\n4116\n4117\n4118\n4119\n4120\n4121\n4122\n4123\n4124\n4125\n4126\n4127\n4128\n4129\n4130\n4131\n4132\n4133\n4134\n4135\n4136\n4137\n4138\n4139\n4140\n4141\n4142\n4143\n4144\n4145\n4146\n4147\n4148\n4149\n4150\n4151\n4152\n4153\n4154\n4155\n4156\n4157\n4158\n4159\n4160\n4161\n4162\n4163\ndef\npatch\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nrouting\n.\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP PATCH operation.\n## Example\n```python\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nclass Item(BaseModel):\nname: str\ndescription: str | None = None\napp = FastAPI()\n@app.patch(\"/items/\")\ndef update_item(item: Item):\nreturn {\"message\": \"Item updated in place\"}\n```\n\"\"\"\nreturn\nself\n.\nrouter\n.\npatch\n(\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\ntrace\n¶\ntrace\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP TRACE operation.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\ntrace\n(\n\"/items/\n{item_id}\n\"\n)\ndef\ntrace_item\n(\nitem_id\n:\nstr\n):\nreturn\nNone\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/applications.py\n4165\n4166\n4167\n4168\n4169\n4170\n4171\n4172\n4173\n4174\n4175\n4176\n4177\n4178\n4179\n4180\n4181\n4182\n4183\n4184\n4185\n4186\n4187\n4188\n4189\n4190\n4191\n4192\n4193\n4194\n4195\n4196\n4197\n4198\n4199\n4200\n4201\n4202\n4203\n4204\n4205\n4206\n4207\n4208\n4209\n4210\n4211\n4212\n4213\n4214\n4215\n4216\n4217\n4218\n4219\n4220\n4221\n4222\n4223\n4224\n4225\n4226\n4227\n4228\n4229\n4230\n4231\n4232\n4233\n4234\n4235\n4236\n4237\n4238\n4239\n4240\n4241\n4242\n4243\n4244\n4245\n4246\n4247\n4248\n4249\n4250\n4251\n4252\n4253\n4254\n4255\n4256\n4257\n4258\n4259\n4260\n4261\n4262\n4263\n4264\n4265\n4266\n4267\n4268\n4269\n4270\n4271\n4272\n4273\n4274\n4275\n4276\n4277\n4278\n4279\n4280\n4281\n4282\n4283\n4284\n4285\n4286\n4287\n4288\n4289\n4290\n4291\n4292\n4293\n4294\n4295\n4296\n4297\n4298\n4299\n4300\n4301\n4302\n4303\n4304\n4305\n4306\n4307\n4308\n4309\n4310\n4311\n4312\n4313\n4314\n4315\n4316\n4317\n4318\n4319\n4320\n4321\n4322\n4323\n4324\n4325\n4326\n4327\n4328\n4329\n4330\n4331\n4332\n4333\n4334\n4335\n4336\n4337\n4338\n4339\n4340\n4341\n4342\n4343\n4344\n4345\n4346\n4347\n4348\n4349\n4350\n4351\n4352\n4353\n4354\n4355\n4356\n4357\n4358\n4359\n4360\n4361\n4362\n4363\n4364\n4365\n4366\n4367\n4368\n4369\n4370\n4371\n4372\n4373\n4374\n4375\n4376\n4377\n4378\n4379\n4380\n4381\n4382\n4383\n4384\n4385\n4386\n4387\n4388\n4389\n4390\n4391\n4392\n4393\n4394\n4395\n4396\n4397\n4398\n4399\n4400\n4401\n4402\n4403\n4404\n4405\n4406\n4407\n4408\n4409\n4410\n4411\n4412\n4413\n4414\n4415\n4416\n4417\n4418\n4419\n4420\n4421\n4422\n4423\n4424\n4425\n4426\n4427\n4428\n4429\n4430\n4431\n4432\n4433\n4434\n4435\n4436\n4437\n4438\n4439\n4440\n4441\n4442\n4443\n4444\n4445\n4446\n4447\n4448\n4449\n4450\n4451\n4452\n4453\n4454\n4455\n4456\n4457\n4458\n4459\n4460\n4461\n4462\n4463\n4464\n4465\n4466\n4467\n4468\n4469\n4470\n4471\n4472\n4473\n4474\n4475\n4476\n4477\n4478\n4479\n4480\n4481\n4482\n4483\n4484\n4485\n4486\n4487\n4488\n4489\n4490\n4491\n4492\n4493\n4494\n4495\n4496\n4497\n4498\n4499\n4500\n4501\n4502\n4503\n4504\n4505\n4506\n4507\n4508\n4509\n4510\n4511\n4512\n4513\n4514\n4515\n4516\n4517\n4518\n4519\n4520\n4521\n4522\n4523\n4524\n4525\n4526\n4527\n4528\n4529\n4530\n4531\n4532\n4533\n4534\n4535\n4536\ndef\ntrace\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nrouting\n.\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP TRACE operation.\n## Example\n```python\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.trace(\"/items/{item_id}\")\ndef trace_item(item_id: str):\nreturn None\n```\n\"\"\"\nreturn\nself\n.\nrouter\n.\ntrace\n(\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\non_event\n¶\non_event\n(\nevent_type\n)\nAdd an event handler for the application.\non_event\nis deprecated, use\nlifespan\nevent handlers instead.\nRead more about it in the\nFastAPI docs for Lifespan Events\n.\nPARAMETER\nDESCRIPTION\nevent_type\nThe type of event.\nstartup\nor\nshutdown\n.\nTYPE:\nstr\nSource code in\nfastapi/applications.py\n4547\n4548\n4549\n4550\n4551\n4552\n4553\n4554\n4555\n4556\n4557\n4558\n4559\n4560\n4561\n4562\n4563\n4564\n4565\n4566\n4567\n4568\n4569\n4570\n4571\n4572\n4573\n4574\n@deprecated\n(\n\"\"\"\non_event is deprecated, use lifespan event handlers instead.\nRead more about it in the\n[FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n\"\"\"\n)\ndef\non_event\n(\nself\n,\nevent_type\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe type of event. `startup` or `shutdown`.\n\"\"\"\n),\n],\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd an event handler for the application.\n`on_event` is deprecated, use `lifespan` event handlers instead.\nRead more about it in the\n[FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/#alternative-events-deprecated).\n\"\"\"\nreturn\nself\n.\nrouter\n.\non_event\n(\nevent_type\n)\nmiddleware\n¶\nmiddleware\n(\nmiddleware_type\n)\nAdd a middleware to the application.\nRead more about it in the\nFastAPI docs for Middleware\n.\nExample\n¶\nimport\ntime\nfrom\ntyping\nimport\nAwaitable\n,\nCallable\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\n,\nResponse\napp\n=\nFastAPI\n()\n@app\n.\nmiddleware\n(\n\"http\"\n)\nasync\ndef\nadd_process_time_header\n(\nrequest\n:\nRequest\n,\ncall_next\n:\nCallable\n[[\nRequest\n],\nAwaitable\n[\nResponse\n]]\n)\n->\nResponse\n:\nstart_time\n=\ntime\n.\ntime\n()\nresponse\n=\nawait\ncall_next\n(\nrequest\n)\nprocess_time\n=\ntime\n.\ntime\n()\n-\nstart_time\nresponse\n.\nheaders\n[\n\"X-Process-Time\"\n]\n=\nstr\n(\nprocess_time\n)\nreturn\nresponse\nPARAMETER\nDESCRIPTION\nmiddleware_type\nThe type of middleware. Currently only supports\nhttp\n.\nTYPE:\nstr\nSource code in\nfastapi/applications.py\n4576\n4577\n4578\n4579\n4580\n4581\n4582\n4583\n4584\n4585\n4586\n4587\n4588\n4589\n4590\n4591\n4592\n4593\n4594\n4595\n4596\n4597\n4598\n4599\n4600\n4601\n4602\n4603\n4604\n4605\n4606\n4607\n4608\n4609\n4610\n4611\n4612\n4613\n4614\n4615\n4616\n4617\n4618\n4619\n4620\ndef\nmiddleware\n(\nself\n,\nmiddleware_type\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe type of middleware. Currently only supports `http`.\n\"\"\"\n),\n],\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a middleware to the application.\nRead more about it in the\n[FastAPI docs for Middleware](https://fastapi.tiangolo.com/tutorial/middleware/).\n## Example\n```python\nimport time\nfrom typing import Awaitable, Callable\nfrom fastapi import FastAPI, Request, Response\napp = FastAPI()\n@app.middleware(\"http\")\nasync def add_process_time_header(\nrequest: Request, call_next: Callable[[Request], Awaitable[Response]]\n) -> Response:\nstart_time = time.time()\nresponse = await call_next(request)\nprocess_time = time.time() - start_time\nresponse.headers[\"X-Process-Time\"] = str(process_time)\nreturn response\n```\n\"\"\"\ndef\ndecorator\n(\nfunc\n:\nDecoratedCallable\n)\n->\nDecoratedCallable\n:\nself\n.\nadd_middleware\n(\nBaseHTTPMiddleware\n,\ndispatch\n=\nfunc\n)\nreturn\nfunc\nreturn\ndecorator\nexception_handler\n¶\nexception_handler\n(\nexc_class_or_status_code\n)\nAdd an exception handler to the app.\nRead more about it in the\nFastAPI docs for Handling Errors\n.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\nfrom\nfastapi.responses\nimport\nJSONResponse\nclass\nUnicornException\n(\nException\n):\ndef\n__init__\n(\nself\n,\nname\n:\nstr\n):\nself\n.\nname\n=\nname\napp\n=\nFastAPI\n()\n@app\n.\nexception_handler\n(\nUnicornException\n)\nasync\ndef\nunicorn_exception_handler\n(\nrequest\n:\nRequest\n,\nexc\n:\nUnicornException\n):\nreturn\nJSONResponse\n(\nstatus_code\n=\n418\n,\ncontent\n=\n{\n\"message\"\n:\nf\n\"Oops!\n{\nexc\n.\nname\n}\ndid something. There goes a rainbow...\"\n},\n)\nPARAMETER\nDESCRIPTION\nexc_class_or_status_code\nThe Exception class this would handle, or a status code.\nTYPE:\nUnion\n[\nint\n,\nType\n[\nException\n]]\nSource code in\nfastapi/applications.py\n4622\n4623\n4624\n4625\n4626\n4627\n4628\n4629\n4630\n4631\n4632\n4633\n4634\n4635\n4636\n4637\n4638\n4639\n4640\n4641\n4642\n4643\n4644\n4645\n4646\n4647\n4648\n4649\n4650\n4651\n4652\n4653\n4654\n4655\n4656\n4657\n4658\n4659\n4660\n4661\n4662\n4663\n4664\n4665\n4666\n4667\ndef\nexception_handler\n(\nself\n,\nexc_class_or_status_code\n:\nAnnotated\n[\nUnion\n[\nint\n,\nType\n[\nException\n]],\nDoc\n(\n\"\"\"\nThe Exception class this would handle, or a status code.\n\"\"\"\n),\n],\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd an exception handler to the app.\nRead more about it in the\n[FastAPI docs for Handling Errors](https://fastapi.tiangolo.com/tutorial/handling-errors/).\n## Example\n```python\nfrom fastapi import FastAPI, Request\nfrom fastapi.responses import JSONResponse\nclass UnicornException(Exception):\ndef __init__(self, name: str):\nself.name = name\napp = FastAPI()\n@app.exception_handler(UnicornException)\nasync def unicorn_exception_handler(request: Request, exc: UnicornException):\nreturn JSONResponse(\nstatus_code=418,\ncontent={\"message\": f\"Oops! {exc.name} did something. There goes a rainbow...\"},\n)\n```\n\"\"\"\ndef\ndecorator\n(\nfunc\n:\nDecoratedCallable\n)\n->\nDecoratedCallable\n:\nself\n.\nadd_exception_handler\n(\nexc_class_or_status_code\n,\nfunc\n)\nreturn\nfunc\nreturn\ndecorator\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/metadata/",
    "title": "Metadata and Docs URLs¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nMetadata and Docs URLs\nTable of contents\nMetadata for API\nLicense identifier\nMetadata for tags\nCreate metadata for tags\nUse your tags\nCheck the docs\nOrder of tags\nOpenAPI URL\nDocs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nMetadata for API\nLicense identifier\nMetadata for tags\nCreate metadata for tags\nUse your tags\nCheck the docs\nOrder of tags\nOpenAPI URL\nDocs URLs\nFastAPI\nLearn\nTutorial - User Guide\nMetadata and Docs URLs\n¶\nYou can customize several metadata configurations in your\nFastAPI\napplication.\nMetadata for API\n¶\nYou can set the following fields that are used in the OpenAPI specification and the automatic API docs UIs:\nParameter\nType\nDescription\ntitle\nstr\nThe title of the API.\nsummary\nstr\nA short summary of the API.\nAvailable since OpenAPI 3.1.0, FastAPI 0.99.0.\ndescription\nstr\nA short description of the API. It can use Markdown.\nversion\nstring\nThe version of the API. This is the version of your own application, not of OpenAPI. For example\n2.5.0\n.\nterms_of_service\nstr\nA URL to the Terms of Service for the API. If provided, this has to be a URL.\ncontact\ndict\nThe contact information for the exposed API. It can contain several fields.\ncontact\nfields\nParameter\nType\nDescription\nname\nstr\nThe identifying name of the contact person/organization.\nurl\nstr\nThe URL pointing to the contact information. MUST be in the format of a URL.\nemail\nstr\nThe email address of the contact person/organization. MUST be in the format of an email address.\nlicense_info\ndict\nThe license information for the exposed API. It can contain several fields.\nlicense_info\nfields\nParameter\nType\nDescription\nname\nstr\nREQUIRED\n(if a\nlicense_info\nis set). The license name used for the API.\nidentifier\nstr\nAn\nSPDX\nlicense expression for the API. The\nidentifier\nfield is mutually exclusive of the\nurl\nfield.\nAvailable since OpenAPI 3.1.0, FastAPI 0.99.0.\nurl\nstr\nA URL to the license used for the API. MUST be in the format of a URL.\nYou can set them as follows:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\ndescription\n=\n\"\"\"\nChimichangApp API helps you do awesome stuff. 🚀\n## Items\nYou can **read items**.\n## Users\nYou will be able to:\n* **Create users** (_not implemented_).\n* **Read users** (_not implemented_).\n\"\"\"\napp\n=\nFastAPI\n(\ntitle\n=\n\"ChimichangApp\"\n,\ndescription\n=\ndescription\n,\nsummary\n=\n\"Deadpool's favorite app. Nuff said.\"\n,\nversion\n=\n\"0.0.1\"\n,\nterms_of_service\n=\n\"http://example.com/terms/\"\n,\ncontact\n=\n{\n\"name\"\n:\n\"Deadpoolio the Amazing\"\n,\n\"url\"\n:\n\"http://x-force.example.com/contact/\"\n,\n\"email\"\n:\n\"dp@x-force.example.com\"\n,\n},\nlicense_info\n=\n{\n\"name\"\n:\n\"Apache 2.0\"\n,\n\"url\"\n:\n\"https://www.apache.org/licenses/LICENSE-2.0.html\"\n,\n},\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Katana\"\n}]\nTip\nYou can write Markdown in the\ndescription\nfield and it will be rendered in the output.\nWith this configuration, the automatic API docs would look like:\nLicense identifier\n¶\nSince OpenAPI 3.1.0 and FastAPI 0.99.0, you can also set the\nlicense_info\nwith an\nidentifier\ninstead of a\nurl\n.\nFor example:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\ndescription\n=\n\"\"\"\nChimichangApp API helps you do awesome stuff. 🚀\n## Items\nYou can **read items**.\n## Users\nYou will be able to:\n* **Create users** (_not implemented_).\n* **Read users** (_not implemented_).\n\"\"\"\napp\n=\nFastAPI\n(\ntitle\n=\n\"ChimichangApp\"\n,\ndescription\n=\ndescription\n,\nsummary\n=\n\"Deadpool's favorite app. Nuff said.\"\n,\nversion\n=\n\"0.0.1\"\n,\nterms_of_service\n=\n\"http://example.com/terms/\"\n,\ncontact\n=\n{\n\"name\"\n:\n\"Deadpoolio the Amazing\"\n,\n\"url\"\n:\n\"http://x-force.example.com/contact/\"\n,\n\"email\"\n:\n\"dp@x-force.example.com\"\n,\n},\nlicense_info\n=\n{\n\"name\"\n:\n\"Apache 2.0\"\n,\n\"identifier\"\n:\n\"MIT\"\n,\n},\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Katana\"\n}]\nMetadata for tags\n¶\nYou can also add additional metadata for the different tags used to group your path operations with the parameter\nopenapi_tags\n.\nIt takes a list containing one dictionary for each tag.\nEach dictionary can contain:\nname\n(\nrequired\n): a\nstr\nwith the same tag name you use in the\ntags\nparameter in your\npath operations\nand\nAPIRouter\ns.\ndescription\n: a\nstr\nwith a short description for the tag. It can have Markdown and will be shown in the docs UI.\nexternalDocs\n: a\ndict\ndescribing external documentation with:\ndescription\n: a\nstr\nwith a short description for the external docs.\nurl\n(\nrequired\n): a\nstr\nwith the URL for the external documentation.\nCreate metadata for tags\n¶\nLet's try that in an example with tags for\nusers\nand\nitems\n.\nCreate metadata for your tags and pass it to the\nopenapi_tags\nparameter:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\ntags_metadata\n=\n[\n{\n\"name\"\n:\n\"users\"\n,\n\"description\"\n:\n\"Operations with users. The **login** logic is also here.\"\n,\n},\n{\n\"name\"\n:\n\"items\"\n,\n\"description\"\n:\n\"Manage items. So _fancy_ they have their own docs.\"\n,\n\"externalDocs\"\n:\n{\n\"description\"\n:\n\"Items external docs\"\n,\n\"url\"\n:\n\"https://fastapi.tiangolo.com/\"\n,\n},\n},\n]\napp\n=\nFastAPI\n(\nopenapi_tags\n=\ntags_metadata\n)\n@app\n.\nget\n(\n\"/users/\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nget_users\n():\nreturn\n[{\n\"name\"\n:\n\"Harry\"\n},\n{\n\"name\"\n:\n\"Ron\"\n}]\n@app\n.\nget\n(\n\"/items/\"\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\nget_items\n():\nreturn\n[{\n\"name\"\n:\n\"wand\"\n},\n{\n\"name\"\n:\n\"flying broom\"\n}]\nNotice that you can use Markdown inside of the descriptions, for example \"login\" will be shown in bold (\nlogin\n) and \"fancy\" will be shown in italics (\nfancy\n).\nTip\nYou don't have to add metadata for all the tags that you use.\nUse your tags\n¶\nUse the\ntags\nparameter with your\npath operations\n(and\nAPIRouter\ns) to assign them to different tags:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\ntags_metadata\n=\n[\n{\n\"name\"\n:\n\"users\"\n,\n\"description\"\n:\n\"Operations with users. The **login** logic is also here.\"\n,\n},\n{\n\"name\"\n:\n\"items\"\n,\n\"description\"\n:\n\"Manage items. So _fancy_ they have their own docs.\"\n,\n\"externalDocs\"\n:\n{\n\"description\"\n:\n\"Items external docs\"\n,\n\"url\"\n:\n\"https://fastapi.tiangolo.com/\"\n,\n},\n},\n]\napp\n=\nFastAPI\n(\nopenapi_tags\n=\ntags_metadata\n)\n@app\n.\nget\n(\n\"/users/\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nget_users\n():\nreturn\n[{\n\"name\"\n:\n\"Harry\"\n},\n{\n\"name\"\n:\n\"Ron\"\n}]\n@app\n.\nget\n(\n\"/items/\"\n,\ntags\n=\n[\n\"items\"\n])\nasync\ndef\nget_items\n():\nreturn\n[{\n\"name\"\n:\n\"wand\"\n},\n{\n\"name\"\n:\n\"flying broom\"\n}]\nInfo\nRead more about tags in\nPath Operation Configuration\n.\nCheck the docs\n¶\nNow, if you check the docs, they will show all the additional metadata:\nOrder of tags\n¶\nThe order of each tag metadata dictionary also defines the order shown in the docs UI.\nFor example, even though\nusers\nwould go after\nitems\nin alphabetical order, it is shown before them, because we added their metadata as the first dictionary in the list.\nOpenAPI URL\n¶\nBy default, the OpenAPI schema is served at\n/openapi.json\n.\nBut you can configure it with the parameter\nopenapi_url\n.\nFor example, to set it to be served at\n/api/v1/openapi.json\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\nopenapi_url\n=\n\"/api/v1/openapi.json\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Foo\"\n}]\nIf you want to disable the OpenAPI schema completely you can set\nopenapi_url=None\n, that will also disable the documentation user interfaces that use it.\nDocs URLs\n¶\nYou can configure the two documentation user interfaces included:\nSwagger UI\n: served at\n/docs\n.\nYou can set its URL with the parameter\ndocs_url\n.\nYou can disable it by setting\ndocs_url=None\n.\nReDoc\n: served at\n/redoc\n.\nYou can set its URL with the parameter\nredoc_url\n.\nYou can disable it by setting\nredoc_url=None\n.\nFor example, to set Swagger UI to be served at\n/documentation\nand disable ReDoc:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n(\ndocs_url\n=\n\"/documentation\"\n,\nredoc_url\n=\nNone\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Foo\"\n}]\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/response-model/",
    "title": "Response Model - Return Type¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nResponse Model - Return Type\nTable of contents\nresponse_model\nParameter\nresponse_model\nPriority\nReturn the same input data\nAdd an output model\nresponse_model\nor Return Type\nReturn Type and Data Filtering\nType Annotations and Tooling\nFastAPI Data Filtering\nSee it in the docs\nOther Return Type Annotations\nReturn a Response Directly\nAnnotate a Response Subclass\nInvalid Return Type Annotations\nDisable Response Model\nResponse Model encoding parameters\nUse the\nresponse_model_exclude_unset\nparameter\nData with values for fields with defaults\nData with the same values as the defaults\nresponse_model_include\nand\nresponse_model_exclude\nUsing\nlist\ns instead of\nset\ns\nRecap\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nresponse_model\nParameter\nresponse_model\nPriority\nReturn the same input data\nAdd an output model\nresponse_model\nor Return Type\nReturn Type and Data Filtering\nType Annotations and Tooling\nFastAPI Data Filtering\nSee it in the docs\nOther Return Type Annotations\nReturn a Response Directly\nAnnotate a Response Subclass\nInvalid Return Type Annotations\nDisable Response Model\nResponse Model encoding parameters\nUse the\nresponse_model_exclude_unset\nparameter\nData with values for fields with defaults\nData with the same values as the defaults\nresponse_model_include\nand\nresponse_model_exclude\nUsing\nlist\ns instead of\nset\ns\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nResponse Model - Return Type\n¶\nYou can declare the type used for the response by annotating the\npath operation function\nreturn type\n.\nYou can use\ntype annotations\nthe same way you would for input data in function\nparameters\n, you can use Pydantic models, lists, dictionaries, scalar values like integers, booleans, etc.\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n)\n->\nItem\n:\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n()\n->\nlist\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\nprice\n=\n42.0\n),\nItem\n(\nname\n=\n\"Plumbus\"\n,\nprice\n=\n32.0\n),\n]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n)\n->\nItem\n:\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n()\n->\nlist\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\nprice\n=\n42.0\n),\nItem\n(\nname\n=\n\"Plumbus\"\n,\nprice\n=\n32.0\n),\n]\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n)\n->\nItem\n:\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n()\n->\nList\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\nprice\n=\n42.0\n),\nItem\n(\nname\n=\n\"Plumbus\"\n,\nprice\n=\n32.0\n),\n]\nFastAPI will use this return type to:\nValidate\nthe returned data.\nIf the data is invalid (e.g. you are missing a field), it means that\nyour\napp code is broken, not returning what it should, and it will return a server error instead of returning incorrect data. This way you and your clients can be certain that they will receive the data and the data shape expected.\nAdd a\nJSON Schema\nfor the response, in the OpenAPI\npath operation\n.\nThis will be used by the\nautomatic docs\n.\nIt will also be used by automatic client code generation tools.\nBut most importantly:\nIt will\nlimit and filter\nthe output data to what is defined in the return type.\nThis is particularly important for\nsecurity\n, we'll see more of that below.\nresponse_model\nParameter\n¶\nThere are some cases where you need or want to return some data that is not exactly what the type declares.\nFor example, you could want to\nreturn a dictionary\nor a database object, but\ndeclare it as a Pydantic model\n. This way the Pydantic model would do all the data documentation, validation, etc. for the object that you returned (e.g. a dictionary or database object).\nIf you added the return type annotation, tools and editors would complain with a (correct) error telling you that your function is returning a type (e.g. a dict) that is different from what you declared (e.g. a Pydantic model).\nIn those cases, you can use the\npath operation decorator\nparameter\nresponse_model\ninstead of the return type.\nYou can use the\nresponse_model\nparameter in any of the\npath operations\n:\n@app.get()\n@app.post()\n@app.put()\n@app.delete()\netc.\nPython 3.10+\nfrom\ntyping\nimport\nAny\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n)\n->\nAny\n:\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_model\n=\nlist\n[\nItem\n])\nasync\ndef\nread_items\n()\n->\nAny\n:\nreturn\n[\n{\n\"name\"\n:\n\"Portal Gun\"\n,\n\"price\"\n:\n42.0\n},\n{\n\"name\"\n:\n\"Plumbus\"\n,\n\"price\"\n:\n32.0\n},\n]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nAny\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n)\n->\nAny\n:\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_model\n=\nlist\n[\nItem\n])\nasync\ndef\nread_items\n()\n->\nAny\n:\nreturn\n[\n{\n\"name\"\n:\n\"Portal Gun\"\n,\n\"price\"\n:\n42.0\n},\n{\n\"name\"\n:\n\"Plumbus\"\n,\n\"price\"\n:\n32.0\n},\n]\nfrom\ntyping\nimport\nAny\n,\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\ntags\n:\nList\n[\nstr\n]\n=\n[]\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n)\n->\nAny\n:\nreturn\nitem\n@app\n.\nget\n(\n\"/items/\"\n,\nresponse_model\n=\nList\n[\nItem\n])\nasync\ndef\nread_items\n()\n->\nAny\n:\nreturn\n[\n{\n\"name\"\n:\n\"Portal Gun\"\n,\n\"price\"\n:\n42.0\n},\n{\n\"name\"\n:\n\"Plumbus\"\n,\n\"price\"\n:\n32.0\n},\n]\nNote\nNotice that\nresponse_model\nis a parameter of the \"decorator\" method (\nget\n,\npost\n, etc). Not of your\npath operation function\n, like all the parameters and body.\nresponse_model\nreceives the same type you would declare for a Pydantic model field, so, it can be a Pydantic model, but it can also be, e.g. a\nlist\nof Pydantic models, like\nList[Item]\n.\nFastAPI will use this\nresponse_model\nto do all the data documentation, validation, etc. and also to\nconvert and filter the output data\nto its type declaration.\nTip\nIf you have strict type checks in your editor, mypy, etc, you can declare the function return type as\nAny\n.\nThat way you tell the editor that you are intentionally returning anything. But FastAPI will still do the data documentation, validation, filtering, etc. with the\nresponse_model\n.\nresponse_model\nPriority\n¶\nIf you declare both a return type and a\nresponse_model\n, the\nresponse_model\nwill take priority and be used by FastAPI.\nThis way you can add correct type annotations to your functions even when you are returning a type different than the response model, to be used by the editor and tools like mypy. And still you can have FastAPI do the data validation, documentation, etc. using the\nresponse_model\n.\nYou can also use\nresponse_model=None\nto disable creating a response model for that\npath operation\n, you might need to do it if you are adding type annotations for things that are not valid Pydantic fields, you will see an example of that in one of the sections below.\nReturn the same input data\n¶\nHere we are declaring a\nUserIn\nmodel, it will contain a plaintext password:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserIn\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\n# Don't do this in production!\n@app\n.\npost\n(\n\"/user/\"\n)\nasync\ndef\ncreate_user\n(\nuser\n:\nUserIn\n)\n->\nUserIn\n:\nreturn\nuser\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserIn\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n# Don't do this in production!\n@app\n.\npost\n(\n\"/user/\"\n)\nasync\ndef\ncreate_user\n(\nuser\n:\nUserIn\n)\n->\nUserIn\n:\nreturn\nuser\nInfo\nTo use\nEmailStr\n, first install\nemail-validator\n.\nMake sure you create a\nvirtual environment\n, activate it, and then install it, for example:\n$\npip\ninstall\nemail-validator\nor with:\n$\npip\ninstall\n\"pydantic[email]\"\nAnd we are using this model to declare our input and the same model to declare our output:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserIn\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\n# Don't do this in production!\n@app\n.\npost\n(\n\"/user/\"\n)\nasync\ndef\ncreate_user\n(\nuser\n:\nUserIn\n)\n->\nUserIn\n:\nreturn\nuser\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserIn\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n# Don't do this in production!\n@app\n.\npost\n(\n\"/user/\"\n)\nasync\ndef\ncreate_user\n(\nuser\n:\nUserIn\n)\n->\nUserIn\n:\nreturn\nuser\nNow, whenever a browser is creating a user with a password, the API will return the same password in the response.\nIn this case, it might not be a problem, because it's the same user sending the password.\nBut if we use the same model for another\npath operation\n, we could be sending our user's passwords to every client.\nDanger\nNever store the plain password of a user or send it in a response like this, unless you know all the caveats and you know what you are doing.\nAdd an output model\n¶\nWe can instead create an input model with the plaintext password and an output model without it:\nPython 3.10+\nfrom\ntyping\nimport\nAny\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserIn\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\nclass\nUserOut\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\n@app\n.\npost\n(\n\"/user/\"\n,\nresponse_model\n=\nUserOut\n)\nasync\ndef\ncreate_user\n(\nuser\n:\nUserIn\n)\n->\nAny\n:\nreturn\nuser\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nAny\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserIn\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUserOut\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\npost\n(\n\"/user/\"\n,\nresponse_model\n=\nUserOut\n)\nasync\ndef\ncreate_user\n(\nuser\n:\nUserIn\n)\n->\nAny\n:\nreturn\nuser\nHere, even though our\npath operation function\nis returning the same input user that contains the password:\nPython 3.10+\nfrom\ntyping\nimport\nAny\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserIn\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\nclass\nUserOut\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\n@app\n.\npost\n(\n\"/user/\"\n,\nresponse_model\n=\nUserOut\n)\nasync\ndef\ncreate_user\n(\nuser\n:\nUserIn\n)\n->\nAny\n:\nreturn\nuser\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nAny\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserIn\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUserOut\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\npost\n(\n\"/user/\"\n,\nresponse_model\n=\nUserOut\n)\nasync\ndef\ncreate_user\n(\nuser\n:\nUserIn\n)\n->\nAny\n:\nreturn\nuser\n...we declared the\nresponse_model\nto be our model\nUserOut\n, that doesn't include the password:\nPython 3.10+\nfrom\ntyping\nimport\nAny\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserIn\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\nclass\nUserOut\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\n@app\n.\npost\n(\n\"/user/\"\n,\nresponse_model\n=\nUserOut\n)\nasync\ndef\ncreate_user\n(\nuser\n:\nUserIn\n)\n->\nAny\n:\nreturn\nuser\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nAny\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nUserIn\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUserOut\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\npost\n(\n\"/user/\"\n,\nresponse_model\n=\nUserOut\n)\nasync\ndef\ncreate_user\n(\nuser\n:\nUserIn\n)\n->\nAny\n:\nreturn\nuser\nSo,\nFastAPI\nwill take care of filtering out all the data that is not declared in the output model (using Pydantic).\nresponse_model\nor Return Type\n¶\nIn this case, because the two models are different, if we annotated the function return type as\nUserOut\n, the editor and tools would complain that we are returning an invalid type, as those are different classes.\nThat's why in this example we have to declare it in the\nresponse_model\nparameter.\n...but continue reading below to see how to overcome that.\nReturn Type and Data Filtering\n¶\nLet's continue from the previous example. We wanted to\nannotate the function with one type\n, but we wanted to be able to return from the function something that actually includes\nmore data\n.\nWe want FastAPI to keep\nfiltering\nthe data using the response model. So that even though the function returns more data, the response will only include the fields declared in the response model.\nIn the previous example, because the classes were different, we had to use the\nresponse_model\nparameter. But that also means that we don't get the support from the editor and tools checking the function return type.\nBut in most of the cases where we need to do something like this, we want the model just to\nfilter/remove\nsome of the data as in this example.\nAnd in those cases, we can use classes and inheritance to take advantage of function\ntype annotations\nto get better support in the editor and tools, and still get the FastAPI\ndata filtering\n.\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nBaseUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nstr\n|\nNone\n=\nNone\nclass\nUserIn\n(\nBaseUser\n):\npassword\n:\nstr\n@app\n.\npost\n(\n\"/user/\"\n)\nasync\ndef\ncreate_user\n(\nuser\n:\nUserIn\n)\n->\nBaseUser\n:\nreturn\nuser\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\n,\nEmailStr\napp\n=\nFastAPI\n()\nclass\nBaseUser\n(\nBaseModel\n):\nusername\n:\nstr\nemail\n:\nEmailStr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nclass\nUserIn\n(\nBaseUser\n):\npassword\n:\nstr\n@app\n.\npost\n(\n\"/user/\"\n)\nasync\ndef\ncreate_user\n(\nuser\n:\nUserIn\n)\n->\nBaseUser\n:\nreturn\nuser\nWith this, we get tooling support, from editors and mypy as this code is correct in terms of types, but we also get the data filtering from FastAPI.\nHow does this work? Let's check that out. 🤓\nType Annotations and Tooling\n¶\nFirst let's see how editors, mypy and other tools would see this.\nBaseUser\nhas the base fields. Then\nUserIn\ninherits from\nBaseUser\nand adds the\npassword\nfield, so, it will include all the fields from both models.\nWe annotate the function return type as\nBaseUser\n, but we are actually returning a\nUserIn\ninstance.\nThe editor, mypy, and other tools won't complain about this because, in typing terms,\nUserIn\nis a subclass of\nBaseUser\n, which means it's a\nvalid\ntype when what is expected is anything that is a\nBaseUser\n.\nFastAPI Data Filtering\n¶\nNow, for FastAPI, it will see the return type and make sure that what you return includes\nonly\nthe fields that are declared in the type.\nFastAPI does several things internally with Pydantic to make sure that those same rules of class inheritance are not used for the returned data filtering, otherwise you could end up returning much more data than what you expected.\nThis way, you can get the best of both worlds: type annotations with\ntooling support\nand\ndata filtering\n.\nSee it in the docs\n¶\nWhen you see the automatic docs, you can check that the input model and output model will both have their own JSON Schema:\nAnd both models will be used for the interactive API documentation:\nOther Return Type Annotations\n¶\nThere might be cases where you return something that is not a valid Pydantic field and you annotate it in the function, only to get the support provided by tooling (the editor, mypy, etc).\nReturn a Response Directly\n¶\nThe most common case would be\nreturning a Response directly as explained later in the advanced docs\n.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nResponse\nfrom\nfastapi.responses\nimport\nJSONResponse\n,\nRedirectResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/portal\"\n)\nasync\ndef\nget_portal\n(\nteleport\n:\nbool\n=\nFalse\n)\n->\nResponse\n:\nif\nteleport\n:\nreturn\nRedirectResponse\n(\nurl\n=\n\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n)\nreturn\nJSONResponse\n(\ncontent\n=\n{\n\"message\"\n:\n\"Here's your interdimensional portal.\"\n})\nThis simple case is handled automatically by FastAPI because the return type annotation is the class (or a subclass of)\nResponse\n.\nAnd tools will also be happy because both\nRedirectResponse\nand\nJSONResponse\nare subclasses of\nResponse\n, so the type annotation is correct.\nAnnotate a Response Subclass\n¶\nYou can also use a subclass of\nResponse\nin the type annotation:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nRedirectResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/teleport\"\n)\nasync\ndef\nget_teleport\n()\n->\nRedirectResponse\n:\nreturn\nRedirectResponse\n(\nurl\n=\n\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n)\nThis will also work because\nRedirectResponse\nis a subclass of\nResponse\n, and FastAPI will automatically handle this simple case.\nInvalid Return Type Annotations\n¶\nBut when you return some other arbitrary object that is not a valid Pydantic type (e.g. a database object) and you annotate it like that in the function, FastAPI will try to create a Pydantic response model from that type annotation, and will fail.\nThe same would happen if you had something like a\nunion\nbetween different types where one or more of them are not valid Pydantic types, for example this would fail 💥:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\n,\nResponse\nfrom\nfastapi.responses\nimport\nRedirectResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/portal\"\n)\nasync\ndef\nget_portal\n(\nteleport\n:\nbool\n=\nFalse\n)\n->\nResponse\n|\ndict\n:\nif\nteleport\n:\nreturn\nRedirectResponse\n(\nurl\n=\n\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n)\nreturn\n{\n\"message\"\n:\n\"Here's your interdimensional portal.\"\n}\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nResponse\nfrom\nfastapi.responses\nimport\nRedirectResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/portal\"\n)\nasync\ndef\nget_portal\n(\nteleport\n:\nbool\n=\nFalse\n)\n->\nUnion\n[\nResponse\n,\ndict\n]:\nif\nteleport\n:\nreturn\nRedirectResponse\n(\nurl\n=\n\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n)\nreturn\n{\n\"message\"\n:\n\"Here's your interdimensional portal.\"\n}\n...this fails because the type annotation is not a Pydantic type and is not just a single\nResponse\nclass or subclass, it's a union (any of the two) between a\nResponse\nand a\ndict\n.\nDisable Response Model\n¶\nContinuing from the example above, you might not want to have the default data validation, documentation, filtering, etc. that is performed by FastAPI.\nBut you might want to still keep the return type annotation in the function to get the support from tools like editors and type checkers (e.g. mypy).\nIn this case, you can disable the response model generation by setting\nresponse_model=None\n:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\n,\nResponse\nfrom\nfastapi.responses\nimport\nRedirectResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/portal\"\n,\nresponse_model\n=\nNone\n)\nasync\ndef\nget_portal\n(\nteleport\n:\nbool\n=\nFalse\n)\n->\nResponse\n|\ndict\n:\nif\nteleport\n:\nreturn\nRedirectResponse\n(\nurl\n=\n\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n)\nreturn\n{\n\"message\"\n:\n\"Here's your interdimensional portal.\"\n}\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nResponse\nfrom\nfastapi.responses\nimport\nRedirectResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/portal\"\n,\nresponse_model\n=\nNone\n)\nasync\ndef\nget_portal\n(\nteleport\n:\nbool\n=\nFalse\n)\n->\nUnion\n[\nResponse\n,\ndict\n]:\nif\nteleport\n:\nreturn\nRedirectResponse\n(\nurl\n=\n\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n)\nreturn\n{\n\"message\"\n:\n\"Here's your interdimensional portal.\"\n}\nThis will make FastAPI skip the response model generation and that way you can have any return type annotations you need without it affecting your FastAPI application. 🤓\nResponse Model encoding parameters\n¶\nYour response model could have default values, like:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n=\n10.5\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_exclude_unset\n=\nTrue\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n=\n10.5\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_exclude_unset\n=\nTrue\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n=\n10.5\ntags\n:\nList\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_exclude_unset\n=\nTrue\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\ndescription: Union[str, None] = None\n(or\nstr | None = None\nin Python 3.10) has a default of\nNone\n.\ntax: float = 10.5\nhas a default of\n10.5\n.\ntags: List[str] = []\nhas a default of an empty list:\n[]\n.\nbut you might want to omit them from the result if they were not actually stored.\nFor example, if you have models with many optional attributes in a NoSQL database, but you don't want to send very long JSON responses full of default values.\nUse the\nresponse_model_exclude_unset\nparameter\n¶\nYou can set the\npath operation decorator\nparameter\nresponse_model_exclude_unset=True\n:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n=\n10.5\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_exclude_unset\n=\nTrue\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n=\n10.5\ntags\n:\nlist\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_exclude_unset\n=\nTrue\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n=\n10.5\ntags\n:\nList\n[\nstr\n]\n=\n[]\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_exclude_unset\n=\nTrue\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\nand those default values won't be included in the response, only the values actually set.\nSo, if you send a request to that\npath operation\nfor the item with ID\nfoo\n, the response (not including default values) will be:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n}\nInfo\nIn Pydantic v1 the method was called\n.dict()\n, it was deprecated (but still supported) in Pydantic v2, and renamed to\n.model_dump()\n.\nThe examples here use\n.dict()\nfor compatibility with Pydantic v1, but you should use\n.model_dump()\ninstead if you can use Pydantic v2.\nInfo\nFastAPI uses Pydantic model's\n.dict()\nwith\nits\nexclude_unset\nparameter\nto achieve this.\nInfo\nYou can also use:\nresponse_model_exclude_defaults=True\nresponse_model_exclude_none=True\nas described in\nthe Pydantic docs\nfor\nexclude_defaults\nand\nexclude_none\n.\nData with values for fields with defaults\n¶\nBut if your data has values for the model's fields with default values, like the item with ID\nbar\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n}\nthey will be included in the response.\nData with the same values as the defaults\n¶\nIf the data has the same values as the default ones, like the item with ID\nbaz\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\nNone\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n\"tags\"\n:\n[]\n}\nFastAPI is smart enough (actually, Pydantic is smart enough) to realize that, even though\ndescription\n,\ntax\n, and\ntags\nhave the same values as the defaults, they were set explicitly (instead of taken from the defaults).\nSo, they will be included in the JSON response.\nTip\nNotice that the default values can be anything, not only\nNone\n.\nThey can be a list (\n[]\n), a\nfloat\nof\n10.5\n, etc.\nresponse_model_include\nand\nresponse_model_exclude\n¶\nYou can also use the\npath operation decorator\nparameters\nresponse_model_include\nand\nresponse_model_exclude\n.\nThey take a\nset\nof\nstr\nwith the name of the attributes to include (omitting the rest) or to exclude (including the rest).\nThis can be used as a quick shortcut if you have only one Pydantic model and want to remove some data from the output.\nTip\nBut it is still recommended to use the ideas above, using multiple classes, instead of these parameters.\nThis is because the JSON Schema generated in your app's OpenAPI (and the docs) will still be the one for the complete model, even if you use\nresponse_model_include\nor\nresponse_model_exclude\nto omit some attributes.\nThis also applies to\nresponse_model_by_alias\nthat works similarly.\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n=\n10.5\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The Bar fighters\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\n\"There goes my baz\"\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n/name\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_include\n=\n{\n\"name\"\n,\n\"description\"\n},\n)\nasync\ndef\nread_item_name\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\nget\n(\n\"/items/\n{item_id}\n/public\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_exclude\n=\n{\n\"tax\"\n})\nasync\ndef\nread_item_public_data\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n=\n10.5\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The Bar fighters\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\n\"There goes my baz\"\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n/name\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_include\n=\n{\n\"name\"\n,\n\"description\"\n},\n)\nasync\ndef\nread_item_name\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\nget\n(\n\"/items/\n{item_id}\n/public\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_exclude\n=\n{\n\"tax\"\n})\nasync\ndef\nread_item_public_data\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\nTip\nThe syntax\n{\"name\", \"description\"}\ncreates a\nset\nwith those two values.\nIt is equivalent to\nset([\"name\", \"description\"])\n.\nUsing\nlist\ns instead of\nset\ns\n¶\nIf you forget to use a\nset\nand use a\nlist\nor\ntuple\ninstead, FastAPI will still convert it to a\nset\nand it will work correctly:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n=\n10.5\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The Bar fighters\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\n\"There goes my baz\"\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n/name\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_include\n=\n[\n\"name\"\n,\n\"description\"\n],\n)\nasync\ndef\nread_item_name\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\nget\n(\n\"/items/\n{item_id}\n/public\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_exclude\n=\n[\n\"tax\"\n])\nasync\ndef\nread_item_public_data\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n=\n10.5\nitems\n=\n{\n\"foo\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"price\"\n:\n50.2\n},\n\"bar\"\n:\n{\n\"name\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The Bar fighters\"\n,\n\"price\"\n:\n62\n,\n\"tax\"\n:\n20.2\n},\n\"baz\"\n:\n{\n\"name\"\n:\n\"Baz\"\n,\n\"description\"\n:\n\"There goes my baz\"\n,\n\"price\"\n:\n50.2\n,\n\"tax\"\n:\n10.5\n,\n},\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n/name\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_include\n=\n[\n\"name\"\n,\n\"description\"\n],\n)\nasync\ndef\nread_item_name\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\n@app\n.\nget\n(\n\"/items/\n{item_id}\n/public\"\n,\nresponse_model\n=\nItem\n,\nresponse_model_exclude\n=\n[\n\"tax\"\n])\nasync\ndef\nread_item_public_data\n(\nitem_id\n:\nstr\n):\nreturn\nitems\n[\nitem_id\n]\nRecap\n¶\nUse the\npath operation decorator's\nparameter\nresponse_model\nto define response models and especially to ensure private data is filtered out.\nUse\nresponse_model_exclude_unset\nto return only the values explicitly set.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/response/",
    "title": "Responseclass¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nResponse\nclass\nTable of contents\nResponse\nmedia_type\ncharset\nstatus_code\nbackground\nbody\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nResponse\nmedia_type\ncharset\nstatus_code\nbackground\nbody\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nFastAPI\nReference\nResponse\nclass\n¶\nYou can declare a parameter in a\npath operation function\nor dependency to be of type\nResponse\nand then you can set data for the response like headers or cookies.\nYou can also use it directly to create an instance of it and return it from your\npath operations\n.\nYou can import it directly from\nfastapi\n:\nfrom\nfastapi\nimport\nResponse\nfastapi.Response\n¶\nResponse\n(\ncontent\n=\nNone\n,\nstatus_code\n=\n200\n,\nheaders\n=\nNone\n,\nmedia_type\n=\nNone\n,\nbackground\n=\nNone\n,\n)\nSource code in\nstarlette/responses.py\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\ndef\n__init__\n(\nself\n,\ncontent\n:\nAny\n=\nNone\n,\nstatus_code\n:\nint\n=\n200\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nmedia_type\n:\nstr\n|\nNone\n=\nNone\n,\nbackground\n:\nBackgroundTask\n|\nNone\n=\nNone\n,\n)\n->\nNone\n:\nself\n.\nstatus_code\n=\nstatus_code\nif\nmedia_type\nis\nnot\nNone\n:\nself\n.\nmedia_type\n=\nmedia_type\nself\n.\nbackground\n=\nbackground\nself\n.\nbody\n=\nself\n.\nrender\n(\ncontent\n)\nself\n.\ninit_headers\n(\nheaders\n)\nmedia_type\nclass-attribute\ninstance-attribute\n¶\nmedia_type\n=\nNone\ncharset\nclass-attribute\ninstance-attribute\n¶\ncharset\n=\n'utf-8'\nstatus_code\ninstance-attribute\n¶\nstatus_code\n=\nstatus_code\nbackground\ninstance-attribute\n¶\nbackground\n=\nbackground\nbody\ninstance-attribute\n¶\nbody\n=\nrender\n(\ncontent\n)\nheaders\nproperty\n¶\nheaders\nrender\n¶\nrender\n(\ncontent\n)\nSource code in\nstarlette/responses.py\n50\n51\n52\n53\n54\n55\ndef\nrender\n(\nself\n,\ncontent\n:\nAny\n)\n->\nbytes\n|\nmemoryview\n:\nif\ncontent\nis\nNone\n:\nreturn\nb\n\"\"\nif\nisinstance\n(\ncontent\n,\n(\nbytes\n,\nmemoryview\n)):\nreturn\ncontent\nreturn\ncontent\n.\nencode\n(\nself\n.\ncharset\n)\n# type: ignore\ninit_headers\n¶\ninit_headers\n(\nheaders\n=\nNone\n)\nSource code in\nstarlette/responses.py\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\ndef\ninit_headers\n(\nself\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n)\n->\nNone\n:\nif\nheaders\nis\nNone\n:\nraw_headers\n:\nlist\n[\ntuple\n[\nbytes\n,\nbytes\n]]\n=\n[]\npopulate_content_length\n=\nTrue\npopulate_content_type\n=\nTrue\nelse\n:\nraw_headers\n=\n[(\nk\n.\nlower\n()\n.\nencode\n(\n\"latin-1\"\n),\nv\n.\nencode\n(\n\"latin-1\"\n))\nfor\nk\n,\nv\nin\nheaders\n.\nitems\n()]\nkeys\n=\n[\nh\n[\n0\n]\nfor\nh\nin\nraw_headers\n]\npopulate_content_length\n=\nb\n\"content-length\"\nnot\nin\nkeys\npopulate_content_type\n=\nb\n\"content-type\"\nnot\nin\nkeys\nbody\n=\ngetattr\n(\nself\n,\n\"body\"\n,\nNone\n)\nif\n(\nbody\nis\nnot\nNone\nand\npopulate_content_length\nand\nnot\n(\nself\n.\nstatus_code\n<\n200\nor\nself\n.\nstatus_code\nin\n(\n204\n,\n304\n))\n):\ncontent_length\n=\nstr\n(\nlen\n(\nbody\n))\nraw_headers\n.\nappend\n((\nb\n\"content-length\"\n,\ncontent_length\n.\nencode\n(\n\"latin-1\"\n)))\ncontent_type\n=\nself\n.\nmedia_type\nif\ncontent_type\nis\nnot\nNone\nand\npopulate_content_type\n:\nif\ncontent_type\n.\nstartswith\n(\n\"text/\"\n)\nand\n\"charset=\"\nnot\nin\ncontent_type\n.\nlower\n():\ncontent_type\n+=\n\"; charset=\"\n+\nself\n.\ncharset\nraw_headers\n.\nappend\n((\nb\n\"content-type\"\n,\ncontent_type\n.\nencode\n(\n\"latin-1\"\n)))\nself\n.\nraw_headers\n=\nraw_headers\nset_cookie\n¶\nset_cookie\n(\nkey\n,\nvalue\n=\n\"\"\n,\nmax_age\n=\nNone\n,\nexpires\n=\nNone\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\npartitioned\n=\nFalse\n,\n)\nSource code in\nstarlette/responses.py\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\ndef\nset_cookie\n(\nself\n,\nkey\n:\nstr\n,\nvalue\n:\nstr\n=\n\"\"\n,\nmax_age\n:\nint\n|\nNone\n=\nNone\n,\nexpires\n:\ndatetime\n|\nstr\n|\nint\n|\nNone\n=\nNone\n,\npath\n:\nstr\n|\nNone\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\npartitioned\n:\nbool\n=\nFalse\n,\n)\n->\nNone\n:\ncookie\n:\nhttp\n.\ncookies\n.\nBaseCookie\n[\nstr\n]\n=\nhttp\n.\ncookies\n.\nSimpleCookie\n()\ncookie\n[\nkey\n]\n=\nvalue\nif\nmax_age\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"max-age\"\n]\n=\nmax_age\nif\nexpires\nis\nnot\nNone\n:\nif\nisinstance\n(\nexpires\n,\ndatetime\n):\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nformat_datetime\n(\nexpires\n,\nusegmt\n=\nTrue\n)\nelse\n:\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nexpires\nif\npath\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"path\"\n]\n=\npath\nif\ndomain\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"domain\"\n]\n=\ndomain\nif\nsecure\n:\ncookie\n[\nkey\n][\n\"secure\"\n]\n=\nTrue\nif\nhttponly\n:\ncookie\n[\nkey\n][\n\"httponly\"\n]\n=\nTrue\nif\nsamesite\nis\nnot\nNone\n:\nassert\nsamesite\n.\nlower\n()\nin\n[\n\"strict\"\n,\n\"lax\"\n,\n\"none\"\n,\n],\n\"samesite must be either 'strict', 'lax' or 'none'\"\ncookie\n[\nkey\n][\n\"samesite\"\n]\n=\nsamesite\nif\npartitioned\n:\nif\nsys\n.\nversion_info\n<\n(\n3\n,\n14\n):\nraise\nValueError\n(\n\"Partitioned cookies are only supported in Python 3.14 and above.\"\n)\n# pragma: no cover\ncookie\n[\nkey\n][\n\"partitioned\"\n]\n=\nTrue\n# pragma: no cover\ncookie_val\n=\ncookie\n.\noutput\n(\nheader\n=\n\"\"\n)\n.\nstrip\n()\nself\n.\nraw_headers\n.\nappend\n((\nb\n\"set-cookie\"\n,\ncookie_val\n.\nencode\n(\n\"latin-1\"\n)))\ndelete_cookie\n¶\ndelete_cookie\n(\nkey\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\n)\nSource code in\nstarlette/responses.py\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\ndef\ndelete_cookie\n(\nself\n,\nkey\n:\nstr\n,\npath\n:\nstr\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\n)\n->\nNone\n:\nself\n.\nset_cookie\n(\nkey\n,\nmax_age\n=\n0\n,\nexpires\n=\n0\n,\npath\n=\npath\n,\ndomain\n=\ndomain\n,\nsecure\n=\nsecure\n,\nhttponly\n=\nhttponly\n,\nsamesite\n=\nsamesite\n,\n)\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/wsgi/",
    "title": "Including WSGI - Flask, Django, others¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nIncluding WSGI - Flask, Django, others\nTable of contents\nUsing\nWSGIMiddleware\nCheck it\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUsing\nWSGIMiddleware\nCheck it\nFastAPI\nLearn\nAdvanced User Guide\nIncluding WSGI - Flask, Django, others\n¶\nYou can mount WSGI applications as you saw with\nSub Applications - Mounts\n,\nBehind a Proxy\n.\nFor that, you can use the\nWSGIMiddleware\nand use it to wrap your WSGI application, for example, Flask, Django, etc.\nUsing\nWSGIMiddleware\n¶\nYou need to import\nWSGIMiddleware\n.\nThen wrap the WSGI (e.g. Flask) app with the middleware.\nAnd then mount that under a path.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.middleware.wsgi\nimport\nWSGIMiddleware\nfrom\nflask\nimport\nFlask\n,\nrequest\nfrom\nmarkupsafe\nimport\nescape\nflask_app\n=\nFlask\n(\n__name__\n)\n@flask_app\n.\nroute\n(\n\"/\"\n)\ndef\nflask_main\n():\nname\n=\nrequest\n.\nargs\n.\nget\n(\n\"name\"\n,\n\"World\"\n)\nreturn\nf\n\"Hello,\n{\nescape\n(\nname\n)\n}\nfrom Flask!\"\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/v2\"\n)\ndef\nread_main\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\napp\n.\nmount\n(\n\"/v1\"\n,\nWSGIMiddleware\n(\nflask_app\n))\nCheck it\n¶\nNow, every request under the path\n/v1/\nwill be handled by the Flask application.\nAnd the rest will be handled by\nFastAPI\n.\nIf you run it and go to\nhttp://localhost:8000/v1/\nyou will see the response from Flask:\nHello, World from Flask!\nAnd if you go to\nhttp://localhost:8000/v2\nyou will see the response from FastAPI:\n{\n\"message\"\n:\n\"Hello World\"\n}\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/openapi/models/",
    "title": "OpenAPImodels¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nOpenAPI\nmodels\nTable of contents\nmodels\nSchemaType\nSchemaOrBool\nSecurityScheme\nBaseModelWithConfig\nmodel_config\nConfig\nextra\nContact\nname\nurl\nemail\nmodel_config\nConfig\nextra\nLicense\nname\nidentifier\nurl\nmodel_config\nConfig\nextra\nInfo\ntitle\nsummary\ndescription\ntermsOfService\ncontact\nlicense\nversion\nmodel_config\nConfig\nextra\nServerVariable\nenum\ndefault\ndescription\nmodel_config\nConfig\nextra\nServer\nurl\ndescription\nvariables\nmodel_config\nConfig\nextra\nReference\nref\nDiscriminator\npropertyName\nmapping\nXML\nname\nnamespace\nprefix\nattribute\nwrapped\nmodel_config\nConfig\nextra\nExternalDocumentation\ndescription\nurl\nmodel_config\nConfig\nextra\nSchema\nschema_\nvocabulary\nid\nanchor\ndynamicAnchor\nref\ndynamicRef\ndefs\ncomment\nallOf\nanyOf\noneOf\nnot_\nif_\nthen\nelse_\ndependentSchemas\nprefixItems\nitems\ncontains\nproperties\npatternProperties\nadditionalProperties\npropertyNames\nunevaluatedItems\nunevaluatedProperties\ntype\nenum\nconst\nmultipleOf\nmaximum\nexclusiveMaximum\nminimum\nexclusiveMinimum\nmaxLength\nminLength\npattern\nmaxItems\nminItems\nuniqueItems\nmaxContains\nminContains\nmaxProperties\nminProperties\nrequired\ndependentRequired\nformat\ncontentEncoding\ncontentMediaType\ncontentSchema\ntitle\ndescription\ndefault\ndeprecated\nreadOnly\nwriteOnly\nexamples\ndiscriminator\nxml\nexternalDocs\nexample\nmodel_config\nConfig\nextra\nExample\nsummary\ndescription\nvalue\nexternalValue\nConfig\nextra\nParameterInType\nquery\nheader\npath\ncookie\nEncoding\ncontentType\nheaders\nstyle\nexplode\nallowReserved\nmodel_config\nConfig\nextra\nMediaType\nschema_\nexample\nexamples\nencoding\nmodel_config\nConfig\nextra\nParameterBase\ndescription\nrequired\ndeprecated\nstyle\nexplode\nallowReserved\nschema_\nexample\nexamples\ncontent\nmodel_config\nConfig\nextra\nParameter\nname\nin_\nmodel_config\ndescription\nrequired\ndeprecated\nstyle\nexplode\nallowReserved\nschema_\nexample\nexamples\ncontent\nConfig\nextra\nHeader\nmodel_config\ndescription\nrequired\ndeprecated\nstyle\nexplode\nallowReserved\nschema_\nexample\nexamples\ncontent\nConfig\nextra\nRequestBody\ndescription\ncontent\nrequired\nmodel_config\nConfig\nextra\nLink\noperationRef\noperationId\nparameters\nrequestBody\ndescription\nserver\nmodel_config\nConfig\nextra\nResponse\ndescription\nheaders\ncontent\nlinks\nmodel_config\nConfig\nextra\nOperation\ntags\nsummary\ndescription\nexternalDocs\noperationId\nparameters\nrequestBody\nresponses\ncallbacks\ndeprecated\nsecurity\nservers\nmodel_config\nConfig\nextra\nPathItem\nref\nsummary\ndescription\nget\nput\npost\ndelete\noptions\nhead\npatch\ntrace\nservers\nparameters\nmodel_config\nConfig\nextra\nSecuritySchemeType\napiKey\nhttp\noauth2\nopenIdConnect\nSecurityBase\ntype_\ndescription\nmodel_config\nConfig\nextra\nAPIKeyIn\nquery\nheader\ncookie\nAPIKey\ntype_\nin_\nname\nmodel_config\ndescription\nConfig\nextra\nHTTPBase\ntype_\nscheme\nmodel_config\ndescription\nConfig\nextra\nHTTPBearer\nscheme\nbearerFormat\nmodel_config\ntype_\ndescription\nConfig\nextra\nOAuthFlow\nrefreshUrl\nscopes\nmodel_config\nConfig\nextra\nOAuthFlowImplicit\nauthorizationUrl\nmodel_config\nrefreshUrl\nscopes\nConfig\nextra\nOAuthFlowPassword\ntokenUrl\nmodel_config\nrefreshUrl\nscopes\nConfig\nextra\nOAuthFlowClientCredentials\ntokenUrl\nmodel_config\nrefreshUrl\nscopes\nConfig\nextra\nOAuthFlowAuthorizationCode\nauthorizationUrl\ntokenUrl\nmodel_config\nrefreshUrl\nscopes\nConfig\nextra\nOAuthFlows\nimplicit\npassword\nclientCredentials\nauthorizationCode\nmodel_config\nConfig\nextra\nOAuth2\ntype_\nflows\nmodel_config\ndescription\nConfig\nextra\nOpenIdConnect\ntype_\nopenIdConnectUrl\nmodel_config\ndescription\nConfig\nextra\nComponents\nschemas\nresponses\nparameters\nexamples\nrequestBodies\nheaders\nsecuritySchemes\nlinks\ncallbacks\npathItems\nmodel_config\nConfig\nextra\nTag\nname\ndescription\nexternalDocs\nmodel_config\nConfig\nextra\nOpenAPI\nopenapi\ninfo\njsonSchemaDialect\nservers\npaths\nwebhooks\ncomponents\nsecurity\ntags\nexternalDocs\nmodel_config\nConfig\nextra\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nmodels\nSchemaType\nSchemaOrBool\nSecurityScheme\nBaseModelWithConfig\nmodel_config\nConfig\nextra\nContact\nname\nurl\nemail\nmodel_config\nConfig\nextra\nLicense\nname\nidentifier\nurl\nmodel_config\nConfig\nextra\nInfo\ntitle\nsummary\ndescription\ntermsOfService\ncontact\nlicense\nversion\nmodel_config\nConfig\nextra\nServerVariable\nenum\ndefault\ndescription\nmodel_config\nConfig\nextra\nServer\nurl\ndescription\nvariables\nmodel_config\nConfig\nextra\nReference\nref\nDiscriminator\npropertyName\nmapping\nXML\nname\nnamespace\nprefix\nattribute\nwrapped\nmodel_config\nConfig\nextra\nExternalDocumentation\ndescription\nurl\nmodel_config\nConfig\nextra\nSchema\nschema_\nvocabulary\nid\nanchor\ndynamicAnchor\nref\ndynamicRef\ndefs\ncomment\nallOf\nanyOf\noneOf\nnot_\nif_\nthen\nelse_\ndependentSchemas\nprefixItems\nitems\ncontains\nproperties\npatternProperties\nadditionalProperties\npropertyNames\nunevaluatedItems\nunevaluatedProperties\ntype\nenum\nconst\nmultipleOf\nmaximum\nexclusiveMaximum\nminimum\nexclusiveMinimum\nmaxLength\nminLength\npattern\nmaxItems\nminItems\nuniqueItems\nmaxContains\nminContains\nmaxProperties\nminProperties\nrequired\ndependentRequired\nformat\ncontentEncoding\ncontentMediaType\ncontentSchema\ntitle\ndescription\ndefault\ndeprecated\nreadOnly\nwriteOnly\nexamples\ndiscriminator\nxml\nexternalDocs\nexample\nmodel_config\nConfig\nextra\nExample\nsummary\ndescription\nvalue\nexternalValue\nConfig\nextra\nParameterInType\nquery\nheader\npath\ncookie\nEncoding\ncontentType\nheaders\nstyle\nexplode\nallowReserved\nmodel_config\nConfig\nextra\nMediaType\nschema_\nexample\nexamples\nencoding\nmodel_config\nConfig\nextra\nParameterBase\ndescription\nrequired\ndeprecated\nstyle\nexplode\nallowReserved\nschema_\nexample\nexamples\ncontent\nmodel_config\nConfig\nextra\nParameter\nname\nin_\nmodel_config\ndescription\nrequired\ndeprecated\nstyle\nexplode\nallowReserved\nschema_\nexample\nexamples\ncontent\nConfig\nextra\nHeader\nmodel_config\ndescription\nrequired\ndeprecated\nstyle\nexplode\nallowReserved\nschema_\nexample\nexamples\ncontent\nConfig\nextra\nRequestBody\ndescription\ncontent\nrequired\nmodel_config\nConfig\nextra\nLink\noperationRef\noperationId\nparameters\nrequestBody\ndescription\nserver\nmodel_config\nConfig\nextra\nResponse\ndescription\nheaders\ncontent\nlinks\nmodel_config\nConfig\nextra\nOperation\ntags\nsummary\ndescription\nexternalDocs\noperationId\nparameters\nrequestBody\nresponses\ncallbacks\ndeprecated\nsecurity\nservers\nmodel_config\nConfig\nextra\nPathItem\nref\nsummary\ndescription\nget\nput\npost\ndelete\noptions\nhead\npatch\ntrace\nservers\nparameters\nmodel_config\nConfig\nextra\nSecuritySchemeType\napiKey\nhttp\noauth2\nopenIdConnect\nSecurityBase\ntype_\ndescription\nmodel_config\nConfig\nextra\nAPIKeyIn\nquery\nheader\ncookie\nAPIKey\ntype_\nin_\nname\nmodel_config\ndescription\nConfig\nextra\nHTTPBase\ntype_\nscheme\nmodel_config\ndescription\nConfig\nextra\nHTTPBearer\nscheme\nbearerFormat\nmodel_config\ntype_\ndescription\nConfig\nextra\nOAuthFlow\nrefreshUrl\nscopes\nmodel_config\nConfig\nextra\nOAuthFlowImplicit\nauthorizationUrl\nmodel_config\nrefreshUrl\nscopes\nConfig\nextra\nOAuthFlowPassword\ntokenUrl\nmodel_config\nrefreshUrl\nscopes\nConfig\nextra\nOAuthFlowClientCredentials\ntokenUrl\nmodel_config\nrefreshUrl\nscopes\nConfig\nextra\nOAuthFlowAuthorizationCode\nauthorizationUrl\ntokenUrl\nmodel_config\nrefreshUrl\nscopes\nConfig\nextra\nOAuthFlows\nimplicit\npassword\nclientCredentials\nauthorizationCode\nmodel_config\nConfig\nextra\nOAuth2\ntype_\nflows\nmodel_config\ndescription\nConfig\nextra\nOpenIdConnect\ntype_\nopenIdConnectUrl\nmodel_config\ndescription\nConfig\nextra\nComponents\nschemas\nresponses\nparameters\nexamples\nrequestBodies\nheaders\nsecuritySchemes\nlinks\ncallbacks\npathItems\nmodel_config\nConfig\nextra\nTag\nname\ndescription\nexternalDocs\nmodel_config\nConfig\nextra\nOpenAPI\nopenapi\ninfo\njsonSchemaDialect\nservers\npaths\nwebhooks\ncomponents\nsecurity\ntags\nexternalDocs\nmodel_config\nConfig\nextra\nFastAPI\nReference\nOpenAPI\nOpenAPI\nmodels\n¶\nOpenAPI Pydantic models used to generate and validate the generated OpenAPI.\nfastapi.openapi.models\n¶\nSchemaType\nmodule-attribute\n¶\nSchemaType\n=\nLiteral\n[\n\"array\"\n,\n\"boolean\"\n,\n\"integer\"\n,\n\"null\"\n,\n\"number\"\n,\n\"object\"\n,\n\"string\"\n,\n]\nSchemaOrBool\nmodule-attribute\n¶\nSchemaOrBool\n=\nUnion\n[\nSchema\n,\nbool\n]\nSecurityScheme\nmodule-attribute\n¶\nSecurityScheme\n=\nUnion\n[\nAPIKey\n,\nHTTPBase\n,\nOAuth2\n,\nOpenIdConnect\n,\nHTTPBearer\n]\nBaseModelWithConfig\n¶\nBases:\nBaseModel\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nContact\n¶\nBases:\nBaseModelWithConfig\nname\nclass-attribute\ninstance-attribute\n¶\nname\n=\nNone\nurl\nclass-attribute\ninstance-attribute\n¶\nurl\n=\nNone\nemail\nclass-attribute\ninstance-attribute\n¶\nemail\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nLicense\n¶\nBases:\nBaseModelWithConfig\nname\ninstance-attribute\n¶\nname\nidentifier\nclass-attribute\ninstance-attribute\n¶\nidentifier\n=\nNone\nurl\nclass-attribute\ninstance-attribute\n¶\nurl\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nInfo\n¶\nBases:\nBaseModelWithConfig\ntitle\ninstance-attribute\n¶\ntitle\nsummary\nclass-attribute\ninstance-attribute\n¶\nsummary\n=\nNone\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\ntermsOfService\nclass-attribute\ninstance-attribute\n¶\ntermsOfService\n=\nNone\ncontact\nclass-attribute\ninstance-attribute\n¶\ncontact\n=\nNone\nlicense\nclass-attribute\ninstance-attribute\n¶\nlicense\n=\nNone\nversion\ninstance-attribute\n¶\nversion\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nServerVariable\n¶\nBases:\nBaseModelWithConfig\nenum\nclass-attribute\ninstance-attribute\n¶\nenum\n=\nNone\ndefault\ninstance-attribute\n¶\ndefault\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nServer\n¶\nBases:\nBaseModelWithConfig\nurl\ninstance-attribute\n¶\nurl\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nvariables\nclass-attribute\ninstance-attribute\n¶\nvariables\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nReference\n¶\nBases:\nBaseModel\nref\nclass-attribute\ninstance-attribute\n¶\nref\n=\nField\n(\nalias\n=\n'$ref'\n)\nDiscriminator\n¶\nBases:\nBaseModel\npropertyName\ninstance-attribute\n¶\npropertyName\nmapping\nclass-attribute\ninstance-attribute\n¶\nmapping\n=\nNone\nXML\n¶\nBases:\nBaseModelWithConfig\nname\nclass-attribute\ninstance-attribute\n¶\nname\n=\nNone\nnamespace\nclass-attribute\ninstance-attribute\n¶\nnamespace\n=\nNone\nprefix\nclass-attribute\ninstance-attribute\n¶\nprefix\n=\nNone\nattribute\nclass-attribute\ninstance-attribute\n¶\nattribute\n=\nNone\nwrapped\nclass-attribute\ninstance-attribute\n¶\nwrapped\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nExternalDocumentation\n¶\nBases:\nBaseModelWithConfig\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nurl\ninstance-attribute\n¶\nurl\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nSchema\n¶\nBases:\nBaseModelWithConfig\nschema_\nclass-attribute\ninstance-attribute\n¶\nschema_\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'$schema'\n)\nvocabulary\nclass-attribute\ninstance-attribute\n¶\nvocabulary\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'$vocabulary'\n)\nid\nclass-attribute\ninstance-attribute\n¶\nid\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'$id'\n)\nanchor\nclass-attribute\ninstance-attribute\n¶\nanchor\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'$anchor'\n)\ndynamicAnchor\nclass-attribute\ninstance-attribute\n¶\ndynamicAnchor\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'$dynamicAnchor'\n)\nref\nclass-attribute\ninstance-attribute\n¶\nref\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'$ref'\n)\ndynamicRef\nclass-attribute\ninstance-attribute\n¶\ndynamicRef\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'$dynamicRef'\n)\ndefs\nclass-attribute\ninstance-attribute\n¶\ndefs\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'$defs'\n)\ncomment\nclass-attribute\ninstance-attribute\n¶\ncomment\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'$comment'\n)\nallOf\nclass-attribute\ninstance-attribute\n¶\nallOf\n=\nNone\nanyOf\nclass-attribute\ninstance-attribute\n¶\nanyOf\n=\nNone\noneOf\nclass-attribute\ninstance-attribute\n¶\noneOf\n=\nNone\nnot_\nclass-attribute\ninstance-attribute\n¶\nnot_\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'not'\n)\nif_\nclass-attribute\ninstance-attribute\n¶\nif_\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'if'\n)\nthen\nclass-attribute\ninstance-attribute\n¶\nthen\n=\nNone\nelse_\nclass-attribute\ninstance-attribute\n¶\nelse_\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'else'\n)\ndependentSchemas\nclass-attribute\ninstance-attribute\n¶\ndependentSchemas\n=\nNone\nprefixItems\nclass-attribute\ninstance-attribute\n¶\nprefixItems\n=\nNone\nitems\nclass-attribute\ninstance-attribute\n¶\nitems\n=\nNone\ncontains\nclass-attribute\ninstance-attribute\n¶\ncontains\n=\nNone\nproperties\nclass-attribute\ninstance-attribute\n¶\nproperties\n=\nNone\npatternProperties\nclass-attribute\ninstance-attribute\n¶\npatternProperties\n=\nNone\nadditionalProperties\nclass-attribute\ninstance-attribute\n¶\nadditionalProperties\n=\nNone\npropertyNames\nclass-attribute\ninstance-attribute\n¶\npropertyNames\n=\nNone\nunevaluatedItems\nclass-attribute\ninstance-attribute\n¶\nunevaluatedItems\n=\nNone\nunevaluatedProperties\nclass-attribute\ninstance-attribute\n¶\nunevaluatedProperties\n=\nNone\ntype\nclass-attribute\ninstance-attribute\n¶\ntype\n=\nNone\nenum\nclass-attribute\ninstance-attribute\n¶\nenum\n=\nNone\nconst\nclass-attribute\ninstance-attribute\n¶\nconst\n=\nNone\nmultipleOf\nclass-attribute\ninstance-attribute\n¶\nmultipleOf\n=\nField\n(\ndefault\n=\nNone\n,\ngt\n=\n0\n)\nmaximum\nclass-attribute\ninstance-attribute\n¶\nmaximum\n=\nNone\nexclusiveMaximum\nclass-attribute\ninstance-attribute\n¶\nexclusiveMaximum\n=\nNone\nminimum\nclass-attribute\ninstance-attribute\n¶\nminimum\n=\nNone\nexclusiveMinimum\nclass-attribute\ninstance-attribute\n¶\nexclusiveMinimum\n=\nNone\nmaxLength\nclass-attribute\ninstance-attribute\n¶\nmaxLength\n=\nField\n(\ndefault\n=\nNone\n,\nge\n=\n0\n)\nminLength\nclass-attribute\ninstance-attribute\n¶\nminLength\n=\nField\n(\ndefault\n=\nNone\n,\nge\n=\n0\n)\npattern\nclass-attribute\ninstance-attribute\n¶\npattern\n=\nNone\nmaxItems\nclass-attribute\ninstance-attribute\n¶\nmaxItems\n=\nField\n(\ndefault\n=\nNone\n,\nge\n=\n0\n)\nminItems\nclass-attribute\ninstance-attribute\n¶\nminItems\n=\nField\n(\ndefault\n=\nNone\n,\nge\n=\n0\n)\nuniqueItems\nclass-attribute\ninstance-attribute\n¶\nuniqueItems\n=\nNone\nmaxContains\nclass-attribute\ninstance-attribute\n¶\nmaxContains\n=\nField\n(\ndefault\n=\nNone\n,\nge\n=\n0\n)\nminContains\nclass-attribute\ninstance-attribute\n¶\nminContains\n=\nField\n(\ndefault\n=\nNone\n,\nge\n=\n0\n)\nmaxProperties\nclass-attribute\ninstance-attribute\n¶\nmaxProperties\n=\nField\n(\ndefault\n=\nNone\n,\nge\n=\n0\n)\nminProperties\nclass-attribute\ninstance-attribute\n¶\nminProperties\n=\nField\n(\ndefault\n=\nNone\n,\nge\n=\n0\n)\nrequired\nclass-attribute\ninstance-attribute\n¶\nrequired\n=\nNone\ndependentRequired\nclass-attribute\ninstance-attribute\n¶\ndependentRequired\n=\nNone\nformat\nclass-attribute\ninstance-attribute\n¶\nformat\n=\nNone\ncontentEncoding\nclass-attribute\ninstance-attribute\n¶\ncontentEncoding\n=\nNone\ncontentMediaType\nclass-attribute\ninstance-attribute\n¶\ncontentMediaType\n=\nNone\ncontentSchema\nclass-attribute\ninstance-attribute\n¶\ncontentSchema\n=\nNone\ntitle\nclass-attribute\ninstance-attribute\n¶\ntitle\n=\nNone\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\ndefault\nclass-attribute\ninstance-attribute\n¶\ndefault\n=\nNone\ndeprecated\nclass-attribute\ninstance-attribute\n¶\ndeprecated\n=\nNone\nreadOnly\nclass-attribute\ninstance-attribute\n¶\nreadOnly\n=\nNone\nwriteOnly\nclass-attribute\ninstance-attribute\n¶\nwriteOnly\n=\nNone\nexamples\nclass-attribute\ninstance-attribute\n¶\nexamples\n=\nNone\ndiscriminator\nclass-attribute\ninstance-attribute\n¶\ndiscriminator\n=\nNone\nxml\nclass-attribute\ninstance-attribute\n¶\nxml\n=\nNone\nexternalDocs\nclass-attribute\ninstance-attribute\n¶\nexternalDocs\n=\nNone\nexample\nclass-attribute\ninstance-attribute\n¶\nexample\n=\nNone\nDeprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, although still supported. Use examples instead.\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nExample\n¶\nBases:\nTypedDict\nsummary\ninstance-attribute\n¶\nsummary\ndescription\ninstance-attribute\n¶\ndescription\nvalue\ninstance-attribute\n¶\nvalue\nexternalValue\ninstance-attribute\n¶\nexternalValue\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nParameterInType\n¶\nBases:\nEnum\nquery\nclass-attribute\ninstance-attribute\n¶\nquery\n=\n'query'\nheader\nclass-attribute\ninstance-attribute\n¶\nheader\n=\n'header'\npath\nclass-attribute\ninstance-attribute\n¶\npath\n=\n'path'\ncookie\nclass-attribute\ninstance-attribute\n¶\ncookie\n=\n'cookie'\nEncoding\n¶\nBases:\nBaseModelWithConfig\ncontentType\nclass-attribute\ninstance-attribute\n¶\ncontentType\n=\nNone\nheaders\nclass-attribute\ninstance-attribute\n¶\nheaders\n=\nNone\nstyle\nclass-attribute\ninstance-attribute\n¶\nstyle\n=\nNone\nexplode\nclass-attribute\ninstance-attribute\n¶\nexplode\n=\nNone\nallowReserved\nclass-attribute\ninstance-attribute\n¶\nallowReserved\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nMediaType\n¶\nBases:\nBaseModelWithConfig\nschema_\nclass-attribute\ninstance-attribute\n¶\nschema_\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'schema'\n)\nexample\nclass-attribute\ninstance-attribute\n¶\nexample\n=\nNone\nexamples\nclass-attribute\ninstance-attribute\n¶\nexamples\n=\nNone\nencoding\nclass-attribute\ninstance-attribute\n¶\nencoding\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nParameterBase\n¶\nBases:\nBaseModelWithConfig\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nrequired\nclass-attribute\ninstance-attribute\n¶\nrequired\n=\nNone\ndeprecated\nclass-attribute\ninstance-attribute\n¶\ndeprecated\n=\nNone\nstyle\nclass-attribute\ninstance-attribute\n¶\nstyle\n=\nNone\nexplode\nclass-attribute\ninstance-attribute\n¶\nexplode\n=\nNone\nallowReserved\nclass-attribute\ninstance-attribute\n¶\nallowReserved\n=\nNone\nschema_\nclass-attribute\ninstance-attribute\n¶\nschema_\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'schema'\n)\nexample\nclass-attribute\ninstance-attribute\n¶\nexample\n=\nNone\nexamples\nclass-attribute\ninstance-attribute\n¶\nexamples\n=\nNone\ncontent\nclass-attribute\ninstance-attribute\n¶\ncontent\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nParameter\n¶\nBases:\nParameterBase\nname\ninstance-attribute\n¶\nname\nin_\nclass-attribute\ninstance-attribute\n¶\nin_\n=\nField\n(\nalias\n=\n'in'\n)\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nrequired\nclass-attribute\ninstance-attribute\n¶\nrequired\n=\nNone\ndeprecated\nclass-attribute\ninstance-attribute\n¶\ndeprecated\n=\nNone\nstyle\nclass-attribute\ninstance-attribute\n¶\nstyle\n=\nNone\nexplode\nclass-attribute\ninstance-attribute\n¶\nexplode\n=\nNone\nallowReserved\nclass-attribute\ninstance-attribute\n¶\nallowReserved\n=\nNone\nschema_\nclass-attribute\ninstance-attribute\n¶\nschema_\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'schema'\n)\nexample\nclass-attribute\ninstance-attribute\n¶\nexample\n=\nNone\nexamples\nclass-attribute\ninstance-attribute\n¶\nexamples\n=\nNone\ncontent\nclass-attribute\ninstance-attribute\n¶\ncontent\n=\nNone\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nHeader\n¶\nBases:\nParameterBase\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nrequired\nclass-attribute\ninstance-attribute\n¶\nrequired\n=\nNone\ndeprecated\nclass-attribute\ninstance-attribute\n¶\ndeprecated\n=\nNone\nstyle\nclass-attribute\ninstance-attribute\n¶\nstyle\n=\nNone\nexplode\nclass-attribute\ninstance-attribute\n¶\nexplode\n=\nNone\nallowReserved\nclass-attribute\ninstance-attribute\n¶\nallowReserved\n=\nNone\nschema_\nclass-attribute\ninstance-attribute\n¶\nschema_\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'schema'\n)\nexample\nclass-attribute\ninstance-attribute\n¶\nexample\n=\nNone\nexamples\nclass-attribute\ninstance-attribute\n¶\nexamples\n=\nNone\ncontent\nclass-attribute\ninstance-attribute\n¶\ncontent\n=\nNone\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nRequestBody\n¶\nBases:\nBaseModelWithConfig\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\ncontent\ninstance-attribute\n¶\ncontent\nrequired\nclass-attribute\ninstance-attribute\n¶\nrequired\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nLink\n¶\nBases:\nBaseModelWithConfig\noperationRef\nclass-attribute\ninstance-attribute\n¶\noperationRef\n=\nNone\noperationId\nclass-attribute\ninstance-attribute\n¶\noperationId\n=\nNone\nparameters\nclass-attribute\ninstance-attribute\n¶\nparameters\n=\nNone\nrequestBody\nclass-attribute\ninstance-attribute\n¶\nrequestBody\n=\nNone\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nserver\nclass-attribute\ninstance-attribute\n¶\nserver\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nResponse\n¶\nBases:\nBaseModelWithConfig\ndescription\ninstance-attribute\n¶\ndescription\nheaders\nclass-attribute\ninstance-attribute\n¶\nheaders\n=\nNone\ncontent\nclass-attribute\ninstance-attribute\n¶\ncontent\n=\nNone\nlinks\nclass-attribute\ninstance-attribute\n¶\nlinks\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nOperation\n¶\nBases:\nBaseModelWithConfig\ntags\nclass-attribute\ninstance-attribute\n¶\ntags\n=\nNone\nsummary\nclass-attribute\ninstance-attribute\n¶\nsummary\n=\nNone\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nexternalDocs\nclass-attribute\ninstance-attribute\n¶\nexternalDocs\n=\nNone\noperationId\nclass-attribute\ninstance-attribute\n¶\noperationId\n=\nNone\nparameters\nclass-attribute\ninstance-attribute\n¶\nparameters\n=\nNone\nrequestBody\nclass-attribute\ninstance-attribute\n¶\nrequestBody\n=\nNone\nresponses\nclass-attribute\ninstance-attribute\n¶\nresponses\n=\nNone\ncallbacks\nclass-attribute\ninstance-attribute\n¶\ncallbacks\n=\nNone\ndeprecated\nclass-attribute\ninstance-attribute\n¶\ndeprecated\n=\nNone\nsecurity\nclass-attribute\ninstance-attribute\n¶\nsecurity\n=\nNone\nservers\nclass-attribute\ninstance-attribute\n¶\nservers\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nPathItem\n¶\nBases:\nBaseModelWithConfig\nref\nclass-attribute\ninstance-attribute\n¶\nref\n=\nField\n(\ndefault\n=\nNone\n,\nalias\n=\n'$ref'\n)\nsummary\nclass-attribute\ninstance-attribute\n¶\nsummary\n=\nNone\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nget\nclass-attribute\ninstance-attribute\n¶\nget\n=\nNone\nput\nclass-attribute\ninstance-attribute\n¶\nput\n=\nNone\npost\nclass-attribute\ninstance-attribute\n¶\npost\n=\nNone\ndelete\nclass-attribute\ninstance-attribute\n¶\ndelete\n=\nNone\noptions\nclass-attribute\ninstance-attribute\n¶\noptions\n=\nNone\nhead\nclass-attribute\ninstance-attribute\n¶\nhead\n=\nNone\npatch\nclass-attribute\ninstance-attribute\n¶\npatch\n=\nNone\ntrace\nclass-attribute\ninstance-attribute\n¶\ntrace\n=\nNone\nservers\nclass-attribute\ninstance-attribute\n¶\nservers\n=\nNone\nparameters\nclass-attribute\ninstance-attribute\n¶\nparameters\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nSecuritySchemeType\n¶\nBases:\nEnum\napiKey\nclass-attribute\ninstance-attribute\n¶\napiKey\n=\n'apiKey'\nhttp\nclass-attribute\ninstance-attribute\n¶\nhttp\n=\n'http'\noauth2\nclass-attribute\ninstance-attribute\n¶\noauth2\n=\n'oauth2'\nopenIdConnect\nclass-attribute\ninstance-attribute\n¶\nopenIdConnect\n=\n'openIdConnect'\nSecurityBase\n¶\nBases:\nBaseModelWithConfig\ntype_\nclass-attribute\ninstance-attribute\n¶\ntype_\n=\nField\n(\nalias\n=\n'type'\n)\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nAPIKeyIn\n¶\nBases:\nEnum\nquery\nclass-attribute\ninstance-attribute\n¶\nquery\n=\n'query'\nheader\nclass-attribute\ninstance-attribute\n¶\nheader\n=\n'header'\ncookie\nclass-attribute\ninstance-attribute\n¶\ncookie\n=\n'cookie'\nAPIKey\n¶\nBases:\nSecurityBase\ntype_\nclass-attribute\ninstance-attribute\n¶\ntype_\n=\nField\n(\ndefault\n=\napiKey\n,\nalias\n=\n'type'\n)\nin_\nclass-attribute\ninstance-attribute\n¶\nin_\n=\nField\n(\nalias\n=\n'in'\n)\nname\ninstance-attribute\n¶\nname\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nHTTPBase\n¶\nBases:\nSecurityBase\ntype_\nclass-attribute\ninstance-attribute\n¶\ntype_\n=\nField\n(\ndefault\n=\nhttp\n,\nalias\n=\n'type'\n)\nscheme\ninstance-attribute\n¶\nscheme\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nHTTPBearer\n¶\nBases:\nHTTPBase\nscheme\nclass-attribute\ninstance-attribute\n¶\nscheme\n=\n'bearer'\nbearerFormat\nclass-attribute\ninstance-attribute\n¶\nbearerFormat\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\ntype_\nclass-attribute\ninstance-attribute\n¶\ntype_\n=\nField\n(\ndefault\n=\nhttp\n,\nalias\n=\n'type'\n)\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nOAuthFlow\n¶\nBases:\nBaseModelWithConfig\nrefreshUrl\nclass-attribute\ninstance-attribute\n¶\nrefreshUrl\n=\nNone\nscopes\nclass-attribute\ninstance-attribute\n¶\nscopes\n=\n{}\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nOAuthFlowImplicit\n¶\nBases:\nOAuthFlow\nauthorizationUrl\ninstance-attribute\n¶\nauthorizationUrl\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nrefreshUrl\nclass-attribute\ninstance-attribute\n¶\nrefreshUrl\n=\nNone\nscopes\nclass-attribute\ninstance-attribute\n¶\nscopes\n=\n{}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nOAuthFlowPassword\n¶\nBases:\nOAuthFlow\ntokenUrl\ninstance-attribute\n¶\ntokenUrl\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nrefreshUrl\nclass-attribute\ninstance-attribute\n¶\nrefreshUrl\n=\nNone\nscopes\nclass-attribute\ninstance-attribute\n¶\nscopes\n=\n{}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nOAuthFlowClientCredentials\n¶\nBases:\nOAuthFlow\ntokenUrl\ninstance-attribute\n¶\ntokenUrl\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nrefreshUrl\nclass-attribute\ninstance-attribute\n¶\nrefreshUrl\n=\nNone\nscopes\nclass-attribute\ninstance-attribute\n¶\nscopes\n=\n{}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nOAuthFlowAuthorizationCode\n¶\nBases:\nOAuthFlow\nauthorizationUrl\ninstance-attribute\n¶\nauthorizationUrl\ntokenUrl\ninstance-attribute\n¶\ntokenUrl\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nrefreshUrl\nclass-attribute\ninstance-attribute\n¶\nrefreshUrl\n=\nNone\nscopes\nclass-attribute\ninstance-attribute\n¶\nscopes\n=\n{}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nOAuthFlows\n¶\nBases:\nBaseModelWithConfig\nimplicit\nclass-attribute\ninstance-attribute\n¶\nimplicit\n=\nNone\npassword\nclass-attribute\ninstance-attribute\n¶\npassword\n=\nNone\nclientCredentials\nclass-attribute\ninstance-attribute\n¶\nclientCredentials\n=\nNone\nauthorizationCode\nclass-attribute\ninstance-attribute\n¶\nauthorizationCode\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nOAuth2\n¶\nBases:\nSecurityBase\ntype_\nclass-attribute\ninstance-attribute\n¶\ntype_\n=\nField\n(\ndefault\n=\noauth2\n,\nalias\n=\n'type'\n)\nflows\ninstance-attribute\n¶\nflows\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nOpenIdConnect\n¶\nBases:\nSecurityBase\ntype_\nclass-attribute\ninstance-attribute\n¶\ntype_\n=\nField\n(\ndefault\n=\nopenIdConnect\n,\nalias\n=\n'type'\n)\nopenIdConnectUrl\ninstance-attribute\n¶\nopenIdConnectUrl\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nComponents\n¶\nBases:\nBaseModelWithConfig\nschemas\nclass-attribute\ninstance-attribute\n¶\nschemas\n=\nNone\nresponses\nclass-attribute\ninstance-attribute\n¶\nresponses\n=\nNone\nparameters\nclass-attribute\ninstance-attribute\n¶\nparameters\n=\nNone\nexamples\nclass-attribute\ninstance-attribute\n¶\nexamples\n=\nNone\nrequestBodies\nclass-attribute\ninstance-attribute\n¶\nrequestBodies\n=\nNone\nheaders\nclass-attribute\ninstance-attribute\n¶\nheaders\n=\nNone\nsecuritySchemes\nclass-attribute\ninstance-attribute\n¶\nsecuritySchemes\n=\nNone\nlinks\nclass-attribute\ninstance-attribute\n¶\nlinks\n=\nNone\ncallbacks\nclass-attribute\ninstance-attribute\n¶\ncallbacks\n=\nNone\npathItems\nclass-attribute\ninstance-attribute\n¶\npathItems\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nTag\n¶\nBases:\nBaseModelWithConfig\nname\ninstance-attribute\n¶\nname\ndescription\nclass-attribute\ninstance-attribute\n¶\ndescription\n=\nNone\nexternalDocs\nclass-attribute\ninstance-attribute\n¶\nexternalDocs\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nOpenAPI\n¶\nBases:\nBaseModelWithConfig\nopenapi\ninstance-attribute\n¶\nopenapi\ninfo\ninstance-attribute\n¶\ninfo\njsonSchemaDialect\nclass-attribute\ninstance-attribute\n¶\njsonSchemaDialect\n=\nNone\nservers\nclass-attribute\ninstance-attribute\n¶\nservers\n=\nNone\npaths\nclass-attribute\ninstance-attribute\n¶\npaths\n=\nNone\nwebhooks\nclass-attribute\ninstance-attribute\n¶\nwebhooks\n=\nNone\ncomponents\nclass-attribute\ninstance-attribute\n¶\ncomponents\n=\nNone\nsecurity\nclass-attribute\ninstance-attribute\n¶\nsecurity\n=\nNone\ntags\nclass-attribute\ninstance-attribute\n¶\ntags\n=\nNone\nexternalDocs\nclass-attribute\ninstance-attribute\n¶\nexternalDocs\n=\nNone\nmodel_config\nclass-attribute\ninstance-attribute\n¶\nmodel_config\n=\n{\n'extra'\n:\n'allow'\n}\nConfig\n¶\nextra\nclass-attribute\ninstance-attribute\n¶\nextra\n=\n'allow'\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/how-to/custom-request-and-route/",
    "title": "Custom Request and APIRoute class¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nCustom Request and APIRoute class\nTable of contents\nUse cases\nHandling custom request body encodings\nCreate a custom\nGzipRequest\nclass\nCreate a custom\nGzipRoute\nclass\nAccessing the request body in an exception handler\nCustom\nAPIRoute\nclass in a router\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUse cases\nHandling custom request body encodings\nCreate a custom\nGzipRequest\nclass\nCreate a custom\nGzipRoute\nclass\nAccessing the request body in an exception handler\nCustom\nAPIRoute\nclass in a router\nFastAPI\nLearn\nHow To - Recipes\nCustom Request and APIRoute class\n¶\nIn some cases, you may want to override the logic used by the\nRequest\nand\nAPIRoute\nclasses.\nIn particular, this may be a good alternative to logic in a middleware.\nFor example, if you want to read or manipulate the request body before it is processed by your application.\nDanger\nThis is an \"advanced\" feature.\nIf you are just starting with\nFastAPI\nyou might want to skip this section.\nUse cases\n¶\nSome use cases include:\nConverting non-JSON request bodies to JSON (e.g.\nmsgpack\n).\nDecompressing gzip-compressed request bodies.\nAutomatically logging all request bodies.\nHandling custom request body encodings\n¶\nLet's see how to make use of a custom\nRequest\nsubclass to decompress gzip requests.\nAnd an\nAPIRoute\nsubclass to use that custom request class.\nCreate a custom\nGzipRequest\nclass\n¶\nTip\nThis is a toy example to demonstrate how it works, if you need Gzip support, you can use the provided\nGzipMiddleware\n.\nFirst, we create a\nGzipRequest\nclass, which will overwrite the\nRequest.body()\nmethod to decompress the body in the presence of an appropriate header.\nIf there's no\ngzip\nin the header, it will not try to decompress the body.\nThat way, the same route class can handle gzip compressed or uncompressed requests.\nPython 3.8+\nimport\ngzip\nfrom\ntyping\nimport\nCallable\n,\nList\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\n,\nRequest\n,\nResponse\nfrom\nfastapi.routing\nimport\nAPIRoute\nclass\nGzipRequest\n(\nRequest\n):\nasync\ndef\nbody\n(\nself\n)\n->\nbytes\n:\nif\nnot\nhasattr\n(\nself\n,\n\"_body\"\n):\nbody\n=\nawait\nsuper\n()\n.\nbody\n()\nif\n\"gzip\"\nin\nself\n.\nheaders\n.\ngetlist\n(\n\"Content-Encoding\"\n):\nbody\n=\ngzip\n.\ndecompress\n(\nbody\n)\nself\n.\n_body\n=\nbody\nreturn\nself\n.\n_body\nclass\nGzipRoute\n(\nAPIRoute\n):\ndef\nget_route_handler\n(\nself\n)\n->\nCallable\n:\noriginal_route_handler\n=\nsuper\n()\n.\nget_route_handler\n()\nasync\ndef\ncustom_route_handler\n(\nrequest\n:\nRequest\n)\n->\nResponse\n:\nrequest\n=\nGzipRequest\n(\nrequest\n.\nscope\n,\nrequest\n.\nreceive\n)\nreturn\nawait\noriginal_route_handler\n(\nrequest\n)\nreturn\ncustom_route_handler\napp\n=\nFastAPI\n()\napp\n.\nrouter\n.\nroute_class\n=\nGzipRoute\n@app\n.\npost\n(\n\"/sum\"\n)\nasync\ndef\nsum_numbers\n(\nnumbers\n:\nList\n[\nint\n]\n=\nBody\n()):\nreturn\n{\n\"sum\"\n:\nsum\n(\nnumbers\n)}\nCreate a custom\nGzipRoute\nclass\n¶\nNext, we create a custom subclass of\nfastapi.routing.APIRoute\nthat will make use of the\nGzipRequest\n.\nThis time, it will overwrite the method\nAPIRoute.get_route_handler()\n.\nThis method returns a function. And that function is what will receive a request and return a response.\nHere we use it to create a\nGzipRequest\nfrom the original request.\nPython 3.8+\nimport\ngzip\nfrom\ntyping\nimport\nCallable\n,\nList\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\n,\nRequest\n,\nResponse\nfrom\nfastapi.routing\nimport\nAPIRoute\nclass\nGzipRequest\n(\nRequest\n):\nasync\ndef\nbody\n(\nself\n)\n->\nbytes\n:\nif\nnot\nhasattr\n(\nself\n,\n\"_body\"\n):\nbody\n=\nawait\nsuper\n()\n.\nbody\n()\nif\n\"gzip\"\nin\nself\n.\nheaders\n.\ngetlist\n(\n\"Content-Encoding\"\n):\nbody\n=\ngzip\n.\ndecompress\n(\nbody\n)\nself\n.\n_body\n=\nbody\nreturn\nself\n.\n_body\nclass\nGzipRoute\n(\nAPIRoute\n):\ndef\nget_route_handler\n(\nself\n)\n->\nCallable\n:\noriginal_route_handler\n=\nsuper\n()\n.\nget_route_handler\n()\nasync\ndef\ncustom_route_handler\n(\nrequest\n:\nRequest\n)\n->\nResponse\n:\nrequest\n=\nGzipRequest\n(\nrequest\n.\nscope\n,\nrequest\n.\nreceive\n)\nreturn\nawait\noriginal_route_handler\n(\nrequest\n)\nreturn\ncustom_route_handler\napp\n=\nFastAPI\n()\napp\n.\nrouter\n.\nroute_class\n=\nGzipRoute\n@app\n.\npost\n(\n\"/sum\"\n)\nasync\ndef\nsum_numbers\n(\nnumbers\n:\nList\n[\nint\n]\n=\nBody\n()):\nreturn\n{\n\"sum\"\n:\nsum\n(\nnumbers\n)}\nTechnical Details\nA\nRequest\nhas a\nrequest.scope\nattribute, that's just a Python\ndict\ncontaining the metadata related to the request.\nA\nRequest\nalso has a\nrequest.receive\n, that's a function to \"receive\" the body of the request.\nThe\nscope\ndict\nand\nreceive\nfunction are both part of the ASGI specification.\nAnd those two things,\nscope\nand\nreceive\n, are what is needed to create a new\nRequest\ninstance.\nTo learn more about the\nRequest\ncheck\nStarlette's docs about Requests\n.\nThe only thing the function returned by\nGzipRequest.get_route_handler\ndoes differently is convert the\nRequest\nto a\nGzipRequest\n.\nDoing this, our\nGzipRequest\nwill take care of decompressing the data (if necessary) before passing it to our\npath operations\n.\nAfter that, all of the processing logic is the same.\nBut because of our changes in\nGzipRequest.body\n, the request body will be automatically decompressed when it is loaded by\nFastAPI\nwhen needed.\nAccessing the request body in an exception handler\n¶\nTip\nTo solve this same problem, it's probably a lot easier to use the\nbody\nin a custom handler for\nRequestValidationError\n(\nHandling Errors\n).\nBut this example is still valid and it shows how to interact with the internal components.\nWe can also use this same approach to access the request body in an exception handler.\nAll we need to do is handle the request inside a\ntry\n/\nexcept\nblock:\nPython 3.8+\nfrom\ntyping\nimport\nCallable\n,\nList\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\n,\nHTTPException\n,\nRequest\n,\nResponse\nfrom\nfastapi.exceptions\nimport\nRequestValidationError\nfrom\nfastapi.routing\nimport\nAPIRoute\nclass\nValidationErrorLoggingRoute\n(\nAPIRoute\n):\ndef\nget_route_handler\n(\nself\n)\n->\nCallable\n:\noriginal_route_handler\n=\nsuper\n()\n.\nget_route_handler\n()\nasync\ndef\ncustom_route_handler\n(\nrequest\n:\nRequest\n)\n->\nResponse\n:\ntry\n:\nreturn\nawait\noriginal_route_handler\n(\nrequest\n)\nexcept\nRequestValidationError\nas\nexc\n:\nbody\n=\nawait\nrequest\n.\nbody\n()\ndetail\n=\n{\n\"errors\"\n:\nexc\n.\nerrors\n(),\n\"body\"\n:\nbody\n.\ndecode\n()}\nraise\nHTTPException\n(\nstatus_code\n=\n422\n,\ndetail\n=\ndetail\n)\nreturn\ncustom_route_handler\napp\n=\nFastAPI\n()\napp\n.\nrouter\n.\nroute_class\n=\nValidationErrorLoggingRoute\n@app\n.\npost\n(\n\"/\"\n)\nasync\ndef\nsum_numbers\n(\nnumbers\n:\nList\n[\nint\n]\n=\nBody\n()):\nreturn\nsum\n(\nnumbers\n)\nIf an exception occurs, the\nRequest\ninstance will still be in scope, so we can read and make use of the request body when handling the error:\nPython 3.8+\nfrom\ntyping\nimport\nCallable\n,\nList\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\n,\nHTTPException\n,\nRequest\n,\nResponse\nfrom\nfastapi.exceptions\nimport\nRequestValidationError\nfrom\nfastapi.routing\nimport\nAPIRoute\nclass\nValidationErrorLoggingRoute\n(\nAPIRoute\n):\ndef\nget_route_handler\n(\nself\n)\n->\nCallable\n:\noriginal_route_handler\n=\nsuper\n()\n.\nget_route_handler\n()\nasync\ndef\ncustom_route_handler\n(\nrequest\n:\nRequest\n)\n->\nResponse\n:\ntry\n:\nreturn\nawait\noriginal_route_handler\n(\nrequest\n)\nexcept\nRequestValidationError\nas\nexc\n:\nbody\n=\nawait\nrequest\n.\nbody\n()\ndetail\n=\n{\n\"errors\"\n:\nexc\n.\nerrors\n(),\n\"body\"\n:\nbody\n.\ndecode\n()}\nraise\nHTTPException\n(\nstatus_code\n=\n422\n,\ndetail\n=\ndetail\n)\nreturn\ncustom_route_handler\napp\n=\nFastAPI\n()\napp\n.\nrouter\n.\nroute_class\n=\nValidationErrorLoggingRoute\n@app\n.\npost\n(\n\"/\"\n)\nasync\ndef\nsum_numbers\n(\nnumbers\n:\nList\n[\nint\n]\n=\nBody\n()):\nreturn\nsum\n(\nnumbers\n)\nCustom\nAPIRoute\nclass in a router\n¶\nYou can also set the\nroute_class\nparameter of an\nAPIRouter\n:\nPython 3.8+\nimport\ntime\nfrom\ntyping\nimport\nCallable\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\n,\nRequest\n,\nResponse\nfrom\nfastapi.routing\nimport\nAPIRoute\nclass\nTimedRoute\n(\nAPIRoute\n):\ndef\nget_route_handler\n(\nself\n)\n->\nCallable\n:\noriginal_route_handler\n=\nsuper\n()\n.\nget_route_handler\n()\nasync\ndef\ncustom_route_handler\n(\nrequest\n:\nRequest\n)\n->\nResponse\n:\nbefore\n=\ntime\n.\ntime\n()\nresponse\n:\nResponse\n=\nawait\noriginal_route_handler\n(\nrequest\n)\nduration\n=\ntime\n.\ntime\n()\n-\nbefore\nresponse\n.\nheaders\n[\n\"X-Response-Time\"\n]\n=\nstr\n(\nduration\n)\nprint\n(\nf\n\"route duration:\n{\nduration\n}\n\"\n)\nprint\n(\nf\n\"route response:\n{\nresponse\n}\n\"\n)\nprint\n(\nf\n\"route response headers:\n{\nresponse\n.\nheaders\n}\n\"\n)\nreturn\nresponse\nreturn\ncustom_route_handler\napp\n=\nFastAPI\n()\nrouter\n=\nAPIRouter\n(\nroute_class\n=\nTimedRoute\n)\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nnot_timed\n():\nreturn\n{\n\"message\"\n:\n\"Not timed\"\n}\n@router\n.\nget\n(\n\"/timed\"\n)\nasync\ndef\ntimed\n():\nreturn\n{\n\"message\"\n:\n\"It's the time of my life\"\n}\napp\n.\ninclude_router\n(\nrouter\n)\nIn this example, the\npath operations\nunder the\nrouter\nwill use the custom\nTimedRoute\nclass, and will have an extra\nX-Response-Time\nheader in the response with the time it took to generate the response:\nPython 3.8+\nimport\ntime\nfrom\ntyping\nimport\nCallable\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\n,\nRequest\n,\nResponse\nfrom\nfastapi.routing\nimport\nAPIRoute\nclass\nTimedRoute\n(\nAPIRoute\n):\ndef\nget_route_handler\n(\nself\n)\n->\nCallable\n:\noriginal_route_handler\n=\nsuper\n()\n.\nget_route_handler\n()\nasync\ndef\ncustom_route_handler\n(\nrequest\n:\nRequest\n)\n->\nResponse\n:\nbefore\n=\ntime\n.\ntime\n()\nresponse\n:\nResponse\n=\nawait\noriginal_route_handler\n(\nrequest\n)\nduration\n=\ntime\n.\ntime\n()\n-\nbefore\nresponse\n.\nheaders\n[\n\"X-Response-Time\"\n]\n=\nstr\n(\nduration\n)\nprint\n(\nf\n\"route duration:\n{\nduration\n}\n\"\n)\nprint\n(\nf\n\"route response:\n{\nresponse\n}\n\"\n)\nprint\n(\nf\n\"route response headers:\n{\nresponse\n.\nheaders\n}\n\"\n)\nreturn\nresponse\nreturn\ncustom_route_handler\napp\n=\nFastAPI\n()\nrouter\n=\nAPIRouter\n(\nroute_class\n=\nTimedRoute\n)\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nnot_timed\n():\nreturn\n{\n\"message\"\n:\n\"Not timed\"\n}\n@router\n.\nget\n(\n\"/timed\"\n)\nasync\ndef\ntimed\n():\nreturn\n{\n\"message\"\n:\n\"It's the time of my life\"\n}\napp\n.\ninclude_router\n(\nrouter\n)\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/cookie-params/",
    "title": "Cookie Parameters¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nCookie Parameters\nTable of contents\nImport\nCookie\nDeclare\nCookie\nparameters\nRecap\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nImport\nCookie\nDeclare\nCookie\nparameters\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nCookie Parameters\n¶\nYou can define Cookie parameters the same way you define\nQuery\nand\nPath\nparameters.\nImport\nCookie\n¶\nFirst import\nCookie\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nads_id\n:\nAnnotated\n[\nstr\n|\nNone\n,\nCookie\n()]\n=\nNone\n):\nreturn\n{\n\"ads_id\"\n:\nads_id\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nads_id\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nCookie\n()]\n=\nNone\n):\nreturn\n{\n\"ads_id\"\n:\nads_id\n}\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nads_id\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nCookie\n()]\n=\nNone\n):\nreturn\n{\n\"ads_id\"\n:\nads_id\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nads_id\n:\nstr\n|\nNone\n=\nCookie\n(\ndefault\n=\nNone\n)):\nreturn\n{\n\"ads_id\"\n:\nads_id\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nads_id\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nCookie\n(\ndefault\n=\nNone\n)):\nreturn\n{\n\"ads_id\"\n:\nads_id\n}\nDeclare\nCookie\nparameters\n¶\nThen declare the cookie parameters using the same structure as with\nPath\nand\nQuery\n.\nYou can define the default value as well as all the extra validation or annotation parameters:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nads_id\n:\nAnnotated\n[\nstr\n|\nNone\n,\nCookie\n()]\n=\nNone\n):\nreturn\n{\n\"ads_id\"\n:\nads_id\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nads_id\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nCookie\n()]\n=\nNone\n):\nreturn\n{\n\"ads_id\"\n:\nads_id\n}\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nads_id\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nCookie\n()]\n=\nNone\n):\nreturn\n{\n\"ads_id\"\n:\nads_id\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nads_id\n:\nstr\n|\nNone\n=\nCookie\n(\ndefault\n=\nNone\n)):\nreturn\n{\n\"ads_id\"\n:\nads_id\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nads_id\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nCookie\n(\ndefault\n=\nNone\n)):\nreturn\n{\n\"ads_id\"\n:\nads_id\n}\nTechnical Details\nCookie\nis a \"sister\" class of\nPath\nand\nQuery\n. It also inherits from the same common\nParam\nclass.\nBut remember that when you import\nQuery\n,\nPath\n,\nCookie\nand others from\nfastapi\n, those are actually functions that return special classes.\nInfo\nTo declare cookies, you need to use\nCookie\n, because otherwise the parameters would be interpreted as query parameters.\nInfo\nHave in mind that, as\nbrowsers handle cookies\nin special ways and behind the scenes, they\ndon't\neasily allow\nJavaScript\nto touch them.\nIf you go to the\nAPI docs UI\nat\n/docs\nyou will be able to see the\ndocumentation\nfor cookies for your\npath operations\n.\nBut even if you\nfill the data\nand click \"Execute\", because the docs UI works with\nJavaScript\n, the cookies won't be sent, and you will see an\nerror\nmessage as if you didn't write any values.\nRecap\n¶\nDeclare cookies with\nCookie\n, using the same common pattern as\nQuery\nand\nPath\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/dependencies/classes-as-dependencies/",
    "title": "Classes as Dependencies¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nClasses as Dependencies\nTable of contents\nA\ndict\nfrom the previous example\nWhat makes a dependency\nClasses as dependencies\nUse it\nType annotation vs\nDepends\nShortcut\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nA\ndict\nfrom the previous example\nWhat makes a dependency\nClasses as dependencies\nUse it\nType annotation vs\nDepends\nShortcut\nFastAPI\nLearn\nTutorial - User Guide\nDependencies\nClasses as Dependencies\n¶\nBefore diving deeper into the\nDependency Injection\nsystem, let's upgrade the previous example.\nA\ndict\nfrom the previous example\n¶\nIn the previous example, we were returning a\ndict\nfrom our dependency (\"dependable\"):\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\nBut then we get a\ndict\nin the parameter\ncommons\nof the\npath operation function\n.\nAnd we know that editors can't provide a lot of support (like completion) for\ndict\ns, because they can't know their keys and value types.\nWe can do better...\nWhat makes a dependency\n¶\nUp to now you have seen dependencies declared as functions.\nBut that's not the only way to declare dependencies (although it would probably be the more common).\nThe key factor is that a dependency should be a \"callable\".\nA \"\ncallable\n\" in Python is anything that Python can \"call\" like a function.\nSo, if you have an object\nsomething\n(that might\nnot\nbe a function) and you can \"call\" it (execute it) like:\nsomething\n()\nor\nsomething\n(\nsome_argument\n,\nsome_keyword_argument\n=\n\"foo\"\n)\nthen it is a \"callable\".\nClasses as dependencies\n¶\nYou might notice that to create an instance of a Python class, you use that same syntax.\nFor example:\nclass\nCat\n:\ndef\n__init__\n(\nself\n,\nname\n:\nstr\n):\nself\n.\nname\n=\nname\nfluffy\n=\nCat\n(\nname\n=\n\"Mr Fluffy\"\n)\nIn this case,\nfluffy\nis an instance of the class\nCat\n.\nAnd to create\nfluffy\n, you are \"calling\"\nCat\n.\nSo, a Python class is also a\ncallable\n.\nThen, in\nFastAPI\n, you could use a Python class as a dependency.\nWhat FastAPI actually checks is that it is a \"callable\" (function, class or anything else) and the parameters defined.\nIf you pass a \"callable\" as a dependency in\nFastAPI\n, it will analyze the parameters for that \"callable\", and process them in the same way as the parameters for a\npath operation function\n. Including sub-dependencies.\nThat also applies to callables with no parameters at all. The same as it would be for\npath operation functions\nwith no parameters.\nThen, we can change the dependency \"dependable\"\ncommon_parameters\nfrom above to the class\nCommonQueryParams\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n(\nCommonQueryParams\n)]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n(\nCommonQueryParams\n)]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n(\nCommonQueryParams\n)]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nCommonQueryParams\n=\nDepends\n(\nCommonQueryParams\n)):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nCommonQueryParams\n=\nDepends\n(\nCommonQueryParams\n)):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nPay attention to the\n__init__\nmethod used to create the instance of the class:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n(\nCommonQueryParams\n)]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n(\nCommonQueryParams\n)]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n(\nCommonQueryParams\n)]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nCommonQueryParams\n=\nDepends\n(\nCommonQueryParams\n)):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nCommonQueryParams\n=\nDepends\n(\nCommonQueryParams\n)):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\n...it has the same parameters as our previous\ncommon_parameters\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\ncommons\nThose parameters are what\nFastAPI\nwill use to \"solve\" the dependency.\nIn both cases, it will have:\nAn optional\nq\nquery parameter that is a\nstr\n.\nA\nskip\nquery parameter that is an\nint\n, with a default of\n0\n.\nA\nlimit\nquery parameter that is an\nint\n, with a default of\n100\n.\nIn both cases the data will be converted, validated, documented on the OpenAPI schema, etc.\nUse it\n¶\nNow you can declare your dependency using this class.\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n(\nCommonQueryParams\n)]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n(\nCommonQueryParams\n)]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n(\nCommonQueryParams\n)]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nCommonQueryParams\n=\nDepends\n(\nCommonQueryParams\n)):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nCommonQueryParams\n=\nDepends\n(\nCommonQueryParams\n)):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nFastAPI\ncalls the\nCommonQueryParams\nclass. This creates an \"instance\" of that class and the instance will be passed as the parameter\ncommons\nto your function.\nType annotation vs\nDepends\n¶\nNotice how we write\nCommonQueryParams\ntwice in the above code:\nPython 3.8+\nPython 3.8+ non-Annotated\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n(\nCommonQueryParams\n)]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\ncommons\n:\nCommonQueryParams\n=\nDepends\n(\nCommonQueryParams\n)\nThe last\nCommonQueryParams\n, in:\n...\nDepends\n(\nCommonQueryParams\n)\n...is what\nFastAPI\nwill actually use to know what is the dependency.\nIt is from this one that FastAPI will extract the declared parameters and that is what FastAPI will actually call.\nIn this case, the first\nCommonQueryParams\n, in:\nPython 3.8+\nPython 3.8+ non-Annotated\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\n...\nTip\nPrefer to use the\nAnnotated\nversion if possible.\ncommons\n:\nCommonQueryParams\n...\n...doesn't have any special meaning for\nFastAPI\n. FastAPI won't use it for data conversion, validation, etc. (as it is using the\nDepends(CommonQueryParams)\nfor that).\nYou could actually write just:\nPython 3.8+\nPython 3.8+ non-Annotated\ncommons\n:\nAnnotated\n[\nAny\n,\nDepends\n(\nCommonQueryParams\n)]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\ncommons\n=\nDepends\n(\nCommonQueryParams\n)\n...as in:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\n,\nAny\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nAny\n,\nDepends\n(\nCommonQueryParams\n)]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nAny\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nAny\n,\nDepends\n(\nCommonQueryParams\n)]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nfrom\ntyping\nimport\nAny\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nAny\n,\nDepends\n(\nCommonQueryParams\n)]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n=\nDepends\n(\nCommonQueryParams\n)):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n=\nDepends\n(\nCommonQueryParams\n)):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nBut declaring the type is encouraged as that way your editor will know what will be passed as the parameter\ncommons\n, and then it can help you with code completion, type checks, etc:\nShortcut\n¶\nBut you see that we are having some code repetition here, writing\nCommonQueryParams\ntwice:\nPython 3.8+\nPython 3.8+ non-Annotated\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n(\nCommonQueryParams\n)]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\ncommons\n:\nCommonQueryParams\n=\nDepends\n(\nCommonQueryParams\n)\nFastAPI\nprovides a shortcut for these cases, in where the dependency is\nspecifically\na class that\nFastAPI\nwill \"call\" to create an instance of the class itself.\nFor those specific cases, you can do the following:\nInstead of writing:\nPython 3.8+\nPython 3.8+ non-Annotated\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n(\nCommonQueryParams\n)]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\ncommons\n:\nCommonQueryParams\n=\nDepends\n(\nCommonQueryParams\n)\n...you write:\nPython 3.8+\nPython 3.8 non-Annotated\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n()]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\ncommons\n:\nCommonQueryParams\n=\nDepends\n()\nYou declare the dependency as the type of the parameter, and you use\nDepends()\nwithout any parameter, instead of having to write the full class\nagain\ninside of\nDepends(CommonQueryParams)\n.\nThe same example would then look like:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n()]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n()]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\nCommonQueryParams\n,\nDepends\n()]):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nCommonQueryParams\n=\nDepends\n()):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\nclass\nCommonQueryParams\n:\ndef\n__init__\n(\nself\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nself\n.\nq\n=\nq\nself\n.\nskip\n=\nskip\nself\n.\nlimit\n=\nlimit\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nCommonQueryParams\n=\nDepends\n()):\nresponse\n=\n{}\nif\ncommons\n.\nq\n:\nresponse\n.\nupdate\n({\n\"q\"\n:\ncommons\n.\nq\n})\nitems\n=\nfake_items_db\n[\ncommons\n.\nskip\n:\ncommons\n.\nskip\n+\ncommons\n.\nlimit\n]\nresponse\n.\nupdate\n({\n\"items\"\n:\nitems\n})\nreturn\nresponse\n...and\nFastAPI\nwill know what to do.\nTip\nIf that seems more confusing than helpful, disregard it, you don't\nneed\nit.\nIt is just a shortcut. Because\nFastAPI\ncares about helping you minimize code repetition.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/body-multiple-params/",
    "title": "Body - Multiple Parameters¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Multiple Parameters\nTable of contents\nMix\nPath\n,\nQuery\nand body parameters\nMultiple body parameters\nSingular values in body\nMultiple body params and query\nEmbed a single body parameter\nRecap\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nMix\nPath\n,\nQuery\nand body parameters\nMultiple body parameters\nSingular values in body\nMultiple body params and query\nEmbed a single body parameter\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nBody - Multiple Parameters\n¶\nNow that we have seen how to use\nPath\nand\nQuery\n, let's see more advanced uses of request body declarations.\nMix\nPath\n,\nQuery\nand body parameters\n¶\nFirst, of course, you can mix\nPath\n,\nQuery\nand request body parameter declarations freely and\nFastAPI\nwill know what to do.\nAnd you can also declare body parameters as optional, by setting the default to\nNone\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\nge\n=\n0\n,\nle\n=\n1000\n)],\nq\n:\nstr\n|\nNone\n=\nNone\n,\nitem\n:\nItem\n|\nNone\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nif\nitem\n:\nresults\n.\nupdate\n({\n\"item\"\n:\nitem\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\nge\n=\n0\n,\nle\n=\n1000\n)],\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nitem\n:\nUnion\n[\nItem\n,\nNone\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nif\nitem\n:\nresults\n.\nupdate\n({\n\"item\"\n:\nitem\n})\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nAnnotated\n[\nint\n,\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\nge\n=\n0\n,\nle\n=\n1000\n)],\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nitem\n:\nUnion\n[\nItem\n,\nNone\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nif\nitem\n:\nresults\n.\nupdate\n({\n\"item\"\n:\nitem\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\nge\n=\n0\n,\nle\n=\n1000\n),\nq\n:\nstr\n|\nNone\n=\nNone\n,\nitem\n:\nItem\n|\nNone\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nif\nitem\n:\nresults\n.\nupdate\n({\n\"item\"\n:\nitem\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nPath\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n=\nPath\n(\ntitle\n=\n\"The ID of the item to get\"\n,\nge\n=\n0\n,\nle\n=\n1000\n),\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nitem\n:\nUnion\n[\nItem\n,\nNone\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nif\nitem\n:\nresults\n.\nupdate\n({\n\"item\"\n:\nitem\n})\nreturn\nresults\nNote\nNotice that, in this case, the\nitem\nthat would be taken from the body is optional. As it has a\nNone\ndefault value.\nMultiple body parameters\n¶\nIn the previous example, the\npath operations\nwould expect a JSON body with the attributes of an\nItem\n, like:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"The pretender\"\n,\n\"price\"\n:\n42.0\n,\n\"tax\"\n:\n3.2\n}\nBut you can also declare multiple body parameters, e.g.\nitem\nand\nuser\n:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nfull_name\n:\nstr\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nuser\n:\nUser\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n,\n\"user\"\n:\nuser\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nuser\n:\nUser\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n,\n\"user\"\n:\nuser\n}\nreturn\nresults\nIn this case,\nFastAPI\nwill notice that there is more than one body parameter in the function (there are two parameters that are Pydantic models).\nSo, it will then use the parameter names as keys (field names) in the body, and expect a body like:\n{\n\"item\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"The pretender\"\n,\n\"price\"\n:\n42.0\n,\n\"tax\"\n:\n3.2\n},\n\"user\"\n:\n{\n\"username\"\n:\n\"dave\"\n,\n\"full_name\"\n:\n\"Dave Grohl\"\n}\n}\nNote\nNotice that even though the\nitem\nwas declared the same way as before, it is now expected to be inside of the body with a key\nitem\n.\nFastAPI\nwill do the automatic conversion from the request, so that the parameter\nitem\nreceives its specific content and the same for\nuser\n.\nIt will perform the validation of the compound data, and will document it like that for the OpenAPI schema and automatic docs.\nSingular values in body\n¶\nThe same way there is a\nQuery\nand\nPath\nto define extra data for query and path parameters,\nFastAPI\nprovides an equivalent\nBody\n.\nFor example, extending the previous model, you could decide that you want to have another key\nimportance\nin the same body, besides the\nitem\nand\nuser\n.\nIf you declare it as is, because it is a singular value,\nFastAPI\nwill assume that it is a query parameter.\nBut you can instruct\nFastAPI\nto treat it as another body key using\nBody\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nfull_name\n:\nstr\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nuser\n:\nUser\n,\nimportance\n:\nAnnotated\n[\nint\n,\nBody\n()]\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n,\n\"user\"\n:\nuser\n,\n\"importance\"\n:\nimportance\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nuser\n:\nUser\n,\nimportance\n:\nAnnotated\n[\nint\n,\nBody\n()]\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n,\n\"user\"\n:\nuser\n,\n\"importance\"\n:\nimportance\n}\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nuser\n:\nUser\n,\nimportance\n:\nAnnotated\n[\nint\n,\nBody\n()]\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n,\n\"user\"\n:\nuser\n,\n\"importance\"\n:\nimportance\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nfull_name\n:\nstr\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nuser\n:\nUser\n,\nimportance\n:\nint\n=\nBody\n()):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n,\n\"user\"\n:\nuser\n,\n\"importance\"\n:\nimportance\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nuser\n:\nUser\n,\nimportance\n:\nint\n=\nBody\n()):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n,\n\"user\"\n:\nuser\n,\n\"importance\"\n:\nimportance\n}\nreturn\nresults\nIn this case,\nFastAPI\nwill expect a body like:\n{\n\"item\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"The pretender\"\n,\n\"price\"\n:\n42.0\n,\n\"tax\"\n:\n3.2\n},\n\"user\"\n:\n{\n\"username\"\n:\n\"dave\"\n,\n\"full_name\"\n:\n\"Dave Grohl\"\n},\n\"importance\"\n:\n5\n}\nAgain, it will convert the data types, validate, document, etc.\nMultiple body params and query\n¶\nOf course, you can also declare additional query parameters whenever you need, additional to any body parameters.\nAs, by default, singular values are interpreted as query parameters, you don't have to explicitly add a\nQuery\n, you can just do:\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nOr in Python 3.10 and above:\nq\n:\nstr\n|\nNone\n=\nNone\nFor example:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nfull_name\n:\nstr\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nuser\n:\nUser\n,\nimportance\n:\nAnnotated\n[\nint\n,\nBody\n(\ngt\n=\n0\n)],\nq\n:\nstr\n|\nNone\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n,\n\"user\"\n:\nuser\n,\n\"importance\"\n:\nimportance\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nuser\n:\nUser\n,\nimportance\n:\nAnnotated\n[\nint\n,\nBody\n(\ngt\n=\n0\n)],\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n,\n\"user\"\n:\nuser\n,\n\"importance\"\n:\nimportance\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nuser\n:\nUser\n,\nimportance\n:\nAnnotated\n[\nint\n,\nBody\n(\ngt\n=\n0\n)],\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n,\n\"user\"\n:\nuser\n,\n\"importance\"\n:\nimportance\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nfull_name\n:\nstr\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nuser\n:\nUser\n,\nimportance\n:\nint\n=\nBody\n(\ngt\n=\n0\n),\nq\n:\nstr\n|\nNone\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n,\n\"user\"\n:\nuser\n,\n\"importance\"\n:\nimportance\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\nclass\nUser\n(\nBaseModel\n):\nusername\n:\nstr\nfull_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\n*\n,\nitem_id\n:\nint\n,\nitem\n:\nItem\n,\nuser\n:\nUser\n,\nimportance\n:\nint\n=\nBody\n(\ngt\n=\n0\n),\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\n):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n,\n\"user\"\n:\nuser\n,\n\"importance\"\n:\nimportance\n}\nif\nq\n:\nresults\n.\nupdate\n({\n\"q\"\n:\nq\n})\nreturn\nresults\nInfo\nBody\nalso has all the same extra validation and metadata parameters as\nQuery\n,\nPath\nand others you will see later.\nEmbed a single body parameter\n¶\nLet's say you only have a single\nitem\nbody parameter from a Pydantic model\nItem\n.\nBy default,\nFastAPI\nwill then expect its body directly.\nBut if you want it to expect a JSON with a key\nitem\nand inside of it the model contents, as it does when you declare extra body parameters, you can use the special\nBody\nparameter\nembed\n:\nitem\n:\nItem\n=\nBody\n(\nembed\n=\nTrue\n)\nas in:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nembed\n=\nTrue\n)]):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nembed\n=\nTrue\n)]):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nembed\n=\nTrue\n)]):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nprice\n:\nfloat\ntax\n:\nfloat\n|\nNone\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n=\nBody\n(\nembed\n=\nTrue\n)):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nprice\n:\nfloat\ntax\n:\nUnion\n[\nfloat\n,\nNone\n]\n=\nNone\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nupdate_item\n(\nitem_id\n:\nint\n,\nitem\n:\nItem\n=\nBody\n(\nembed\n=\nTrue\n)):\nresults\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"item\"\n:\nitem\n}\nreturn\nresults\nIn this case\nFastAPI\nwill expect a body like:\n{\n\"item\"\n:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"The pretender\"\n,\n\"price\"\n:\n42.0\n,\n\"tax\"\n:\n3.2\n}\n}\ninstead of:\n{\n\"name\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"The pretender\"\n,\n\"price\"\n:\n42.0\n,\n\"tax\"\n:\n3.2\n}\nRecap\n¶\nYou can add multiple body parameters to your\npath operation function\n, even though a request can only have a single body.\nBut\nFastAPI\nwill handle it, give you the correct data in your function, and validate and document the correct schema in the\npath operation\n.\nYou can also declare singular values to be received as part of the body.\nAnd you can instruct\nFastAPI\nto embed the body in a key even when there is only a single parameter declared.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/how-to/general/",
    "title": "General - How To - Recipes¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nGeneral - How To - Recipes\nTable of contents\nFilter Data - Security\nDocumentation Tags - OpenAPI\nDocumentation Summary and Description - OpenAPI\nDocumentation Response description - OpenAPI\nDocumentation Deprecate a\nPath Operation\n- OpenAPI\nConvert any Data to JSON-compatible\nOpenAPI Metadata - Docs\nOpenAPI Custom URL\nOpenAPI Docs URLs\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nFilter Data - Security\nDocumentation Tags - OpenAPI\nDocumentation Summary and Description - OpenAPI\nDocumentation Response description - OpenAPI\nDocumentation Deprecate a\nPath Operation\n- OpenAPI\nConvert any Data to JSON-compatible\nOpenAPI Metadata - Docs\nOpenAPI Custom URL\nOpenAPI Docs URLs\nFastAPI\nLearn\nHow To - Recipes\nGeneral - How To - Recipes\n¶\nHere are several pointers to other places in the docs, for general or frequent questions.\nFilter Data - Security\n¶\nTo ensure that you don't return more data than you should, read the docs for\nTutorial - Response Model - Return Type\n.\nDocumentation Tags - OpenAPI\n¶\nTo add tags to your\npath operations\n, and group them in the docs UI, read the docs for\nTutorial - Path Operation Configurations - Tags\n.\nDocumentation Summary and Description - OpenAPI\n¶\nTo add a summary and description to your\npath operations\n, and show them in the docs UI, read the docs for\nTutorial - Path Operation Configurations - Summary and Description\n.\nDocumentation Response description - OpenAPI\n¶\nTo define the description of the response, shown in the docs UI, read the docs for\nTutorial - Path Operation Configurations - Response description\n.\nDocumentation Deprecate a\nPath Operation\n- OpenAPI\n¶\nTo deprecate a\npath operation\n, and show it in the docs UI, read the docs for\nTutorial - Path Operation Configurations - Deprecation\n.\nConvert any Data to JSON-compatible\n¶\nTo convert any data to JSON-compatible, read the docs for\nTutorial - JSON Compatible Encoder\n.\nOpenAPI Metadata - Docs\n¶\nTo add metadata to your OpenAPI schema, including a license, version, contact, etc, read the docs for\nTutorial - Metadata and Docs URLs\n.\nOpenAPI Custom URL\n¶\nTo customize the OpenAPI URL (or remove it), read the docs for\nTutorial - Metadata and Docs URLs\n.\nOpenAPI Docs URLs\n¶\nTo update the URLs used for the automatically generated docs user interfaces, read the docs for\nTutorial - Metadata and Docs URLs\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/testing-dependencies/",
    "title": "Testing Dependencies with Overrides¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nTesting Dependencies with Overrides\nTable of contents\nOverriding dependencies during testing\nUse cases: external service\nUse the\napp.dependency_overrides\nattribute\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nOverriding dependencies during testing\nUse cases: external service\nUse the\napp.dependency_overrides\nattribute\nFastAPI\nLearn\nAdvanced User Guide\nTesting Dependencies with Overrides\n¶\nOverriding dependencies during testing\n¶\nThere are some scenarios where you might want to override a dependency during testing.\nYou don't want the original dependency to run (nor any of the sub-dependencies it might have).\nInstead, you want to provide a different dependency that will be used only during tests (possibly only some specific tests), and will provide a value that can be used where the value of the original dependency was used.\nUse cases: external service\n¶\nAn example could be that you have an external authentication provider that you need to call.\nYou send it a token and it returns an authenticated user.\nThis provider might be charging you per request, and calling it might take some extra time than if you had a fixed mock user for tests.\nYou probably want to test the external provider once, but not necessarily call it for every test that runs.\nIn this case, you can override the dependency that calls that provider, and use a custom dependency that returns a mock user, only for your tests.\nUse the\napp.dependency_overrides\nattribute\n¶\nFor these cases, your\nFastAPI\napplication has an attribute\napp.dependency_overrides\n, it is a simple\ndict\n.\nTo override a dependency for testing, you put as a key the original dependency (a function), and as the value, your dependency override (another function).\nAnd then\nFastAPI\nwill call that override instead of the original dependency.\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.testclient\nimport\nTestClient\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\ncommons\n}\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\n{\n\"message\"\n:\n\"Hello Users!\"\n,\n\"params\"\n:\ncommons\n}\nclient\n=\nTestClient\n(\napp\n)\nasync\ndef\noverride_dependency\n(\nq\n:\nstr\n|\nNone\n=\nNone\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n}\napp\n.\ndependency_overrides\n[\ncommon_parameters\n]\n=\noverride_dependency\ndef\ntest_override_in_items\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\nNone\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\ndef\ntest_override_in_items_with_q\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/?q=foo\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\n\"foo\"\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\ndef\ntest_override_in_items_with_params\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/?q=foo&skip=100&limit=200\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\n\"foo\"\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.testclient\nimport\nTestClient\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\ncommons\n}\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\n{\n\"message\"\n:\n\"Hello Users!\"\n,\n\"params\"\n:\ncommons\n}\nclient\n=\nTestClient\n(\napp\n)\nasync\ndef\noverride_dependency\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n}\napp\n.\ndependency_overrides\n[\ncommon_parameters\n]\n=\noverride_dependency\ndef\ntest_override_in_items\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\nNone\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\ndef\ntest_override_in_items_with_q\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/?q=foo\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\n\"foo\"\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\ndef\ntest_override_in_items_with_params\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/?q=foo&skip=100&limit=200\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\n\"foo\"\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.testclient\nimport\nTestClient\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\ncommons\n}\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\n{\n\"message\"\n:\n\"Hello Users!\"\n,\n\"params\"\n:\ncommons\n}\nclient\n=\nTestClient\n(\napp\n)\nasync\ndef\noverride_dependency\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n}\napp\n.\ndependency_overrides\n[\ncommon_parameters\n]\n=\noverride_dependency\ndef\ntest_override_in_items\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\nNone\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\ndef\ntest_override_in_items_with_q\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/?q=foo\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\n\"foo\"\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\ndef\ntest_override_in_items_with_params\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/?q=foo&skip=100&limit=200\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\n\"foo\"\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.testclient\nimport\nTestClient\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\ncommons\n}\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\n{\n\"message\"\n:\n\"Hello Users!\"\n,\n\"params\"\n:\ncommons\n}\nclient\n=\nTestClient\n(\napp\n)\nasync\ndef\noverride_dependency\n(\nq\n:\nstr\n|\nNone\n=\nNone\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n}\napp\n.\ndependency_overrides\n[\ncommon_parameters\n]\n=\noverride_dependency\ndef\ntest_override_in_items\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\nNone\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\ndef\ntest_override_in_items_with_q\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/?q=foo\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\n\"foo\"\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\ndef\ntest_override_in_items_with_params\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/?q=foo&skip=100&limit=200\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\n\"foo\"\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.testclient\nimport\nTestClient\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\ncommons\n}\n@app\n.\nget\n(\n\"/users/\"\n)\nasync\ndef\nread_users\n(\ncommons\n:\ndict\n=\nDepends\n(\ncommon_parameters\n)):\nreturn\n{\n\"message\"\n:\n\"Hello Users!\"\n,\n\"params\"\n:\ncommons\n}\nclient\n=\nTestClient\n(\napp\n)\nasync\ndef\noverride_dependency\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n}\napp\n.\ndependency_overrides\n[\ncommon_parameters\n]\n=\noverride_dependency\ndef\ntest_override_in_items\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\nNone\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\ndef\ntest_override_in_items_with_q\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/?q=foo\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\n\"foo\"\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\ndef\ntest_override_in_items_with_params\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/?q=foo&skip=100&limit=200\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"message\"\n:\n\"Hello Items!\"\n,\n\"params\"\n:\n{\n\"q\"\n:\n\"foo\"\n,\n\"skip\"\n:\n5\n,\n\"limit\"\n:\n10\n},\n}\nTip\nYou can set a dependency override for a dependency used anywhere in your\nFastAPI\napplication.\nThe original dependency could be used in a\npath operation function\n, a\npath operation decorator\n(when you don't use the return value), a\n.include_router()\ncall, etc.\nFastAPI will still be able to override it.\nThen you can reset your overrides (remove them) by setting\napp.dependency_overrides\nto be an empty\ndict\n:\napp\n.\ndependency_overrides\n=\n{}\nTip\nIf you want to override a dependency only during some tests, you can set the override at the beginning of the test (inside the test function) and reset it at the end (at the end of the test function).\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/async/",
    "title": "Concurrency and async / await¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nConcurrency and async / await\nTable of contents\nIn a hurry?\nTechnical Details\nAsynchronous Code\nConcurrency and Burgers\nConcurrent Burgers\nParallel Burgers\nBurger Conclusion\nIs concurrency better than parallelism?\nConcurrency + Parallelism: Web + Machine Learning\nasync\nand\nawait\nMore technical details\nWrite your own async code\nOther forms of asynchronous code\nCoroutines\nConclusion\nVery Technical Details\nPath operation functions\nDependencies\nSub-dependencies\nOther utility functions\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nIn a hurry?\nTechnical Details\nAsynchronous Code\nConcurrency and Burgers\nConcurrent Burgers\nParallel Burgers\nBurger Conclusion\nIs concurrency better than parallelism?\nConcurrency + Parallelism: Web + Machine Learning\nasync\nand\nawait\nMore technical details\nWrite your own async code\nOther forms of asynchronous code\nCoroutines\nConclusion\nVery Technical Details\nPath operation functions\nDependencies\nSub-dependencies\nOther utility functions\nFastAPI\nLearn\nConcurrency and async / await\n¶\nDetails about the\nasync def\nsyntax for\npath operation functions\nand some background about asynchronous code, concurrency, and parallelism.\nIn a hurry?\n¶\nTL;DR:\nIf you are using third party libraries that tell you to call them with\nawait\n, like:\nresults\n=\nawait\nsome_library\n()\nThen, declare your\npath operation functions\nwith\nasync def\nlike:\n@app\n.\nget\n(\n'/'\n)\nasync\ndef\nread_results\n():\nresults\n=\nawait\nsome_library\n()\nreturn\nresults\nNote\nYou can only use\nawait\ninside of functions created with\nasync def\n.\nIf you are using a third party library that communicates with something (a database, an API, the file system, etc.) and doesn't have support for using\nawait\n, (this is currently the case for most database libraries), then declare your\npath operation functions\nas normally, with just\ndef\n, like:\n@app\n.\nget\n(\n'/'\n)\ndef\nresults\n():\nresults\n=\nsome_library\n()\nreturn\nresults\nIf your application (somehow) doesn't have to communicate with anything else and wait for it to respond, use\nasync def\n, even if you don't need to use\nawait\ninside.\nIf you just don't know, use normal\ndef\n.\nNote\n: You can mix\ndef\nand\nasync def\nin your\npath operation functions\nas much as you need and define each one using the best option for you. FastAPI will do the right thing with them.\nAnyway, in any of the cases above, FastAPI will still work asynchronously and be extremely fast.\nBut by following the steps above, it will be able to do some performance optimizations.\nTechnical Details\n¶\nModern versions of Python have support for\n\"asynchronous code\"\nusing something called\n\"coroutines\"\n, with\nasync\nand\nawait\nsyntax.\nLet's see that phrase by parts in the sections below:\nAsynchronous Code\nasync\nand\nawait\nCoroutines\nAsynchronous Code\n¶\nAsynchronous code just means that the language 💬 has a way to tell the computer / program 🤖 that at some point in the code, it 🤖 will have to wait for\nsomething else\nto finish somewhere else. Let's say that\nsomething else\nis called \"slow-file\" 📝.\nSo, during that time, the computer can go and do some other work, while \"slow-file\" 📝 finishes.\nThen the computer / program 🤖 will come back every time it has a chance because it's waiting again, or whenever it 🤖 finished all the work it had at that point. And it 🤖 will see if any of the tasks it was waiting for have already finished, doing whatever it had to do.\nNext, it 🤖 takes the first task to finish (let's say, our \"slow-file\" 📝) and continues whatever it had to do with it.\nThat \"wait for something else\" normally refers to\nI/O\noperations that are relatively \"slow\" (compared to the speed of the processor and the RAM memory), like waiting for:\nthe data from the client to be sent through the network\nthe data sent by your program to be received by the client through the network\nthe contents of a file in the disk to be read by the system and given to your program\nthe contents your program gave to the system to be written to disk\na remote API operation\na database operation to finish\na database query to return the results\netc.\nAs the execution time is consumed mostly by waiting for\nI/O\noperations, they call them \"I/O bound\" operations.\nIt's called \"asynchronous\" because the computer / program doesn't have to be \"synchronized\" with the slow task, waiting for the exact moment that the task finishes, while doing nothing, to be able to take the task result and continue the work.\nInstead of that, by being an \"asynchronous\" system, once finished, the task can wait in line a little bit (some microseconds) for the computer / program to finish whatever it went to do, and then come back to take the results and continue working with them.\nFor \"synchronous\" (contrary to \"asynchronous\") they commonly also use the term \"sequential\", because the computer / program follows all the steps in sequence before switching to a different task, even if those steps involve waiting.\nConcurrency and Burgers\n¶\nThis idea of\nasynchronous\ncode described above is also sometimes called\n\"concurrency\"\n. It is different from\n\"parallelism\"\n.\nConcurrency\nand\nparallelism\nboth relate to \"different things happening more or less at the same time\".\nBut the details between\nconcurrency\nand\nparallelism\nare quite different.\nTo see the difference, imagine the following story about burgers:\nConcurrent Burgers\n¶\nYou go with your crush to get fast food, you stand in line while the cashier takes the orders from the people in front of you. 😍\nThen it's your turn, you place your order of 2 very fancy burgers for your crush and you. 🍔🍔\nThe cashier says something to the cook in the kitchen so they know they have to prepare your burgers (even though they are currently preparing the ones for the previous clients).\nYou pay. 💸\nThe cashier gives you the number of your turn.\nWhile you are waiting, you go with your crush and pick a table, you sit and talk with your crush for a long time (as your burgers are very fancy and take some time to prepare).\nAs you are sitting at the table with your crush, while you wait for the burgers, you can spend that time admiring how awesome, cute and smart your crush is ✨😍✨.\nWhile waiting and talking to your crush, from time to time, you check the number displayed on the counter to see if it's your turn already.\nThen at some point, it finally is your turn. You go to the counter, get your burgers and come back to the table.\nYou and your crush eat the burgers and have a nice time. ✨\nInfo\nBeautiful illustrations by\nKetrina Thompson\n. 🎨\nImagine you are the computer / program 🤖 in that story.\nWhile you are at the line, you are just idle 😴, waiting for your turn, not doing anything very \"productive\". But the line is fast because the cashier is only taking the orders (not preparing them), so that's fine.\nThen, when it's your turn, you do actual \"productive\" work, you process the menu, decide what you want, get your crush's choice, pay, check that you give the correct bill or card, check that you are charged correctly, check that the order has the correct items, etc.\nBut then, even though you still don't have your burgers, your work with the cashier is \"on pause\" ⏸, because you have to wait 🕙 for your burgers to be ready.\nBut as you go away from the counter and sit at the table with a number for your turn, you can switch 🔀 your attention to your crush, and \"work\" ⏯ 🤓 on that. Then you are again doing something very \"productive\" as is flirting with your crush 😍.\nThen the cashier 💁 says \"I'm finished with doing the burgers\" by putting your number on the counter's display, but you don't jump like crazy immediately when the displayed number changes to your turn number. You know no one will steal your burgers because you have the number of your turn, and they have theirs.\nSo you wait for your crush to finish the story (finish the current work ⏯ / task being processed 🤓), smile gently and say that you are going for the burgers ⏸.\nThen you go to the counter 🔀, to the initial task that is now finished ⏯, pick the burgers, say thanks and take them to the table. That finishes that step / task of interaction with the counter ⏹. That in turn, creates a new task, of \"eating burgers\" 🔀 ⏯, but the previous one of \"getting burgers\" is finished ⏹.\nParallel Burgers\n¶\nNow let's imagine these aren't \"Concurrent Burgers\", but \"Parallel Burgers\".\nYou go with your crush to get parallel fast food.\nYou stand in line while several (let's say 8) cashiers that at the same time are cooks take the orders from the people in front of you.\nEveryone before you is waiting for their burgers to be ready before leaving the counter because each of the 8 cashiers goes and prepares the burger right away before getting the next order.\nThen it's finally your turn, you place your order of 2 very fancy burgers for your crush and you.\nYou pay 💸.\nThe cashier goes to the kitchen.\nYou wait, standing in front of the counter 🕙, so that no one else takes your burgers before you do, as there are no numbers for turns.\nAs you and your crush are busy not letting anyone get in front of you and take your burgers whenever they arrive, you cannot pay attention to your crush. 😞\nThis is \"synchronous\" work, you are \"synchronized\" with the cashier/cook 👨‍🍳. You have to wait 🕙 and be there at the exact moment that the cashier/cook 👨‍🍳 finishes the burgers and gives them to you, or otherwise, someone else might take them.\nThen your cashier/cook 👨‍🍳 finally comes back with your burgers, after a long time waiting 🕙 there in front of the counter.\nYou take your burgers and go to the table with your crush.\nYou just eat them, and you are done. ⏹\nThere was not much talk or flirting as most of the time was spent waiting 🕙 in front of the counter. 😞\nInfo\nBeautiful illustrations by\nKetrina Thompson\n. 🎨\nIn this scenario of the parallel burgers, you are a computer / program 🤖 with two processors (you and your crush), both waiting 🕙 and dedicating their attention ⏯ to be \"waiting on the counter\" 🕙 for a long time.\nThe fast food store has 8 processors (cashiers/cooks). While the concurrent burgers store might have had only 2 (one cashier and one cook).\nBut still, the final experience is not the best. 😞\nThis would be the parallel equivalent story for burgers. 🍔\nFor a more \"real life\" example of this, imagine a bank.\nUp to recently, most of the banks had multiple cashiers 👨‍💼👨‍💼👨‍💼👨‍💼 and a big line 🕙🕙🕙🕙🕙🕙🕙🕙.\nAll of the cashiers doing all the work with one client after the other 👨‍💼⏯.\nAnd you have to wait 🕙 in the line for a long time or you lose your turn.\nYou probably wouldn't want to take your crush 😍 with you to run errands at the bank 🏦.\nBurger Conclusion\n¶\nIn this scenario of \"fast food burgers with your crush\", as there is a lot of waiting 🕙, it makes a lot more sense to have a concurrent system ⏸🔀⏯.\nThis is the case for most of the web applications.\nMany, many users, but your server is waiting 🕙 for their not-so-good connection to send their requests.\nAnd then waiting 🕙 again for the responses to come back.\nThis \"waiting\" 🕙 is measured in microseconds, but still, summing it all, it's a lot of waiting in the end.\nThat's why it makes a lot of sense to use asynchronous ⏸🔀⏯ code for web APIs.\nThis kind of asynchronicity is what made NodeJS popular (even though NodeJS is not parallel) and that's the strength of Go as a programming language.\nAnd that's the same level of performance you get with\nFastAPI\n.\nAnd as you can have parallelism and asynchronicity at the same time, you get higher performance than most of the tested NodeJS frameworks and on par with Go, which is a compiled language closer to C\n(all thanks to Starlette)\n.\nIs concurrency better than parallelism?\n¶\nNope! That's not the moral of the story.\nConcurrency is different than parallelism. And it is better on\nspecific\nscenarios that involve a lot of waiting. Because of that, it generally is a lot better than parallelism for web application development. But not for everything.\nSo, to balance that out, imagine the following short story:\nYou have to clean a big, dirty house.\nYep, that's the whole story\n.\nThere's no waiting 🕙 anywhere, just a lot of work to be done, on multiple places of the house.\nYou could have turns as in the burgers example, first the living room, then the kitchen, but as you are not waiting 🕙 for anything, just cleaning and cleaning, the turns wouldn't affect anything.\nIt would take the same amount of time to finish with or without turns (concurrency) and you would have done the same amount of work.\nBut in this case, if you could bring the 8 ex-cashier/cooks/now-cleaners, and each one of them (plus you) could take a zone of the house to clean it, you could do all the work in\nparallel\n, with the extra help, and finish much sooner.\nIn this scenario, each one of the cleaners (including you) would be a processor, doing their part of the job.\nAnd as most of the execution time is taken by actual work (instead of waiting), and the work in a computer is done by a\nCPU\n, they call these problems \"CPU bound\".\nCommon examples of CPU bound operations are things that require complex math processing.\nFor example:\nAudio\nor\nimage processing\n.\nComputer vision\n: an image is composed of millions of pixels, each pixel has 3 values / colors, processing that normally requires computing something on those pixels, all at the same time.\nMachine Learning\n: it normally requires lots of \"matrix\" and \"vector\" multiplications. Think of a huge spreadsheet with numbers and multiplying all of them together at the same time.\nDeep Learning\n: this is a sub-field of Machine Learning, so, the same applies. It's just that there is not a single spreadsheet of numbers to multiply, but a huge set of them, and in many cases, you use a special processor to build and / or use those models.\nConcurrency + Parallelism: Web + Machine Learning\n¶\nWith\nFastAPI\nyou can take advantage of concurrency that is very common for web development (the same main attraction of NodeJS).\nBut you can also exploit the benefits of parallelism and multiprocessing (having multiple processes running in parallel) for\nCPU bound\nworkloads like those in Machine Learning systems.\nThat, plus the simple fact that Python is the main language for\nData Science\n, Machine Learning and especially Deep Learning, make FastAPI a very good match for Data Science / Machine Learning web APIs and applications (among many others).\nTo see how to achieve this parallelism in production see the section about\nDeployment\n.\nasync\nand\nawait\n¶\nModern versions of Python have a very intuitive way to define asynchronous code. This makes it look just like normal \"sequential\" code and do the \"awaiting\" for you at the right moments.\nWhen there is an operation that will require waiting before giving the results and has support for these new Python features, you can code it like:\nburgers\n=\nawait\nget_burgers\n(\n2\n)\nThe key here is the\nawait\n. It tells Python that it has to wait ⏸ for\nget_burgers(2)\nto finish doing its thing 🕙 before storing the results in\nburgers\n. With that, Python will know that it can go and do something else 🔀 ⏯ in the meanwhile (like receiving another request).\nFor\nawait\nto work, it has to be inside a function that supports this asynchronicity. To do that, you just declare it with\nasync def\n:\nasync\ndef\nget_burgers\n(\nnumber\n:\nint\n):\n# Do some asynchronous stuff to create the burgers\nreturn\nburgers\n...instead of\ndef\n:\n# This is not asynchronous\ndef\nget_sequential_burgers\n(\nnumber\n:\nint\n):\n# Do some sequential stuff to create the burgers\nreturn\nburgers\nWith\nasync def\n, Python knows that, inside that function, it has to be aware of\nawait\nexpressions, and that it can \"pause\" ⏸ the execution of that function and go do something else 🔀 before coming back.\nWhen you want to call an\nasync def\nfunction, you have to \"await\" it. So, this won't work:\n# This won't work, because get_burgers was defined with: async def\nburgers\n=\nget_burgers\n(\n2\n)\nSo, if you are using a library that tells you that you can call it with\nawait\n, you need to create the\npath operation functions\nthat uses it with\nasync def\n, like in:\n@app\n.\nget\n(\n'/burgers'\n)\nasync\ndef\nread_burgers\n():\nburgers\n=\nawait\nget_burgers\n(\n2\n)\nreturn\nburgers\nMore technical details\n¶\nYou might have noticed that\nawait\ncan only be used inside of functions defined with\nasync def\n.\nBut at the same time, functions defined with\nasync def\nhave to be \"awaited\". So, functions with\nasync def\ncan only be called inside of functions defined with\nasync def\ntoo.\nSo, about the egg and the chicken, how do you call the first\nasync\nfunction?\nIf you are working with\nFastAPI\nyou don't have to worry about that, because that \"first\" function will be your\npath operation function\n, and FastAPI will know how to do the right thing.\nBut if you want to use\nasync\n/\nawait\nwithout FastAPI, you can do it as well.\nWrite your own async code\n¶\nStarlette (and\nFastAPI\n) are based on\nAnyIO\n, which makes it compatible with both Python's standard library\nasyncio\nand\nTrio\n.\nIn particular, you can directly use\nAnyIO\nfor your advanced concurrency use cases that require more advanced patterns in your own code.\nAnd even if you were not using FastAPI, you could also write your own async applications with\nAnyIO\nto be highly compatible and get its benefits (e.g.\nstructured concurrency\n).\nI created another library on top of AnyIO, as a thin layer on top, to improve a bit the type annotations and get better\nautocompletion\n,\ninline errors\n, etc. It also has a friendly introduction and tutorial to help you\nunderstand\nand write\nyour own async code\n:\nAsyncer\n. It would be particularly useful if you need to\ncombine async code with regular\n(blocking/synchronous) code.\nOther forms of asynchronous code\n¶\nThis style of using\nasync\nand\nawait\nis relatively new in the language.\nBut it makes working with asynchronous code a lot easier.\nThis same syntax (or almost identical) was also included recently in modern versions of JavaScript (in Browser and NodeJS).\nBut before that, handling asynchronous code was quite more complex and difficult.\nIn previous versions of Python, you could have used threads or\nGevent\n. But the code is way more complex to understand, debug, and think about.\nIn previous versions of NodeJS / Browser JavaScript, you would have used \"callbacks\". Which leads to \"callback hell\".\nCoroutines\n¶\nCoroutine\nis just the very fancy term for the thing returned by an\nasync def\nfunction. Python knows that it is something like a function, that it can start and that it will end at some point, but that it might be paused ⏸ internally too, whenever there is an\nawait\ninside of it.\nBut all this functionality of using asynchronous code with\nasync\nand\nawait\nis many times summarized as using \"coroutines\". It is comparable to the main key feature of Go, the \"Goroutines\".\nConclusion\n¶\nLet's see the same phrase from above:\nModern versions of Python have support for\n\"asynchronous code\"\nusing something called\n\"coroutines\"\n, with\nasync\nand\nawait\nsyntax.\nThat should make more sense now. ✨\nAll that is what powers FastAPI (through Starlette) and what makes it have such an impressive performance.\nVery Technical Details\n¶\nWarning\nYou can probably skip this.\nThese are very technical details of how\nFastAPI\nworks underneath.\nIf you have quite some technical knowledge (coroutines, threads, blocking, etc.) and are curious about how FastAPI handles\nasync def\nvs normal\ndef\n, go ahead.\nPath operation functions\n¶\nWhen you declare a\npath operation function\nwith normal\ndef\ninstead of\nasync def\n, it is run in an external threadpool that is then awaited, instead of being called directly (as it would block the server).\nIf you are coming from another async framework that does not work in the way described above and you are used to defining trivial compute-only\npath operation functions\nwith plain\ndef\nfor a tiny performance gain (about 100 nanoseconds), please note that in\nFastAPI\nthe effect would be quite opposite. In these cases, it's better to use\nasync def\nunless your\npath operation functions\nuse code that performs blocking\nI/O\n.\nStill, in both situations, chances are that\nFastAPI\nwill\nstill be faster\nthan (or at least comparable to) your previous framework.\nDependencies\n¶\nThe same applies for\ndependencies\n. If a dependency is a standard\ndef\nfunction instead of\nasync def\n, it is run in the external threadpool.\nSub-dependencies\n¶\nYou can have multiple dependencies and\nsub-dependencies\nrequiring each other (as parameters of the function definitions), some of them might be created with\nasync def\nand some with normal\ndef\n. It would still work, and the ones created with normal\ndef\nwould be called on an external thread (from the threadpool) instead of being \"awaited\".\nOther utility functions\n¶\nAny other utility function that you call directly can be created with normal\ndef\nor\nasync def\nand FastAPI won't affect the way you call it.\nThis is in contrast to the functions that FastAPI calls for you:\npath operation functions\nand dependencies.\nIf your utility function is a normal function with\ndef\n, it will be called directly (as you write it in your code), not in a threadpool, if the function is created with\nasync def\nthen you should\nawait\nfor that function when you call it in your code.\nAgain, these are very technical details that would probably be useful if you came searching for them.\nOtherwise, you should be good with the guidelines from the section above:\nIn a hurry?\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/response-cookies/",
    "title": "Response Cookies¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Cookies\nTable of contents\nUse a\nResponse\nparameter\nReturn a\nResponse\ndirectly\nMore info\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUse a\nResponse\nparameter\nReturn a\nResponse\ndirectly\nMore info\nFastAPI\nLearn\nAdvanced User Guide\nResponse Cookies\n¶\nUse a\nResponse\nparameter\n¶\nYou can declare a parameter of type\nResponse\nin your\npath operation function\n.\nAnd then you can set cookies in that\ntemporal\nresponse object.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nResponse\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/cookie-and-object/\"\n)\ndef\ncreate_cookie\n(\nresponse\n:\nResponse\n):\nresponse\n.\nset_cookie\n(\nkey\n=\n\"fakesession\"\n,\nvalue\n=\n\"fake-cookie-session-value\"\n)\nreturn\n{\n\"message\"\n:\n\"Come to the dark side, we have cookies\"\n}\nAnd then you can return any object you need, as you normally would (a\ndict\n, a database model, etc).\nAnd if you declared a\nresponse_model\n, it will still be used to filter and convert the object you returned.\nFastAPI\nwill use that\ntemporal\nresponse to extract the cookies (also headers and status code), and will put them in the final response that contains the value you returned, filtered by any\nresponse_model\n.\nYou can also declare the\nResponse\nparameter in dependencies, and set cookies (and headers) in them.\nReturn a\nResponse\ndirectly\n¶\nYou can also create cookies when returning a\nResponse\ndirectly in your code.\nTo do that, you can create a response as described in\nReturn a Response Directly\n.\nThen set Cookies in it, and then return it:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nJSONResponse\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/cookie/\"\n)\ndef\ncreate_cookie\n():\ncontent\n=\n{\n\"message\"\n:\n\"Come to the dark side, we have cookies\"\n}\nresponse\n=\nJSONResponse\n(\ncontent\n=\ncontent\n)\nresponse\n.\nset_cookie\n(\nkey\n=\n\"fakesession\"\n,\nvalue\n=\n\"fake-cookie-session-value\"\n)\nreturn\nresponse\nTip\nKeep in mind that if you return a response directly instead of using the\nResponse\nparameter, FastAPI will return it directly.\nSo, you will have to make sure your data is of the correct type. E.g. it is compatible with JSON, if you are returning a\nJSONResponse\n.\nAnd also that you are not sending any data that should have been filtered by a\nresponse_model\n.\nMore info\n¶\nTechnical Details\nYou could also use\nfrom starlette.responses import Response\nor\nfrom starlette.responses import JSONResponse\n.\nFastAPI\nprovides the same\nstarlette.responses\nas\nfastapi.responses\njust as a convenience for you, the developer. But most of the available responses come directly from Starlette.\nAnd as the\nResponse\ncan be used frequently to set headers and cookies,\nFastAPI\nalso provides it at\nfastapi.Response\n.\nTo see all the available parameters and options, check the\ndocumentation in Starlette\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/security/",
    "title": "Security¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nIn a hurry?\nOAuth2\nOAuth 1\nOpenID Connect\nOpenID (not \"OpenID Connect\")\nOpenAPI\nFastAPI\nutilities\nFastAPI\nLearn\nTutorial - User Guide\nSecurity\nSecurity\n¶\nThere are many ways to handle security, authentication and authorization.\nAnd it normally is a complex and \"difficult\" topic.\nIn many frameworks and systems just handling security and authentication takes a big amount of effort and code (in many cases it can be 50% or more of all the code written).\nFastAPI\nprovides several tools to help you deal with\nSecurity\neasily, rapidly, in a standard way, without having to study and learn all the security specifications.\nBut first, let's check some small concepts.\nIn a hurry?\n¶\nIf you don't care about any of these terms and you just need to add security with authentication based on username and password\nright now\n, skip to the next chapters.\nOAuth2\n¶\nOAuth2 is a specification that defines several ways to handle authentication and authorization.\nIt is quite an extensive specification and covers several complex use cases.\nIt includes ways to authenticate using a \"third party\".\nThat's what all the systems with \"login with Facebook, Google, X (Twitter), GitHub\" use underneath.\nOAuth 1\n¶\nThere was an OAuth 1, which is very different from OAuth2, and more complex, as it included direct specifications on how to encrypt the communication.\nIt is not very popular or used nowadays.\nOAuth2 doesn't specify how to encrypt the communication, it expects you to have your application served with HTTPS.\nTip\nIn the section about\ndeployment\nyou will see how to set up HTTPS for free, using Traefik and Let's Encrypt.\nOpenID Connect\n¶\nOpenID Connect is another specification, based on\nOAuth2\n.\nIt just extends OAuth2 specifying some things that are relatively ambiguous in OAuth2, to try to make it more interoperable.\nFor example, Google login uses OpenID Connect (which underneath uses OAuth2).\nBut Facebook login doesn't support OpenID Connect. It has its own flavor of OAuth2.\nOpenID (not \"OpenID Connect\")\n¶\nThere was also an \"OpenID\" specification. That tried to solve the same thing as\nOpenID Connect\n, but was not based on OAuth2.\nSo, it was a complete additional system.\nIt is not very popular or used nowadays.\nOpenAPI\n¶\nOpenAPI (previously known as Swagger) is the open specification for building APIs (now part of the Linux Foundation).\nFastAPI\nis based on\nOpenAPI\n.\nThat's what makes it possible to have multiple automatic interactive documentation interfaces, code generation, etc.\nOpenAPI has a way to define multiple security \"schemes\".\nBy using them, you can take advantage of all these standard-based tools, including these interactive documentation systems.\nOpenAPI defines the following security schemes:\napiKey\n: an application specific key that can come from:\nA query parameter.\nA header.\nA cookie.\nhttp\n: standard HTTP authentication systems, including:\nbearer\n: a header\nAuthorization\nwith a value of\nBearer\nplus a token. This is inherited from OAuth2.\nHTTP Basic authentication.\nHTTP Digest, etc.\noauth2\n: all the OAuth2 ways to handle security (called \"flows\").\nSeveral of these flows are appropriate for building an OAuth 2.0 authentication provider (like Google, Facebook, X (Twitter), GitHub, etc):\nimplicit\nclientCredentials\nauthorizationCode\nBut there is one specific \"flow\" that can be perfectly used for handling authentication in the same application directly:\npassword\n: some next chapters will cover examples of this.\nopenIdConnect\n: has a way to define how to discover OAuth2 authentication data automatically.\nThis automatic discovery is what is defined in the OpenID Connect specification.\nTip\nIntegrating other authentication/authorization providers like Google, Facebook, X (Twitter), GitHub, etc. is also possible and relatively easy.\nThe most complex problem is building an authentication/authorization provider like those, but\nFastAPI\ngives you the tools to do it easily, while doing the heavy lifting for you.\nFastAPI\nutilities\n¶\nFastAPI provides several tools for each of these security schemes in the\nfastapi.security\nmodule that simplify using these security mechanisms.\nIn the next chapters you will see how to add security to your API using those tools provided by\nFastAPI\n.\nAnd you will also see how it gets automatically integrated into the interactive documentation system.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/exceptions/",
    "title": "Exceptions -HTTPExceptionandWebSocketException¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nExceptions -\nHTTPException\nand\nWebSocketException\nTable of contents\nHTTPException\nExample\nstatus_code\ndetail\nheaders\nWebSocketException\nExample\ncode\nreason\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nHTTPException\nExample\nstatus_code\ndetail\nheaders\nWebSocketException\nExample\ncode\nreason\nFastAPI\nReference\nExceptions -\nHTTPException\nand\nWebSocketException\n¶\nThese are the exceptions that you can raise to show errors to the client.\nWhen you raise an exception, as would happen with normal Python, the rest of the execution is aborted. This way you can raise these exceptions from anywhere in the code to abort a request and show the error to the client.\nYou can use:\nHTTPException\nWebSocketException\nThese exceptions can be imported directly from\nfastapi\n:\nfrom\nfastapi\nimport\nHTTPException\n,\nWebSocketException\nfastapi.HTTPException\n¶\nHTTPException\n(\nstatus_code\n,\ndetail\n=\nNone\n,\nheaders\n=\nNone\n)\nBases:\nHTTPException\nAn HTTP exception you can raise in your own code to show errors to the client.\nThis is for client errors, invalid authentication, invalid data, etc. Not for server\nerrors in your code.\nRead more about it in the\nFastAPI docs for Handling Errors\n.\nExample\n¶\nfrom\nfastapi\nimport\nFastAPI\n,\nHTTPException\napp\n=\nFastAPI\n()\nitems\n=\n{\n\"foo\"\n:\n\"The Foo Wrestlers\"\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nif\nitem_id\nnot\nin\nitems\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nreturn\n{\n\"item\"\n:\nitems\n[\nitem_id\n]}\nPARAMETER\nDESCRIPTION\nstatus_code\nHTTP status code to send to the client.\nTYPE:\nint\ndetail\nAny data to be sent to the client in the\ndetail\nkey of the JSON\nresponse.\nTYPE:\nAny\nDEFAULT:\nNone\nheaders\nAny headers to send to the client in the response.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nstr\n]]\nDEFAULT:\nNone\nSource code in\nfastapi/exceptions.py\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\ndef\n__init__\n(\nself\n,\nstatus_code\n:\nAnnotated\n[\nint\n,\nDoc\n(\n\"\"\"\nHTTP status code to send to the client.\n\"\"\"\n),\n],\ndetail\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nAny data to be sent to the client in the `detail` key of the JSON\nresponse.\n\"\"\"\n),\n]\n=\nNone\n,\nheaders\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nstr\n]],\nDoc\n(\n\"\"\"\nAny headers to send to the client in the response.\n\"\"\"\n),\n]\n=\nNone\n,\n)\n->\nNone\n:\nsuper\n()\n.\n__init__\n(\nstatus_code\n=\nstatus_code\n,\ndetail\n=\ndetail\n,\nheaders\n=\nheaders\n)\nstatus_code\ninstance-attribute\n¶\nstatus_code\n=\nstatus_code\ndetail\ninstance-attribute\n¶\ndetail\n=\ndetail\nheaders\ninstance-attribute\n¶\nheaders\n=\nheaders\nfastapi.WebSocketException\n¶\nWebSocketException\n(\ncode\n,\nreason\n=\nNone\n)\nBases:\nWebSocketException\nA WebSocket exception you can raise in your own code to show errors to the client.\nThis is for client errors, invalid authentication, invalid data, etc. Not for server\nerrors in your code.\nRead more about it in the\nFastAPI docs for WebSockets\n.\nExample\n¶\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\n(\nCookie\n,\nFastAPI\n,\nWebSocket\n,\nWebSocketException\n,\nstatus\n,\n)\napp\n=\nFastAPI\n()\n@app\n.\nwebsocket\n(\n\"/items/\n{item_id}\n/ws\"\n)\nasync\ndef\nwebsocket_endpoint\n(\n*\n,\nwebsocket\n:\nWebSocket\n,\nsession\n:\nAnnotated\n[\nstr\n|\nNone\n,\nCookie\n()]\n=\nNone\n,\nitem_id\n:\nstr\n,\n):\nif\nsession\nis\nNone\n:\nraise\nWebSocketException\n(\ncode\n=\nstatus\n.\nWS_1008_POLICY_VIOLATION\n)\nawait\nwebsocket\n.\naccept\n()\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Session cookie is:\n{\nsession\n}\n\"\n)\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Message text was:\n{\ndata\n}\n, for item ID:\n{\nitem_id\n}\n\"\n)\nPARAMETER\nDESCRIPTION\ncode\nA closing code from the\nvalid codes defined in the specification\n.\nTYPE:\nint\nreason\nThe reason to close the WebSocket connection.\nIt is UTF-8-encoded data. The interpretation of the reason is up to the\napplication, it is not specified by the WebSocket specification.\nIt could contain text that could be human-readable or interpretable\nby the client code, etc.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nSource code in\nfastapi/exceptions.py\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\ndef\n__init__\n(\nself\n,\ncode\n:\nAnnotated\n[\nint\n,\nDoc\n(\n\"\"\"\nA closing code from the\n[valid codes defined in the specification](https://datatracker.ietf.org/doc/html/rfc6455#section-7.4.1).\n\"\"\"\n),\n],\nreason\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nDoc\n(\n\"\"\"\nThe reason to close the WebSocket connection.\nIt is UTF-8-encoded data. The interpretation of the reason is up to the\napplication, it is not specified by the WebSocket specification.\nIt could contain text that could be human-readable or interpretable\nby the client code, etc.\n\"\"\"\n),\n]\n=\nNone\n,\n)\n->\nNone\n:\nsuper\n()\n.\n__init__\n(\ncode\n=\ncode\n,\nreason\n=\nreason\n)\ncode\ninstance-attribute\n¶\ncode\n=\ncode\nreason\ninstance-attribute\n¶\nreason\n=\nreason\nor\n''\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/history-design-future/",
    "title": "History, Design and Future¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nHistory, Design and Future\nTable of contents\nAlternatives\nInvestigation\nDesign\nRequirements\nDevelopment\nFuture\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAlternatives\nInvestigation\nDesign\nRequirements\nDevelopment\nFuture\nFastAPI\nAbout\nHistory, Design and Future\n¶\nSome time ago,\na\nFastAPI\nuser asked\n:\nWhat’s the history of this project? It seems to have come from nowhere to awesome in a few weeks [...]\nHere's a little bit of that history.\nAlternatives\n¶\nI have been creating APIs with complex requirements for several years (Machine Learning, distributed systems, asynchronous jobs, NoSQL databases, etc), leading several teams of developers.\nAs part of that, I needed to investigate, test and use many alternatives.\nThe history of\nFastAPI\nis in great part the history of its predecessors.\nAs said in the section\nAlternatives\n:\nFastAPI\nwouldn't exist if not for the previous work of others.\nThere have been many tools created before that have helped inspire its creation.\nI have been avoiding the creation of a new framework for several years. First I tried to solve all the features covered by\nFastAPI\nusing many different frameworks, plug-ins, and tools.\nBut at some point, there was no other option than creating something that provided all these features, taking the best ideas from previous tools, and combining them in the best way possible, using language features that weren't even available before (Python 3.6+ type hints).\nInvestigation\n¶\nBy using all the previous alternatives I had the chance to learn from all of them, take ideas, and combine them in the best way I could find for myself and the teams of developers I have worked with.\nFor example, it was clear that ideally it should be based on standard Python type hints.\nAlso, the best approach was to use already existing standards.\nSo, before even starting to code\nFastAPI\n, I spent several months studying the specs for OpenAPI, JSON Schema, OAuth2, etc. Understanding their relationship, overlap, and differences.\nDesign\n¶\nThen I spent some time designing the developer \"API\" I wanted to have as a user (as a developer using FastAPI).\nI tested several ideas in the most popular Python editors: PyCharm, VS Code, Jedi based editors.\nBy the last\nPython Developer Survey\n, that covers about 80% of the users.\nIt means that\nFastAPI\nwas specifically tested with the editors used by 80% of the Python developers. And as most of the other editors tend to work similarly, all its benefits should work for virtually all editors.\nThat way I could find the best ways to reduce code duplication as much as possible, to have completion everywhere, type and error checks, etc.\nAll in a way that provided the best development experience for all the developers.\nRequirements\n¶\nAfter testing several alternatives, I decided that I was going to use\nPydantic\nfor its advantages.\nThen I contributed to it, to make it fully compliant with JSON Schema, to support different ways to define constraint declarations, and to improve editor support (type checks, autocompletion) based on the tests in several editors.\nDuring the development, I also contributed to\nStarlette\n, the other key requirement.\nDevelopment\n¶\nBy the time I started creating\nFastAPI\nitself, most of the pieces were already in place, the design was defined, the requirements and tools were ready, and the knowledge about the standards and specifications was clear and fresh.\nFuture\n¶\nBy this point, it's already clear that\nFastAPI\nwith its ideas is being useful for many people.\nIt is being chosen over previous alternatives for suiting many use cases better.\nMany developers and teams already depend on\nFastAPI\nfor their projects (including me and my team).\nBut still, there are many improvements and features to come.\nFastAPI\nhas a great future ahead.\nAnd\nyour help\nis greatly appreciated.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/release-notes/",
    "title": "Release Notes¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nRelease Notes\nTable of contents\nLatest Changes\n0.119.0\nFeatures\n0.118.3\nUpgrades\n0.118.2\nFixes\nInternal\n0.118.1\nUpgrades\nDocs\nTranslations\nInternal\n0.118.0\nFixes\nDocs\nTranslations\nInternal\n0.117.1\nFixes\n0.117.0\nFeatures\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.116.2\nUpgrades\nDocs\nTranslations\nInternal\n0.116.1\nUpgrades\nDocs\nInternal\n0.116.0\nFeatures\nTranslations\nInternal\n0.115.14\nFixes\nDocs\nTranslations\nInternal\n0.115.13\nFixes\nRefactors\nUpgrades\nDocs\nTranslations\nInternal\n0.115.12\nFixes\nDocs\nTranslations\nInternal\n0.115.11\nFixes\nTranslations\nInternal\n0.115.10\nFixes\nUpgrades\nTranslations\n0.115.9\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.115.8\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.115.7\nUpgrades\nRefactors\nDocs\nTranslations\nInternal\n0.115.6\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.115.5\nRefactors\nDocs\nTranslations\nInternal\n0.115.4\nRefactors\nDocs\nTranslations\nInternal\n0.115.3\nUpgrades\nDocs\nTranslations\nInternal\n0.115.2\nUpgrades\n0.115.1\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.115.0\nHighlights\nQuery\nParameter Models\nHeader\nParameter Models\nCookie\nParameter Models\nForbid Extra Query (Cookie, Header) Parameters\nFeatures\nTranslations\nInternal\n0.114.2\nFixes\nTranslations\nInternal\n0.114.1\nRefactors\nDocs\nTranslations\nInternal\n0.114.0\nFeatures\nDocs\nInternal\n0.113.0\nFeatures\nInternal\n0.112.4\nRefactors\nInternal\n0.112.3\nRefactors\nDocs\nTranslations\nInternal\n0.112.2\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.112.1\nUpgrades\nDocs\nTranslations\nInternal\n0.112.0\nBreaking Changes\nSummary\nOther Changes\nTechnical Details\nDocs\nTranslations\nInternal\n0.111.1\nUpgrades\nDocs\nTranslations\nInternal\n0.111.0\nFeatures\nRefactors\n0.110.3\nDocs\nTranslations\nInternal\n0.110.2\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.110.1\nFixes\nRefactors\nUpgrades\nDocs\nTranslations\nInternal\n0.110.0\nBreaking Changes\nDocs\nTranslations\n0.109.2\nUpgrades\nTranslations\nInternal\n0.109.1\nSecurity fixes\nFeatures\nRefactors\nDocs\nTranslations\nInternal\n0.109.0\nFeatures\nUpgrades\nDocs\nTranslations\nInternal\n0.108.0\nUpgrades\n0.107.0\nUpgrades\nDocs\n0.106.0\nBreaking Changes\nDependencies with\nyield\n,\nHTTPException\nand Background Tasks\nFeatures\nInternal\n0.105.0\nFeatures\nRefactors\nDocs\nInternal\n0.104.1\nFixes\nDocs\nInternal\n0.104.0\nFeatures\nUpgrades\nInternal\n0.103.2\nRefactors\nTranslations\nInternal\n0.103.1\nFixes\nDocs\nTranslations\nRefactors\nInternal\n0.103.0\nFeatures\nDocs\n0.102.0\nFeatures\nRefactors\nDocs\nInternal\n0.101.1\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.101.0\nFeatures\nRefactors\nUpgrades\nTranslations\nInternal\n0.100.1\nFixes\nDocs\nTranslations\nInternal\n0.100.0\nMigration\nPydantic v1\nChanges\n0.99.1\nFixes\nDocs\n0.99.0\nFeatures\nDocs\nTranslations\nInternal\n0.98.0\nFeatures\nDocs\nTranslations\nInternal\n0.97.0\nFeatures\nRefactors\nUpgrades\nInternal\n0.96.1\nFixes\nUpgrades\nRefactors\nDocs\nTranslations\nInternal\n0.96.0\nFeatures\nDocs\nTranslations\nInternal\n0.95.2\nTranslations\nInternal\n0.95.1\nFixes\nDocs\nTranslations\nInternal\n0.95.0\nHighlights\nFeatures\nDocs\n0.94.1\nFixes\n0.94.0\nUpgrades\nDocs\nTranslations\nInternal\n0.93.0\nFeatures\nDocs\nTranslations\nInternal\n0.92.0\nUpgrades\n0.91.0\nUpgrades\n0.90.1\nUpgrades\nDocs\nTranslations\nInternal\n0.90.0\nUpgrades\nDocs\nTranslations\nInternal\n0.89.1\nFixes\nDocs\nTranslations\n0.89.0\nFeatures\nDocs\nTranslations\nInternal\n0.88.0\nUpgrades\nDocs\nTranslations\nInternal\n0.87.0\nFeatures\nDocs\nTranslations\nInternal\n0.86.0\nFeatures\nFixes\nDocs\nTranslations\nInternal\n0.85.2\nDocs\nTranslations\nInternal\n0.85.1\nFixes\nDocs\nInternal\n0.85.0\nFeatures\nInternal\n0.84.0\nBreaking Changes\n0.83.0\nFeatures\nFixes\nDocs\nInternal\n0.82.0\nFeatures\nFixes\nDocs\nTranslations\nInternal\n0.81.0\nFeatures\nFixes\nDocs\nTranslations\nInternal\n0.80.0\nBreaking Changes - Fixes\nFixes\nTranslations\n0.79.1\nFixes\nDocs\nTranslations\nInternal\n0.79.0\nFixes - Breaking Changes\nTranslations\nInternal\n0.78.0\nFeatures\nDocs\nTranslations\nInternal\n0.77.1\nUpgrades\nDocs\nTranslations\nInternal\n0.77.0\nUpgrades\nDocs\nTranslations\n0.76.0\nUpgrades\nInternal\n0.75.2\nFixes\nUpgrades\nInternal\n0.75.1\nTranslations\nInternal\n0.75.0\nFeatures\n0.74.1\nFeatures\n0.74.0\nBreaking Changes\nFeatures\nInternal\n0.73.0\nFeatures\nDocs\nFixes\nInternal\n0.72.0\nFeatures\nDocs\nTranslations\nInternal\n0.71.0\nFeatures\nInternal\n0.70.1\nFixes\nTranslations\nInternal\n0.70.0\nBreaking Changes - Upgrade\n0.69.0\nBreaking Changes - Upgrade\nFeatures\nDocs\nTranslations\nInternal\n0.68.2\nFeatures\nDocs\nTranslations\nInternal\n0.68.1\nTranslations\nInternal\n0.68.0\nFeatures\nDocs\nTranslations\nInternal\n0.67.0\nFeatures\nDocs\nInternal\n0.66.1\nTranslations\nInternal\n0.66.0\nFeatures\nFixes\nTranslations\n0.65.3\nFixes\nTranslations\nInternal\n0.65.2\nSecurity fixes\nInternal\n0.65.1\nSecurity fixes\n0.65.0\nBreaking Changes - Upgrade\nTranslations\nInternal\n0.64.0\nFeatures\nFixes\nDocs\nTranslations\nInternal\n0.63.0\nFeatures\nBreaking changes\nFixes\nDocs\nTranslations\nInternal\n0.62.0\nFeatures\nBreaking Changes\nDocs\nTranslations\nInternal\n0.61.2\nFixes\nDocs\nTranslations\nInternal\n0.61.1\nFixes\nDocs\nTranslations\nInternal\n0.61.0\nFeatures\nBreaking Changes\nDocs\nInternal\n0.60.2\n0.60.1\n0.60.0\n0.59.0\n0.58.1\n0.58.0\n0.57.0\n0.56.1\n0.56.0\n0.55.1\n0.55.0\n0.54.2\n0.54.1\n0.54.0\n0.53.2\n0.53.1\n0.53.0\n0.52.0\n0.51.0\n0.50.0\n0.49.2\n0.49.1\n0.49.0\n0.48.0\n0.47.1\n0.47.0\n0.46.0\n0.45.0\n0.44.1\n0.44.0\n0.43.0\n0.42.0\n0.41.0\n0.40.0\n0.39.0\n0.38.1\n0.38.0\n0.37.0\n0.36.0\n0.35.0\n0.34.0\n0.33.0\n0.32.0\n0.31.0\n0.30.1\n0.30.0\n0.29.1\n0.29.0\n0.28.0\n0.27.2\n0.27.1\n0.27.0\n0.26.0\n0.25.0\n0.24.0\n0.23.0\n0.22.0\n0.21.0\n0.20.1\n0.20.0\n0.19.0\n0.18.0\n0.17.0\n0.16.0\n0.15.0\n0.14.0\n0.13.0\n0.12.1\n0.12.0\n0.11.0\n0.10.3\n0.10.2\n0.10.1\n0.10.0\n0.9.1\n0.9.0\n0.8.0\n0.7.1\n0.7.0\n0.6.4\n0.6.3\n0.6.2\n0.6.1\n0.6.0\n0.5.1\n0.5.0\n0.4.0\n0.3.0\n0.2.1\n0.2.0\n0.1.19\nTable of contents\nLatest Changes\n0.119.0\nFeatures\n0.118.3\nUpgrades\n0.118.2\nFixes\nInternal\n0.118.1\nUpgrades\nDocs\nTranslations\nInternal\n0.118.0\nFixes\nDocs\nTranslations\nInternal\n0.117.1\nFixes\n0.117.0\nFeatures\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.116.2\nUpgrades\nDocs\nTranslations\nInternal\n0.116.1\nUpgrades\nDocs\nInternal\n0.116.0\nFeatures\nTranslations\nInternal\n0.115.14\nFixes\nDocs\nTranslations\nInternal\n0.115.13\nFixes\nRefactors\nUpgrades\nDocs\nTranslations\nInternal\n0.115.12\nFixes\nDocs\nTranslations\nInternal\n0.115.11\nFixes\nTranslations\nInternal\n0.115.10\nFixes\nUpgrades\nTranslations\n0.115.9\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.115.8\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.115.7\nUpgrades\nRefactors\nDocs\nTranslations\nInternal\n0.115.6\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.115.5\nRefactors\nDocs\nTranslations\nInternal\n0.115.4\nRefactors\nDocs\nTranslations\nInternal\n0.115.3\nUpgrades\nDocs\nTranslations\nInternal\n0.115.2\nUpgrades\n0.115.1\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.115.0\nHighlights\nQuery\nParameter Models\nHeader\nParameter Models\nCookie\nParameter Models\nForbid Extra Query (Cookie, Header) Parameters\nFeatures\nTranslations\nInternal\n0.114.2\nFixes\nTranslations\nInternal\n0.114.1\nRefactors\nDocs\nTranslations\nInternal\n0.114.0\nFeatures\nDocs\nInternal\n0.113.0\nFeatures\nInternal\n0.112.4\nRefactors\nInternal\n0.112.3\nRefactors\nDocs\nTranslations\nInternal\n0.112.2\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.112.1\nUpgrades\nDocs\nTranslations\nInternal\n0.112.0\nBreaking Changes\nSummary\nOther Changes\nTechnical Details\nDocs\nTranslations\nInternal\n0.111.1\nUpgrades\nDocs\nTranslations\nInternal\n0.111.0\nFeatures\nRefactors\n0.110.3\nDocs\nTranslations\nInternal\n0.110.2\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.110.1\nFixes\nRefactors\nUpgrades\nDocs\nTranslations\nInternal\n0.110.0\nBreaking Changes\nDocs\nTranslations\n0.109.2\nUpgrades\nTranslations\nInternal\n0.109.1\nSecurity fixes\nFeatures\nRefactors\nDocs\nTranslations\nInternal\n0.109.0\nFeatures\nUpgrades\nDocs\nTranslations\nInternal\n0.108.0\nUpgrades\n0.107.0\nUpgrades\nDocs\n0.106.0\nBreaking Changes\nDependencies with\nyield\n,\nHTTPException\nand Background Tasks\nFeatures\nInternal\n0.105.0\nFeatures\nRefactors\nDocs\nInternal\n0.104.1\nFixes\nDocs\nInternal\n0.104.0\nFeatures\nUpgrades\nInternal\n0.103.2\nRefactors\nTranslations\nInternal\n0.103.1\nFixes\nDocs\nTranslations\nRefactors\nInternal\n0.103.0\nFeatures\nDocs\n0.102.0\nFeatures\nRefactors\nDocs\nInternal\n0.101.1\nFixes\nRefactors\nDocs\nTranslations\nInternal\n0.101.0\nFeatures\nRefactors\nUpgrades\nTranslations\nInternal\n0.100.1\nFixes\nDocs\nTranslations\nInternal\n0.100.0\nMigration\nPydantic v1\nChanges\n0.99.1\nFixes\nDocs\n0.99.0\nFeatures\nDocs\nTranslations\nInternal\n0.98.0\nFeatures\nDocs\nTranslations\nInternal\n0.97.0\nFeatures\nRefactors\nUpgrades\nInternal\n0.96.1\nFixes\nUpgrades\nRefactors\nDocs\nTranslations\nInternal\n0.96.0\nFeatures\nDocs\nTranslations\nInternal\n0.95.2\nTranslations\nInternal\n0.95.1\nFixes\nDocs\nTranslations\nInternal\n0.95.0\nHighlights\nFeatures\nDocs\n0.94.1\nFixes\n0.94.0\nUpgrades\nDocs\nTranslations\nInternal\n0.93.0\nFeatures\nDocs\nTranslations\nInternal\n0.92.0\nUpgrades\n0.91.0\nUpgrades\n0.90.1\nUpgrades\nDocs\nTranslations\nInternal\n0.90.0\nUpgrades\nDocs\nTranslations\nInternal\n0.89.1\nFixes\nDocs\nTranslations\n0.89.0\nFeatures\nDocs\nTranslations\nInternal\n0.88.0\nUpgrades\nDocs\nTranslations\nInternal\n0.87.0\nFeatures\nDocs\nTranslations\nInternal\n0.86.0\nFeatures\nFixes\nDocs\nTranslations\nInternal\n0.85.2\nDocs\nTranslations\nInternal\n0.85.1\nFixes\nDocs\nInternal\n0.85.0\nFeatures\nInternal\n0.84.0\nBreaking Changes\n0.83.0\nFeatures\nFixes\nDocs\nInternal\n0.82.0\nFeatures\nFixes\nDocs\nTranslations\nInternal\n0.81.0\nFeatures\nFixes\nDocs\nTranslations\nInternal\n0.80.0\nBreaking Changes - Fixes\nFixes\nTranslations\n0.79.1\nFixes\nDocs\nTranslations\nInternal\n0.79.0\nFixes - Breaking Changes\nTranslations\nInternal\n0.78.0\nFeatures\nDocs\nTranslations\nInternal\n0.77.1\nUpgrades\nDocs\nTranslations\nInternal\n0.77.0\nUpgrades\nDocs\nTranslations\n0.76.0\nUpgrades\nInternal\n0.75.2\nFixes\nUpgrades\nInternal\n0.75.1\nTranslations\nInternal\n0.75.0\nFeatures\n0.74.1\nFeatures\n0.74.0\nBreaking Changes\nFeatures\nInternal\n0.73.0\nFeatures\nDocs\nFixes\nInternal\n0.72.0\nFeatures\nDocs\nTranslations\nInternal\n0.71.0\nFeatures\nInternal\n0.70.1\nFixes\nTranslations\nInternal\n0.70.0\nBreaking Changes - Upgrade\n0.69.0\nBreaking Changes - Upgrade\nFeatures\nDocs\nTranslations\nInternal\n0.68.2\nFeatures\nDocs\nTranslations\nInternal\n0.68.1\nTranslations\nInternal\n0.68.0\nFeatures\nDocs\nTranslations\nInternal\n0.67.0\nFeatures\nDocs\nInternal\n0.66.1\nTranslations\nInternal\n0.66.0\nFeatures\nFixes\nTranslations\n0.65.3\nFixes\nTranslations\nInternal\n0.65.2\nSecurity fixes\nInternal\n0.65.1\nSecurity fixes\n0.65.0\nBreaking Changes - Upgrade\nTranslations\nInternal\n0.64.0\nFeatures\nFixes\nDocs\nTranslations\nInternal\n0.63.0\nFeatures\nBreaking changes\nFixes\nDocs\nTranslations\nInternal\n0.62.0\nFeatures\nBreaking Changes\nDocs\nTranslations\nInternal\n0.61.2\nFixes\nDocs\nTranslations\nInternal\n0.61.1\nFixes\nDocs\nTranslations\nInternal\n0.61.0\nFeatures\nBreaking Changes\nDocs\nInternal\n0.60.2\n0.60.1\n0.60.0\n0.59.0\n0.58.1\n0.58.0\n0.57.0\n0.56.1\n0.56.0\n0.55.1\n0.55.0\n0.54.2\n0.54.1\n0.54.0\n0.53.2\n0.53.1\n0.53.0\n0.52.0\n0.51.0\n0.50.0\n0.49.2\n0.49.1\n0.49.0\n0.48.0\n0.47.1\n0.47.0\n0.46.0\n0.45.0\n0.44.1\n0.44.0\n0.43.0\n0.42.0\n0.41.0\n0.40.0\n0.39.0\n0.38.1\n0.38.0\n0.37.0\n0.36.0\n0.35.0\n0.34.0\n0.33.0\n0.32.0\n0.31.0\n0.30.1\n0.30.0\n0.29.1\n0.29.0\n0.28.0\n0.27.2\n0.27.1\n0.27.0\n0.26.0\n0.25.0\n0.24.0\n0.23.0\n0.22.0\n0.21.0\n0.20.1\n0.20.0\n0.19.0\n0.18.0\n0.17.0\n0.16.0\n0.15.0\n0.14.0\n0.13.0\n0.12.1\n0.12.0\n0.11.0\n0.10.3\n0.10.2\n0.10.1\n0.10.0\n0.9.1\n0.9.0\n0.8.0\n0.7.1\n0.7.0\n0.6.4\n0.6.3\n0.6.2\n0.6.1\n0.6.0\n0.5.1\n0.5.0\n0.4.0\n0.3.0\n0.2.1\n0.2.0\n0.1.19\nRelease Notes\n¶\nLatest Changes\n¶\n0.119.0\n¶\nFastAPI now (temporarily) supports both Pydantic v2 models and\npydantic.v1\nmodels at the same time in the same app, to make it easier for any FastAPI apps still using Pydantic v1 to gradually but quickly\nmigrate to Pydantic v2\n.\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nas\nBaseModelV2\nfrom\npydantic.v1\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nclass\nItemV2\n(\nBaseModelV2\n):\ntitle\n:\nstr\nsummary\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItemV2\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\n{\n\"title\"\n:\nitem\n.\nname\n,\n\"summary\"\n:\nitem\n.\ndescription\n}\nAdding this feature was a big effort with the main objective of making it easier for the few applications still stuck in Pydantic v1 to migrate to Pydantic v2.\nAnd with this, support for\nPydantic v1 is now deprecated\nand will be\nremoved\nfrom FastAPI in a future version soon.\nNote\n: have in mind that the Pydantic team already stopped supporting Pydantic v1 for recent versions of Python, starting with Python 3.14.\nYou can read in the docs more about how to\nMigrate from Pydantic v1 to Pydantic v2\n.\nFeatures\n¶\n✨ Add support for\nfrom pydantic.v1 import BaseModel\n, mixed Pydantic v1 and v2 models in the same app. PR\n#14168\nby\n@tiangolo\n.\n0.118.3\n¶\nUpgrades\n¶\n⬆️ Add support for Python 3.14. PR\n#14165\nby\n@svlandeg\n.\n0.118.2\n¶\nFixes\n¶\n🐛 Fix tagged discriminated union not recognized as body field. PR\n#12942\nby\n@frankie567\n.\nInternal\n¶\n⬆ Bump astral-sh/setup-uv from 6 to 7. PR\n#14167\nby\n@dependabot[bot]\n.\n0.118.1\n¶\nUpgrades\n¶\n👽️ Ensure compatibility with Pydantic 2.12.0. PR\n#14036\nby\n@cjwatson\n.\nDocs\n¶\n📝 Add External Link: Getting started with logging in FastAPI. PR\n#14152\nby\n@itssimon\n.\nTranslations\n¶\n🔨 Add Russian translations LLM prompt. PR\n#13936\nby\n@tiangolo\n.\n🌐 Sync German docs. PR\n#14149\nby\n@nilslindemann\n.\n🌐 Add Russian translations for missing pages (LLM-generated). PR\n#14135\nby\n@YuriiMotov\n.\n🌐 Update Russian translations for existing pages (LLM-generated). PR\n#14123\nby\n@YuriiMotov\n.\n🌐 Remove configuration files for inactive translations. PR\n#14130\nby\n@tiangolo\n.\nInternal\n¶\n🔨 Move local coverage logic to its own script. PR\n#14166\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#14161\nby\n@pre-commit-ci[bot]\n.\n⬆ Bump griffe-typingdoc from 0.2.8 to 0.2.9. PR\n#14144\nby\n@dependabot[bot]\n.\n⬆ Bump mkdocs-macros-plugin from 1.3.9 to 1.4.0. PR\n#14145\nby\n@dependabot[bot]\n.\n⬆ Bump markdown-include-variants from 0.0.4 to 0.0.5. PR\n#14146\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#14126\nby\n@pre-commit-ci[bot]\n.\n👥 Update FastAPI GitHub topic repositories. PR\n#14150\nby\n@tiangolo\n.\n👥 Update FastAPI People - Sponsors. PR\n#14139\nby\n@tiangolo\n.\n👥 Update FastAPI People - Contributors and Translators. PR\n#14138\nby\n@tiangolo\n.\n⬆ Bump ruff from 0.12.7 to 0.13.2. PR\n#14147\nby\n@dependabot[bot]\n.\n⬆ Bump sqlmodel from 0.0.24 to 0.0.25. PR\n#14143\nby\n@dependabot[bot]\n.\n⬆ Bump tiangolo/issue-manager from 0.5.1 to 0.6.0. PR\n#14148\nby\n@dependabot[bot]\n.\n👷 Update docs previews comment, single comment, add failure status. PR\n#14129\nby\n@tiangolo\n.\n🔨 Modify\nmkdocs_hooks.py\nto add\ntitle\nto page's metadata (remove permalinks in social cards). PR\n#14125\nby\n@YuriiMotov\n.\n0.118.0\n¶\nFixes\n¶\n🐛 Fix support for\nStreamingResponse\ns with dependencies with\nyield\nor\nUploadFile\ns, close after the response is done. PR\n#14099\nby\n@tiangolo\n.\nBefore FastAPI 0.118.0, if you used a dependency with\nyield\n, it would run the exit code after the\npath operation function\nreturned but right before sending the response.\nThis change also meant that if you returned a\nStreamingResponse\n, the exit code of the dependency with\nyield\nwould have been already run.\nFor example, if you had a database session in a dependency with\nyield\n, the\nStreamingResponse\nwould not be able to use that session while streaming data because the session would have already been closed in the exit code after\nyield\n.\nThis behavior was reverted in 0.118.0, to make the exit code after\nyield\nbe executed after the response is sent.\nYou can read more about it in the docs for\nAdvanced Dependencies - Dependencies with\nyield\n,\nHTTPException\n,\nexcept\nand Background Tasks\n. Including what you could do if you wanted to close a database session earlier, before returning the response to the client.\nDocs\n¶\n📝 Update\ntutorial/security/oauth2-jwt/\nto use\npwdlib\nwith Argon2 instead of\npasslib\n. PR\n#13917\nby\n@Neizvestnyj\n.\n✏️ Fix typos in OAuth2 password request forms. PR\n#14112\nby\n@alv2017\n.\n📝 Update contributing guidelines for installing requirements. PR\n#14095\nby\n@alejsdev\n.\nTranslations\n¶\n🌐 Sync German docs. PR\n#14098\nby\n@nilslindemann\n.\nInternal\n¶\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#14103\nby\n@pre-commit-ci[bot]\n.\n♻️ Refactor sponsor image handling. PR\n#14102\nby\n@alejsdev\n.\n🐛 Fix sponsor display issue by hiding element on image error. PR\n#14097\nby\n@alejsdev\n.\n🐛 Hide sponsor badge when sponsor image is not displayed. PR\n#14096\nby\n@alejsdev\n.\n0.117.1\n¶\nFixes\n¶\n🐛 Fix validation error when\nFile\nis declared after\nForm\nparameter. PR\n#11194\nby\n@thomasleveil\n.\n0.117.0\n¶\nFeatures\n¶\n✨  Allow\nNone\nas return type for bodiless responses. PR\n#9425\nby\n@hofrob\n.\n✨ Allow array values for OpenAPI schema\ntype\nfield. PR\n#13639\nby\n@sammasak\n.\n✨ Add OpenAPI\nexternal_docs\nparameter to\nFastAPI\n. PR\n#13713\nby\n@cmtoro\n.\nFixes\n¶\n⚡️ Fix\ndefault_factory\nfor response model field with Pydantic V1. PR\n#9704\nby\n@vvanglro\n.\n🐛 Fix inconsistent processing of model docstring formfeed char with Pydantic V1. PR\n#6039\nby\n@MaxwellPayne\n.\n🐛 Fix\njsonable_encoder\nalters\njson_encoders\nof Pydantic v1 objects. PR\n#4972\nby\n@aboubacs\n.\n🐛 Reenable\nallow_arbitrary_types\nwhen only 1 argument is used on the API endpoint. PR\n#13694\nby\n@rmawatson\n.\n🐛 Fix\ninspect.getcoroutinefunction()\ncan break testing with\nunittest.mock.patch()\n. PR\n#14022\nby\n@secrett2633\n.\nRefactors\n¶\n♻️ Create\ndependency-cache\ndict in\nsolve_dependencies\nonly if\nNone\n(don't re-create if empty). PR\n#13689\nby\n@bokshitsky\n.\n✅ Enable test case for duplicated headers in\ntest_tutorial/test_header_params/test_tutorial003.py\n. PR\n#13864\nby\n@Amogha-ark\n.\n📌 Pin\nhttpx\nto\n>=0.23.0,<1.0.0\n. PR\n#14086\nby\n@YuriiMotov\n.\nDocs\n¶\n📝 Add note about Cookies and JavaScript on\ntutorial/cookie-params.md\n. PR\n#13510\nby\n@Kludex\n.\n📝 Remove outdated formatting from\npath-params-numeric-validations.md\nfor languages\nen\n,\nes\nand\nuk\n.. PR\n#14059\nby\n@svlandeg\n.\n📝 Fix and Improve English Documentation. PR\n#14048\nby\n@nilslindemann\n.\nTranslations\n¶\n📝 Update prompts and German translation. PR\n#14015\nby\n@nilslindemann\n.\nInternal\n¶\n✅ Simplify tests for response_model. PR\n#14062\nby\n@dynamicy\n.\n🚨 Install pydantic.mypy plugin. PR\n#14081\nby\n@svlandeg\n.\n✅ Add LLM test file. PR\n#14049\nby\n@nilslindemann\n.\n🔨 Update translations script. PR\n#13968\nby\n@YuriiMotov\n.\n🛠️ Update\ndocs.py generate-readme\ncommand to remove permalinks from headers. PR\n#14055\nby\n@YuriiMotov\n.\n⬆️ Update mypy to 1.14.1. PR\n#12970\nby\n@tamird\n.\n0.116.2\n¶\nUpgrades\n¶\n⬆️ Upgrade Starlette supported version range to >=0.40.0,<0.49.0. PR\n#14077\nby\n@musicinmybrain\n.\nDocs\n¶\n📝 Add documentation for Behind a Proxy - Proxy Forwarded Headers, using\n--forwarded-allow-ips=\"*\"\n. PR\n#14028\nby\n@tiangolo\n.\n📝 Add deprecation info block about\ndict()\nin\ndocs/tutorial/body.md\n. PR\n#13906\nby\n@jomkv\n.\n📝 Fix Twitter to be X (Twitter) everywhere in documentation. PR\n#13809\nby\n@valentinDruzhinin\n.\n🐛 Prevent scroll-to-top on restart/fast buttons in\ntermynal.js\n. PR\n#13714\nby\n@Ashish-Pandey62\n.\n📝 Update testing events documentation. PR\n#13259\nby\n@z0z0r4\n.\n📝 Remove obsolete\nurl\nfield in error responses in docs. PR\n#13655\nby\n@Taoup\n.\n📝 Bring the\nscope\nclaim in line with the standard in\ndocs_src/security/tutorial005.py\n. PR\n#11189\nby\n@DurandA\n.\n📝 Update TrustedHostMiddleware Documentation. PR\n#11441\nby\n@soulee-dev\n.\n📝 Remove links to site callbackhell.com that doesn't exist anymore. PR\n#14006\nby\n@dennybiasiolli\n.\n📝 Add permalinks to headers in English docs. PR\n#13993\nby\n@YuriiMotov\n.\n📝 Update\ndocs/en/docs/advanced/generate-clients.md\n. PR\n#13793\nby\n@mrlubos\n.\n📝 Add discussion template for new language translation requests. PR\n#13535\nby\n@alejsdev\n.\nTranslations\n¶\n📝 Fix code include for Pydantic models example in\ndocs/zh/docs/python-types.md\n. PR\n#13997\nby\n@anfreshman\n.\n🌐 Update Portuguese Translation for\ndocs/pt/docs/async.md\n. PR\n#13863\nby\n@EdmilsonRodrigues\n.\n📝 Fix highlight line in\ndocs/ja/docs/tutorial/body.md\n. PR\n#13927\nby\n@KoyoMiyazaki\n.\n🌐 Add Persian translation for\ndocs/fa/docs/environment-variables.md\n. PR\n#13923\nby\n@Mohammad222PR\n.\n🌐 Add Persian translation for\ndocs/fa/docs/python-types.md\n. PR\n#13524\nby\n@Mohammad222PR\n.\n🌐 Update Portuguese Translation for\ndocs/pt/docs/project-generation.md\n. PR\n#13875\nby\n@EdmilsonRodrigues\n.\n🌐 Add Persian translation for\ndocs/fa/docs/async.md\n. PR\n#13541\nby\n@Mohammad222PR\n.\n🌐 Add Bangali translation for\ndocs/bn/about/index.md\n. PR\n#13882\nby\n@sajjadrahman56\n.\nInternal\n¶\n⬆ Bump pyjwt from 2.8.0 to 2.9.0. PR\n#13960\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#14080\nby\n@pre-commit-ci[bot]\n.\n⬆ Bump actions/setup-python from 5 to 6. PR\n#14042\nby\n@dependabot[bot]\n.\n⬆ Bump actions/labeler from 5 to 6. PR\n#14046\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#14056\nby\n@pre-commit-ci[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#14035\nby\n@pre-commit-ci[bot]\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.12.4 to 1.13.0. PR\n#14041\nby\n@dependabot[bot]\n.\n👥 Update FastAPI People - Contributors and Translators. PR\n#14029\nby\n@tiangolo\n.\n👥 Update FastAPI People - Sponsors. PR\n#14030\nby\n@tiangolo\n.\n👥 Update FastAPI GitHub topic repositories. PR\n#14031\nby\n@tiangolo\n.\n👥 Update FastAPI People - Experts. PR\n#14034\nby\n@tiangolo\n.\n👷 Detect and label merge conflicts on PRs automatically. PR\n#14045\nby\n@svlandeg\n.\n🔧 Update sponsors: remove Platform.sh. PR\n#14027\nby\n@tiangolo\n.\n🔧 Update sponsors: remove Mobb. PR\n#14026\nby\n@tiangolo\n.\n🛠️ Update\nmkdocs_hooks\nto handle headers with permalinks when building docs. PR\n#14025\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#14016\nby\n@pre-commit-ci[bot]\n.\n⬆ Bump\nmkdocs-macros-plugin\nfrom 1.3.7 to 1.3.9. PR\n#14003\nby\n@YuriiMotov\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13999\nby\n@pre-commit-ci[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13983\nby\n@pre-commit-ci[bot]\n.\n⬆ Bump actions/checkout from 4 to 5. PR\n#13986\nby\n@dependabot[bot]\n.\n🔧 Update Speakeasy sponsor graphic. PR\n#13971\nby\n@chailandau\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13969\nby\n@pre-commit-ci[bot]\n.\n⬆ Bump actions/download-artifact from 4 to 5. PR\n#13975\nby\n@dependabot[bot]\n.\n👥 Update FastAPI People - Experts. PR\n#13963\nby\n@tiangolo\n.\n⬆ Bump ruff from 0.11.2 to 0.12.7. PR\n#13957\nby\n@dependabot[bot]\n.\n⬆ Bump cairosvg from 2.7.1 to 2.8.2. PR\n#13959\nby\n@dependabot[bot]\n.\n⬆ Bump pydantic-ai from 0.0.30 to 0.4.10. PR\n#13958\nby\n@dependabot[bot]\n.\n👥 Update FastAPI GitHub topic repositories. PR\n#13962\nby\n@tiangolo\n.\n⬆ Bump mkdocs-material from 9.6.15 to 9.6.16. PR\n#13961\nby\n@dependabot[bot]\n.\n⬆ Bump tiangolo/latest-changes from 0.3.2 to 0.4.0. PR\n#13952\nby\n@dependabot[bot]\n.\n👥 Update FastAPI People - Sponsors. PR\n#13956\nby\n@tiangolo\n.\n👥 Update FastAPI People - Contributors and Translators. PR\n#13955\nby\n@tiangolo\n.\n🔧 Update sponsors: Databento link and sponsors_badge data. PR\n#13954\nby\n@tiangolo\n.\n🔧 Update sponsors: Add Railway. PR\n#13953\nby\n@tiangolo\n.\n⚒️ Update translate script, update prompt to minimize generated diff. PR\n#13947\nby\n@YuriiMotov\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13943\nby\n@pre-commit-ci[bot]\n.\n⚒️ Tweak translate script and CI. PR\n#13939\nby\n@tiangolo\n.\n👷 Add CI to translate with LLMs. PR\n#13937\nby\n@tiangolo\n.\n⚒️ Update translate script, show and update outdated translations. PR\n#13933\nby\n@tiangolo\n.\n🔨 Refactor translate script with extra feedback (prints). PR\n#13932\nby\n@tiangolo\n.\n🔨 Update translations script to remove old (removed) files. PR\n#13928\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13894\nby\n@pre-commit-ci[bot]\n.\n⬆ Update httpx requirement to >=0.23.0,<0.29.0. PR\n#13114\nby\n@yan12125\n.\n🔧 Update sponsors: Add Mobb. PR\n#13916\nby\n@tiangolo\n.\n👥 Update FastAPI People - Experts. PR\n#13889\nby\n@tiangolo\n.\n🔨 Update FastAPI People sleep interval, use external settings. PR\n#13888\nby\n@tiangolo\n.\n0.116.1\n¶\nUpgrades\n¶\n⬆️ Upgrade Starlette supported version range to\n>=0.40.0,<0.48.0\n. PR\n#13884\nby\n@tiangolo\n.\nDocs\n¶\n📝 Add notification about impending changes in Translations to\ndocs/en/docs/contributing.md\n. PR\n#13886\nby\n@YuriiMotov\n.\nInternal\n¶\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13871\nby\n@pre-commit-ci[bot]\n.\n0.116.0\n¶\nFeatures\n¶\n✨ Add support for deploying to FastAPI Cloud with\nfastapi deploy\n. PR\n#13870\nby\n@tiangolo\n.\nInstalling\nfastapi[standard]\nnow includes\nfastapi-cloud-cli\n.\nThis will allow you to deploy to\nFastAPI Cloud\nwith the\nfastapi deploy\ncommand.\nIf you want to install\nfastapi\nwith the standard dependencies but without\nfastapi-cloud-cli\n, you can install instead\nfastapi[standard-no-fastapi-cloud-cli]\n.\nTranslations\n¶\n🌐 Add Russian translation for\ndocs/ru/docs/advanced/response-directly.md\n. PR\n#13801\nby\n@NavesSapnis\n.\n🌐 Add Russian translation for\ndocs/ru/docs/advanced/additional-status-codes.md\n. PR\n#13799\nby\n@NavesSapnis\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/body-updates.md\n. PR\n#13804\nby\n@valentinDruzhinin\n.\nInternal\n¶\n⬆ Bump pillow from 11.1.0 to 11.3.0. PR\n#13852\nby\n@dependabot[bot]\n.\n👥 Update FastAPI People - Sponsors. PR\n#13846\nby\n@tiangolo\n.\n👥 Update FastAPI GitHub topic repositories. PR\n#13848\nby\n@tiangolo\n.\n⬆ Bump mkdocs-material from 9.6.1 to 9.6.15. PR\n#13849\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13843\nby\n@pre-commit-ci[bot]\n.\n👥 Update FastAPI People - Contributors and Translators. PR\n#13845\nby\n@tiangolo\n.\n0.115.14\n¶\nFixes\n¶\n🐛 Fix support for unions when using\nForm\n. PR\n#13827\nby\n@patrick91\n.\nDocs\n¶\n✏️ Fix grammar mistake in\ndocs/en/docs/advanced/response-directly.md\n. PR\n#13800\nby\n@NavesSapnis\n.\n📝 Update Speakeasy URL to Speakeasy Sandbox. PR\n#13697\nby\n@ndimares\n.\nTranslations\n¶\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/response-model.md\n. PR\n#13792\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/security/index.md\n. PR\n#13805\nby\n@valentinDruzhinin\n.\n✏️ Fix typo in\ndocs/ja/docs/tutorial/encoder.md\n. PR\n#13815\nby\n@ruzia\n.\n✏️ Fix typo in\ndocs/ja/docs/tutorial/handling-errors.md\n. PR\n#13814\nby\n@ruzia\n.\n✏️ Fix typo in\ndocs/ja/docs/tutorial/body-fields.md\n. PR\n#13802\nby\n@ruzia\n.\n🌐 Add Russian translation for\ndocs/ru/docs/advanced/index.md\n. PR\n#13797\nby\n@NavesSapnis\n.\nInternal\n¶\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13823\nby\n@pre-commit-ci[bot]\n.\n0.115.13\n¶\nFixes\n¶\n🐛 Fix truncating the model's description with form feed (\n\\f\n) character for Pydantic V2. PR\n#13698\nby\n@YuriiMotov\n.\nRefactors\n¶\n✨ Add\nrefreshUrl\nparameter in\nOAuth2PasswordBearer\n. PR\n#11460\nby\n@snosratiershad\n.\n🚸 Set format to password for fields\npassword\nand\nclient_secret\nin\nOAuth2PasswordRequestForm\n, make docs show password fields for passwords. PR\n#11032\nby\n@Thodoris1999\n.\n✅ Simplify tests for\nsettings\n. PR\n#13505\nby\n@valentinDruzhinin\n.\n✅ Simplify tests for\nvalidate_response_recursive\n. PR\n#13507\nby\n@valentinDruzhinin\n.\nUpgrades\n¶\n⬆️ Update ReDoc to version 2.x. PR\n#9700\nby\n@joakimnordling\n.\nDocs\n¶\n📝 Add annotations to HTTP middleware example. PR\n#11530\nby\n@Kilo59\n.\n📝 Clarify in CORS docs that wildcards and credentials are mutually exclusive. PR\n#9829\nby\n@dfioravanti\n.\n✏️ Fix typo in docstring. PR\n#13532\nby\n@comp64\n.\n📝 Clarify guidance on using\nasync def\nwithout\nawait\n. PR\n#13642\nby\n@swastikpradhan1999\n.\n📝 Update exclude-parameters-from-openapi documentation links. PR\n#13600\nby\n@timonrieger\n.\n📝 Clarify the middleware execution order in docs. PR\n#13699\nby\n@YuriiMotov\n.\n🍱 Update Drawio diagrams SVGs, single file per diagram, sans-serif font. PR\n#13706\nby\n@tiangolo\n.\n📝 Update docs for \"Help FastAPI\", simplify and reduce \"sponsor\" section. PR\n#13670\nby\n@tiangolo\n.\n📝 Remove unnecessary bullet from docs. PR\n#13641\nby\n@Adamowoc\n.\n✏️ Fix syntax error in\ndocs/en/docs/tutorial/handling-errors.md\n. PR\n#13623\nby\n@gsheni\n.\n📝 Fix typo in documentation. PR\n#13599\nby\n@Taoup\n.\n📝 Fix liblab client generation doc link. PR\n#13571\nby\n@EFord36\n.\n✏️ Fix talk information typo. PR\n#13544\nby\n@blueswen\n.\n📝 Add External Link: Taiwanese talk on FastAPI with observability . PR\n#13527\nby\n@blueswen\n.\nTranslations\n¶\n🌐 Add Russian Translation for\ndocs/ru/docs/advanced/response-change-status-code.md\n. PR\n#13791\nby\n@NavesSapnis\n.\n🌐 Add Persian translation for\ndocs/fa/docs/learn/index.md\n. PR\n#13518\nby\n@Mohammad222PR\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/sub-applications.md\n. PR\n#4543\nby\n@NinaHwang\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/schema-extra-example.md\n. PR\n#13769\nby\n@valentinDruzhinin\n.\n✏️ Remove redundant words in docs/zh/docs/python-types.md. PR\n#13774\nby\n@CharleeWa\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/query-param-models.md\n. PR\n#13748\nby\n@valentinDruzhinin\n.\n🌐 Add Bengali translation for\ndocs/bn/docs/environment-variables.md\n. PR\n#13629\nby\n@SakibSibly\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/query-params-str-validations.md\npage. PR\n#13546\nby\n@valentinDruzhinin\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/cookie-param-models.md\n. PR\n#13616\nby\n@EgorOnishchuk\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/extra-models.md\n. PR\n#13063\nby\n@timothy-jeong\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/path-params-numeric-validations.md\npage. PR\n#13548\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/middleware.md\npage. PR\n#13520\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/background-tasks.md\npage. PR\n#13502\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/cors.md\npage. PR\n#13519\nby\n@valentinDruzhinin\n.\n🌐 Update Korean translation for\ndocs/ko/docs/advanced/events.md\n. PR\n#13487\nby\n@bom1215\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/handling-errors.md\npage. PR\n#13420\nby\n@valentinDruzhinin\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/request-form-models.md\n. PR\n#13552\nby\n@EgorOnishchuk\n.\n📝 Fix internal anchor link in Spanish deployment docs. PR\n#13737\nby\n@fabianfalon\n.\n🌐 Update Korean translation for\ndocs/ko/docs/virtual-environments.md\n. PR\n#13630\nby\n@sungchan1\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/header-param-models.md\n. PR\n#13526\nby\n@minaton-ru\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/index.md\n. PR\n#13374\nby\n@Zhongheng-Cheng\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/deployment/manually.md\n. PR\n#13324\nby\n@Zhongheng-Cheng\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/deployment/server-workers.md\n. PR\n#13292\nby\n@Zhongheng-Cheng\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/first-steps.md\n. PR\n#13348\nby\n@Zhongheng-Cheng\n.\nInternal\n¶\n🔨 Resolve Pydantic deprecation warnings in internal script. PR\n#13696\nby\n@emmanuel-ferdman\n.\n🔧 Update sponsors: remove Porter. PR\n#13783\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13781\nby\n@pre-commit-ci[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13757\nby\n@pre-commit-ci[bot]\n.\n⬆ Bump griffe-typingdoc from 0.2.7 to 0.2.8. PR\n#13751\nby\n@dependabot[bot]\n.\n🍱 Update sponsors: Dribia badge size. PR\n#13773\nby\n@tiangolo\n.\n🔧 Update sponsors: add Dribia. PR\n#13771\nby\n@tiangolo\n.\n⬆ Bump typer from 0.15.3 to 0.16.0. PR\n#13752\nby\n@dependabot[bot]\n.\n👥 Update FastAPI GitHub topic repositories. PR\n#13754\nby\n@tiangolo\n.\n👥 Update FastAPI People - Sponsors. PR\n#13750\nby\n@tiangolo\n.\n👥 Update FastAPI People - Contributors and Translators. PR\n#13749\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13736\nby\n@pre-commit-ci[bot]\n.\n🔧 Update sponsors: Add InterviewPal. PR\n#13728\nby\n@tiangolo\n.\n🔧 Remove Google Analytics. PR\n#13727\nby\n@tiangolo\n.\n🔧 Update sponsors: remove MongoDB. PR\n#13725\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13711\nby\n@pre-commit-ci[bot]\n.\n🔧 Update sponsors: add Subtotal. PR\n#13701\nby\n@tiangolo\n.\n🔧 Update sponsors: remove deepset / Haystack. PR\n#13700\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13688\nby\n@pre-commit-ci[bot]\n.\n👥 Update FastAPI People - Experts. PR\n#13671\nby\n@tiangolo\n.\n⬆ Bump typer from 0.12.5 to 0.15.3. PR\n#13666\nby\n@dependabot[bot]\n.\n⬆ Bump sqlmodel from 0.0.23 to 0.0.24. PR\n#13665\nby\n@dependabot[bot]\n.\n🔧 Update Sponsors: Zuplo logo and alt text. PR\n#13645\nby\n@martyndavies\n.\n👥 Update FastAPI GitHub topic repositories. PR\n#13667\nby\n@tiangolo\n.\n🔧 Update links for LinkedIn and bottom. PR\n#13669\nby\n@tiangolo\n.\n🔧 Update sponsors: remove Bump.sh and Coherence. PR\n#13668\nby\n@tiangolo\n.\n👥 Update FastAPI People - Sponsors. PR\n#13664\nby\n@tiangolo\n.\n👥 Update FastAPI People - Contributors and Translators. PR\n#13662\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13656\nby\n@pre-commit-ci[bot]\n.\n✅ Use\ninline-snapshot\nto support different Pydantic versions in the test suite. PR\n#12534\nby\n@15r10nk\n.\n⬆ Bump astral-sh/setup-uv from 5 to 6. PR\n#13648\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13634\nby\n@pre-commit-ci[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13619\nby\n@pre-commit-ci[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#13594\nby\n@pre-commit-ci[bot]\n.\n👥 Update FastAPI People - Experts. PR\n#13568\nby\n@tiangolo\n.\n👥 Update FastAPI GitHub topic repositories. PR\n#13565\nby\n@tiangolo\n.\n👥 Update FastAPI People - Sponsors. PR\n#13559\nby\n@tiangolo\n.\n👥 Update FastAPI People - Contributors and Translators. PR\n#13558\nby\n@tiangolo\n.\n⬆ Bump dirty-equals from 0.8.0 to 0.9.0. PR\n#13561\nby\n@dependabot[bot]\n.\n🔧 Clean up\ndocs/en/mkdocs.yml\nconfiguration file. PR\n#13542\nby\n@svlandeg\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12986\nby\n@pre-commit-ci[bot]\n.\n0.115.12\n¶\nFixes\n¶\n🐛 Fix\nconvert_underscores=False\nfor header Pydantic models. PR\n#13515\nby\n@tiangolo\n.\nDocs\n¶\n📝 Update\ndocs/en/docs/tutorial/middleware.md\n. PR\n#13444\nby\n@Rishat-F\n.\n👥 Update FastAPI People - Experts. PR\n#13493\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/metadata.md\npage. PR\n#13459\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/response-status-code.md\npage. PR\n#13462\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/cookie-param-models.md\npage. PR\n#13460\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/header-param-models.md\npage. PR\n#13461\nby\n@valentinDruzhinin\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/virtual-environments.md\n. PR\n#13304\nby\n@k94-ishi\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/security/oauth2-jwt.md\n. PR\n#13333\nby\n@yes0ng\n.\n🌐 Add Vietnamese translation for\ndocs/vi/docs/deployment/cloud.md\n. PR\n#13407\nby\n@ptt3199\n.\nInternal\n¶\n⬆ Bump pydantic-ai from 0.0.15 to 0.0.30. PR\n#13438\nby\n@dependabot[bot]\n.\n⬆ Bump sqlmodel from 0.0.22 to 0.0.23. PR\n#13437\nby\n@dependabot[bot]\n.\n⬆ Bump black from 24.10.0 to 25.1.0. PR\n#13436\nby\n@dependabot[bot]\n.\n⬆ Bump ruff to 0.9.4. PR\n#13299\nby\n@dependabot[bot]\n.\n🔧 Update sponsors: pause TestDriven. PR\n#13446\nby\n@tiangolo\n.\n0.115.11\n¶\nFixes\n¶\n🐛 Add docs examples and tests (support) for\nAnnotated\ncustom validations, like\nAfterValidator\n, revert\n#13440\n. PR\n#13442\nby\n@tiangolo\n.\nNew docs:\nQuery Parameters and String Validations - Custom Validation\n.\nTranslations\n¶\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/middleware.md\n. PR\n#13412\nby\n@alv2017\n.\nInternal\n¶\n👥 Update FastAPI GitHub topic repositories. PR\n#13439\nby\n@tiangolo\n.\n👥 Update FastAPI People - Contributors and Translators. PR\n#13432\nby\n@tiangolo\n.\n👥 Update FastAPI People - Sponsors. PR\n#13433\nby\n@tiangolo\n.\n0.115.10\n¶\nFixes\n¶\n♻️ Update internal annotation usage for compatibility with Pydantic 2.11. PR\n#13314\nby\n@Viicos\n.\nUpgrades\n¶\n⬆️ Bump Starlette to allow up to 0.46.0:\n>=0.40.0,<0.47.0\n. PR\n#13426\nby\n@musicinmybrain\n.\nTranslations\n¶\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/debugging.md\n. PR\n#13370\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/query-params.md\n. PR\n#13362\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/path-params.md\n. PR\n#13354\nby\n@valentinDruzhinin\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/cookie-param-models.md\n. PR\n#13330\nby\n@k94-ishi\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/body-multiple-params.md\n. PR\n#13408\nby\n@valentinDruzhinin\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/query-param-models.md\n. PR\n#13323\nby\n@k94-ishi\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/body-nested-models.md\n. PR\n#13409\nby\n@valentinDruzhinin\n.\n🌐 Add Vietnamese translation for\ndocs/vi/docs/deployment/versions.md\n. PR\n#13406\nby\n@ptt3199\n.\n🌐 Add Vietnamese translation for\ndocs/vi/docs/deployment/index.md\n. PR\n#13405\nby\n@ptt3199\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/request-forms.md\n. PR\n#13383\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/testing.md\n. PR\n#13371\nby\n@valentinDruzhinin\n.\n0.115.9\n¶\nFixes\n¶\n🐛 Ensure that\nHTTPDigest\nonly raises an exception when\nauto_error is True\n. PR\n#2939\nby\n@arthurio\n.\nRefactors\n¶\n✅ Simplify tests for\nquery_params_str_validations\n. PR\n#13218\nby\n@alv2017\n.\n✅ Simplify tests for\napp_testing\n. PR\n#13220\nby\n@alv2017\n.\n✅ Simplify tests for\ndependency_testing\n. PR\n#13223\nby\n@alv2017\n.\nDocs\n¶\n🍱 Update sponsors: CodeRabbit logo. PR\n#13424\nby\n@tiangolo\n.\n🩺 Unify the badges across all tutorial translations. PR\n#13329\nby\n@svlandeg\n.\n📝 Fix typos in virtual environments documentation. PR\n#13396\nby\n@bullet-ant\n.\n🐛 Fix issue with Swagger theme change example in the official tutorial. PR\n#13289\nby\n@Zerohertz\n.\n📝 Add more precise description of HTTP status code range in docs. PR\n#13347\nby\n@DanielYang59\n.\n🔥 Remove manual type annotations in JWT tutorial to avoid typing expectations (JWT doesn't provide more types). PR\n#13378\nby\n@tiangolo\n.\n📝 Update docs for Query Params and String Validations, remove obsolete Ellipsis docs (\n...\n). PR\n#13377\nby\n@tiangolo\n.\n✏️ Remove duplicate title in docs\nbody-multiple-params\n. PR\n#13345\nby\n@DanielYang59\n.\n📝 Fix test badge. PR\n#13313\nby\n@esadek\n.\nTranslations\n¶\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/header-params.md\n. PR\n#13381\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/request-files.md\n. PR\n#13395\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/request-form-models.md\n. PR\n#13384\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/request-forms-and-files.md\n. PR\n#13386\nby\n@valentinDruzhinin\n.\n🌐 Update Korean translation for\ndocs/ko/docs/help-fastapi.md\n. PR\n#13262\nby\n@Zerohertz\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/custom-response.md\n. PR\n#13265\nby\n@11kkw\n.\n🌐 Update Korean translation for\ndocs/ko/docs/tutorial/security/simple-oauth2.md\n. PR\n#13335\nby\n@yes0ng\n.\n🌐 Add Russian translation for\ndocs/ru/docs/advanced/response-cookies.md\n. PR\n#13327\nby\n@Stepakinoyan\n.\n🌐  Add Vietnamese translation for\ndocs/vi/docs/tutorial/static-files.md\n. PR\n#11291\nby\n@ptt3199\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/dependencies/dependencies-with-yield.md\n. PR\n#13257\nby\n@11kkw\n.\n🌐 Add Vietnamese translation for\ndocs/vi/docs/virtual-environments.md\n. PR\n#13282\nby\n@ptt3199\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/static-files.md\n. PR\n#13285\nby\n@valentinDruzhinin\n.\n🌐 Add Vietnamese translation for\ndocs/vi/docs/environment-variables.md\n. PR\n#13287\nby\n@ptt3199\n.\n🌐 Add Vietnamese translation for\ndocs/vi/docs/fastapi-cli.md\n. PR\n#13294\nby\n@ptt3199\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/features.md\n. PR\n#13308\nby\n@valentinDruzhinin\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/learn/index.md\n. PR\n#13306\nby\n@valentinDruzhinin\n.\n🌐 Update Portuguese Translation for\ndocs/pt/docs/deployment/https.md\n. PR\n#13317\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Update Portuguese Translation for\ndocs/pt/docs/index.md\n. PR\n#13328\nby\n@ceb10n\n.\n🌐 Add Russian translation for\ndocs/ru/docs/advanced/websockets.md\n. PR\n#13279\nby\n@Rishat-F\n.\nInternal\n¶\n✅ Fix a minor bug in the test\ntests/test_modules_same_name_body/test_main.py\n. PR\n#13411\nby\n@alv2017\n.\n👷 Use\nwrangler-action\nv3. PR\n#13415\nby\n@joakimnordling\n.\n🔧 Update sponsors: add CodeRabbit. PR\n#13402\nby\n@tiangolo\n.\n🔧 Update team: Add Ludovico. PR\n#13390\nby\n@tiangolo\n.\n🔧 Update sponsors: Add LambdaTest. PR\n#13389\nby\n@tiangolo\n.\n⬆ Bump cloudflare/wrangler-action from 3.13 to 3.14. PR\n#13350\nby\n@dependabot[bot]\n.\n⬆ Bump mkdocs-material from 9.5.18 to 9.6.1. PR\n#13301\nby\n@dependabot[bot]\n.\n⬆ Bump pillow from 11.0.0 to 11.1.0. PR\n#13300\nby\n@dependabot[bot]\n.\n👥 Update FastAPI People - Sponsors. PR\n#13295\nby\n@tiangolo\n.\n👥 Update FastAPI People - Experts. PR\n#13303\nby\n@tiangolo\n.\n👥 Update FastAPI GitHub topic repositories. PR\n#13302\nby\n@tiangolo\n.\n👥 Update FastAPI People - Contributors and Translators. PR\n#13293\nby\n@tiangolo\n.\n⬆ Bump inline-snapshot from 0.18.1 to 0.19.3. PR\n#13298\nby\n@dependabot[bot]\n.\n🔧 Update sponsors, add Permit. PR\n#13288\nby\n@tiangolo\n.\n0.115.8\n¶\nFixes\n¶\n🐛 Fix\nOAuth2PasswordRequestForm\nand\nOAuth2PasswordRequestFormStrict\nfixed\ngrant_type\n\"password\" RegEx. PR\n#9783\nby\n@skarfie123\n.\nRefactors\n¶\n✅ Simplify tests for body_multiple_params . PR\n#13237\nby\n@alejsdev\n.\n♻️ Move duplicated code portion to a static method in the\nAPIKeyBase\nsuper class. PR\n#3142\nby\n@ShahriyarR\n.\n✅ Simplify tests for request_files. PR\n#13182\nby\n@alejsdev\n.\nDocs\n¶\n📝 Change the word \"unwrap\" to \"unpack\" in\ndocs/en/docs/tutorial/extra-models.md\n. PR\n#13061\nby\n@timothy-jeong\n.\n📝 Update Request Body's\ntutorial002\nto deal with\ntax=0\ncase. PR\n#13230\nby\n@togogh\n.\n👥 Update FastAPI People - Experts. PR\n#13269\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Japanese translation for\ndocs/ja/docs/environment-variables.md\n. PR\n#13226\nby\n@k94-ishi\n.\n🌐 Add Russian translation for\ndocs/ru/docs/advanced/async-tests.md\n. PR\n#13227\nby\n@Rishat-F\n.\n🌐 Update Russian translation for\ndocs/ru/docs/tutorial/dependencies/dependencies-in-path-operation-decorators.md\n. PR\n#13252\nby\n@Rishat-F\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/bigger-applications.md\n. PR\n#13154\nby\n@alv2017\n.\nInternal\n¶\n⬆️ Add support for Python 3.13. PR\n#13274\nby\n@tiangolo\n.\n⬆️ Upgrade AnyIO max version for tests, new range:\n>=3.2.1,<5.0.0\n. PR\n#13273\nby\n@tiangolo\n.\n🔧 Update Sponsors badges. PR\n#13271\nby\n@tiangolo\n.\n♻️ Fix\nnotify_translations.py\nempty env var handling for PR label events vs workflow_dispatch. PR\n#13272\nby\n@tiangolo\n.\n♻️ Refactor and move\nscripts/notify_translations.py\n, no need for a custom GitHub Action. PR\n#13270\nby\n@tiangolo\n.\n🔨 Update FastAPI People Experts script, refactor and optimize data fetching to handle rate limits. PR\n#13267\nby\n@tiangolo\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.12.3 to 1.12.4. PR\n#13251\nby\n@dependabot[bot]\n.\n0.115.7\n¶\nUpgrades\n¶\n⬆️ Upgrade\npython-multipart\nto >=0.0.18. PR\n#13219\nby\n@DanielKusyDev\n.\n⬆️ Bump Starlette to allow up to 0.45.0:\n>=0.40.0,<0.46.0\n. PR\n#13117\nby\n@Kludex\n.\n⬆️ Upgrade\njinja2\nto >=3.1.5. PR\n#13194\nby\n@DanielKusyDev\n.\nRefactors\n¶\n✅ Simplify tests for websockets. PR\n#13202\nby\n@alejsdev\n.\n✅ Simplify tests for request_form_models . PR\n#13183\nby\n@alejsdev\n.\n✅ Simplify tests for separate_openapi_schemas. PR\n#13201\nby\n@alejsdev\n.\n✅ Simplify tests for security. PR\n#13200\nby\n@alejsdev\n.\n✅ Simplify tests for schema_extra_example. PR\n#13197\nby\n@alejsdev\n.\n✅ Simplify tests for request_model. PR\n#13195\nby\n@alejsdev\n.\n✅ Simplify tests for request_forms_and_files. PR\n#13185\nby\n@alejsdev\n.\n✅ Simplify tests for request_forms. PR\n#13184\nby\n@alejsdev\n.\n✅ Simplify tests for path_query_params. PR\n#13181\nby\n@alejsdev\n.\n✅ Simplify tests for path_operation_configurations. PR\n#13180\nby\n@alejsdev\n.\n✅ Simplify tests for header_params. PR\n#13179\nby\n@alejsdev\n.\n✅ Simplify tests for extra_models. PR\n#13178\nby\n@alejsdev\n.\n✅ Simplify tests for extra_data_types. PR\n#13177\nby\n@alejsdev\n.\n✅ Simplify tests for cookie_params. PR\n#13176\nby\n@alejsdev\n.\n✅ Simplify tests for dependencies. PR\n#13174\nby\n@alejsdev\n.\n✅ Simplify tests for body_updates. PR\n#13172\nby\n@alejsdev\n.\n✅ Simplify tests for body_nested_models. PR\n#13171\nby\n@alejsdev\n.\n✅ Simplify tests for body_multiple_params. PR\n#13170\nby\n@alejsdev\n.\n✅ Simplify tests for body_fields. PR\n#13169\nby\n@alejsdev\n.\n✅ Simplify tests for body. PR\n#13168\nby\n@alejsdev\n.\n✅ Simplify tests for bigger_applications. PR\n#13167\nby\n@alejsdev\n.\n✅ Simplify tests for background_tasks. PR\n#13166\nby\n@alejsdev\n.\n✅ Simplify tests for additional_status_codes. PR\n#13149\nby\n@tiangolo\n.\nDocs\n¶\n✏️ Update Strawberry integration docs. PR\n#13155\nby\n@kinuax\n.\n🔥 Remove unused Peewee tutorial files. PR\n#13158\nby\n@alejsdev\n.\n📝 Update image in body-nested-model docs. PR\n#11063\nby\n@untilhamza\n.\n📝 Update\nfastapi-cli\nUI examples in docs. PR\n#13107\nby\n@Zhongheng-Cheng\n.\n👷 Add new GitHub Action to update contributors, translators, and translation reviewers. PR\n#13136\nby\n@tiangolo\n.\n✏️ Fix typo in\ndocs/en/docs/virtual-environments.md\n. PR\n#13124\nby\n@tiangolo\n.\n✏️ Fix error in\ndocs/en/docs/contributing.md\n. PR\n#12899\nby\n@kingsubin\n.\n📝 Minor corrections in\ndocs/en/docs/tutorial/sql-databases.md\n. PR\n#13081\nby\n@alv2017\n.\n📝 Update includes in\ndocs/ru/docs/tutorial/query-param-models.md\n. PR\n#12994\nby\n@alejsdev\n.\n✏️ Fix typo in README installation instructions. PR\n#13011\nby\n@dave-hay\n.\n📝 Update docs for\nfastapi-cli\n. PR\n#13031\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Update Portuguese Translation for\ndocs/pt/docs/tutorial/request-forms.md\n. PR\n#13216\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Update Portuguese translation for\ndocs/pt/docs/advanced/settings.md\n. PR\n#13209\nby\n@ceb10n\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/security/oauth2-jwt.md\n. PR\n#13205\nby\n@ceb10n\n.\n🌐 Add Indonesian translation for\ndocs/id/docs/index.md\n. PR\n#13191\nby\n@gerry-sabar\n.\n🌐 Add Indonesian translation for\ndocs/id/docs/tutorial/static-files.md\n. PR\n#13092\nby\n@guspan-tanadi\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/security/get-current-user.md\n. PR\n#13188\nby\n@ceb10n\n.\n🌐 Remove Wrong Portuguese translations location for\ndocs/pt/docs/advanced/benchmarks.md\n. PR\n#13187\nby\n@ceb10n\n.\n🌐 Update Portuguese translations. PR\n#13156\nby\n@nillvitor\n.\n🌐 Update Russian translation for\ndocs/ru/docs/tutorial/security/first-steps.md\n. PR\n#13159\nby\n@Yarous\n.\n✏️ Delete unnecessary backspace in\ndocs/ja/docs/tutorial/path-params-numeric-validations.md\n. PR\n#12238\nby\n@FakeDocument\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/fastapi-cli.md\n. PR\n#13102\nby\n@Zhongheng-Cheng\n.\n🌐 Add new Spanish translations for all docs with new LLM-assisted system using PydanticAI. PR\n#13122\nby\n@tiangolo\n.\n🌐 Update existing Spanish translations using the new LLM-assisted system using PydanticAI. PR\n#13118\nby\n@tiangolo\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/advanced/security/oauth2-scopes.md\n. PR\n#13110\nby\n@ChenPu2002\n.\n🌐 Add Indonesian translation for\ndocs/id/docs/tutorial/path-params.md\n. PR\n#13086\nby\n@gerry-sabar\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/sql-databases.md\n. PR\n#13093\nby\n@GeumBinLee\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/async.md\n. PR\n#13095\nby\n@Zhongheng-Cheng\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/openapi-webhooks.md\n. PR\n#13091\nby\n@Zhongheng-Cheng\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/async-tests.md\n. PR\n#13074\nby\n@Zhongheng-Cheng\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/fastapi-cli.md\n. PR\n#13020\nby\n@ykertytsky\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/events.md\n. PR\n#12512\nby\n@ZhibangYue\n.\n🌐 Add Russian translation for\n/docs/ru/docs/tutorial/sql-databases.md\n. PR\n#13079\nby\n@alv2017\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/advanced/testing-dependencies.md\n. PR\n#13066\nby\n@Zhongheng-Cheng\n.\n🌐 Update Traditional Chinese translation for\ndocs/zh-hant/docs/tutorial/index.md\n. PR\n#13075\nby\n@codingjenny\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/tutorial/sql-databases.md\n. PR\n#13051\nby\n@Zhongheng-Cheng\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/query-params-str-validations.md\n. PR\n#12928\nby\n@Vincy1230\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/tutorial/header-param-models.md\n. PR\n#13040\nby\n@Zhongheng-Cheng\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/path-params.md\n. PR\n#12926\nby\n@Vincy1230\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/first-steps.md\n. PR\n#12923\nby\n@Vincy1230\n.\n🌐 Update Russian translation for\ndocs/ru/docs/deployment/docker.md\n. PR\n#13048\nby\n@anklav24\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/generate-clients.md\n. PR\n#13030\nby\n@vitumenezes\n.\n🌐 Add Indonesian translation for\ndocs/id/docs/tutorial/first-steps.md\n. PR\n#13042\nby\n@gerry-sabar\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/tutorial/cookie-param-models.md\n. PR\n#13038\nby\n@Zhongheng-Cheng\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/tutorial/request-form-models.md\n. PR\n#13045\nby\n@Zhongheng-Cheng\n.\n🌐 Add Russian translation for\ndocs/ru/docs/virtual-environments.md\n. PR\n#13026\nby\n@alv2017\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/testing.md\n. PR\n#12968\nby\n@jts8257\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/async-test.md\n. PR\n#12918\nby\n@icehongssii\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/security/oauth2-jwt.md\n. PR\n#10601\nby\n@AlertRED\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/security/simple-oauth2.md\n. PR\n#10599\nby\n@AlertRED\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/security/get-current-user.md\n. PR\n#10594\nby\n@AlertRED\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/features.md\n. PR\n#12441\nby\n@codingjenny\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/virtual-environments.md\n. PR\n#12791\nby\n@Vincy1230\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/templates.md\n. PR\n#12726\nby\n@Heumhub\n.\n🌐 Add Russian translation for\ndocs/ru/docs/fastapi-cli.md\n. PR\n#13041\nby\n@alv2017\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/cookie-param-models.md\n. PR\n#13000\nby\n@hard-coders\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/header-param-models.md\n. PR\n#13001\nby\n@hard-coders\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/request-form-models.md\n. PR\n#13002\nby\n@hard-coders\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/request-forms.md\n. PR\n#13003\nby\n@hard-coders\n.\n🌐 Add Korean translation for\ndocs/ko/docs/resources/index.md\n. PR\n#13004\nby\n@hard-coders\n.\n🌐 Add Korean translation for\ndocs/ko/docs/how-to/configure-swagger-ui.md\n. PR\n#12898\nby\n@nahyunkeem\n.\n🌐 Add Korean translation to\ndocs/ko/docs/advanced/additional-status-codes.md\n. PR\n#12715\nby\n@nahyunkeem\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/tutorial/first-steps.md\n. PR\n#12467\nby\n@codingjenny\n.\nInternal\n¶\n🔧 Add Pydantic 2 trove classifier. PR\n#13199\nby\n@johnthagen\n.\n👥 Update FastAPI People - Sponsors. PR\n#13231\nby\n@tiangolo\n.\n👷 Refactor FastAPI People Sponsors to use 2 tokens. PR\n#13228\nby\n@tiangolo\n.\n👷 Update token for FastAPI People - Sponsors. PR\n#13225\nby\n@tiangolo\n.\n👷 Add independent CI automation for FastAPI People - Sponsors. PR\n#13221\nby\n@tiangolo\n.\n👷 Add retries to Smokeshow. PR\n#13151\nby\n@tiangolo\n.\n🔧 Update Speakeasy sponsor graphic. PR\n#13147\nby\n@chailandau\n.\n👥 Update FastAPI GitHub topic repositories. PR\n#13146\nby\n@tiangolo\n.\n👷‍♀️ Add script for GitHub Topic Repositories and update External Links. PR\n#13135\nby\n@alejsdev\n.\n👥 Update FastAPI People - Contributors and Translators. PR\n#13145\nby\n@tiangolo\n.\n⬆ Bump markdown-include-variants from 0.0.3 to 0.0.4. PR\n#13129\nby\n@dependabot[bot]\n.\n⬆ Bump inline-snapshot from 0.14.0 to 0.18.1. PR\n#13132\nby\n@dependabot[bot]\n.\n⬆ Bump mkdocs-macros-plugin from 1.0.5 to 1.3.7. PR\n#13133\nby\n@dependabot[bot]\n.\n🔨 Add internal scripts to generate language translations with PydanticAI, include Spanish prompt. PR\n#13123\nby\n@tiangolo\n.\n⬆ Bump astral-sh/setup-uv from 4 to 5. PR\n#13096\nby\n@dependabot[bot]\n.\n🔧 Update sponsors: rename CryptAPI to BlockBee. PR\n#13078\nby\n@tiangolo\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.12.2 to 1.12.3. PR\n#13055\nby\n@dependabot[bot]\n.\n⬆ Bump types-ujson from 5.7.0.1 to 5.10.0.20240515. PR\n#13018\nby\n@dependabot[bot]\n.\n⬆ Bump black from 24.3.0 to 24.10.0. PR\n#13014\nby\n@dependabot[bot]\n.\n⬆ Bump inline-snapshot from 0.13.0 to 0.14.0. PR\n#13017\nby\n@dependabot[bot]\n.\n⬆ Bump dirty-equals from 0.6.0 to 0.8.0. PR\n#13015\nby\n@dependabot[bot]\n.\n⬆ Bump cloudflare/wrangler-action from 3.12 to 3.13. PR\n#12996\nby\n@dependabot[bot]\n.\n⬆ Bump astral-sh/setup-uv from 3 to 4. PR\n#12982\nby\n@dependabot[bot]\n.\n🔧 Remove duplicate actions/checkout in\nnotify-translations.yml\n. PR\n#12915\nby\n@tinyboxvk\n.\n🔧 Update team members. PR\n#13033\nby\n@tiangolo\n.\n📝 Update sponsors: remove Codacy. PR\n#13032\nby\n@tiangolo\n.\n0.115.6\n¶\nFixes\n¶\n🐛 Preserve traceback when an exception is raised in sync dependency with\nyield\n. PR\n#5823\nby\n@sombek\n.\nRefactors\n¶\n♻️ Update tests and internals for compatibility with Pydantic >=2.10. PR\n#12971\nby\n@tamird\n.\nDocs\n¶\n📝 Update includes format in docs with an automated script. PR\n#12950\nby\n@tiangolo\n.\n📝 Update includes for\ndocs/de/docs/advanced/using-request-directly.md\n. PR\n#12685\nby\n@alissadb\n.\n📝 Update includes for\ndocs/de/docs/how-to/conditional-openapi.md\n. PR\n#12689\nby\n@alissadb\n.\nTranslations\n¶\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/async.md\n. PR\n#12990\nby\n@ILoveSorasakiHina\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/tutorial/query-param-models.md\n. PR\n#12932\nby\n@Vincy1230\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/testing-dependencies.md\n. PR\n#12992\nby\n@Limsunoh\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/websockets.md\n. PR\n#12991\nby\n@kwang1215\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/response-model.md\n. PR\n#12933\nby\n@AndreBBM\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/middlewares.md\n. PR\n#12753\nby\n@nahyunkeem\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/openapi-webhooks.md\n. PR\n#12752\nby\n@saeye\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/tutorial/query-param-models.md\n. PR\n#12931\nby\n@Vincy1230\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/query-param-models.md\n. PR\n#12445\nby\n@gitgernit\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/query-param-models.md\n. PR\n#12940\nby\n@jts8257\n.\n🔥 Remove obsolete tutorial translation to Chinese for\ndocs/zh/docs/tutorial/sql-databases.md\n, it references files that are no longer on the repo. PR\n#12949\nby\n@tiangolo\n.\nInternal\n¶\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12954\nby\n@pre-commit-ci[bot]\n.\n0.115.5\n¶\nRefactors\n¶\n♻️ Update internal checks to support Pydantic 2.10. PR\n#12914\nby\n@tiangolo\n.\nDocs\n¶\n📝 Update includes for\ndocs/en/docs/tutorial/body.md\n. PR\n#12757\nby\n@gsheni\n.\n📝 Update includes in\ndocs/en/docs/advanced/testing-dependencies.md\n. PR\n#12647\nby\n@AyushSinghal1794\n.\n📝 Update includes for\ndocs/en/docs/tutorial/metadata.md\n. PR\n#12773\nby\n@Nimitha-jagadeesha\n.\n📝 Update\ndocs/en/docs/tutorial/dependencies/dependencies-with-yield.md\n. PR\n#12045\nby\n@xuvjso\n.\n📝 Update includes for\ndocs/en/docs/tutorial/dependencies/global-dependencies.md\n. PR\n#12653\nby\n@vishnuvskvkl\n.\n📝 Update includes for\ndocs/en/docs/tutorial/body-updates.md\n. PR\n#12712\nby\n@davioc\n.\n📝 Remove mention of Celery in the project generators. PR\n#12742\nby\n@david-caro\n.\n📝 Update includes in\ndocs/en/docs/tutorial/header-param-models.md\n. PR\n#12814\nby\n@zhaohan-dong\n.\n📝 Update\ncontributing.md\ndocs, include note to not translate this page. PR\n#12841\nby\n@tiangolo\n.\n📝 Update includes in\ndocs/en/docs/tutorial/request-forms.md\n. PR\n#12648\nby\n@vishnuvskvkl\n.\n📝 Update includes in\ndocs/en/docs/tutorial/request-form-models.md\n. PR\n#12649\nby\n@vishnuvskvkl\n.\n📝 Update includes in\ndocs/en/docs/tutorial/security/oauth2-jwt.md\n. PR\n#12650\nby\n@OCE1960\n.\n📝 Update includes in\ndocs/vi/docs/tutorial/first-steps.md\n. PR\n#12754\nby\n@MxPy\n.\n📝 Update includes for\ndocs/pt/docs/advanced/wsgi.md\n. PR\n#12769\nby\n@Nimitha-jagadeesha\n.\n📝 Update includes for\ndocs/en/docs/tutorial/dependencies/dependencies-in-path-operation-decorators.md\n. PR\n#12815\nby\n@handabaldeep\n.\n📝 Update includes for\ndocs/en/docs/tutorial/dependencies/classes-as-dependencies.md\n. PR\n#12813\nby\n@handabaldeep\n.\n✏️ Fix error in\ndocs/en/docs/tutorial/middleware.md\n. PR\n#12819\nby\n@alejsdev\n.\n📝 Update includes for\ndocs/en/docs/tutorial/security/get-current-user.md\n. PR\n#12645\nby\n@OCE1960\n.\n📝 Update includes for\ndocs/en/docs/tutorial/security/first-steps.md\n. PR\n#12643\nby\n@OCE1960\n.\n📝 Update includes in\ndocs/de/docs/advanced/additional-responses.md\n. PR\n#12821\nby\n@zhaohan-dong\n.\n📝 Update includes in\ndocs/en/docs/advanced/generate-clients.md\n. PR\n#12642\nby\n@AyushSinghal1794\n.\n📝 Fix admonition double quotes with new syntax. PR\n#12835\nby\n@tiangolo\n.\n📝 Update includes in\ndocs/zh/docs/advanced/additional-responses.md\n. PR\n#12828\nby\n@zhaohan-dong\n.\n📝 Update includes in\ndocs/en/docs/tutorial/path-params-numeric-validations.md\n. PR\n#12825\nby\n@zhaohan-dong\n.\n📝 Update includes for\ndocs/en/docs/advanced/testing-websockets.md\n. PR\n#12761\nby\n@hamidrasti\n.\n📝 Update includes for\ndocs/en/docs/advanced/using-request-directly.md\n. PR\n#12760\nby\n@hamidrasti\n.\n📝 Update includes for\ndocs/advanced/wsgi.md\n. PR\n#12758\nby\n@hamidrasti\n.\n📝 Update includes in\ndocs/de/docs/tutorial/middleware.md\n. PR\n#12729\nby\n@paintdog\n.\n📝 Update includes for\ndocs/en/docs/tutorial/schema-extra-example.md\n. PR\n#12822\nby\n@tiangolo\n.\n📝 Update includes in\ndocs/fr/docs/advanced/additional-responses.md\n. PR\n#12634\nby\n@fegmorte\n.\n📝 Update includes in\ndocs/fr/docs/advanced/path-operation-advanced-configuration.md\n. PR\n#12633\nby\n@kantandane\n.\n📝 Update includes in\ndocs/fr/docs/advanced/response-directly.md\n. PR\n#12632\nby\n@kantandane\n.\n📝 Update includes for\ndocs/en/docs/tutorial/header-params.md\n. PR\n#12640\nby\n@vishnuvskvkl\n.\n📝 Update includes in\ndocs/en/docs/tutorial/cookie-param-models.md\n. PR\n#12639\nby\n@vishnuvskvkl\n.\n📝 Update includes for\ndocs/en/docs/tutorial/extra-models.md\n. PR\n#12638\nby\n@vishnuvskvkl\n.\n📝 Update includes for\ndocs/en/docs/tutorial/cors.md\n. PR\n#12637\nby\n@vishnuvskvkl\n.\n📝 Update includes for\ndocs/en/docs/tutorial/dependencies/sub-dependencies.md\n. PR\n#12810\nby\n@handabaldeep\n.\n📝 Update includes in\ndocs/en/docs/tutorial/body-nested-models.md\n. PR\n#12812\nby\n@zhaohan-dong\n.\n📝 Update includes in\ndocs/en/docs/tutorial/path-operation-configuration.md\n. PR\n#12809\nby\n@AlexWendland\n.\n📝 Update includes in\ndocs/en/docs/tutorial/request-files.md\n. PR\n#12818\nby\n@zhaohan-dong\n.\n📝 Update includes for\ndocs/en/docs/tutorial/query-param-models.md\n. PR\n#12817\nby\n@handabaldeep\n.\n📝 Update includes in\ndocs/en/docs/tutorial/path-params.md\n. PR\n#12811\nby\n@AlexWendland\n.\n📝 Update includes in\ndocs/en/docs/tutorial/response-model.md\n. PR\n#12621\nby\n@kantandane\n.\n📝 Update includes in\ndocs/en/docs/advanced/websockets.md\n. PR\n#12606\nby\n@vishnuvskvkl\n.\n📝 Updates include for\ndocs/en/docs/tutorial/cookie-params.md\n. PR\n#12808\nby\n@handabaldeep\n.\n📝 Update includes in\ndocs/en/docs/tutorial/middleware.md\n. PR\n#12807\nby\n@AlexWendland\n.\n📝 Update includes in\ndocs/en/docs/advanced/sub-applications.md\n. PR\n#12806\nby\n@zhaohan-dong\n.\n📝 Update includes in\ndocs/en/docs/advanced/response-headers.md\n. PR\n#12805\nby\n@zhaohan-dong\n.\n📝 Update includes in\ndocs/fr/docs/tutorial/first-steps.md\n. PR\n#12594\nby\n@kantandane\n.\n📝 Update includes in\ndocs/en/docs/advanced/response-cookies.md\n. PR\n#12804\nby\n@zhaohan-dong\n.\n📝 Update includes in\ndocs/en/docs/advanced/path-operation-advanced-configuration.md\n. PR\n#12802\nby\n@zhaohan-dong\n.\n📝 Update includes for\ndocs/en/docs/advanced/response-directly.md\n. PR\n#12803\nby\n@handabaldeep\n.\n📝 Update includes in\ndocs/zh/docs/tutorial/background-tasks.md\n. PR\n#12798\nby\n@zhaohan-dong\n.\n📝 Update includes for\ndocs/de/docs/tutorial/body-multiple-params.md\n. PR\n#12699\nby\n@alissadb\n.\n📝 Update includes in\ndocs/em/docs/tutorial/body-updates.md\n. PR\n#12799\nby\n@AlexWendland\n.\n📝 Update includes\ndocs/en/docs/advanced/response-change-status-code.md\n. PR\n#12801\nby\n@handabaldeep\n.\n📝 Update includes\ndocs/en/docs/advanced/openapi-callbacks.md\n. PR\n#12800\nby\n@handabaldeep\n.\n📝  Update includes in\ndocs/fr/docs/tutorial/body-multiple-params.md\n. PR\n#12598\nby\n@kantandane\n.\n📝 Update includes in\ndocs/en/docs/tutorial/body-multiple-params.md\n. PR\n#12593\nby\n@Tashanam-Shahbaz\n.\n📝 Update includes in\ndocs/pt/docs/tutorial/background-tasks.md\n. PR\n#12736\nby\n@bhunao\n.\n📝 Update includes for\ndocs/en/docs/advanced/custom-response.md\n. PR\n#12797\nby\n@handabaldeep\n.\n📝 Update includes for\ndocs/pt/docs/python-types.md\n. PR\n#12671\nby\n@ceb10n\n.\n📝 Update includes for\ndocs/de/docs/python-types.md\n. PR\n#12660\nby\n@alissadb\n.\n📝 Update includes for\ndocs/de/docs/advanced/dataclasses.md\n. PR\n#12658\nby\n@alissadb\n.\n📝 Update includes in\ndocs/fr/docs/tutorial/path-params.md\n. PR\n#12592\nby\n@kantandane\n.\n📝 Update includes for\ndocs/de/docs/how-to/configure-swagger-ui.md\n. PR\n#12690\nby\n@alissadb\n.\n📝 Update includes in\ndocs/en/docs/advanced/security/oauth2-scopes.md\n. PR\n#12572\nby\n@krishnamadhavan\n.\n📝 Update includes for\ndocs/en/docs/how-to/conditional-openapi.md\n. PR\n#12624\nby\n@rabinlamadong\n.\n📝 Update includes in\ndocs/en/docs/tutorial/dependencies/index.md\n. PR\n#12615\nby\n@bharara\n.\n📝 Update includes in\ndocs/en/docs/tutorial/response-status-code.md\n. PR\n#12620\nby\n@kantandane\n.\n📝 Update includes in\ndocs/en/docs/how-to/custom-docs-ui-assets.md\n. PR\n#12623\nby\n@rabinlamadong\n.\n📝 Update includes in\ndocs/en/docs/advanced/openapi-webhooks.md\n. PR\n#12605\nby\n@salmantec\n.\n📝 Update includes in\ndocs/en/docs/advanced/events.md\n. PR\n#12604\nby\n@salmantec\n.\n📝 Update includes in\ndocs/en/docs/advanced/dataclasses.md\n. PR\n#12603\nby\n@salmantec\n.\n📝 Update includes in\ndocs/es/docs/tutorial/cookie-params.md\n. PR\n#12602\nby\n@antonyare93\n.\n📝 Update includes in\ndocs/fr/docs/tutorial/path-params-numeric-validations.md\n. PR\n#12601\nby\n@kantandane\n.\n📝 Update includes in\ndocs/fr/docs/tutorial/background-tasks.md\n. PR\n#12600\nby\n@kantandane\n.\n📝 Update includes in\ndocs/en/docs/tutorial/encoder.md\n. PR\n#12597\nby\n@tonyjly\n.\n📝 Update includes in\ndocs/en/docs/how-to/custom-docs-ui-assets.md\n. PR\n#12557\nby\n@philipokiokio\n.\n🎨 Adjust spacing. PR\n#12635\nby\n@alejsdev\n.\n📝 Update includes in\ndocs/en/docs/how-to/custom-request-and-route.md\n. PR\n#12560\nby\n@philipokiokio\n.\nTranslations\n¶\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/testing-websockets.md\n. PR\n#12739\nby\n@Limsunoh\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/environment-variables.md\n. PR\n#12785\nby\n@Vincy1230\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/environment-variables.md\n. PR\n#12784\nby\n@Vincy1230\n.\n🌐 Add Korean translation for\nko/docs/advanced/response-headers.md\n. PR\n#12740\nby\n@kwang1215\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/virtual-environments.md\n. PR\n#12790\nby\n@Vincy1230\n.\n🌐 Add Korean translation for\n/docs/ko/docs/environment-variables.md\n. PR\n#12526\nby\n@Tolerblanc\n.\n🌐 Add Korean translation for\ndocs/ko/docs/history-design-future.md\n. PR\n#12646\nby\n@saeye\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/advanced-dependencies.md\n. PR\n#12675\nby\n@kim-sangah\n.\n🌐 Add Korean translation for\ndocs/ko/docs/how-to/conditional-openapi.md\n. PR\n#12731\nby\n@sptcnl\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/using_request_directly.md\n. PR\n#12738\nby\n@kwang1215\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/testing-events.md\n. PR\n#12741\nby\n@9zimin9\n.\n🌐 Add Korean translation for\ndocs/ko/docs/security/index.md\n. PR\n#12743\nby\n@kim-sangah\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/path-operation-advanced-configuration.md\n. PR\n#12762\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/wsgi.md\n. PR\n#12659\nby\n@Limsunoh\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/websockets.md\n. PR\n#12703\nby\n@devfernandoa\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/security/simple-oauth2.md\n. PR\n#12520\nby\n@LidiaDomingos\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/response-directly.md\n. PR\n#12674\nby\n@9zimin9\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/middleware.md\n. PR\n#12704\nby\n@devluisrodrigues\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/openapi-callbacks.md\n. PR\n#12705\nby\n@devfernandoa\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/request-files.md\n. PR\n#12706\nby\n@devluisrodrigues\n.\n🌐 Add Portuguese Translation for\ndocs/pt/docs/advanced/custom-response.md\n. PR\n#12631\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/metadata.md\n. PR\n#12538\nby\n@LinkolnR\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/metadata.md\n. PR\n#12541\nby\n@kwang1215\n.\n🌐 Add Korean Translation for\ndocs/ko/docs/advanced/response-cookies.md\n. PR\n#12546\nby\n@kim-sangah\n.\n🌐 Add Korean translation for\ndocs/ko/docs/fastapi-cli.md\n. PR\n#12515\nby\n@dhdld\n.\n🌐 Add Korean Translation for\ndocs/ko/docs/advanced/response-change-status-code.md\n. PR\n#12547\nby\n@9zimin9\n.\nInternal\n¶\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12907\nby\n@pre-commit-ci[bot]\n.\n🔨 Update docs preview script to show previous version and English version. PR\n#12856\nby\n@tiangolo\n.\n⬆ Bump tiangolo/latest-changes from 0.3.1 to 0.3.2. PR\n#12794\nby\n@dependabot[bot]\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.12.0 to 1.12.2. PR\n#12788\nby\n@dependabot[bot]\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.11.0 to 1.12.0. PR\n#12781\nby\n@dependabot[bot]\n.\n⬆ Bump cloudflare/wrangler-action from 3.11 to 3.12. PR\n#12777\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12766\nby\n@pre-commit-ci[bot]\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.10.3 to 1.11.0. PR\n#12721\nby\n@dependabot[bot]\n.\n⬆ Update pre-commit requirement from <4.0.0,>=2.17.0 to >=2.17.0,<5.0.0. PR\n#12749\nby\n@dependabot[bot]\n.\n⬆ Bump typer from 0.12.3 to 0.12.5. PR\n#12748\nby\n@dependabot[bot]\n.\n⬆ Update flask requirement from <3.0.0,>=1.1.2 to >=1.1.2,<4.0.0. PR\n#12747\nby\n@dependabot[bot]\n.\n⬆ Bump pillow from 10.4.0 to 11.0.0. PR\n#12746\nby\n@dependabot[bot]\n.\n⬆ Update pytest requirement from <8.0.0,>=7.1.3 to >=7.1.3,<9.0.0. PR\n#12745\nby\n@dependabot[bot]\n.\n🔧 Update sponsors: add Render. PR\n#12733\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12707\nby\n@pre-commit-ci[bot]\n.\n0.115.4\n¶\nRefactors\n¶\n♻️ Update logic to import and check\npython-multipart\nfor compatibility with newer version. PR\n#12627\nby\n@tiangolo\n.\nDocs\n¶\n📝  Update includes in\ndocs/fr/docs/tutorial/body.md\n. PR\n#12596\nby\n@kantandane\n.\n📝 Update includes in\ndocs/fr/docs/tutorial/debugging.md\n. PR\n#12595\nby\n@kantandane\n.\n📝 Update includes in\ndocs/fr/docs/tutorial/query-params-str-validations.md\n. PR\n#12591\nby\n@kantandane\n.\n📝 Update includes in\ndocs/fr/docs/tutorial/query-params.md\n. PR\n#12589\nby\n@kantandane\n.\n📝 Update includes in\ndocs/en/tutorial/body-fields.md\n. PR\n#12588\nby\n@lucaromagnoli\n.\n📝 Update includes in\ndocs/de/docs/tutorial/response-status-code.md\n. PR\n#12585\nby\n@abejaranoh\n.\n📝 Update includes in\ndocs/en/docs/tutorial/body.md\n. PR\n#12586\nby\n@lucaromagnoli\n.\n📝 Update includes in\ndocs/en/docs/advanced/behind-a-proxy.md\n. PR\n#12583\nby\n@imjuanleonard\n.\n📝 Update includes syntax for\ndocs/pl/docs/tutorial/first-steps.md\n. PR\n#12584\nby\n@sebkozlo\n.\n📝 Update includes in\ndocs/en/docs/advanced/middleware.md\n. PR\n#12582\nby\n@montanarograziano\n.\n📝 Update includes in\ndocs/en/docs/advanced/additional-status-codes.md\n. PR\n#12577\nby\n@krishnamadhavan\n.\n📝 Update includes in\ndocs/en/docs/advanced/advanced-dependencies.md\n. PR\n#12578\nby\n@krishnamadhavan\n.\n📝 Update includes in\ndocs/en/docs/advanced/additional-responses.md\n. PR\n#12576\nby\n@krishnamadhavan\n.\n📝 Update includes in\ndocs/en/docs/tutorial/static-files.md\n. PR\n#12575\nby\n@lucaromagnoli\n.\n📝 Update includes in\ndocs/en/docs/advanced/async-tests.md\n. PR\n#12568\nby\n@krishnamadhavan\n.\n📝 Update includes in\ndocs/pt/docs/advanced/behind-a-proxy.md\n. PR\n#12563\nby\n@asmioglou\n.\n📝 Update includes in\ndocs/de/docs/advanced/security/http-basic-auth.md\n. PR\n#12561\nby\n@Nimitha-jagadeesha\n.\n📝 Update includes in\ndocs/en/docs/tutorial/background-tasks.md\n. PR\n#12559\nby\n@FarhanAliRaza\n.\n📝 Update includes in\ndocs/fr/docs/python-types.md\n. PR\n#12558\nby\n@Ismailtlem\n.\n📝 Update includes in\ndocs/en/docs/how-to/graphql.md\n. PR\n#12564\nby\n@philipokiokio\n.\n📝 Update includes in\ndocs/en/docs/how-to/extending-openapi.md\n. PR\n#12562\nby\n@philipokiokio\n.\n📝 Update includes for\ndocs/en/docs/how-to/configure-swagger-ui.md\n. PR\n#12556\nby\n@tiangolo\n.\n📝 Update includes for\ndocs/en/docs/how-to/separate-openapi-schemas.md\n. PR\n#12555\nby\n@tiangolo\n.\n📝 Update includes for\ndocs/en/docs/advanced/security/http-basic-auth.md\n. PR\n#12553\nby\n@tiangolo\n.\n📝 Update includes in\ndocs/en/docs/tutorial/first-steps.md\n. PR\n#12552\nby\n@tiangolo\n.\n📝 Update includes in\ndocs/en/docs/python-types.md\n. PR\n#12551\nby\n@tiangolo\n.\n📝 Fix link in OAuth2 docs. PR\n#12550\nby\n@tiangolo\n.\n📝 Add External Link: FastAPI do Zero. PR\n#12533\nby\n@rennerocha\n.\n📝 Fix minor typos. PR\n#12516\nby\n@kkirsche\n.\n🌐 Fix rendering issue in translations. PR\n#12509\nby\n@alejsdev\n.\nTranslations\n¶\n📝 Update includes in\ndocs/de/docs/advanced/async-tests.md\n. PR\n#12567\nby\n@imjuanleonard\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/sql-databases.md\n. PR\n#12530\nby\n@ilacftemp\n.\n🌐 Add Korean translation for\ndocs/ko/docs/benchmarks.md\n. PR\n#12540\nby\n@Limsunoh\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/how-to/separate-openapi-schemas.md\n. PR\n#12518\nby\n@ilacftemp\n.\n🌐 Update Traditional Chinese translation for\ndocs/zh-hant/docs/deployment/index.md\n. PR\n#12521\nby\n@codingjenny\n.\n🌐 Update Traditional Chinese translation for\ndocs/zh-hant/docs/deployment/cloud.md\n. PR\n#12522\nby\n@codingjenny\n.\n🌐 Update Traditional Chinese translation for\ndocs/zh-hant/docs/how-to/index.md\n. PR\n#12523\nby\n@codingjenny\n.\n🌐 Update Traditional Chinese translation for\ndocs/zh-hant/docs/tutorial/index.md\n. PR\n#12524\nby\n@codingjenny\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/how-to/index.md\n. PR\n#12468\nby\n@codingjenny\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/tutorial/index.md\n. PR\n#12466\nby\n@codingjenny\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/header-param-models.md\n. PR\n#12437\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/how-to/extending-openapi.md\n. PR\n#12470\nby\n@ilacftemp\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/dataclasses.md\n. PR\n#12475\nby\n@leoscarlato\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/how-to/custom-request-and-route.md\n. PR\n#12483\nby\n@devfernandoa\n.\nInternal\n¶\n⬆ Bump cloudflare/wrangler-action from 3.9 to 3.11. PR\n#12544\nby\n@dependabot[bot]\n.\n👷 Update GitHub Action to deploy docs previews to handle missing deploy comments. PR\n#12527\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12505\nby\n@pre-commit-ci[bot]\n.\n0.115.3\n¶\nUpgrades\n¶\n⬆️ Upgrade Starlette to\n>=0.40.0,<0.42.0\n. PR\n#12469\nby\n@defnull\n.\nDocs\n¶\n📝 Fix broken link in docs. PR\n#12495\nby\n@eltonjncorreia\n.\nTranslations\n¶\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/fastapi-cli.md\n. PR\n#12444\nby\n@codingjenny\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/deployment/index.md\n. PR\n#12439\nby\n@codingjenny\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/how-to/testing-database.md\n. PR\n#12472\nby\n@GuilhermeRameh\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/how-to/custom-docs-ui-assets.md\n. PR\n#12473\nby\n@devluisrodrigues\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/response-headers.md\n. PR\n#12458\nby\n@leonardopaloschi\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/deployment/cloud.md\n. PR\n#12440\nby\n@codingjenny\n.\n🌐 Update Portuguese translation for\ndocs/pt/docs/python-types.md\n. PR\n#12428\nby\n@ceb10n\n.\n🌐 Add Russian translation for\ndocs/ru/docs/environment-variables.md\n. PR\n#12436\nby\n@wisderfin\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/resources/index.md\n. PR\n#12443\nby\n@codingjenny\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/about/index.md\n. PR\n#12438\nby\n@codingjenny\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/query-param-models.md\n. PR\n#12414\nby\n@ceb10n\n.\n🌐 Remove Portuguese translation for\ndocs/pt/docs/deployment.md\n. PR\n#12427\nby\n@ceb10n\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/body-updates.md\n. PR\n#12381\nby\n@andersonrocha0\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/response-cookies.md\n. PR\n#12417\nby\n@Paulofalcao2002\n.\nInternal\n¶\n👷 Update issue manager workflow . PR\n#12457\nby\n@alejsdev\n.\n🔧 Update team, include YuriiMotov 🚀. PR\n#12453\nby\n@tiangolo\n.\n👷 Refactor label-approved, make it an internal script instead of an external GitHub Action. PR\n#12280\nby\n@tiangolo\n.\n👷 Fix smokeshow, checkout files on CI. PR\n#12434\nby\n@tiangolo\n.\n👷 Use uv in CI. PR\n#12281\nby\n@tiangolo\n.\n⬆ Update httpx requirement from <0.25.0,>=0.23.0 to >=0.23.0,<0.28.0. PR\n#11509\nby\n@dependabot[bot]\n.\n0.115.2\n¶\nUpgrades\n¶\n⬆️ Upgrade Starlette to\n>=0.37.2,<0.41.0\n. PR\n#12431\nby\n@tiangolo\n.\n0.115.1\n¶\nFixes\n¶\n🐛 Fix openapi generation with responses kwarg. PR\n#10895\nby\n@flxdot\n.\n🐛 Remove\nRequired\nshadowing from fastapi using Pydantic v2. PR\n#12197\nby\n@pachewise\n.\nRefactors\n¶\n♻️ Update type annotations for improved\npython-multipart\n. PR\n#12407\nby\n@tiangolo\n.\nDocs\n¶\n✨ Add new tutorial for SQL databases with SQLModel. PR\n#12285\nby\n@tiangolo\n.\n📝 Add External Link: How to profile a FastAPI asynchronous request. PR\n#12389\nby\n@brouberol\n.\n🔧 Remove\nbase_path\nfor\nmdx_include\nMarkdown extension in MkDocs. PR\n#12391\nby\n@tiangolo\n.\n📝 Update link to Swagger UI configuration docs. PR\n#12264\nby\n@makisukurisu\n.\n📝 Adding links for Playwright and Vite in\ndocs/project-generation.md\n. PR\n#12274\nby\n@kayqueGovetri\n.\n📝 Fix small typos in the documentation. PR\n#12213\nby\n@svlandeg\n.\nTranslations\n¶\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/cookie-param-models.md\n. PR\n#12298\nby\n@ceb10n\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/how-to/graphql.md\n. PR\n#12215\nby\n@AnandaCampelo\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/security/oauth2-scopes.md\n. PR\n#12263\nby\n@ceb10n\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/deployment/concepts.md\n. PR\n#12219\nby\n@marcelomarkus\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/how-to/conditional-openapi.md\n. PR\n#12221\nby\n@marcelomarkus\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/response-directly.md\n. PR\n#12266\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Update Portuguese translation for\ndocs/pt/docs/tutorial/cookie-params.md\n. PR\n#12297\nby\n@ceb10n\n.\n🌐 Fix Korean translation for\ndocs/ko/docs/tutorial/index.md\n. PR\n#12278\nby\n@kkotipy\n.\n🌐 Update Portuguese translation for\ndocs/pt/docs/advanced/security/http-basic-auth.md\n. PR\n#12275\nby\n@andersonrocha0\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/deployment/cloud.md\n. PR\n#12217\nby\n@marcelomarkus\n.\n✏️ Fix typo in\ndocs/es/docs/python-types.md\n. PR\n#12235\nby\n@JavierSanchezCastro\n.\n🌐 Add Dutch translation for\ndocs/nl/docs/environment-variables.md\n. PR\n#12200\nby\n@maxscheijen\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/deployment/manually.md\n. PR\n#12210\nby\n@JoaoGustavoRogel\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/deployment/server-workers.md\n. PR\n#12220\nby\n@marcelomarkus\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/how-to/configure-swagger-ui.md\n. PR\n#12222\nby\n@marcelomarkus\n.\nInternal\n¶\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12396\nby\n@pre-commit-ci[bot]\n.\n🔨 Add script to generate variants of files. PR\n#12405\nby\n@tiangolo\n.\n🔧 Add speakeasy-api to\nsponsors_badge.yml\n. PR\n#12404\nby\n@tiangolo\n.\n➕ Add docs dependency: markdown-include-variants. PR\n#12399\nby\n@tiangolo\n.\n📝 Fix extra mdx-base-path paths. PR\n#12397\nby\n@tiangolo\n.\n👷 Tweak labeler to not override custom labels. PR\n#12398\nby\n@tiangolo\n.\n👷 Update worfkow deploy-docs-notify URL. PR\n#12392\nby\n@tiangolo\n.\n👷 Update Cloudflare GitHub Action. PR\n#12387\nby\n@tiangolo\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.10.1 to 1.10.3. PR\n#12386\nby\n@dependabot[bot]\n.\n⬆ Bump mkdocstrings[python] from 0.25.1 to 0.26.1. PR\n#12371\nby\n@dependabot[bot]\n.\n⬆ Bump griffe-typingdoc from 0.2.6 to 0.2.7. PR\n#12370\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12331\nby\n@pre-commit-ci[bot]\n.\n🔧 Update sponsors, remove Fine.dev. PR\n#12271\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12253\nby\n@pre-commit-ci[bot]\n.\n✏️ Fix docstring typos in http security. PR\n#12223\nby\n@albertvillanova\n.\n0.115.0\n¶\nHighlights\n¶\nNow you can declare\nQuery\n,\nHeader\n, and\nCookie\nparameters with Pydantic models. 🎉\nQuery\nParameter Models\n¶\nUse Pydantic models for\nQuery\nparameters:\nfrom\ntyping\nimport\nAnnotated\n,\nLiteral\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nAnnotated\n[\nFilterParams\n,\nQuery\n()]):\nreturn\nfilter_query\nRead the new docs:\nQuery Parameter Models\n.\nHeader\nParameter Models\n¶\nUse Pydantic models for\nHeader\nparameters:\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCommonHeaders\n(\nBaseModel\n):\nhost\n:\nstr\nsave_data\n:\nbool\nif_modified_since\n:\nstr\n|\nNone\n=\nNone\ntraceparent\n:\nstr\n|\nNone\n=\nNone\nx_tag\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nheaders\n:\nAnnotated\n[\nCommonHeaders\n,\nHeader\n()]):\nreturn\nheaders\nRead the new docs:\nHeader Parameter Models\n.\nCookie\nParameter Models\n¶\nUse Pydantic models for\nCookie\nparameters:\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nCookies\n(\nBaseModel\n):\nsession_id\n:\nstr\nfatebook_tracker\n:\nstr\n|\nNone\n=\nNone\ngoogall_tracker\n:\nstr\n|\nNone\n=\nNone\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncookies\n:\nAnnotated\n[\nCookies\n,\nCookie\n()]):\nreturn\ncookies\nRead the new docs:\nCookie Parameter Models\n.\nForbid Extra Query (Cookie, Header) Parameters\n¶\nUse Pydantic models to restrict extra values for\nQuery\nparameters (also applies to\nHeader\nand\nCookie\nparameters).\nTo achieve it, use Pydantic's\nmodel_config = {\"extra\": \"forbid\"}\n:\nfrom\ntyping\nimport\nAnnotated\n,\nLiteral\nfrom\nfastapi\nimport\nFastAPI\n,\nQuery\nfrom\npydantic\nimport\nBaseModel\n,\nField\napp\n=\nFastAPI\n()\nclass\nFilterParams\n(\nBaseModel\n):\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\nlimit\n:\nint\n=\nField\n(\n100\n,\ngt\n=\n0\n,\nle\n=\n100\n)\noffset\n:\nint\n=\nField\n(\n0\n,\nge\n=\n0\n)\norder_by\n:\nLiteral\n[\n\"created_at\"\n,\n\"updated_at\"\n]\n=\n\"created_at\"\ntags\n:\nlist\n[\nstr\n]\n=\n[]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nfilter_query\n:\nAnnotated\n[\nFilterParams\n,\nQuery\n()]):\nreturn\nfilter_query\nThis applies to\nQuery\n,\nHeader\n, and\nCookie\nparameters, read the new docs:\nForbid Extra Query Parameters\nForbid Extra Headers\nForbid Extra Cookies\nFeatures\n¶\n✨ Add support for Pydantic models for parameters using\nQuery\n,\nCookie\n,\nHeader\n. PR\n#12199\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/security/http-basic-auth.md\n. PR\n#12195\nby\n@ceb10n\n.\nInternal\n¶\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12204\nby\n@pre-commit-ci[bot]\n.\n0.114.2\n¶\nFixes\n¶\n🐛 Fix form field regression with\nalias\n. PR\n#12194\nby\n@Wurstnase\n.\nTranslations\n¶\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/request-form-models.md\n. PR\n#12175\nby\n@ceb10n\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/project-generation.md\n. PR\n#12170\nby\n@waketzheng\n.\n🌐 Add Dutch translation for\ndocs/nl/docs/python-types.md\n. PR\n#12158\nby\n@maxscheijen\n.\nInternal\n¶\n💡 Add comments with instructions for Playwright screenshot scripts. PR\n#12193\nby\n@tiangolo\n.\n➕ Add inline-snapshot for tests. PR\n#12189\nby\n@tiangolo\n.\n0.114.1\n¶\nRefactors\n¶\n⚡️ Improve performance in request body parsing with a cache for internal model fields. PR\n#12184\nby\n@tiangolo\n.\nDocs\n¶\n📝 Remove duplicate line in docs for\ndocs/en/docs/environment-variables.md\n. PR\n#12169\nby\n@prometek\n.\nTranslations\n¶\n🌐 Add Portuguese translation for\ndocs/pt/docs/virtual-environments.md\n. PR\n#12163\nby\n@marcelomarkus\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/environment-variables.md\n. PR\n#12162\nby\n@marcelomarkus\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/testing.md\n. PR\n#12164\nby\n@marcelomarkus\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/debugging.md\n. PR\n#12165\nby\n@marcelomarkus\n.\n🌐 Add Korean translation for\ndocs/ko/docs/project-generation.md\n. PR\n#12157\nby\n@BORA040126\n.\nInternal\n¶\n⬆ Bump tiangolo/issue-manager from 0.5.0 to 0.5.1. PR\n#12173\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12176\nby\n@pre-commit-ci[bot]\n.\n👷 Update\nissue-manager.yml\n. PR\n#12159\nby\n@tiangolo\n.\n✏️ Fix typo in\nfastapi/params.py\n. PR\n#12143\nby\n@surreal30\n.\n0.114.0\n¶\nYou can restrict form fields to only include those declared in a Pydantic model and forbid any extra field sent in the request using Pydantic's\nmodel_config = {\"extra\": \"forbid\"}\n:\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nFormData\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\ndata\n:\nAnnotated\n[\nFormData\n,\nForm\n()]):\nreturn\ndata\nRead the new docs:\nForm Models - Forbid Extra Form Fields\n.\nFeatures\n¶\n✨ Add support for forbidding extra form fields with Pydantic models. PR\n#12134\nby\n@tiangolo\n.\nDocs\n¶\n📝 Update docs, Form Models section title, to match config name. PR\n#12152\nby\n@tiangolo\n.\nInternal\n¶\n✅ Update internal tests for latest Pydantic, including CI tweaks to install the latest Pydantic. PR\n#12147\nby\n@tiangolo\n.\n0.113.0\n¶\nNow you can declare form fields with Pydantic models:\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nFormData\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\ndata\n:\nAnnotated\n[\nFormData\n,\nForm\n()]):\nreturn\ndata\nRead the new docs:\nForm Models\n.\nFeatures\n¶\n✨ Add support for Pydantic models in\nForm\nparameters. PR\n#12129\nby\n@tiangolo\n.\nInternal\n¶\n🔧 Update sponsors: Coherence link. PR\n#12130\nby\n@tiangolo\n.\n0.112.4\n¶\nThis release is mainly a big internal refactor to enable adding support for Pydantic models for\nForm\nfields, but that feature comes in the next release.\nThis release shouldn't affect apps using FastAPI in any way. You don't even have to upgrade to this version yet. It's just a checkpoint. 🤓\nRefactors\n¶\n♻️ Refactor deciding if\nembed\nbody fields, do not overwrite fields, compute once per router, refactor internals in preparation for Pydantic models in\nForm\n,\nQuery\nand others. PR\n#12117\nby\n@tiangolo\n.\nInternal\n¶\n⏪️ Temporarily revert \"✨ Add support for Pydantic models in\nForm\nparameters\" to make a checkpoint release. PR\n#12128\nby\n@tiangolo\n. Restored by PR\n#12129\n.\n✨ Add support for Pydantic models in\nForm\nparameters. PR\n#12127\nby\n@tiangolo\n. Reverted by PR\n#12128\nto make a checkpoint release with only refactors. Restored by PR\n#12129\n.\n0.112.3\n¶\nThis release is mainly internal refactors, it shouldn't affect apps using FastAPI in any way. You don't even have to upgrade to this version yet. There are a few bigger releases coming right after. 🚀\nRefactors\n¶\n♻️ Refactor internal\ncheck_file_field()\n, rename to\nensure_multipart_is_installed()\nto clarify its purpose. PR\n#12106\nby\n@tiangolo\n.\n♻️ Rename internal\ncreate_response_field()\nto\ncreate_model_field()\nas it's used for more than response models. PR\n#12103\nby\n@tiangolo\n.\n♻️ Refactor and simplify internal data from\nsolve_dependencies()\nusing dataclasses. PR\n#12100\nby\n@tiangolo\n.\n♻️ Refactor and simplify internal\nanalyze_param()\nto structure data with dataclasses instead of tuple. PR\n#12099\nby\n@tiangolo\n.\n♻️ Refactor and simplify dependencies data structures with dataclasses. PR\n#12098\nby\n@tiangolo\n.\nDocs\n¶\n📝 Add External Link: Techniques and applications of SQLAlchemy global filters in FastAPI. PR\n#12109\nby\n@TheShubhendra\n.\n📝 Add note about\ntime.perf_counter()\nin middlewares. PR\n#12095\nby\n@tiangolo\n.\n📝 Tweak middleware code sample\ntime.time()\nto\ntime.perf_counter()\n. PR\n#11957\nby\n@domdent\n.\n🔧 Update sponsors: Coherence. PR\n#12093\nby\n@tiangolo\n.\n📝 Fix async test example not to trigger DeprecationWarning. PR\n#12084\nby\n@marcinsulikowski\n.\n📝 Update\ndocs_src/path_params_numeric_validations/tutorial006.py\n. PR\n#11478\nby\n@MuhammadAshiqAmeer\n.\n📝 Update comma in\ndocs/en/docs/async.md\n. PR\n#12062\nby\n@Alec-Gillis\n.\n📝 Update docs about serving FastAPI: ASGI servers, Docker containers, etc.. PR\n#12069\nby\n@tiangolo\n.\n📝 Clarify\nresponse_class\nparameter, validations, and returning a response directly. PR\n#12067\nby\n@tiangolo\n.\n📝 Fix minor typos and issues in the documentation. PR\n#12063\nby\n@svlandeg\n.\n📝 Add note in Docker docs about ensuring graceful shutdowns and lifespan events with\nCMD\nexec form. PR\n#11960\nby\n@GPla\n.\nTranslations\n¶\n🌐  Add Dutch translation for\ndocs/nl/docs/features.md\n. PR\n#12101\nby\n@maxscheijen\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/testing-events.md\n. PR\n#12108\nby\n@ceb10n\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/security/index.md\n. PR\n#12114\nby\n@ceb10n\n.\n🌐 Add Dutch translation for\ndocs/nl/docs/index.md\n. PR\n#12042\nby\n@svlandeg\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/how-to/index.md\n. PR\n#12070\nby\n@synthpop123\n.\nInternal\n¶\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12115\nby\n@pre-commit-ci[bot]\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.10.0 to 1.10.1. PR\n#12120\nby\n@dependabot[bot]\n.\n⬆ Bump pillow from 10.3.0 to 10.4.0. PR\n#12105\nby\n@dependabot[bot]\n.\n💚 Set\ninclude-hidden-files\nto\nTrue\nwhen using the\nupload-artifact\nGH action. PR\n#12118\nby\n@svlandeg\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.9.0 to 1.10.0. PR\n#12112\nby\n@dependabot[bot]\n.\n🔧 Update sponsors link: Coherence. PR\n#12097\nby\n@tiangolo\n.\n🔧 Update labeler config to handle sponsorships data. PR\n#12096\nby\n@tiangolo\n.\n🔧 Update sponsors, remove Kong. PR\n#12085\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12076\nby\n@pre-commit-ci[bot]\n.\n👷 Update\nlatest-changes\nGitHub Action. PR\n#12073\nby\n@tiangolo\n.\n0.112.2\n¶\nFixes\n¶\n🐛 Fix\nallow_inf_nan\noption for Param and Body classes. PR\n#11867\nby\n@giunio-prc\n.\n🐛 Ensure that\napp.include_router\nmerges nested lifespans. PR\n#9630\nby\n@Lancetnik\n.\nRefactors\n¶\n🎨 Fix typing annotation for semi-internal\nFastAPI.add_api_route()\n. PR\n#10240\nby\n@ordinary-jamie\n.\n⬆️ Upgrade version of Ruff and reformat. PR\n#12032\nby\n@tiangolo\n.\nDocs\n¶\n📝 Fix a typo in\ndocs/en/docs/virtual-environments.md\n. PR\n#12064\nby\n@aymenkrifa\n.\n📝 Add docs about Environment Variables and Virtual Environments. PR\n#12054\nby\n@tiangolo\n.\n📝 Add Asyncer mention in async docs. PR\n#12037\nby\n@tiangolo\n.\n📝 Move the Features docs to the top level to improve the main page menu. PR\n#12036\nby\n@tiangolo\n.\n✏️ Fix import typo in reference example for\nSecurity\n. PR\n#11168\nby\n@0shah0\n.\n📝 Highlight correct line in tutorial\ndocs/en/docs/tutorial/body-multiple-params.md\n. PR\n#11978\nby\n@svlandeg\n.\n🔥 Remove Sentry link from Advanced Middleware docs. PR\n#12031\nby\n@alejsdev\n.\n📝 Clarify management tasks for translations, multiples files in one PR. PR\n#12030\nby\n@tiangolo\n.\n📝 Edit the link to the OpenAPI \"Responses Object\" and \"Response Object\" sections in the \"Additional Responses in OpenAPI\" section. PR\n#11996\nby\n@VaitoSoi\n.\n🔨 Specify\nemail-validator\ndependency with dash. PR\n#11515\nby\n@jirikuncar\n.\n🌐 Add Spanish translation for\ndocs/es/docs/project-generation.md\n. PR\n#11947\nby\n@alejsdev\n.\n📝 Fix minor typo. PR\n#12026\nby\n@MicaelJarniac\n.\n📝 Several docs improvements, tweaks, and clarifications. PR\n#11390\nby\n@nilslindemann\n.\n📝 Add missing\ncompresslevel\nparameter on docs for\nGZipMiddleware\n. PR\n#11350\nby\n@junah201\n.\n📝 Fix inconsistent response code when item already exists in docs for testing. PR\n#11818\nby\n@lokomilo\n.\n📝 Update\ndocs/en/docs/tutorial/body.md\nwith Python 3.10 union type example. PR\n#11415\nby\n@rangzen\n.\nTranslations\n¶\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/request_file.md\n. PR\n#12018\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/learn/index.md\n. PR\n#11592\nby\n@ukwhatn\n.\n📝 Update Spanish translation docs for consistency. PR\n#12044\nby\n@alejsdev\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/dependencies/dependencies-with-yield.md\n. PR\n#12028\nby\n@xuvjso\n.\n📝 Update FastAPI People, do not translate to have the most recent info. PR\n#12034\nby\n@tiangolo\n.\n🌐 Update Urdu translation for\ndocs/ur/docs/benchmarks.md\n. PR\n#10046\nby\n@AhsanSheraz\n.\nInternal\n¶\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#12046\nby\n@pre-commit-ci[bot]\n.\n🔧 Update coverage config files. PR\n#12035\nby\n@tiangolo\n.\n🔨 Standardize shebang across shell scripts. PR\n#11942\nby\n@gitworkflows\n.\n⬆ Update sqlalchemy requirement from <1.4.43,>=1.3.18 to >=1.3.18,<2.0.33. PR\n#11979\nby\n@dependabot[bot]\n.\n🔊 Remove old ignore warnings. PR\n#11950\nby\n@tiangolo\n.\n⬆️ Upgrade griffe-typingdoc for the docs. PR\n#12029\nby\n@tiangolo\n.\n🙈 Add .coverage* to\n.gitignore\n. PR\n#11940\nby\n@gitworkflows\n.\n⚙️ Record and show test coverage contexts (what test covers which line). PR\n#11518\nby\n@slafs\n.\n0.112.1\n¶\nUpgrades\n¶\n⬆️ Allow Starlette 0.38.x, update the pin to\n>=0.37.2,<0.39.0\n. PR\n#11876\nby\n@musicinmybrain\n.\nDocs\n¶\n📝 Update docs section about \"Don't Translate these Pages\". PR\n#12022\nby\n@tiangolo\n.\n📝 Add documentation for non-translated pages and scripts to verify them. PR\n#12020\nby\n@tiangolo\n.\n📝 Update docs about discussions questions. PR\n#11985\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/bigger-applications.md\n. PR\n#11971\nby\n@marcelomarkus\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/testing-websockets.md\n. PR\n#11994\nby\n@ceb10n\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/testing-dependencies.md\n. PR\n#11995\nby\n@ceb10n\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/using-request-directly.md\n. PR\n#11956\nby\n@ceb10n\n.\n🌐 Add French translation for\ndocs/fr/docs/tutorial/body-multiple-params.md\n. PR\n#11796\nby\n@pe-brian\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/query-params.md\n. PR\n#11557\nby\n@caomingpei\n.\n🌐 Update typo in Chinese translation for\ndocs/zh/docs/advanced/testing-dependencies.md\n. PR\n#11944\nby\n@bestony\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/sub-applications.md\nand\ndocs/pt/docs/advanced/behind-a-proxy.md\n. PR\n#11856\nby\n@marcelomarkus\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/cors.md\nand\ndocs/pt/docs/tutorial/middleware.md\n. PR\n#11916\nby\n@wesinalves\n.\n🌐 Add French translation for\ndocs/fr/docs/tutorial/path-params-numeric-validations.md\n. PR\n#11788\nby\n@pe-brian\n.\nInternal\n¶\n⬆ Bump pypa/gh-action-pypi-publish from 1.8.14 to 1.9.0. PR\n#11727\nby\n@dependabot[bot]\n.\n🔧 Add changelog URL to\npyproject.toml\n, shows in PyPI. PR\n#11152\nby\n@Pierre-VF\n.\n👷 Do not sync labels as it overrides manually added labels. PR\n#12024\nby\n@tiangolo\n.\n👷🏻 Update Labeler GitHub Actions. PR\n#12019\nby\n@tiangolo\n.\n🔧 Update configs for MkDocs for languages and social cards. PR\n#12016\nby\n@tiangolo\n.\n👷 Update permissions and config for labeler GitHub Action. PR\n#12008\nby\n@tiangolo\n.\n👷🏻 Add GitHub Action label-checker. PR\n#12005\nby\n@tiangolo\n.\n👷 Add label checker GitHub Action. PR\n#12004\nby\n@tiangolo\n.\n👷 Update GitHub Action add-to-project. PR\n#12002\nby\n@tiangolo\n.\n🔧 Update labeler GitHub Action. PR\n#12001\nby\n@tiangolo\n.\n👷 Add GitHub Action labeler. PR\n#12000\nby\n@tiangolo\n.\n👷 Add GitHub Action add-to-project. PR\n#11999\nby\n@tiangolo\n.\n📝 Update admonitions in docs missing. PR\n#11998\nby\n@tiangolo\n.\n🔨 Update docs.py script to enable dirty reload conditionally. PR\n#11986\nby\n@tiangolo\n.\n🔧 Update MkDocs instant previews. PR\n#11982\nby\n@tiangolo\n.\n🐛 Fix deploy docs previews script to handle mkdocs.yml files. PR\n#11984\nby\n@tiangolo\n.\n💡 Add comment about custom Termynal line-height. PR\n#11976\nby\n@tiangolo\n.\n👷 Add alls-green for test-redistribute. PR\n#11974\nby\n@tiangolo\n.\n👷 Update docs-previews to handle no docs changes. PR\n#11975\nby\n@tiangolo\n.\n🔨 Refactor script\ndeploy_docs_status.py\nto account for deploy URLs with or without trailing slash. PR\n#11965\nby\n@tiangolo\n.\n🔒️ Update permissions for deploy-docs action. PR\n#11964\nby\n@tiangolo\n.\n👷🏻 Add deploy docs status and preview links to PRs. PR\n#11961\nby\n@tiangolo\n.\n🔧 Update docs setup with latest configs and plugins. PR\n#11953\nby\n@tiangolo\n.\n🔇 Ignore warning from attrs in Trio. PR\n#11949\nby\n@tiangolo\n.\n0.112.0\n¶\nBreaking Changes\n¶\n♻️ Add support for\npip install \"fastapi[standard]\"\nwith standard dependencies and\npython -m fastapi\n. PR\n#11935\nby\n@tiangolo\n.\nSummary\n¶\nInstall with:\npip\ninstall\n\"fastapi[standard]\"\nOther Changes\n¶\nThis adds support for calling the CLI as:\npython\n-m\nfastapi\nAnd it upgrades\nfastapi-cli[standard] >=0.0.5\n.\nTechnical Details\n¶\nBefore this,\nfastapi\nwould include the standard dependencies, with Uvicorn and the\nfastapi-cli\n, etc.\nAnd\nfastapi-slim\nwould not include those standard dependencies.\nNow\nfastapi\ndoesn't include those standard dependencies unless you install with\npip install \"fastapi[standard]\"\n.\nBefore, you would install\npip install fastapi\n, now you should include the\nstandard\noptional dependencies (unless you want to exclude one of those):\npip install \"fastapi[standard]\"\n.\nThis change is because having the standard optional dependencies installed by default was being inconvenient to several users, and having to install instead\nfastapi-slim\nwas not being a feasible solution.\nDiscussed here:\n#11522\nand here:\n#11525\nDocs\n¶\n✏️ Fix typos in docs. PR\n#11926\nby\n@jianghuyiyuan\n.\n📝 Tweak management docs. PR\n#11918\nby\n@tiangolo\n.\n🚚 Rename GitHub links from tiangolo/fastapi to fastapi/fastapi. PR\n#11913\nby\n@tiangolo\n.\n📝 Add docs about FastAPI team and project management. PR\n#11908\nby\n@tiangolo\n.\n📝 Re-structure docs main menu. PR\n#11904\nby\n@tiangolo\n.\n📝 Update Speakeasy URL. PR\n#11871\nby\n@ndimares\n.\nTranslations\n¶\n🌐 Update Portuguese translation for\ndocs/pt/docs/alternatives.md\n. PR\n#11931\nby\n@ceb10n\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/dependencies/sub-dependencies.md\n. PR\n#10515\nby\n@AlertRED\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/response-change-status-code.md\n. PR\n#11863\nby\n@ceb10n\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/reference/background.md\n. PR\n#11849\nby\n@lucasbalieiro\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/dependencies/dependencies-with-yield.md\n. PR\n#11848\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/reference/apirouter.md\n. PR\n#11843\nby\n@lucasbalieiro\n.\nInternal\n¶\n🔧 Update sponsors: add liblab. PR\n#11934\nby\n@tiangolo\n.\n👷 Update GitHub Action label-approved permissions. PR\n#11933\nby\n@tiangolo\n.\n👷 Refactor GitHub Action to comment docs deployment URLs and update token. PR\n#11925\nby\n@tiangolo\n.\n👷 Update tokens for GitHub Actions. PR\n#11924\nby\n@tiangolo\n.\n👷 Update token permissions to comment deployment URL in docs. PR\n#11917\nby\n@tiangolo\n.\n👷 Update token permissions for GitHub Actions. PR\n#11915\nby\n@tiangolo\n.\n👷 Update GitHub Actions token usage. PR\n#11914\nby\n@tiangolo\n.\n👷 Update GitHub Action to notify translations with label\napproved-1\n. PR\n#11907\nby\n@tiangolo\n.\n🔧 Update sponsors, remove Reflex. PR\n#11875\nby\n@tiangolo\n.\n🔧 Update sponsors: remove TalkPython. PR\n#11861\nby\n@tiangolo\n.\n🔨 Update docs Termynal scripts to not include line nums for local dev. PR\n#11854\nby\n@tiangolo\n.\n0.111.1\n¶\nUpgrades\n¶\n➖ Remove\norjson\nand\nujson\nfrom default dependencies. PR\n#11842\nby\n@tiangolo\n.\nThese dependencies are still installed when you install with\npip install \"fastapi[all]\"\n. But they are not included in\npip install fastapi\n.\n📝 Restored Swagger-UI links to use the latest version possible. PR\n#11459\nby\n@UltimateLobster\n.\nDocs\n¶\n✏️ Rewording in\ndocs/en/docs/fastapi-cli.md\n. PR\n#11716\nby\n@alejsdev\n.\n📝 Update Hypercorn links in all the docs. PR\n#11744\nby\n@kittydoor\n.\n📝  Update docs with Ariadne reference from Starlette to FastAPI. PR\n#11797\nby\n@DamianCzajkowski\n.\n📝 Update fastapi instrumentation external link. PR\n#11317\nby\n@softwarebloat\n.\n✏️ Fix links to alembic example repo in docs. PR\n#11628\nby\n@augiwan\n.\n✏️ Update\ndocs/en/docs/fastapi-cli.md\n. PR\n#11715\nby\n@alejsdev\n.\n📝 Update External Links . PR\n#11500\nby\n@devon2018\n.\n📝 Add External Link: Tutorial de FastAPI, ¿el mejor framework de Python?. PR\n#11618\nby\n@EduardoZepeda\n.\n📝 Fix typo in\ndocs/en/docs/tutorial/body-multiple-params.md\n. PR\n#11698\nby\n@mwb-u\n.\n📝 Add External Link: Deploy a Serverless FastAPI App with Neon Postgres and AWS App Runner at any scale. PR\n#11633\nby\n@ananis25\n.\n📝 Update\nsecurity/first-steps.md\n. PR\n#11674\nby\n@alejsdev\n.\n📝 Update\nsecurity/first-steps.md\n. PR\n#11673\nby\n@alejsdev\n.\n📝 Update note in\npath-params-numeric-validations.md\n. PR\n#11672\nby\n@alejsdev\n.\n📝 Tweak intro docs about\nAnnotated\nand\nQuery()\nparams. PR\n#11664\nby\n@tiangolo\n.\n📝 Update JWT auth documentation to use PyJWT instead of pyhon-jose. PR\n#11589\nby\n@estebanx64\n.\n📝 Update docs. PR\n#11603\nby\n@alejsdev\n.\n✏️ Fix typo: convert every 're-use' to 'reuse'.. PR\n#11598\nby\n@hasansezertasan\n.\n✏️ Fix typo in\nfastapi/applications.py\n. PR\n#11593\nby\n@petarmaric\n.\n✏️ Fix link in\nfastapi-cli.md\n. PR\n#11524\nby\n@svlandeg\n.\nTranslations\n¶\n🌐 Add Spanish translation for\ndocs/es/docs/how-to/graphql.md\n. PR\n#11697\nby\n@camigomezdev\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/reference/index.md\n. PR\n#11840\nby\n@lucasbalieiro\n.\n🌐 Fix link in German translation. PR\n#11836\nby\n@anitahammer\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/dependencies/sub-dependencies.md\n. PR\n#11792\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/tutorial/request-forms.md\n. PR\n#11553\nby\n@hasansezertasan\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/reference/exceptions.md\n. PR\n#11834\nby\n@lucasbalieiro\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/dependencies/global-dependencies.md\n. PR\n#11826\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/how-to/general.md\n. PR\n#11825\nby\n@lucasbalieiro\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/async-tests.md\n. PR\n#11808\nby\n@ceb10n\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/first-steps.md\n. PR\n#11809\nby\n@vkhoroshchak\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/dependencies/dependencies-in-path-operation-operators.md\n. PR\n#11804\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/fastapi-cli.md\n. PR\n#11786\nby\n@logan2d5\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/openapi-webhooks.md\n. PR\n#11791\nby\n@ceb10n\n.\n🌐 Update Chinese translation for\ndocs/tutorial/security/oauth2-jwt.md\n. PR\n#11781\nby\n@logan2d5\n.\n📝 Fix image missing in French translation for\ndocs/fr/docs/async.md\n. PR\n#11787\nby\n@pe-brian\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/advanced-dependencies.md\n. PR\n#11775\nby\n@ceb10n\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/dependencies/classes-as-dependencies.md\n. PR\n#11768\nby\n@Joao-Pedro-P-Holanda\n.\n🌐  Add Portuguese translation for\ndocs/pt/docs/advanced/additional-status-codes.md\n. PR\n#11753\nby\n@ceb10n\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/dependencies/index.md\n. PR\n#11757\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/settings.md\n. PR\n#11739\nby\n@Joao-Pedro-P-Holanda\n.\n🌐 Add French translation for\ndocs/fr/docs/learn/index.md\n. PR\n#11712\nby\n@benjaminvandammeholberton\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/how-to/index.md\n. PR\n#11731\nby\n@vhsenna\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/additional-responses.md\n. PR\n#11736\nby\n@ceb10n\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/benchmarks.md\n. PR\n#11713\nby\n@ceb10n\n.\n🌐 Fix Korean translation for\ndocs/ko/docs/tutorial/response-status-code.md\n. PR\n#11718\nby\n@nayeonkinn\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/extra-data-types.md\n. PR\n#11711\nby\n@nayeonkinn\n.\n🌐 Fix Korean translation for\ndocs/ko/docs/tutorial/body-nested-models.md\n. PR\n#11710\nby\n@nayeonkinn\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/fastapi-cli.md\n. PR\n#11641\nby\n@ayr-ton\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/fastapi-people.md\n. PR\n#11639\nby\n@hsuanchi\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/advanced/index.md\n. PR\n#11606\nby\n@hasansezertasan\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/deployment/cloud.md\n. PR\n#11610\nby\n@hasansezertasan\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/advanced/security/index.md\n. PR\n#11609\nby\n@hasansezertasan\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/advanced/testing-websockets.md\n. PR\n#11608\nby\n@hasansezertasan\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/how-to/general.md\n. PR\n#11607\nby\n@hasansezertasan\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/advanced/templates.md\n. PR\n#11620\nby\n@chaoless\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/deployment/index.md\n. PR\n#11605\nby\n@hasansezertasan\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/tutorial/static-files.md\n. PR\n#11599\nby\n@hasansezertasan\n.\n🌐 Polish translation for\ndocs/pl/docs/fastapi-people.md\n. PR\n#10196\nby\n@isulim\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/advanced/wsgi.md\n. PR\n#11575\nby\n@hasansezertasan\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/tutorial/cookie-params.md\n. PR\n#11561\nby\n@hasansezertasan\n.\n🌐 Add Russian translation for\ndocs/ru/docs/about/index.md\n. PR\n#10961\nby\n@s111d\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/sql-databases.md\n. PR\n#11539\nby\n@chaoless\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/how-to/configure-swagger-ui.md\n. PR\n#11501\nby\n@Lucas-lyh\n.\n🌐 Update Chinese translation for\n/docs/advanced/security/http-basic-auth.md\n. PR\n#11512\nby\n@nick-cjyx9\n.\nInternal\n¶\n♻️ Simplify internal docs script. PR\n#11777\nby\n@gitworkflows\n.\n🔧 Update sponsors: add Fine. PR\n#11784\nby\n@tiangolo\n.\n🔧 Tweak sponsors: Kong URL. PR\n#11765\nby\n@tiangolo\n.\n🔧 Tweak sponsors: Kong URL. PR\n#11764\nby\n@tiangolo\n.\n🔧 Update sponsors, add Stainless. PR\n#11763\nby\n@tiangolo\n.\n🔧 Update sponsors, add Zuplo. PR\n#11729\nby\n@tiangolo\n.\n🔧 Update Sponsor link: Coherence. PR\n#11730\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#11669\nby\n@tiangolo\n.\n🔧 Add sponsor Kong. PR\n#11662\nby\n@tiangolo\n.\n👷 Update Smokeshow, fix sync download artifact and smokeshow configs. PR\n#11563\nby\n@tiangolo\n.\n👷 Update Smokeshow download artifact GitHub Action. PR\n#11562\nby\n@tiangolo\n.\n👷 Update GitHub actions to download and upload artifacts to v4, for docs and coverage. PR\n#11550\nby\n@tamird\n.\n👷 Tweak CI for test-redistribute, add needed env vars for slim. PR\n#11549\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#11511\nby\n@tiangolo\n.\n0.111.0\n¶\nFeatures\n¶\n✨ Add FastAPI CLI, the new\nfastapi\ncommand. PR\n#11522\nby\n@tiangolo\n.\nNew docs:\nFastAPI CLI\n.\nTry it out with:\n$\npip\ninstall\n--upgrade\nfastapi\n$\nfastapi\ndev\nmain.py\n╭────────── FastAPI CLI - Development mode ───────────╮\n│                                                     │\n│  Serving at: http://127.0.0.1:8000                  │\n│                                                     │\n│  API docs: http://127.0.0.1:8000/docs               │\n│                                                     │\n│  Running in development mode, for production use:   │\n│                                                     │\n│  fastapi run                                        │\n│                                                     │\n╰─────────────────────────────────────────────────────╯\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\nRefactors\n¶\n🔧 Add configs and setup for\nfastapi-slim\nincluding optional extras\nfastapi-slim[standard]\n, and\nfastapi\nincluding by default the same\nstandard\nextras. PR\n#11503\nby\n@tiangolo\n.\n0.110.3\n¶\nDocs\n¶\n📝 Update references to Python version, FastAPI supports all the current versions, no need to make the version explicit. PR\n#11496\nby\n@tiangolo\n.\n✏️ Fix typo in\nfastapi/security/api_key.py\n. PR\n#11481\nby\n@ch33zer\n.\n✏️ Fix typo in\nsecurity/http.py\n. PR\n#11455\nby\n@omarmoo5\n.\nTranslations\n¶\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/benchmarks.md\n. PR\n#11484\nby\n@KNChiu\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/fastapi-people.md\n. PR\n#11476\nby\n@billzhong\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/how-to/index.md\nand\ndocs/zh/docs/how-to/general.md\n. PR\n#11443\nby\n@billzhong\n.\n🌐 Add Spanish translation for cookie-params\ndocs/es/docs/tutorial/cookie-params.md\n. PR\n#11410\nby\n@fabianfalon\n.\nInternal\n¶\n⬆ Bump mkdocstrings[python] from 0.23.0 to 0.24.3. PR\n#11469\nby\n@dependabot[bot]\n.\n🔨 Update internal scripts and remove unused ones. PR\n#11499\nby\n@tiangolo\n.\n🔧 Migrate from Hatch to PDM for the internal build. PR\n#11498\nby\n@tiangolo\n.\n⬆️ Upgrade MkDocs Material and re-enable cards. PR\n#11466\nby\n@tiangolo\n.\n⬆ Bump pillow from 10.2.0 to 10.3.0. PR\n#11403\nby\n@dependabot[bot]\n.\n🔧 Ungroup dependabot updates. PR\n#11465\nby\n@tiangolo\n.\n0.110.2\n¶\nFixes\n¶\n🐛 Fix support for query parameters with list types, handle JSON encoding Pydantic\nUndefinedType\n. PR\n#9929\nby\n@arjwilliams\n.\nRefactors\n¶\n♻️ Simplify Pydantic configs in OpenAPI models in\nfastapi/openapi/models.py\n. PR\n#10886\nby\n@JoeTanto2\n.\n✨ Add support for Pydantic's 2.7 new deprecated Field parameter, remove URL from validation errors response. PR\n#11461\nby\n@tiangolo\n.\nDocs\n¶\n📝 Fix types in examples under\ndocs_src/extra_data_types\n. PR\n#10535\nby\n@nilslindemann\n.\n📝 Update references to UJSON. PR\n#11464\nby\n@tiangolo\n.\n📝 Tweak docs and translations links, typos, format. PR\n#11389\nby\n@nilslindemann\n.\n📝 Fix typo in\ndocs/es/docs/async.md\n. PR\n#11400\nby\n@fabianfalon\n.\n📝 Update OpenAPI client generation docs to use\n@hey-api/openapi-ts\n. PR\n#11339\nby\n@jordanshatford\n.\nTranslations\n¶\n🌐 Update Chinese translation for\ndocs/zh/docs/index.html\n. PR\n#11430\nby\n@waketzheng\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/dependencies/dependencies-in-path-operation-decorators.md\n. PR\n#11411\nby\n@anton2yakovlev\n.\n🌐 Add Portuguese translations for\nlearn/index.md\nresources/index.md\nhelp/index.md\nabout/index.md\n. PR\n#10807\nby\n@nazarepiedady\n.\n🌐 Update Russian translations for deployments docs. PR\n#11271\nby\n@Lufa1u\n.\n🌐 Add Bengali translations for\ndocs/bn/docs/python-types.md\n. PR\n#11376\nby\n@imtiaz101325\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/security/simple-oauth2.md\n. PR\n#5744\nby\n@KdHyeon0661\n.\n🌐 Add Korean translation for\ndocs/ko/docs/help-fastapi.md\n. PR\n#4139\nby\n@kty4119\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/events.md\n. PR\n#5087\nby\n@pers0n4\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/path-operation-configuration.md\n. PR\n#1954\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/request-forms-and-files.md\n. PR\n#1946\nby\n@SwftAlpc\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/dependencies/dependencies-with-yield.md\n. PR\n#10532\nby\n@AlertRED\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/debugging.md\n. PR\n#5695\nby\n@JungWooGeon\n.\nInternal\n¶\n⬆️ Upgrade version of typer for docs. PR\n#11393\nby\n@tiangolo\n.\n0.110.1\n¶\nFixes\n¶\n🐛 Fix parameterless\nDepends()\nwith generics. PR\n#9479\nby\n@nzig\n.\nRefactors\n¶\n♻️ Update mypy. PR\n#11049\nby\n@k0t3n\n.\n♻️ Simplify string format with f-strings in\nfastapi/applications.py\n. PR\n#11335\nby\n@igeni\n.\nUpgrades\n¶\n⬆️ Upgrade Starlette to >=0.37.2,<0.38.0, remove Starlette filterwarning for internal tests. PR\n#11266\nby\n@nothielf\n.\nDocs\n¶\n📝 Tweak docs and translations links and remove old docs translations. PR\n#11381\nby\n@tiangolo\n.\n✏️ Fix typo in\nfastapi/security/oauth2.py\n. PR\n#11368\nby\n@shandongbinzhou\n.\n📝 Update links to Pydantic docs to point to new website. PR\n#11328\nby\n@alejsdev\n.\n✏️ Fix typo in\ndocs/en/docs/tutorial/extra-models.md\n. PR\n#11329\nby\n@alejsdev\n.\n📝 Update\nproject-generation.md\n. PR\n#11326\nby\n@alejsdev\n.\n📝 Update External Links. PR\n#11327\nby\n@alejsdev\n.\n🔥 Remove link to Pydantic's benchmark, on other i18n pages.. PR\n#11224\nby\n@hirotoKirimaru\n.\n✏️ Fix typos in docstrings. PR\n#11295\nby\n@davidhuser\n.\n🛠️ Improve Node.js script in docs to generate TypeScript clients. PR\n#11293\nby\n@alejsdev\n.\n📝 Update examples for tests to replace \"inexistent\" for \"nonexistent\". PR\n#11220\nby\n@Homesteady\n.\n📝 Update\npython-multipart\nGitHub link in all docs from\nhttps://andrew-d.github.io/python-multipart/\nto\nhttps://github.com/Kludex/python-multipart\n. PR\n#11239\nby\n@joshjhans\n.\nTranslations\n¶\n🌐 Add German translation for\ndocs/de/docs/tutorial/response-status-code.md\n. PR\n#10357\nby\n@nilslindemann\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/query-params.md\n. PR\n#3480\nby\n@jaystone776\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/body.md\n. PR\n#3481\nby\n@jaystone776\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/path-params.md\n. PR\n#3479\nby\n@jaystone776\n.\n🌐 Update Chinese translation for\ndocs/tutorial/body-fields.md\n. PR\n#3496\nby\n@jaystone776\n.\n🌐 Update Chinese translation for\ndocs/tutorial/extra-models.md\n. PR\n#3497\nby\n@jaystone776\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/metadata.md\n. PR\n#2667\nby\n@tokusumi\n.\n🌐 Add German translation for\ndocs/de/docs/contributing.md\n. PR\n#10487\nby\n@nilslindemann\n.\n🌐 Update Japanese translation of\ndocs/ja/docs/tutorial/query-params.md\n. PR\n#10808\nby\n@urushio\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/security/get-current-user.md\n. PR\n#3842\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/openapi-callbacks.md\n. PR\n#3825\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/extending-openapi.md\n. PR\n#3823\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/testing-dependencies.md\n. PR\n#3819\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/custom-request-and-route.md\n. PR\n#3816\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/external-links.md\n. PR\n#3833\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/templates.md\n. PR\n#3812\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/sub-applications.md\n. PR\n#3811\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/async-sql-databases.md\n. PR\n#3805\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/middleware.md\n. PR\n#3804\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/dataclasses.md\n. PR\n#3803\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/using-request-directly.md\n. PR\n#3802\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/security/http-basic-auth.md\n. PR\n#3801\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/security/oauth2-scopes.md\n. PR\n#3800\nby\n@jaystone776\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/cookie-params.md\n. PR\n#3486\nby\n@jaystone776\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/header-params.md\n. PR\n#3487\nby\n@jaystone776\n.\n🌐 Update Chinese translation for\ndocs/tutorial/response-status-code.md\n. PR\n#3498\nby\n@jaystone776\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/security/first-steps.md\n. PR\n#10432\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/events.md\n. PR\n#10693\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/deployment/cloud.md\n. PR\n#10746\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/behind-a-proxy.md\n. PR\n#10675\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/help-fastapi.md\n. PR\n#10455\nby\n@nilslindemann\n.\n🌐 Update German translation for\ndocs/de/docs/python-types.md\n. PR\n#10287\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/path-params.md\n. PR\n#10290\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/handling-errors.md\n. PR\n#10379\nby\n@nilslindemann\n.\n🌐 Update German translation for\ndocs/de/docs/index.md\n. PR\n#10283\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/security/http-basic-auth.md\n. PR\n#10651\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/bigger-applications.md\n. PR\n#10554\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/path-operation-advanced-configuration.md\n. PR\n#10612\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/static-files.md\n. PR\n#10584\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/security/oauth2-jwt.md\n. PR\n#10522\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/response-model.md\n. PR\n#10345\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/extra-models.md\n. PR\n#10351\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/body-updates.md\n. PR\n#10396\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/alternatives.md\n. PR\n#10855\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/templates.md\n. PR\n#10678\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/security/oauth2-scopes.md\n. PR\n#10643\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/async-tests.md\n. PR\n#10708\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/metadata.md\n. PR\n#10581\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/testing.md\n. PR\n#10586\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/schema-extra-example.md\n. PR\n#10597\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/index.md\n. PR\n#10611\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/response-directly.md\n. PR\n#10618\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/additional-responses.md\n. PR\n#10626\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/response-cookies.md\n. PR\n#10627\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/response-headers.md\n. PR\n#10628\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/response-change-status-code.md\n. PR\n#10632\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/advanced-dependencies.md\n. PR\n#10633\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/security/index.md\n. PR\n#10635\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/using-request-directly.md\n. PR\n#10653\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/dataclasses.md\n. PR\n#10667\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/middleware.md\n. PR\n#10668\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/sub-applications.md\n. PR\n#10671\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/websockets.md\n. PR\n#10687\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/testing-websockets.md\n. PR\n#10703\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/testing-events.md\n. PR\n#10704\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/testing-dependencies.md\n. PR\n#10706\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/openapi-callbacks.md\n. PR\n#10710\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/settings.md\n. PR\n#10709\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/wsgi.md\n. PR\n#10713\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/deployment/index.md\n. PR\n#10733\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/deployment/https.md\n. PR\n#10737\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/deployment/manually.md\n. PR\n#10738\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/deployment/concepts.md\n. PR\n#10744\nby\n@nilslindemann\n.\n🌐 Update German translation for\ndocs/de/docs/features.md\n. PR\n#10284\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/deployment/server-workers.md\n. PR\n#10747\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/deployment/docker.md\n. PR\n#10759\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/how-to/index.md\n. PR\n#10769\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/how-to/general.md\n. PR\n#10770\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/how-to/graphql.md\n. PR\n#10788\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/how-to/custom-request-and-route.md\n. PR\n#10789\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/how-to/conditional-openapi.md\n. PR\n#10790\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/how-to/separate-openapi-schemas.md\n. PR\n#10796\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/how-to/configure-swagger-ui.md\n. PR\n#10804\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/how-to/custom-docs-ui-assets.md\n. PR\n#10803\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/parameters.md\n. PR\n#10814\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/status.md\n. PR\n#10815\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/uploadfile.md\n. PR\n#10816\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/exceptions.md\n. PR\n#10817\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/dependencies.md\n. PR\n#10818\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/apirouter.md\n. PR\n#10819\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/websockets.md\n. PR\n#10822\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/httpconnection.md\n. PR\n#10823\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/response.md\n. PR\n#10824\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/middleware.md\n. PR\n#10837\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/openapi/*.md\n. PR\n#10838\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/security/index.md\n. PR\n#10839\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/staticfiles.md\n. PR\n#10841\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/testclient.md\n. PR\n#10843\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/project-generation.md\n. PR\n#10851\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/history-design-future.md\n. PR\n#10865\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/dependencies/dependencies-with-yield.md\n. PR\n#10422\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/dependencies/global-dependencies.md\n. PR\n#10420\nby\n@nilslindemann\n.\n🌐 Update German translation for\ndocs/de/docs/fastapi-people.md\n. PR\n#10285\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/dependencies/sub-dependencies.md\n. PR\n#10409\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/security/index.md\n. PR\n#10429\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/dependencies/dependencies-in-path-operation-decorators.md\n. PR\n#10411\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/extra-data-types.md\n. PR\n#10534\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/security/simple-oauth2.md\n. PR\n#10504\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/security/get-current-user.md\n. PR\n#10439\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/request-forms-and-files.md\n. PR\n#10368\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/encoder.md\n. PR\n#10385\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/request-forms.md\n. PR\n#10361\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/deployment/versions.md\n. PR\n#10491\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/async.md\n. PR\n#10449\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/cookie-params.md\n. PR\n#10323\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/dependencies/classes-as-dependencies.md\n. PR\n#10407\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/dependencies/index.md\n. PR\n#10399\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/header-params.md\n. PR\n#10326\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/path-params-numeric-validations.md\n. PR\n#10307\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/query-params-str-validations.md\n. PR\n#10304\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/request-files.md\n. PR\n#10364\nby\n@nilslindemann\n.\n:globe_with_meridians: Add Portuguese translation for\ndocs/pt/docs/advanced/templates.md\n. PR\n#11338\nby\n@SamuelBFavarin\n.\n🌐 Add Bengali translations for\ndocs/bn/docs/learn/index.md\n. PR\n#11337\nby\n@imtiaz101325\n.\n🌐 Fix Korean translation for\ndocs/ko/docs/index.md\n. PR\n#11296\nby\n@choi-haram\n.\n🌐 Add Korean translation for\ndocs/ko/docs/about/index.md\n. PR\n#11299\nby\n@choi-haram\n.\n🌐 Add Korean translation for\ndocs/ko/docs/advanced/index.md\n. PR\n#9613\nby\n@ElliottLarsen\n.\n🌐 Add German translation for\ndocs/de/docs/how-to/extending-openapi.md\n. PR\n#10794\nby\n@nilslindemann\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/metadata.md\n. PR\n#11286\nby\n@jackleeio\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/contributing.md\n. PR\n#10887\nby\n@Aruelius\n.\n🌐 Add Azerbaijani translation for\ndocs/az/docs/fastapi-people.md\n. PR\n#11195\nby\n@vusallyv\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/dependencies/index.md\n. PR\n#11223\nby\n@kohiry\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/query-params.md\n. PR\n#11242\nby\n@jackleeio\n.\n🌐 Add Azerbaijani translation for\ndocs/az/learn/index.md\n. PR\n#11192\nby\n@vusallyv\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#11387\nby\n@tiangolo\n.\n⬆ Bump actions/cache from 3 to 4. PR\n#10988\nby\n@dependabot[bot]\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.8.11 to 1.8.14. PR\n#11318\nby\n@dependabot[bot]\n.\n⬆ Bump pillow from 10.1.0 to 10.2.0. PR\n#11011\nby\n@dependabot[bot]\n.\n⬆ Bump black from 23.3.0 to 24.3.0. PR\n#11325\nby\n@dependabot[bot]\n.\n👷 Add cron to run test once a week on monday. PR\n#11377\nby\n@estebanx64\n.\n➕ Replace mkdocs-markdownextradata-plugin with mkdocs-macros-plugin. PR\n#11383\nby\n@tiangolo\n.\n👷 Disable MkDocs insiders social plugin while an issue in MkDocs Material is handled. PR\n#11373\nby\n@tiangolo\n.\n👷 Fix logic for when to install and use MkDocs Insiders. PR\n#11372\nby\n@tiangolo\n.\n👷 Do not use Python packages cache for publish. PR\n#11366\nby\n@tiangolo\n.\n👷 Add CI to test sdists for redistribution (e.g. Linux distros). PR\n#11365\nby\n@tiangolo\n.\n👷 Update build-docs GitHub Action path filter. PR\n#11354\nby\n@tiangolo\n.\n🔧 Update Ruff config, add extra ignore rule from SQLModel. PR\n#11353\nby\n@tiangolo\n.\n⬆️ Upgrade configuration for Ruff v0.2.0. PR\n#11075\nby\n@charliermarsh\n.\n🔧 Update sponsors, add MongoDB. PR\n#11346\nby\n@tiangolo\n.\n⬆ Bump dorny/paths-filter from 2 to 3. PR\n#11028\nby\n@dependabot[bot]\n.\n⬆ Bump dawidd6/action-download-artifact from 3.0.0 to 3.1.4. PR\n#11310\nby\n@dependabot[bot]\n.\n♻️ Refactor computing FastAPI People, include 3 months, 6 months, 1 year, based on comment date, not discussion date. PR\n#11304\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#11228\nby\n@tiangolo\n.\n🔥 Remove Jina AI QA Bot from the docs. PR\n#11268\nby\n@nan-wang\n.\n🔧 Update sponsors, remove Jina, remove Powens, move TestDriven.io. PR\n#11213\nby\n@tiangolo\n.\n0.110.0\n¶\nBreaking Changes\n¶\n🐛 Fix unhandled growing memory for internal server errors, refactor dependencies with\nyield\nand\nexcept\nto require raising again as in regular Python. PR\n#11191\nby\n@tiangolo\n.\nThis is a breaking change (and only slightly) if you used dependencies with\nyield\n, used\nexcept\nin those dependencies, and didn't raise again.\nThis was reported internally by\n@rushilsrivastava\nas a memory leak when the server had unhandled exceptions that would produce internal server errors, the memory allocated before that point would not be released.\nRead the new docs:\nDependencies with\nyield\nand\nexcept\n.\nIn short, if you had dependencies that looked like:\ndef\nmy_dep\n():\ntry\n:\nyield\nexcept\nSomeException\n:\npass\nNow you need to make sure you raise again after\nexcept\n, just as you would in regular Python:\ndef\nmy_dep\n():\ntry\n:\nyield\nexcept\nSomeException\n:\nraise\nDocs\n¶\n✏️ Fix minor typos in\ndocs/ko/docs/\n. PR\n#11126\nby\n@KaniKim\n.\n✏️ Fix minor typo in\nfastapi/applications.py\n. PR\n#11099\nby\n@JacobHayes\n.\nTranslations\n¶\n🌐 Add German translation for\ndocs/de/docs/reference/background.md\n. PR\n#10820\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/templating.md\n. PR\n#10842\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/external-links.md\n. PR\n#10852\nby\n@nilslindemann\n.\n🌐 Update Turkish translation for\ndocs/tr/docs/tutorial/query-params.md\n. PR\n#11162\nby\n@hasansezertasan\n.\n🌐 Add German translation for\ndocs/de/docs/reference/encoders.md\n. PR\n#10840\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/responses.md\n. PR\n#10825\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/reference/request.md\n. PR\n#10821\nby\n@nilslindemann\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/tutorial/query-params.md\n. PR\n#11078\nby\n@emrhnsyts\n.\n🌐 Add German translation for\ndocs/de/docs/reference/fastapi.md\n. PR\n#10813\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/newsletter.md\n. PR\n#10853\nby\n@nilslindemann\n.\n🌐 Add Traditional Chinese translation for\ndocs/zh-hant/docs/learn/index.md\n. PR\n#11142\nby\n@hsuanchi\n.\n🌐 Add Korean translation for\n/docs/ko/docs/tutorial/dependencies/global-dependencies.md\n. PR\n#11123\nby\n@riroan\n.\n🌐 Add Korean translation for\n/docs/ko/docs/tutorial/dependencies/dependencies-in-path-operation-decorators.md\n. PR\n#11124\nby\n@riroan\n.\n🌐 Add Korean translation for\n/docs/ko/docs/tutorial/schema-extra-example.md\n. PR\n#11121\nby\n@KaniKim\n.\n🌐 Add Korean translation for\n/docs/ko/docs/tutorial/body-fields.md\n. PR\n#11112\nby\n@KaniKim\n.\n🌐 Add Korean translation for\n/docs/ko/docs/tutorial/cookie-params.md\n. PR\n#11118\nby\n@riroan\n.\n🌐 Update Korean translation for\n/docs/ko/docs/dependencies/index.md\n. PR\n#11114\nby\n@KaniKim\n.\n🌐 Update Korean translation for\n/docs/ko/docs/deployment/docker.md\n. PR\n#11113\nby\n@KaniKim\n.\n🌐 Update Turkish translation for\ndocs/tr/docs/tutorial/first-steps.md\n. PR\n#11094\nby\n@hasansezertasan\n.\n🌐 Add Spanish translation for\ndocs/es/docs/advanced/security/index.md\n. PR\n#2278\nby\n@Xaraxx\n.\n🌐 Add Spanish translation for\ndocs/es/docs/advanced/response-headers.md\n. PR\n#2276\nby\n@Xaraxx\n.\n🌐 Add Spanish translation for\ndocs/es/docs/deployment/index.md\nand\n~/deployment/versions.md\n. PR\n#9669\nby\n@pabloperezmoya\n.\n🌐 Add Spanish translation for\ndocs/es/docs/benchmarks.md\n. PR\n#10928\nby\n@pablocm83\n.\n🌐 Add Spanish translation for\ndocs/es/docs/advanced/response-change-status-code.md\n. PR\n#11100\nby\n@alejsdev\n.\n0.109.2\n¶\nUpgrades\n¶\n⬆️ Upgrade version of Starlette to\n>= 0.36.3\n. PR\n#11086\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Update Turkish translation for\ndocs/tr/docs/fastapi-people.md\n. PR\n#10547\nby\n@alperiox\n.\nInternal\n¶\n🍱 Add new FastAPI logo. PR\n#11090\nby\n@tiangolo\n.\n0.109.1\n¶\nSecurity fixes\n¶\n⬆️ Upgrade minimum version of\npython-multipart\nto\n>=0.0.7\nto fix a vulnerability when using form data with a ReDos attack. You can also simply upgrade\npython-multipart\n.\nRead more in the\nadvisory: Content-Type Header ReDoS\n.\nFeatures\n¶\n✨  Include HTTP 205 in status codes with no body. PR\n#10969\nby\n@tiangolo\n.\nRefactors\n¶\n✅ Refactor tests for duplicate operation ID generation for compatibility with other tools running the FastAPI test suite. PR\n#10876\nby\n@emmettbutler\n.\n♻️ Simplify string format with f-strings in\nfastapi/utils.py\n. PR\n#10576\nby\n@eukub\n.\n🔧 Fix Ruff configuration unintentionally enabling and re-disabling mccabe complexity check. PR\n#10893\nby\n@jiridanek\n.\n✅ Re-enable test in\ntests/test_tutorial/test_header_params/test_tutorial003.py\nafter fix in Starlette. PR\n#10904\nby\n@ooknimm\n.\nDocs\n¶\n📝 Tweak wording in\nhelp-fastapi.md\n. PR\n#11040\nby\n@tiangolo\n.\n📝 Tweak docs for Behind a Proxy. PR\n#11038\nby\n@tiangolo\n.\n📝 Add External Link: 10 Tips for adding SQLAlchemy to FastAPI. PR\n#11036\nby\n@Donnype\n.\n📝 Add External Link: Tips on migrating from Flask to FastAPI and vice-versa. PR\n#11029\nby\n@jtemporal\n.\n📝 Deprecate old tutorials: Peewee, Couchbase, encode/databases. PR\n#10979\nby\n@tiangolo\n.\n✏️ Fix typo in\nfastapi/security/oauth2.py\n. PR\n#10972\nby\n@RafalSkolasinski\n.\n📝 Update\nHTTPException\ndetails in\ndocs/en/docs/tutorial/handling-errors.md\n. PR\n#5418\nby\n@papb\n.\n✏️ A few tweaks in\ndocs/de/docs/tutorial/first-steps.md\n. PR\n#10959\nby\n@nilslindemann\n.\n✏️ Fix link in\ndocs/en/docs/advanced/async-tests.md\n. PR\n#10960\nby\n@nilslindemann\n.\n✏️ Fix typos for Spanish documentation. PR\n#10957\nby\n@jlopezlira\n.\n📝 Add warning about lifespan functions and backwards compatibility with events. PR\n#10734\nby\n@jacob-indigo\n.\n✏️ Fix broken link in\ndocs/tutorial/sql-databases.md\nin several languages. PR\n#10716\nby\n@theoohoho\n.\n✏️ Remove broken links from\nexternal_links.yml\n. PR\n#10943\nby\n@Torabek\n.\n📝 Update template docs with more info about\nurl_for\n. PR\n#5937\nby\n@EzzEddin\n.\n📝 Update usage of Token model in security docs. PR\n#9313\nby\n@piotrszacilowski\n.\n✏️ Update highlighted line in\ndocs/en/docs/tutorial/bigger-applications.md\n. PR\n#5490\nby\n@papb\n.\n📝 Add External Link: Explore How to Effectively Use JWT With FastAPI. PR\n#10212\nby\n@aanchlia\n.\n📝 Add hyperlink to\ndocs/en/docs/tutorial/static-files.md\n. PR\n#10243\nby\n@hungtsetse\n.\n📝 Add External Link: Instrument a FastAPI service adding tracing with OpenTelemetry and send/show traces in Grafana Tempo. PR\n#9440\nby\n@softwarebloat\n.\n📝 Review and rewording of\nen/docs/contributing.md\n. PR\n#10480\nby\n@nilslindemann\n.\n📝 Add External Link: ML serving and monitoring with FastAPI and Evidently. PR\n#9701\nby\n@mnrozhkov\n.\n📝 Reword in docs, from \"have in mind\" to \"keep in mind\". PR\n#10376\nby\n@malicious\n.\n📝 Add External Link: Talk by Jeny Sadadia. PR\n#10265\nby\n@JenySadadia\n.\n📝 Add location info to\ntutorial/bigger-applications.md\n. PR\n#10552\nby\n@nilslindemann\n.\n✏️ Fix Pydantic method name in\ndocs/en/docs/advanced/path-operation-advanced-configuration.md\n. PR\n#10826\nby\n@ahmedabdou14\n.\nTranslations\n¶\n🌐 Add Spanish translation for\ndocs/es/docs/external-links.md\n. PR\n#10933\nby\n@pablocm83\n.\n🌐 Update Korean translation for\ndocs/ko/docs/tutorial/first-steps.md\n,\ndocs/ko/docs/tutorial/index.md\n,\ndocs/ko/docs/tutorial/path-params.md\n, and\ndocs/ko/docs/tutorial/query-params.md\n. PR\n#4218\nby\n@SnowSuno\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/tutorial/dependencies/dependencies-with-yield.md\n. PR\n#10870\nby\n@zhiquanchi\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/deployment/concepts.md\n. PR\n#10282\nby\n@xzmeng\n.\n🌐 Add Azerbaijani translation for\ndocs/az/docs/index.md\n. PR\n#11047\nby\n@aykhans\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/middleware.md\n. PR\n#2829\nby\n@JeongHyeongKim\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/body-nested-models.md\n. PR\n#10313\nby\n@nilslindemann\n.\n🌐 Add Persian translation for\ndocs/fa/docs/tutorial/middleware.md\n. PR\n#9695\nby\n@mojtabapaso\n.\n🌐 Update Farsi translation for\ndocs/fa/docs/index.md\n. PR\n#10216\nby\n@theonlykingpin\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/body-fields.md\n. PR\n#10310\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/body.md\n. PR\n#10295\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/body-multiple-params.md\n. PR\n#10308\nby\n@nilslindemann\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/security/get-current-user.md\n. PR\n#2681\nby\n@sh0nk\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/advanced-dependencies.md\n. PR\n#3798\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/events.md\n. PR\n#3815\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/behind-a-proxy.md\n. PR\n#3820\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/testing-events.md\n. PR\n#3818\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/testing-websockets.md\n. PR\n#3817\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/testing-database.md\n. PR\n#3821\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/deployment/deta.md\n. PR\n#3837\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/history-design-future.md\n. PR\n#3832\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/project-generation.md\n. PR\n#3831\nby\n@jaystone776\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/deployment/docker.md\n. PR\n#10296\nby\n@xzmeng\n.\n🌐 Update Spanish translation for\ndocs/es/docs/features.md\n. PR\n#10884\nby\n@pablocm83\n.\n🌐 Add Spanish translation for\ndocs/es/docs/newsletter.md\n. PR\n#10922\nby\n@pablocm83\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/background-tasks.md\n. PR\n#5910\nby\n@junah201\n.\n:globe_with_meridians: Add Turkish translation for\ndocs/tr/docs/alternatives.md\n. PR\n#10502\nby\n@alperiox\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/dependencies/index.md\n. PR\n#10989\nby\n@KaniKim\n.\n🌐 Add Korean translation for\n/docs/ko/docs/tutorial/body.md\n. PR\n#11000\nby\n@KaniKim\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/schema-extra-example.md\n. PR\n#4065\nby\n@luccasmmg\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/history-design-future.md\n. PR\n#11012\nby\n@hasansezertasan\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/resources/index.md\n. PR\n#11020\nby\n@hasansezertasan\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/how-to/index.md\n. PR\n#11021\nby\n@hasansezertasan\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/query-params.md\n. PR\n#10293\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/benchmarks.md\n. PR\n#10866\nby\n@nilslindemann\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/learn/index.md\n. PR\n#11014\nby\n@hasansezertasan\n.\n🌐 Add Persian translation for\ndocs/fa/docs/tutorial/security/index.md\n. PR\n#9945\nby\n@mojtabapaso\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/help/index.md\n. PR\n#11013\nby\n@hasansezertasan\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/about/index.md\n. PR\n#11006\nby\n@hasansezertasan\n.\n🌐 Update Turkish translation for\ndocs/tr/docs/benchmarks.md\n. PR\n#11005\nby\n@hasansezertasan\n.\n🌐 Add Italian translation for\ndocs/it/docs/index.md\n. PR\n#5233\nby\n@matteospanio\n.\n🌐 Add Korean translation for\ndocs/ko/docs/help/index.md\n. PR\n#10983\nby\n@KaniKim\n.\n🌐 Add Korean translation for\ndocs/ko/docs/features.md\n. PR\n#10976\nby\n@KaniKim\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/security/get-current-user.md\n. PR\n#5737\nby\n@KdHyeon0661\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/security/first-steps.md\n. PR\n#10541\nby\n@AlertRED\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/handling-errors.md\n. PR\n#10375\nby\n@AlertRED\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/encoder.md\n. PR\n#10374\nby\n@AlertRED\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/body-updates.md\n. PR\n#10373\nby\n@AlertRED\n.\n🌐 Russian translation: updated\nfastapi-people.md\n.. PR\n#10255\nby\n@NiKuma0\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/security/index.md\n. PR\n#5798\nby\n@3w36zj6\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/generate-clients.md\n. PR\n#10725\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/openapi-webhooks.md\n. PR\n#10712\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/custom-response.md\n. PR\n#10624\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/advanced/additional-status-codes.md\n. PR\n#10617\nby\n@nilslindemann\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/middleware.md\n. PR\n#10391\nby\n@JohannesJungbluth\n.\n🌐 Add German translation for introduction documents. PR\n#10497\nby\n@nilslindemann\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/encoder.md\n. PR\n#1955\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/extra-data-types.md\n. PR\n#1932\nby\n@SwftAlpc\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/async.md\n. PR\n#5191\nby\n@BilalAlpaslan\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/project-generation.md\n. PR\n#5192\nby\n@BilalAlpaslan\n.\n🌐 Add Korean translation for\ndocs/ko/docs/deployment/docker.md\n. PR\n#5657\nby\n@nearnear\n.\n🌐 Add Korean translation for\ndocs/ko/docs/deployment/server-workers.md\n. PR\n#4935\nby\n@jujumilk3\n.\n🌐 Add Korean translation for\ndocs/ko/docs/deployment/index.md\n. PR\n#4561\nby\n@jujumilk3\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/path-operation-configuration.md\n. PR\n#3639\nby\n@jungsu-kwon\n.\n🌐 Modify the description of\nzh\n- Traditional Chinese. PR\n#10889\nby\n@cherinyy\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/static-files.md\n. PR\n#2957\nby\n@jeesang7\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/response-model.md\n. PR\n#2766\nby\n@hard-coders\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/body-multiple-params.md\n. PR\n#2461\nby\n@PandaHun\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/query-params-str-validations.md\n. PR\n#2415\nby\n@hard-coders\n.\n🌐 Add Korean translation for\ndocs/ko/docs/python-types.md\n. PR\n#2267\nby\n@jrim\n.\n🌐 Add Korean translation for\ndocs/ko/docs/tutorial/body-nested-models.md\n. PR\n#2506\nby\n@hard-coders\n.\n🌐 Add Korean translation for\ndocs/ko/docs/learn/index.md\n. PR\n#10977\nby\n@KaniKim\n.\n🌐 Initialize translations for Traditional Chinese. PR\n#10505\nby\n@hsuanchi\n.\n✏️ Tweak the german translation of\ndocs/de/docs/tutorial/index.md\n. PR\n#10962\nby\n@nilslindemann\n.\n✏️ Fix typo error in\ndocs/ko/docs/tutorial/path-params.md\n. PR\n#10758\nby\n@2chanhaeng\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/dependencies/dependencies-with-yield.md\n. PR\n#1961\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/dependencies/dependencies-in-path-operation-decorators.md\n. PR\n#1960\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/dependencies/sub-dependencies.md\n. PR\n#1959\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/background-tasks.md\n. PR\n#2668\nby\n@tokusumi\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/dependencies/index.md\nand\ndocs/ja/docs/tutorial/dependencies/classes-as-dependencies.md\n. PR\n#1958\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/response-model.md\n. PR\n#1938\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/body-multiple-params.md\n. PR\n#1903\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/path-params-numeric-validations.md\n. PR\n#1902\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/python-types.md\n. PR\n#1899\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/handling-errors.md\n. PR\n#1953\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/response-status-code.md\n. PR\n#1942\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/extra-models.md\n. PR\n#1941\nby\n@SwftAlpc\n.\n🌐 Add Japanese tranlsation for\ndocs/ja/docs/tutorial/schema-extra-example.md\n. PR\n#1931\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/body-nested-models.md\n. PR\n#1930\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/tutorial/body-fields.md\n. PR\n#1923\nby\n@SwftAlpc\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/index.md\n. PR\n#9502\nby\n@fhabers21\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/background-tasks.md\n. PR\n#10566\nby\n@nilslindemann\n.\n✏️ Fix typo in\ndocs/ru/docs/index.md\n. PR\n#10672\nby\n@Delitel-WEB\n.\n✏️ Fix typos in\ndocs/zh/docs/tutorial/extra-data-types.md\n. PR\n#10727\nby\n@HiemalBeryl\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/dependencies/classes-as-dependencies.md\n. PR\n#10410\nby\n@AlertRED\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#11074\nby\n@tiangolo\n.\n🔧 Update sponsors: add Coherence. PR\n#11066\nby\n@tiangolo\n.\n👷 Upgrade GitHub Action issue-manager. PR\n#11056\nby\n@tiangolo\n.\n🍱 Update sponsors: TalkPython badge. PR\n#11052\nby\n@tiangolo\n.\n🔧 Update sponsors: TalkPython badge image. PR\n#11048\nby\n@tiangolo\n.\n🔧 Update sponsors, remove Deta. PR\n#11041\nby\n@tiangolo\n.\n💄 Fix CSS breaking RTL languages (erroneously introduced by a previous RTL PR). PR\n#11039\nby\n@tiangolo\n.\n🔧 Add Italian to\nmkdocs.yml\n. PR\n#11016\nby\n@alejsdev\n.\n🔨 Verify\nmkdocs.yml\nlanguages in CI, update\ndocs.py\n. PR\n#11009\nby\n@tiangolo\n.\n🔧 Update config in\nlabel-approved.yml\nto accept translations with 1 reviewer. PR\n#11007\nby\n@alejsdev\n.\n👷 Add changes-requested handling in GitHub Action issue manager. PR\n#10971\nby\n@tiangolo\n.\n🔧  Group dependencies on dependabot updates. PR\n#10952\nby\n@Kludex\n.\n⬆ Bump actions/setup-python from 4 to 5. PR\n#10764\nby\n@dependabot[bot]\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.8.10 to 1.8.11. PR\n#10731\nby\n@dependabot[bot]\n.\n⬆ Bump dawidd6/action-download-artifact from 2.28.0 to 3.0.0. PR\n#10777\nby\n@dependabot[bot]\n.\n🔧  Add support for translations to languages with a longer code name, like\nzh-hant\n. PR\n#10950\nby\n@tiangolo\n.\n0.109.0\n¶\nFeatures\n¶\n✨ Add support for Python 3.12. PR\n#10666\nby\n@Jamim\n.\nUpgrades\n¶\n⬆️ Upgrade Starlette to >=0.35.0,<0.36.0. PR\n#10938\nby\n@tiangolo\n.\nDocs\n¶\n✏️ Fix typo in\ndocs/en/docs/alternatives.md\n. PR\n#10931\nby\n@s111d\n.\n📝 Replace\nemail\nwith\nusername\nin\ndocs_src/security/tutorial007\ncode examples. PR\n#10649\nby\n@nilslindemann\n.\n📝 Add VS Code tutorial link. PR\n#10592\nby\n@nilslindemann\n.\n📝 Add notes about Pydantic v2's new\n.model_dump()\n. PR\n#10929\nby\n@tiangolo\n.\n📝 Fix broken link in\ndocs/en/docs/tutorial/sql-databases.md\n. PR\n#10765\nby\n@HurSungYun\n.\n📝 Add External Link: FastAPI application monitoring made easy. PR\n#10917\nby\n@tiangolo\n.\n✨ Generate automatic language names for docs translations. PR\n#5354\nby\n@jakul\n.\n✏️ Fix typos in\ndocs/en/docs/alternatives.md\nand\ndocs/en/docs/tutorial/dependencies/index.md\n. PR\n#10906\nby\n@s111d\n.\n✏️ Fix typos in\ndocs/en/docs/tutorial/dependencies/dependencies-with-yield.md\n. PR\n#10834\nby\n@Molkree\n.\n📝 Add article: \"Building a RESTful API with FastAPI: Secure Signup and Login Functionality Included\". PR\n#9733\nby\n@dxphilo\n.\n📝 Add warning about lifecycle events with\nAsyncClient\n. PR\n#4167\nby\n@andrew-chang-dewitt\n.\n✏️ Fix typos in\n/docs/reference/exceptions.md\nand\n/en/docs/reference/status.md\n. PR\n#10809\nby\n@clarencepenz\n.\n✏️ Fix typo in\nopenapi-callbacks.md\n. PR\n#10673\nby\n@kayjan\n.\n✏️ Fix typo in\nfastapi/routing.py\n. PR\n#10520\nby\n@sepsh\n.\n📝 Replace HTTP code returned in case of existing user error in docs for testing. PR\n#4482\nby\n@TristanMarion\n.\n📝 Add blog for FastAPI & Supabase. PR\n#6018\nby\n@theinfosecguy\n.\n📝 Update example source files for SQL databases with SQLAlchemy. PR\n#9508\nby\n@s-mustafa\n.\n📝 Update code examples in docs for body, replace name\ncreate_item\nwith\nupdate_item\nwhen appropriate. PR\n#5913\nby\n@OttoAndrey\n.\n✏️ Fix typo in dependencies with yield source examples. PR\n#10847\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Bengali translation for\ndocs/bn/docs/index.md\n. PR\n#9177\nby\n@Fahad-Md-Kamal\n.\n✏️ Update Python version in\nindex.md\nin several languages. PR\n#10711\nby\n@tamago3keran\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/request-forms-and-files.md\n. PR\n#10347\nby\n@AlertRED\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/index.md\n. PR\n#10362\nby\n@rostik1410\n.\n✏️  Update Python version in\ndocs/ko/docs/index.md\n. PR\n#10680\nby\n@Eeap\n.\n🌐 Add Persian translation for\ndocs/fa/docs/features.md\n. PR\n#5887\nby\n@amirilf\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/additional-responses.md\n. PR\n#10325\nby\n@ShuibeiC\n.\n🌐 Fix typos in Russian translations for\ndocs/ru/docs/tutorial/background-tasks.md\n,\ndocs/ru/docs/tutorial/body-nested-models.md\n,\ndocs/ru/docs/tutorial/debugging.md\n,\ndocs/ru/docs/tutorial/testing.md\n. PR\n#10311\nby\n@AlertRED\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/request-files.md\n. PR\n#10332\nby\n@AlertRED\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/deployment/server-workers.md\n. PR\n#10292\nby\n@xzmeng\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/deployment/cloud.md\n. PR\n#10291\nby\n@xzmeng\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/deployment/manually.md\n. PR\n#10279\nby\n@xzmeng\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/deployment/https.md\n. PR\n#10277\nby\n@xzmeng\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/deployment/index.md\n. PR\n#10275\nby\n@xzmeng\n.\n🌐 Add German translation for\ndocs/de/docs/tutorial/first-steps.md\n. PR\n#9530\nby\n@fhabers21\n.\n🌐 Update Turkish translation for\ndocs/tr/docs/index.md\n. PR\n#10444\nby\n@hasansezertasan\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/learn/index.md\n. PR\n#10479\nby\n@KAZAMA-DREAM\n.\n🌐 Add Russian translation for\ndocs/ru/docs/learn/index.md\n. PR\n#10539\nby\n@AlertRED\n.\n🌐 Update SQLAlchemy instruction in Chinese translation\ndocs/zh/docs/tutorial/sql-databases.md\n. PR\n#9712\nby\n@Royc30ne\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/external-links.md\n. PR\n#10549\nby\n@hasansezertasan\n.\n🌐 Add Spanish translation for\ndocs/es/docs/learn/index.md\n. PR\n#10885\nby\n@pablocm83\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/body-fields.md\n. PR\n#10670\nby\n@ArtemKhymenko\n.\n🌐 Add Hungarian translation for\n/docs/hu/docs/index.md\n. PR\n#10812\nby\n@takacs\n.\n🌐 Add Turkish translation for\ndocs/tr/docs/newsletter.md\n. PR\n#10550\nby\n@hasansezertasan\n.\n🌐 Add Spanish translation for\ndocs/es/docs/help/index.md\n. PR\n#10907\nby\n@pablocm83\n.\n🌐 Add Spanish translation for\ndocs/es/docs/about/index.md\n. PR\n#10908\nby\n@pablocm83\n.\n🌐 Add Spanish translation for\ndocs/es/docs/resources/index.md\n. PR\n#10909\nby\n@pablocm83\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#10871\nby\n@tiangolo\n.\n👷 Upgrade custom GitHub Action comment-docs-preview-in-pr. PR\n#10916\nby\n@tiangolo\n.\n⬆️ Upgrade GitHub Action latest-changes. PR\n#10915\nby\n@tiangolo\n.\n👷 Upgrade GitHub Action label-approved. PR\n#10913\nby\n@tiangolo\n.\n⬆️ Upgrade GitHub Action label-approved. PR\n#10905\nby\n@tiangolo\n.\n0.108.0\n¶\nUpgrades\n¶\n⬆️ Upgrade Starlette to\n>=0.29.0,<0.33.0\n, update docs and usage of templates with new Starlette arguments. Remove pin of AnyIO\n>=3.7.1,<4.0.0\n, add support for AnyIO 4.x.x. PR\n#10846\nby\n@tiangolo\n.\n0.107.0\n¶\nUpgrades\n¶\n⬆️ Upgrade Starlette to 0.28.0. PR\n#9636\nby\n@adriangb\n.\nDocs\n¶\n📝 Add docs: Node.js script alternative to update OpenAPI for generated clients. PR\n#10845\nby\n@alejsdev\n.\n📝 Restructure Docs section in Contributing page. PR\n#10844\nby\n@alejsdev\n.\n0.106.0\n¶\nBreaking Changes\n¶\nUsing resources from dependencies with\nyield\nin background tasks is no longer supported.\nThis change is what supports the new features, read below. 🤓\nDependencies with\nyield\n,\nHTTPException\nand Background Tasks\n¶\nDependencies with\nyield\nnow can raise\nHTTPException\nand other exceptions after\nyield\n. 🎉\nRead the new docs here:\nDependencies with\nyield\nand\nHTTPException\n.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\ndata\n=\n{\n\"plumbus\"\n:\n{\n\"description\"\n:\n\"Freshly pickled plumbus\"\n,\n\"owner\"\n:\n\"Morty\"\n},\n\"portal-gun\"\n:\n{\n\"description\"\n:\n\"Gun to create portals\"\n,\n\"owner\"\n:\n\"Rick\"\n},\n}\nclass\nOwnerError\n(\nException\n):\npass\ndef\nget_username\n():\ntry\n:\nyield\n\"Rick\"\nexcept\nOwnerError\nas\ne\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\nf\n\"Owner error:\n{\ne\n}\n\"\n)\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nget_item\n(\nitem_id\n:\nstr\n,\nusername\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_username\n)]):\nif\nitem_id\nnot\nin\ndata\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nitem\n=\ndata\n[\nitem_id\n]\nif\nitem\n[\n\"owner\"\n]\n!=\nusername\n:\nraise\nOwnerError\n(\nusername\n)\nreturn\nitem\nBefore FastAPI 0.106.0, raising exceptions after\nyield\nwas not possible, the exit code in dependencies with\nyield\nwas executed\nafter\nthe response was sent, so\nException Handlers\nwould have already run.\nThis was designed this way mainly to allow using the same objects \"yielded\" by dependencies inside of background tasks, because the exit code would be executed after the background tasks were finished.\nNevertheless, as this would mean waiting for the response to travel through the network while unnecessarily holding a resource in a dependency with yield (for example a database connection), this was changed in FastAPI 0.106.0.\nAdditionally, a background task is normally an independent set of logic that should be handled separately, with its own resources (e.g. its own database connection).\nIf you used to rely on this behavior, now you should create the resources for background tasks inside the background task itself, and use internally only data that doesn't depend on the resources of dependencies with\nyield\n.\nFor example, instead of using the same database session, you would create a new database session inside of the background task, and you would obtain the objects from the database using this new session. And then instead of passing the object from the database as a parameter to the background task function, you would pass the ID of that object and then obtain the object again inside the background task function.\nThe sequence of execution before FastAPI 0.106.0 was like this diagram:\nTime flows from top to bottom. And each column is one of the parts interacting or executing code.\nsequenceDiagram\n\nparticipant client as Client\nparticipant handler as Exception handler\nparticipant dep as Dep with yield\nparticipant operation as Path Operation\nparticipant tasks as Background tasks\n\n    Note over client,tasks: Can raise exception for dependency, handled after response is sent\n    Note over client,operation: Can raise HTTPException and can change the response\n    client ->> dep: Start request\n    Note over dep: Run code up to yield\n    opt raise\n        dep -->> handler: Raise HTTPException\n        handler -->> client: HTTP error response\n        dep -->> dep: Raise other exception\n    end\n    dep ->> operation: Run dependency, e.g. DB session\n    opt raise\n        operation -->> dep: Raise HTTPException\n        dep -->> handler: Auto forward exception\n        handler -->> client: HTTP error response\n        operation -->> dep: Raise other exception\n        dep -->> handler: Auto forward exception\n    end\n    operation ->> client: Return response to client\n    Note over client,operation: Response is already sent, can't change it anymore\n    opt Tasks\n        operation -->> tasks: Send background tasks\n    end\n    opt Raise other exception\n        tasks -->> dep: Raise other exception\n    end\n    Note over dep: After yield\n    opt Handle other exception\n        dep -->> dep: Handle exception, can't change response. E.g. close DB session.\n    end\nThe new execution flow can be found in the docs:\nExecution of dependencies with\nyield\n.\nFeatures\n¶\n✨ Add support for raising exceptions (including\nHTTPException\n) in dependencies with\nyield\nin the exit code, do not support them in background tasks. PR\n#10831\nby\n@tiangolo\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#10567\nby\n@tiangolo\n.\n0.105.0\n¶\nFeatures\n¶\n✨ Add support for multiple Annotated annotations, e.g.\nAnnotated[str, Field(), Query()]\n. PR\n#10773\nby\n@tiangolo\n.\nRefactors\n¶\n🔥 Remove unused NoneType. PR\n#10774\nby\n@tiangolo\n.\nDocs\n¶\n📝 Tweak default suggested configs for generating clients. PR\n#10736\nby\n@tiangolo\n.\nInternal\n¶\n🔧 Update sponsors, add Scalar. PR\n#10728\nby\n@tiangolo\n.\n🔧 Update sponsors, add PropelAuth. PR\n#10760\nby\n@tiangolo\n.\n👷 Update build docs, verify README on CI. PR\n#10750\nby\n@tiangolo\n.\n🔧 Update sponsors, remove Fern. PR\n#10729\nby\n@tiangolo\n.\n🔧 Update sponsors, add Codacy. PR\n#10677\nby\n@tiangolo\n.\n🔧 Update sponsors, add Reflex. PR\n#10676\nby\n@tiangolo\n.\n📝 Update release notes, move and check latest-changes. PR\n#10588\nby\n@tiangolo\n.\n👷 Upgrade latest-changes GitHub Action. PR\n#10587\nby\n@tiangolo\n.\n0.104.1\n¶\nFixes\n¶\n📌 Pin Swagger UI version to 5.9.0 temporarily to handle a bug crashing it in 5.9.1. PR\n#10529\nby\n@alejandraklachquin\n.\nThis is not really a bug in FastAPI but in Swagger UI, nevertheless pinning the version will work while a solution is found on the\nSwagger UI side\n.\nDocs\n¶\n📝 Update data structure and render for external-links. PR\n#10495\nby\n@tiangolo\n.\n✏️ Fix link to SPDX license identifier in\ndocs/en/docs/tutorial/metadata.md\n. PR\n#10433\nby\n@worldworm\n.\n📝 Update example validation error from Pydantic v1 to match Pydantic v2 in\ndocs/en/docs/tutorial/path-params.md\n. PR\n#10043\nby\n@giuliowaitforitdavide\n.\n✏️ Fix typos in emoji docs and in some source examples. PR\n#10438\nby\n@afuetterer\n.\n✏️ Fix typo in\ndocs/en/docs/reference/dependencies.md\n. PR\n#10465\nby\n@suravshresth\n.\n✏️ Fix typos and rewordings in\ndocs/en/docs/tutorial/body-nested-models.md\n. PR\n#10468\nby\n@yogabonito\n.\n📝 Update docs, remove references to removed\npydantic.Required\nin\ndocs/en/docs/tutorial/query-params-str-validations.md\n. PR\n#10469\nby\n@yogabonito\n.\n✏️ Fix typo in\ndocs/en/docs/reference/index.md\n. PR\n#10467\nby\n@tarsil\n.\n🔥 Remove unnecessary duplicated docstrings. PR\n#10484\nby\n@tiangolo\n.\nInternal\n¶\n✏️ Update Pydantic links to dotenv support. PR\n#10511\nby\n@White-Mask\n.\n✏️ Update links in\ndocs/en/docs/async.md\nand\ndocs/zh/docs/async.md\nto make them relative. PR\n#10498\nby\n@hasnatsajid\n.\n✏️ Fix links in\ndocs/em/docs/async.md\n. PR\n#10507\nby\n@hasnatsajid\n.\n✏️ Fix typo in\ndocs/em/docs/index.md\n, Python 3.8. PR\n#10521\nby\n@kerriop\n.\n⬆ Bump pillow from 9.5.0 to 10.1.0. PR\n#10446\nby\n@dependabot[bot]\n.\n⬆ Update mkdocs-material requirement from <9.0.0,>=8.1.4 to >=8.1.4,<10.0.0. PR\n#5862\nby\n@dependabot[bot]\n.\n⬆ Bump mkdocs-material from 9.1.21 to 9.4.7. PR\n#10545\nby\n@dependabot[bot]\n.\n👷 Install MkDocs Material Insiders only when secrets are available, for Dependabot. PR\n#10544\nby\n@tiangolo\n.\n🔧 Update sponsors badges, Databento. PR\n#10519\nby\n@tiangolo\n.\n👷 Adopt Ruff format. PR\n#10517\nby\n@tiangolo\n.\n🔧 Add\nCITATION.cff\nfile for academic citations. PR\n#10496\nby\n@tiangolo\n.\n🐛 Fix overriding MKDocs theme lang in hook. PR\n#10490\nby\n@tiangolo\n.\n🔥 Drop/close Gitter chat. Questions should go to GitHub Discussions, free conversations to Discord.. PR\n#10485\nby\n@tiangolo\n.\n0.104.0\n¶\nFeatures\n¶\n✨ Add reference (code API) docs with PEP 727, add subclass with custom docstrings for\nBackgroundTasks\n, refactor docs structure. PR\n#10392\nby\n@tiangolo\n. New docs at\nFastAPI Reference - Code API\n.\nUpgrades\n¶\n⬆️ Drop support for Python 3.7, require Python 3.8 or above. PR\n#10442\nby\n@tiangolo\n.\nInternal\n¶\n⬆ Bump dawidd6/action-download-artifact from 2.27.0 to 2.28.0. PR\n#10268\nby\n@dependabot[bot]\n.\n⬆ Bump actions/checkout from 3 to 4. PR\n#10208\nby\n@dependabot[bot]\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.8.6 to 1.8.10. PR\n#10061\nby\n@dependabot[bot]\n.\n🔧 Update sponsors, Bump.sh images. PR\n#10381\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#10363\nby\n@tiangolo\n.\n0.103.2\n¶\nRefactors\n¶\n⬆️ Upgrade compatibility with Pydantic v2.4, new renamed functions and JSON Schema input/output models with default values. PR\n#10344\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/extra-data-types.md\n. PR\n#10132\nby\n@ArtemKhymenko\n.\n🌐 Fix typos in French translations for\ndocs/fr/docs/advanced/path-operation-advanced-configuration.md\n,\ndocs/fr/docs/alternatives.md\n,\ndocs/fr/docs/async.md\n,\ndocs/fr/docs/features.md\n,\ndocs/fr/docs/help-fastapi.md\n,\ndocs/fr/docs/index.md\n,\ndocs/fr/docs/python-types.md\n,\ndocs/fr/docs/tutorial/body.md\n,\ndocs/fr/docs/tutorial/first-steps.md\n,\ndocs/fr/docs/tutorial/query-params.md\n. PR\n#10154\nby\n@s-rigaud\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/async.md\n. PR\n#5591\nby\n@mkdir700\n.\n🌐 Update Chinese translation for\ndocs/tutorial/security/simple-oauth2.md\n. PR\n#3844\nby\n@jaystone776\n.\n🌐 Add Korean translation for\ndocs/ko/docs/deployment/cloud.md\n. PR\n#10191\nby\n@Sion99\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/deployment/https.md\n. PR\n#10298\nby\n@tamtam-fitness\n.\n🌐 Fix typo in Russian translation for\ndocs/ru/docs/tutorial/body-fields.md\n. PR\n#10224\nby\n@AlertRED\n.\n🌐 Add Polish translation for\ndocs/pl/docs/help-fastapi.md\n. PR\n#10121\nby\n@romabozhanovgithub\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/header-params.md\n. PR\n#10226\nby\n@AlertRED\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/deployment/versions.md\n. PR\n#10276\nby\n@xzmeng\n.\nInternal\n¶\n🔧 Update sponsors, remove Flint. PR\n#10349\nby\n@tiangolo\n.\n🔧 Rename label \"awaiting review\" to \"awaiting-review\" to simplify search queries. PR\n#10343\nby\n@tiangolo\n.\n🔧 Update sponsors, enable Svix (revert #10228). PR\n#10253\nby\n@tiangolo\n.\n🔧 Update sponsors, remove Svix. PR\n#10228\nby\n@tiangolo\n.\n🔧 Update sponsors, add Bump.sh. PR\n#10227\nby\n@tiangolo\n.\n0.103.1\n¶\nFixes\n¶\n📌 Pin AnyIO to < 4.0.0 to handle an incompatibility while upgrading to Starlette 0.31.1. PR\n#10194\nby\n@tiangolo\n.\nDocs\n¶\n✏️ Fix validation parameter name in docs, from\nregex\nto\npattern\n. PR\n#10085\nby\n@pablodorrio\n.\n✏️ Fix indent format in\ndocs/en/docs/deployment/server-workers.md\n. PR\n#10066\nby\n@tamtam-fitness\n.\n✏️ Fix Pydantic examples in tutorial for Python types. PR\n#9961\nby\n@rahulsalgare\n.\n✏️ Fix link to Pydantic docs in\ndocs/en/docs/tutorial/extra-data-types.md\n. PR\n#10155\nby\n@hasnatsajid\n.\n✏️ Fix typo in\ndocs/en/docs/tutorial/handling-errors.md\n. PR\n#10170\nby\n@poupapaa\n.\n✏️ Fix typo in\ndocs/en/docs/tutorial/dependencies/dependencies-in-path-operation-decorators.md\n. PR\n#10172\nby\n@ragul-kachiappan\n.\nTranslations\n¶\n🌐 Remove duplicate line in translation for\ndocs/pt/docs/tutorial/path-params.md\n. PR\n#10126\nby\n@LecoOliveira\n.\n🌐 Add Yoruba translation for\ndocs/yo/docs/index.md\n. PR\n#10033\nby\n@AfolabiOlaoluwa\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/python-types.md\n. PR\n#10080\nby\n@rostik1410\n.\n🌐 Add Vietnamese translations for\ndocs/vi/docs/tutorial/first-steps.md\nand\ndocs/vi/docs/tutorial/index.md\n. PR\n#10088\nby\n@magiskboy\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/alternatives.md\n. PR\n#10060\nby\n@whysage\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/index.md\n. PR\n#10079\nby\n@rostik1410\n.\n✏️ Fix typos in\ndocs/en/docs/how-to/separate-openapi-schemas.md\nand\ndocs/en/docs/tutorial/schema-extra-example.md\n. PR\n#10189\nby\n@xzmeng\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/generate-clients.md\n. PR\n#9883\nby\n@funny-cat-happy\n.\nRefactors\n¶\n✏️ Fix typos in comment in\nfastapi/applications.py\n. PR\n#10045\nby\n@AhsanSheraz\n.\n✅ Add missing test for OpenAPI examples, it was missing in coverage. PR\n#10188\nby\n@tiangolo\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#10186\nby\n@tiangolo\n.\n0.103.0\n¶\nFeatures\n¶\n✨ Add support for\nopenapi_examples\nin all FastAPI parameters. PR\n#10152\nby\n@tiangolo\n.\nNew docs:\nOpenAPI-specific examples\n.\nDocs\n¶\n📝 Add note to docs about Separate Input and Output Schemas with FastAPI version. PR\n#10150\nby\n@tiangolo\n.\n0.102.0\n¶\nFeatures\n¶\n✨ Add support for disabling the separation of input and output JSON Schemas in OpenAPI with Pydantic v2 with\nseparate_input_output_schemas=False\n. PR\n#10145\nby\n@tiangolo\n.\nNew docs\nSeparate OpenAPI Schemas for Input and Output or Not\n.\nThis PR also includes a new setup (internal tools) for generating screenshots for the docs.\nRefactors\n¶\n♻️ Refactor tests for new Pydantic 2.2.1. PR\n#10115\nby\n@tiangolo\n.\nDocs\n¶\n📝 Add new docs section, How To - Recipes, move docs that don't have to be read by everyone to How To. PR\n#10114\nby\n@tiangolo\n.\n📝 Update Advanced docs, add links to sponsor courses. PR\n#10113\nby\n@tiangolo\n.\n📝 Update docs for generating clients. PR\n#10112\nby\n@tiangolo\n.\n📝 Tweak MkDocs and add redirects. PR\n#10111\nby\n@tiangolo\n.\n📝 Restructure docs for cloud providers, include links to sponsors. PR\n#10110\nby\n@tiangolo\n.\nInternal\n¶\n🔧 Update sponsors, add Speakeasy. PR\n#10098\nby\n@tiangolo\n.\n0.101.1\n¶\nFixes\n¶\n✨ Add\nResponseValidationError\nprintable details, to show up in server error logs. PR\n#10078\nby\n@tiangolo\n.\nRefactors\n¶\n✏️ Fix typo in deprecation warnings in\nfastapi/params.py\n. PR\n#9854\nby\n@russbiggs\n.\n✏️ Fix typos in comments on internal code in\nfastapi/concurrency.py\nand\nfastapi/routing.py\n. PR\n#9590\nby\n@ElliottLarsen\n.\nDocs\n¶\n✏️ Fix typo in release notes. PR\n#9835\nby\n@francisbergin\n.\n📝 Add external article: Build an SMS Spam Classifier Serverless Database with FaunaDB and FastAPI. PR\n#9847\nby\n@adejumoridwan\n.\n📝 Fix typo in\ndocs/en/docs/contributing.md\n. PR\n#9878\nby\n@VicenteMerino\n.\n📝 Fix code highlighting in\ndocs/en/docs/tutorial/bigger-applications.md\n. PR\n#9806\nby\n@theonlykingpin\n.\nTranslations\n¶\n🌐 Add Japanese translation for\ndocs/ja/docs/deployment/concepts.md\n. PR\n#10062\nby\n@tamtam-fitness\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/deployment/server-workers.md\n. PR\n#10064\nby\n@tamtam-fitness\n.\n🌐 Update Japanese translation for\ndocs/ja/docs/deployment/docker.md\n. PR\n#10073\nby\n@tamtam-fitness\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/fastapi-people.md\n. PR\n#10059\nby\n@rostik1410\n.\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/cookie-params.md\n. PR\n#10032\nby\n@rostik1410\n.\n🌐 Add Russian translation for\ndocs/ru/docs/deployment/docker.md\n. PR\n#9971\nby\n@Xewus\n.\n🌐 Add Vietnamese translation for\ndocs/vi/docs/python-types.md\n. PR\n#10047\nby\n@magiskboy\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/dependencies/global-dependencies.md\n. PR\n#9970\nby\n@dudyaosuplayer\n.\n🌐 Add Urdu translation for\ndocs/ur/docs/benchmarks.md\n. PR\n#9974\nby\n@AhsanSheraz\n.\nInternal\n¶\n🔧 Add sponsor Porter. PR\n#10051\nby\n@tiangolo\n.\n🔧 Update sponsors, add Jina back as bronze sponsor. PR\n#10050\nby\n@tiangolo\n.\n⬆ Bump mypy from 1.4.0 to 1.4.1. PR\n#9756\nby\n@dependabot[bot]\n.\n⬆ Bump mkdocs-material from 9.1.17 to 9.1.21. PR\n#9960\nby\n@dependabot[bot]\n.\n0.101.0\n¶\nFeatures\n¶\n✨ Enable Pydantic's serialization mode for responses, add support for Pydantic's\ncomputed_field\n, better OpenAPI for response models, proper required attributes, better generated clients. PR\n#10011\nby\n@tiangolo\n.\nRefactors\n¶\n✅ Fix tests for compatibility with pydantic 2.1.1. PR\n#9943\nby\n@dmontagu\n.\n✅ Fix test error in Windows for\njsonable_encoder\n. PR\n#9840\nby\n@iudeen\n.\nUpgrades\n¶\n📌 Do not allow Pydantic 2.1.0 that breaks (require 2.1.1). PR\n#10012\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/security/index.md\n. PR\n#9963\nby\n@eVery1337\n.\n🌐 Remove Vietnamese note about missing translation. PR\n#9957\nby\n@tiangolo\n.\nInternal\n¶\n👷 Add GitHub Actions step dump context to debug external failures. PR\n#10008\nby\n@tiangolo\n.\n🔧 Restore MkDocs Material pin after the fix. PR\n#10001\nby\n@tiangolo\n.\n🔧 Update the Question template to ask for the Pydantic version. PR\n#10000\nby\n@tiangolo\n.\n📍 Update MkDocs Material dependencies. PR\n#9986\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#9999\nby\n@tiangolo\n.\n🐳 Update Dockerfile with compatibility versions, to upgrade later. PR\n#9998\nby\n@tiangolo\n.\n➕ Add pydantic-settings to FastAPI People dependencies. PR\n#9988\nby\n@tiangolo\n.\n♻️ Update FastAPI People logic with new Pydantic. PR\n#9985\nby\n@tiangolo\n.\n🍱 Update sponsors, Fern badge. PR\n#9982\nby\n@tiangolo\n.\n👷 Deploy docs to Cloudflare Pages. PR\n#9978\nby\n@tiangolo\n.\n🔧 Update sponsor Fern. PR\n#9979\nby\n@tiangolo\n.\n👷 Update CI debug mode with Tmate. PR\n#9977\nby\n@tiangolo\n.\n0.100.1\n¶\nFixes\n¶\n🐛 Replace\nMultHostUrl\nto\nAnyUrl\nfor compatibility with older versions of Pydantic v1. PR\n#9852\nby\n@Kludex\n.\nDocs\n¶\n📝 Update links for self-hosted Swagger UI, point to v5, for OpenAPI 31.0. PR\n#9834\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Ukrainian translation for\ndocs/uk/docs/tutorial/body.md\n. PR\n#4574\nby\n@ss-o-furda\n.\n🌐 Add Vietnamese translation for\ndocs/vi/docs/features.md\nand\ndocs/vi/docs/index.md\n. PR\n#3006\nby\n@magiskboy\n.\n🌐 Add Korean translation for\ndocs/ko/docs/async.md\n. PR\n#4179\nby\n@NinaHwang\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/tutorial/background-tasks.md\n. PR\n#9812\nby\n@wdh99\n.\n🌐 Add French translation for\ndocs/fr/docs/tutorial/query-params-str-validations.md\n. PR\n#4075\nby\n@Smlep\n.\n🌐 Add French translation for\ndocs/fr/docs/tutorial/index.md\n. PR\n#2234\nby\n@JulianMaurin\n.\n🌐 Add French translation for\ndocs/fr/docs/contributing.md\n. PR\n#2132\nby\n@JulianMaurin\n.\n🌐 Add French translation for\ndocs/fr/docs/benchmarks.md\n. PR\n#2155\nby\n@clemsau\n.\n🌐 Update Chinese translations with new source files. PR\n#9738\nby\n@mahone3297\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/request-forms.md\n. PR\n#9841\nby\n@dedkot01\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/handling-errors.md\n. PR\n#9485\nby\n@Creat55\n.\nInternal\n¶\n🔧 Update sponsors, add Fern. PR\n#9956\nby\n@tiangolo\n.\n👷 Update FastAPI People token. PR\n#9844\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#9775\nby\n@tiangolo\n.\n👷 Update MkDocs Material token. PR\n#9843\nby\n@tiangolo\n.\n👷 Update token for latest changes. PR\n#9842\nby\n@tiangolo\n.\n0.100.0\n¶\n✨ Support for\nPydantic v2\n✨\nPydantic version 2 has the\ncore\nre-written in\nRust\nand includes a lot of improvements and features, for example:\nImproved\ncorrectness\nin corner cases.\nSafer\ntypes.\nBetter\nperformance\nand\nless energy\nconsumption.\nBetter\nextensibility\n.\netc.\n...all this while keeping the\nsame Python API\n. In most of the cases, for simple models, you can simply upgrade the Pydantic version and get all the benefits. 🚀\nIn some cases, for pure data validation and processing, you can get performance improvements of\n20x\nor more. This means 2,000% or more. 🤯\nWhen you use\nFastAPI\n, there's a lot more going on, processing the request and response, handling dependencies, executing\nyour own code\n, and particularly,\nwaiting for the network\n. But you will probably still get some nice performance improvements just from the upgrade.\nThe focus of this release is\ncompatibility\nwith Pydantic v1 and v2, to make sure your current apps keep working. Later there will be more focus on refactors, correctness, code improvements, and then\nperformance\nimprovements. Some third-party early beta testers that ran benchmarks on the beta releases of FastAPI reported improvements of\n2x - 3x\n. Which is not bad for just doing\npip install --upgrade fastapi pydantic\n. This was not an official benchmark and I didn't check it myself, but it's a good sign.\nMigration\n¶\nCheck out the\nPydantic migration guide\n.\nFor the things that need changes in your Pydantic models, the Pydantic team built\nbump-pydantic\n.\nA command line tool that will\nprocess your code\nand update most of the things\nautomatically\nfor you. Make sure you have your code in git first, and review each of the changes to make sure everything is correct before committing the changes.\nPydantic v1\n¶\nThis version of FastAPI still supports Pydantic v1\n. And although Pydantic v1 will be deprecated at some point, it will still be supported for a while.\nThis means that you can install the new Pydantic v2, and if something fails, you can install Pydantic v1 while you fix any problems you might have, but having the latest FastAPI.\nThere are\ntests for both Pydantic v1 and v2\n, and test\ncoverage\nis kept at\n100%\n.\nChanges\n¶\nThere are\nnew parameter\nfields supported by Pydantic\nField()\nfor:\nPath()\nQuery()\nHeader()\nCookie()\nBody()\nForm()\nFile()\nThe new parameter fields are:\ndefault_factory\nalias_priority\nvalidation_alias\nserialization_alias\ndiscriminator\nstrict\nmultiple_of\nallow_inf_nan\nmax_digits\ndecimal_places\njson_schema_extra\n...you can read about them in the Pydantic docs.\nThe parameter\nregex\nhas been deprecated and replaced by\npattern\n.\nYou can read more about it in the docs for\nQuery Parameters and String Validations: Add regular expressions\n.\nNew Pydantic models use an improved and simplified attribute\nmodel_config\nthat takes a simple dict instead of an internal class\nConfig\nfor their configuration.\nYou can read more about it in the docs for\nDeclare Request Example Data\n.\nThe attribute\nschema_extra\nfor the internal class\nConfig\nhas been replaced by the key\njson_schema_extra\nin the new\nmodel_config\ndict.\nYou can read more about it in the docs for\nDeclare Request Example Data\n.\nWhen you install\n\"fastapi[all]\"\nit now also includes:\npydantic-settings\n- for settings management.\npydantic-extra-types\n- for extra types to be used with Pydantic.\nNow Pydantic Settings is an additional optional package (included in\n\"fastapi[all]\"\n). To use settings you should now import\nfrom pydantic_settings import BaseSettings\ninstead of importing from\npydantic\ndirectly.\nYou can read more about it in the docs for\nSettings and Environment Variables\n.\nPR\n#9816\nby\n@tiangolo\n, included all the work done (in multiple PRs) on the beta branch (\nmain-pv2\n).\n0.99.1\n¶\nFixes\n¶\n🐛 Fix JSON Schema accepting bools as valid JSON Schemas, e.g.\nadditionalProperties: false\n. PR\n#9781\nby\n@tiangolo\n.\nDocs\n¶\n📝 Update source examples to use new JSON Schema examples field. PR\n#9776\nby\n@tiangolo\n.\n0.99.0\n¶\nFeatures\n¶\n✨ Add support for OpenAPI 3.1.0. PR\n#9770\nby\n@tiangolo\n.\nNew support for documenting\nwebhooks\n, read the new docs here:\nAdvanced User Guide: OpenAPI Webhooks\n.\nUpgrade OpenAPI 3.1.0, this uses JSON Schema 2020-12.\nUpgrade Swagger UI to version 5.x.x, that supports OpenAPI 3.1.0.\nUpdated\nexamples\nfield in\nQuery()\n,\nCookie()\n,\nBody()\n, etc. based on the latest JSON Schema and OpenAPI. Now it takes a list of examples and they are included directly in the JSON Schema, not outside. Read more about it (including the historical technical details) in the updated docs:\nTutorial: Declare Request Example Data\n.\n✨ Add support for\ndeque\nobjects and children in\njsonable_encoder\n. PR\n#9433\nby\n@cranium\n.\nDocs\n¶\n📝 Fix form for the FastAPI and friends newsletter. PR\n#9749\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Persian translation for\ndocs/fa/docs/advanced/sub-applications.md\n. PR\n#9692\nby\n@mojtabapaso\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/response-model.md\n. PR\n#9675\nby\n@glsglsgls\n.\nInternal\n¶\n🔨 Enable linenums in MkDocs Material during local live development to simplify highlighting code. PR\n#9769\nby\n@tiangolo\n.\n⬆ Update httpx requirement from <0.24.0,>=0.23.0 to >=0.23.0,<0.25.0. PR\n#9724\nby\n@dependabot[bot]\n.\n⬆ Bump mkdocs-material from 9.1.16 to 9.1.17. PR\n#9746\nby\n@dependabot[bot]\n.\n🔥 Remove missing translation dummy pages, no longer necessary. PR\n#9751\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#9259\nby\n@pre-commit-ci[bot]\n.\n✨ Add Material for MkDocs Insiders features and cards. PR\n#9748\nby\n@tiangolo\n.\n🔥 Remove languages without translations. PR\n#9743\nby\n@tiangolo\n.\n✨ Refactor docs for building scripts, use MkDocs hooks, simplify (remove) configs for languages. PR\n#9742\nby\n@tiangolo\n.\n🔨 Add MkDocs hook that renames sections based on the first index file. PR\n#9737\nby\n@tiangolo\n.\n👷 Make cron jobs run only on main repo, not on forks, to avoid error notifications from missing tokens. PR\n#9735\nby\n@tiangolo\n.\n🔧 Update MkDocs for other languages. PR\n#9734\nby\n@tiangolo\n.\n👷 Refactor Docs CI, run in multiple workers with a dynamic matrix to optimize speed. PR\n#9732\nby\n@tiangolo\n.\n🔥 Remove old internal GitHub Action watch-previews that is no longer needed. PR\n#9730\nby\n@tiangolo\n.\n⬆️ Upgrade MkDocs and MkDocs Material. PR\n#9729\nby\n@tiangolo\n.\n👷 Build and deploy docs only on docs changes. PR\n#9728\nby\n@tiangolo\n.\n0.98.0\n¶\nFeatures\n¶\n✨ Allow disabling\nredirect_slashes\nat the FastAPI app level. PR\n#3432\nby\n@cyberlis\n.\nDocs\n¶\n📝 Update docs on Pydantic using ujson internally. PR\n#5804\nby\n@mvasilkov\n.\n✏ Rewording in\ndocs/en/docs/tutorial/debugging.md\n. PR\n#9581\nby\n@ivan-abc\n.\n📝 Add german blog post (Domain-driven Design mit Python und FastAPI). PR\n#9261\nby\n@msander\n.\n✏️ Tweak wording in\ndocs/en/docs/tutorial/security/index.md\n. PR\n#9561\nby\n@jyothish-mohan\n.\n📝 Update\nAnnotated\nnotes in\ndocs/en/docs/tutorial/schema-extra-example.md\n. PR\n#9620\nby\n@Alexandrhub\n.\n✏️ Fix typo\nAnnotation\n->\nAnnotated\nin\ndocs/en/docs/tutorial/query-params-str-validations.md\n. PR\n#9625\nby\n@mccricardo\n.\n📝 Use in memory database for testing SQL in docs. PR\n#1223\nby\n@HarshaLaxman\n.\nTranslations\n¶\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/metadata.md\n. PR\n#9681\nby\n@TabarakoAkula\n.\n🌐 Fix typo in Spanish translation for\ndocs/es/docs/tutorial/first-steps.md\n. PR\n#9571\nby\n@lilidl-nft\n.\n🌐 Add Russian translation for\ndocs/tutorial/path-operation-configuration.md\n. PR\n#9696\nby\n@TabarakoAkula\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/security/index.md\n. PR\n#9666\nby\n@lordqyxz\n.\n🌐 Add Chinese translations for\ndocs/zh/docs/advanced/settings.md\n. PR\n#9652\nby\n@ChoyeonChern\n.\n🌐 Add Chinese translations for\ndocs/zh/docs/advanced/websockets.md\n. PR\n#9651\nby\n@ChoyeonChern\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/tutorial/testing.md\n. PR\n#9641\nby\n@wdh99\n.\n🌐 Add Russian translation for\ndocs/tutorial/extra-models.md\n. PR\n#9619\nby\n@ivan-abc\n.\n🌐 Add Russian translation for\ndocs/tutorial/cors.md\n. PR\n#9608\nby\n@ivan-abc\n.\n🌐 Add Polish translation for\ndocs/pl/docs/features.md\n. PR\n#5348\nby\n@mbroton\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/body-nested-models.md\n. PR\n#9605\nby\n@Alexandrhub\n.\nInternal\n¶\n⬆ Bump ruff from 0.0.272 to 0.0.275. PR\n#9721\nby\n@dependabot[bot]\n.\n⬆ Update uvicorn[standard] requirement from <0.21.0,>=0.12.0 to >=0.12.0,<0.23.0. PR\n#9463\nby\n@dependabot[bot]\n.\n⬆ Bump mypy from 1.3.0 to 1.4.0. PR\n#9719\nby\n@dependabot[bot]\n.\n⬆ Update pre-commit requirement from <3.0.0,>=2.17.0 to >=2.17.0,<4.0.0. PR\n#9251\nby\n@dependabot[bot]\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.8.5 to 1.8.6. PR\n#9482\nby\n@dependabot[bot]\n.\n✏️ Fix tooltips for light/dark theme toggler in docs. PR\n#9588\nby\n@pankaj1707k\n.\n🔧 Set minimal hatchling version needed to build the package. PR\n#9240\nby\n@mgorny\n.\n📝 Add repo link to PyPI. PR\n#9559\nby\n@JacobCoffee\n.\n✏️ Fix typos in data for tests. PR\n#4958\nby\n@ryanrussell\n.\n🔧 Update sponsors, add Flint. PR\n#9699\nby\n@tiangolo\n.\n👷 Lint in CI only once, only with one version of Python, run tests with all of them. PR\n#9686\nby\n@tiangolo\n.\n0.97.0\n¶\nFeatures\n¶\n✨ Add support for\ndependencies\nin WebSocket routes. PR\n#4534\nby\n@paulo-raca\n.\n✨ Add exception handler for\nWebSocketRequestValidationError\n(which also allows to override it). PR\n#6030\nby\n@kristjanvalur\n.\nRefactors\n¶\n⬆️ Upgrade and fully migrate to Ruff, remove isort, includes a couple of tweaks suggested by the new version of Ruff. PR\n#9660\nby\n@tiangolo\n.\n♻️ Update internal type annotations and upgrade mypy. PR\n#9658\nby\n@tiangolo\n.\n♻️ Simplify\nAsyncExitStackMiddleware\nas without Python 3.6\nAsyncExitStack\nis always available. PR\n#9657\nby\n@tiangolo\n.\nUpgrades\n¶\n⬆️ Upgrade Black. PR\n#9661\nby\n@tiangolo\n.\nInternal\n¶\n💚 Update CI cache to fix installs when dependencies change. PR\n#9659\nby\n@tiangolo\n.\n⬇️ Separate requirements for development into their own requirements.txt files, they shouldn't be extras. PR\n#9655\nby\n@tiangolo\n.\n0.96.1\n¶\nFixes\n¶\n🐛 Fix\nHTTPException\nheader type annotations. PR\n#9648\nby\n@tiangolo\n.\n🐛 Fix OpenAPI model fields int validations,\ngte\nto\nge\n. PR\n#9635\nby\n@tiangolo\n.\nUpgrades\n¶\n📌 Update minimum version of Pydantic to >=1.7.4. This fixes an issue when trying to use an old version of Pydantic. PR\n#9567\nby\n@Kludex\n.\nRefactors\n¶\n♻ Remove\nmedia_type\nfrom\nORJSONResponse\nas it's inherited from the parent class. PR\n#5805\nby\n@Kludex\n.\n♻ Instantiate\nHTTPException\nonly when needed, optimization refactor. PR\n#5356\nby\n@pawamoy\n.\nDocs\n¶\n🔥 Remove link to Pydantic's benchmark, as it was removed there. PR\n#5811\nby\n@Kludex\n.\nTranslations\n¶\n🌐 Fix spelling in Indonesian translation of\ndocs/id/docs/tutorial/index.md\n. PR\n#5635\nby\n@purwowd\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/index.md\n. PR\n#5896\nby\n@Wilidon\n.\n🌐 Add Chinese translations for\ndocs/zh/docs/advanced/response-change-status-code.md\nand\ndocs/zh/docs/advanced/response-headers.md\n. PR\n#9544\nby\n@ChoyeonChern\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/schema-extra-example.md\n. PR\n#9621\nby\n@Alexandrhub\n.\nInternal\n¶\n🔧 Add sponsor Platform.sh. PR\n#9650\nby\n@tiangolo\n.\n👷 Add custom token to Smokeshow and Preview Docs for download-artifact, to prevent API rate limits. PR\n#9646\nby\n@tiangolo\n.\n👷 Add custom tokens for GitHub Actions to avoid rate limits. PR\n#9647\nby\n@tiangolo\n.\n0.96.0\n¶\nFeatures\n¶\n⚡ Update\ncreate_cloned_field\nto use a global cache and improve startup performance. PR\n#4645\nby\n@madkinsz\nand previous original PR by\n@huonw\n.\nDocs\n¶\n📝 Update Deta deployment tutorial for compatibility with Deta Space. PR\n#6004\nby\n@mikBighne98\n.\n✏️ Fix typo in Deta deployment tutorial. PR\n#9501\nby\n@lemonyte\n.\nTranslations\n¶\n🌐 Add Russian translation for\ndocs/tutorial/body.md\n. PR\n#3885\nby\n@solomein-sv\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/static-files.md\n. PR\n#9580\nby\n@Alexandrhub\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/query-params.md\n. PR\n#9584\nby\n@Alexandrhub\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/first-steps.md\n. PR\n#9471\nby\n@AGolicyn\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/debugging.md\n. PR\n#9579\nby\n@Alexandrhub\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/path-params.md\n. PR\n#9519\nby\n@AGolicyn\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/tutorial/static-files.md\n. PR\n#9436\nby\n@wdh99\n.\n🌐 Update Spanish translation including new illustrations in\ndocs/es/docs/async.md\n. PR\n#9483\nby\n@andresbermeoq\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/path-params-numeric-validations.md\n. PR\n#9563\nby\n@ivan-abc\n.\n🌐 Add Russian translation for\ndocs/ru/docs/deployment/concepts.md\n. PR\n#9577\nby\n@Xewus\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/body-multiple-params.md\n. PR\n#9586\nby\n@Alexandrhub\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#9602\nby\n@github-actions[bot]\n.\n🔧 Update sponsors, remove InvestSuite. PR\n#9612\nby\n@tiangolo\n.\n0.95.2\n¶\n⬆️ Upgrade Starlette version to\n>=0.27.0\nfor a security release. PR\n#9541\nby\n@tiangolo\n. Details on\nStarlette's security advisory\n.\nTranslations\n¶\n🌐 Add Portuguese translation for\ndocs/pt/docs/advanced/events.md\n. PR\n#9326\nby\n@oandersonmagalhaes\n.\n🌐 Add Russian translation for\ndocs/ru/docs/deployment/manually.md\n. PR\n#9417\nby\n@Xewus\n.\n🌐 Add setup for translations to Lao. PR\n#9396\nby\n@TheBrown\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/testing.md\n. PR\n#9403\nby\n@Xewus\n.\n🌐 Add Russian translation for\ndocs/ru/docs/deployment/https.md\n. PR\n#9428\nby\n@Xewus\n.\n✏ Fix command to install requirements in Windows. PR\n#9445\nby\n@MariiaRomanuik\n.\n🌐 Add French translation for\ndocs/fr/docs/advanced/response-directly.md\n. PR\n#9415\nby\n@axel584\n.\n🌐 Initiate Czech translation setup. PR\n#9288\nby\n@3p1463k\n.\n✏ Fix typo in Portuguese docs for\ndocs/pt/docs/index.md\n. PR\n#9337\nby\n@lucasbalieiro\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/response-status-code.md\n. PR\n#9370\nby\n@nadia3373\n.\nInternal\n¶\n🐛 Fix\nflask.escape\nwarning for internal tests. PR\n#9468\nby\n@samuelcolvin\n.\n✅ Refactor 2 tests, for consistency and simplification. PR\n#9504\nby\n@tiangolo\n.\n✅ Refactor OpenAPI tests, prepare for Pydantic v2. PR\n#9503\nby\n@tiangolo\n.\n⬆ Bump dawidd6/action-download-artifact from 2.26.0 to 2.27.0. PR\n#9394\nby\n@dependabot[bot]\n.\n💚 Disable setup-python pip cache in CI. PR\n#9438\nby\n@tiangolo\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.6.4 to 1.8.5. PR\n#9346\nby\n@dependabot[bot]\n.\n0.95.1\n¶\nFixes\n¶\n🐛 Fix using\nAnnotated\nin routers or path operations decorated multiple times. PR\n#9315\nby\n@sharonyogev\n.\nDocs\n¶\n🌐 🔠 📄 🐢 Translate docs to Emoji 🥳 🎉 💥 🤯 🤯. PR\n#5385\nby\n@LeeeeT\n.\n📝 Add notification message warning about old versions of FastAPI not supporting\nAnnotated\n. PR\n#9298\nby\n@grdworkin\n.\n📝 Fix typo in\ndocs/en/docs/advanced/behind-a-proxy.md\n. PR\n#5681\nby\n@Leommjr\n.\n✏ Fix wrong import from typing module in Persian translations for\ndocs/fa/docs/index.md\n. PR\n#6083\nby\n@Kimiaattaei\n.\n✏️ Fix format, remove unnecessary asterisks in\ndocs/en/docs/help-fastapi.md\n. PR\n#9249\nby\n@armgabrielyan\n.\n✏ Fix typo in\ndocs/en/docs/tutorial/query-params-str-validations.md\n. PR\n#9272\nby\n@nicornk\n.\n✏ Fix typo/bug in inline code example in\ndocs/en/docs/tutorial/query-params-str-validations.md\n. PR\n#9273\nby\n@tim-habitat\n.\n✏ Fix typo in\ndocs/en/docs/tutorial/path-params-numeric-validations.md\n. PR\n#9282\nby\n@aadarsh977\n.\n✏ Fix typo: 'wll' to 'will' in\ndocs/en/docs/tutorial/query-params-str-validations.md\n. PR\n#9380\nby\n@dasstyxx\n.\nTranslations\n¶\n🌐 Add French translation for\ndocs/fr/docs/advanced/index.md\n. PR\n#5673\nby\n@axel584\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/body-nested-models.md\n. PR\n#4053\nby\n@luccasmmg\n.\n🌐 Add Russian translation for\ndocs/ru/docs/alternatives.md\n. PR\n#5994\nby\n@Xewus\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/extra-models.md\n. PR\n#5912\nby\n@LorhanSohaky\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/path-operation-configuration.md\n. PR\n#5936\nby\n@LorhanSohaky\n.\n🌐 Add Russian translation for\ndocs/ru/docs/contributing.md\n. PR\n#6002\nby\n@stigsanek\n.\n🌐 Add Korean translation for\ndocs/tutorial/dependencies/classes-as-dependencies.md\n. PR\n#9176\nby\n@sehwan505\n.\n🌐 Add Russian translation for\ndocs/ru/docs/project-generation.md\n. PR\n#9243\nby\n@Xewus\n.\n🌐 Add French translation for\ndocs/fr/docs/index.md\n. PR\n#9265\nby\n@frabc\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/query-params-str-validations.md\n. PR\n#9267\nby\n@dedkot01\n.\n🌐 Add Russian translation for\ndocs/ru/docs/benchmarks.md\n. PR\n#9271\nby\n@Xewus\n.\nInternal\n¶\n🔧 Update sponsors: remove Jina. PR\n#9388\nby\n@tiangolo\n.\n🔧 Update sponsors, add databento, remove Ines's course and StriveWorks. PR\n#9351\nby\n@tiangolo\n.\n0.95.0\n¶\nHighlights\n¶\nThis release adds support for dependencies and parameters using\nAnnotated\nand recommends its usage. ✨\nThis has\nseveral benefits\n, one of the main ones is that now the parameters of your functions with\nAnnotated\nwould\nnot be affected\nat all.\nIf you call those functions in\nother places in your code\n, the actual\ndefault values\nwill be kept, your editor will help you notice missing\nrequired arguments\n, Python will require you to pass required arguments at\nruntime\n, you will be able to\nuse the same functions\nfor different things and with different libraries (e.g.\nTyper\nwill soon support\nAnnotated\ntoo, then you could use the same function for an API and a CLI), etc.\nBecause\nAnnotated\nis\nstandard Python\n, you still get all the\nbenefits\nfrom editors and tools, like\nautocompletion\n,\ninline errors\n, etc.\nOne of the\nbiggest benefits\nis that now you can create\nAnnotated\ndependencies that are then shared by multiple\npath operation functions\n, this will allow you to\nreduce\na lot of\ncode duplication\nin your codebase, while keeping all the support from editors and tools.\nFor example, you could have code like this:\ndef\nget_current_user\n(\ntoken\n:\nstr\n):\n# authenticate user\nreturn\nUser\n()\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n(\nuser\n:\nUser\n=\nDepends\n(\nget_current_user\n)):\n...\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\n*\n,\nuser\n:\nUser\n=\nDepends\n(\nget_current_user\n),\nitem\n:\nItem\n):\n...\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nread_item\n(\n*\n,\nuser\n:\nUser\n=\nDepends\n(\nget_current_user\n),\nitem_id\n:\nint\n):\n...\n@app\n.\ndelete\n(\n\"/items/\n{item_id}\n\"\n)\ndef\ndelete_item\n(\n*\n,\nuser\n:\nUser\n=\nDepends\n(\nget_current_user\n),\nitem_id\n:\nint\n):\n...\nThere's a bit of code duplication for the dependency:\nuser\n:\nUser\n=\nDepends\n(\nget_current_user\n)\n...the bigger the codebase, the more noticeable it is.\nNow you can create an annotated dependency once, like this:\nCurrentUser\n=\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]\nAnd then you can reuse this\nAnnotated\ndependency:\nCurrentUser\n=\nAnnotated\n[\nUser\n,\nDepends\n(\nget_current_user\n)]\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n(\nuser\n:\nCurrentUser\n):\n...\n@app\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nuser\n:\nCurrentUser\n,\nitem\n:\nItem\n):\n...\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nread_item\n(\nuser\n:\nCurrentUser\n,\nitem_id\n:\nint\n):\n...\n@app\n.\ndelete\n(\n\"/items/\n{item_id}\n\"\n)\ndef\ndelete_item\n(\nuser\n:\nCurrentUser\n,\nitem_id\n:\nint\n):\n...\n...and\nCurrentUser\nhas all the typing information as\nUser\n, so your editor will work as expected (autocompletion and everything), and\nFastAPI\nwill be able to understand the dependency defined in\nAnnotated\n. 😎\nRoughly\nall the docs\nhave been rewritten to use\nAnnotated\nas the main way to declare\nparameters\nand\ndependencies\n. All the\nexamples\nin the docs now include a version with\nAnnotated\nand a version without it, for each of the specific Python versions (when there are small differences/improvements in more recent versions). There were around 23K new lines added between docs, examples, and tests. 🚀\nThe key updated docs are:\nPython Types Intro:\nType Hints with Metadata Annotations\n.\nTutorial:\nQuery Parameters and String Validations - Additional validation\nAdvantages of\nAnnotated\nPath Parameters and Numeric Validations - Order the parameters as you need, tricks\nBetter with\nAnnotated\nDependencies - First Steps - Share\nAnnotated\ndependencies\nSpecial thanks to\n@nzig\nfor the core implementation and to\n@adriangb\nfor the inspiration and idea with\nXpresso\n! 🚀\nFeatures\n¶\n✨Add support for PEP-593\nAnnotated\nfor specifying dependencies and parameters. PR\n#4871\nby\n@nzig\n.\nDocs\n¶\n📝 Tweak tip recommending\nAnnotated\nin docs. PR\n#9270\nby\n@tiangolo\n.\n📝 Update order of examples, latest Python version first, and simplify version tab names. PR\n#9269\nby\n@tiangolo\n.\n📝 Update all docs to use\nAnnotated\nas the main recommendation, with new examples and tests. PR\n#9268\nby\n@tiangolo\n.\n0.94.1\n¶\nFixes\n¶\n🎨 Fix types for lifespan, upgrade Starlette to 0.26.1. PR\n#9245\nby\n@tiangolo\n.\n0.94.0\n¶\nUpgrades\n¶\n⬆ Upgrade python-multipart to support 0.0.6. PR\n#9212\nby\n@musicinmybrain\n.\n⬆️ Upgrade Starlette version, support new\nlifespan\nwith state. PR\n#9239\nby\n@tiangolo\n.\nDocs\n¶\n📝 Update Sentry link in docs. PR\n#9218\nby\n@smeubank\n.\nTranslations\n¶\n🌐 Add Russian translation for\ndocs/ru/docs/history-design-future.md\n. PR\n#5986\nby\n@Xewus\n.\nInternal\n¶\n➕ Add\npydantic\nto PyPI classifiers. PR\n#5914\nby\n@yezz123\n.\n⬆ Bump black from 22.10.0 to 23.1.0. PR\n#5953\nby\n@dependabot[bot]\n.\n⬆ Bump types-ujson from 5.6.0.0 to 5.7.0.1. PR\n#6027\nby\n@dependabot[bot]\n.\n⬆ Bump dawidd6/action-download-artifact from 2.24.3 to 2.26.0. PR\n#6034\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#5709\nby\n@pre-commit-ci[bot]\n.\n0.93.0\n¶\nFeatures\n¶\n✨ Add support for\nlifespan\nasync context managers (superseding\nstartup\nand\nshutdown\nevents). Initial PR\n#2944\nby\n@uSpike\n.\nNow, instead of using independent\nstartup\nand\nshutdown\nevents, you can define that logic in a single function with\nyield\ndecorated with\n@asynccontextmanager\n(an async context manager).\nFor example:\nfrom\ncontextlib\nimport\nasynccontextmanager\nfrom\nfastapi\nimport\nFastAPI\ndef\nfake_answer_to_everything_ml_model\n(\nx\n:\nfloat\n):\nreturn\nx\n*\n42\nml_models\n=\n{}\n@asynccontextmanager\nasync\ndef\nlifespan\n(\napp\n:\nFastAPI\n):\n# Load the ML model\nml_models\n[\n\"answer_to_everything\"\n]\n=\nfake_answer_to_everything_ml_model\nyield\n# Clean up the ML models and release the resources\nml_models\n.\nclear\n()\napp\n=\nFastAPI\n(\nlifespan\n=\nlifespan\n)\n@app\n.\nget\n(\n\"/predict\"\n)\nasync\ndef\npredict\n(\nx\n:\nfloat\n):\nresult\n=\nml_models\n[\n\"answer_to_everything\"\n](\nx\n)\nreturn\n{\n\"result\"\n:\nresult\n}\nNote\n: This is the recommended way going forward, instead of using\nstartup\nand\nshutdown\nevents.\nRead more about it in the new docs:\nAdvanced User Guide: Lifespan Events\n.\nDocs\n¶\n✏ Fix formatting in\ndocs/en/docs/tutorial/metadata.md\nfor\nReDoc\n. PR\n#6005\nby\n@eykamp\n.\nTranslations\n¶\n🌐 Tamil translations - initial setup. PR\n#5564\nby\n@gusty1g\n.\n🌐 Add French translation for\ndocs/fr/docs/advanced/path-operation-advanced-configuration.md\n. PR\n#9221\nby\n@axel584\n.\n🌐 Add French translation for\ndocs/tutorial/debugging.md\n. PR\n#9175\nby\n@frabc\n.\n🌐 Initiate Armenian translation setup. PR\n#5844\nby\n@har8\n.\n🌐 Add French translation for\ndeployment/manually.md\n. PR\n#3693\nby\n@rjNemo\n.\nInternal\n¶\n👷 Update translation bot messages. PR\n#9206\nby\n@tiangolo\n.\n👷 Update translations bot to use Discussions, and notify when a PR is done. PR\n#9183\nby\n@tiangolo\n.\n🔧 Update sponsors-badges. PR\n#9182\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#9181\nby\n@github-actions[bot]\n.\n🔊 Log GraphQL errors in FastAPI People, because it returns 200, with a payload with an error. PR\n#9171\nby\n@tiangolo\n.\n💚 Fix/workaround GitHub Actions in Docker with git for FastAPI People. PR\n#9169\nby\n@tiangolo\n.\n♻️ Refactor FastAPI Experts to use only discussions now that questions are migrated. PR\n#9165\nby\n@tiangolo\n.\n⬆️ Upgrade analytics. PR\n#6025\nby\n@tiangolo\n.\n⬆️ Upgrade and re-enable installing Typer-CLI. PR\n#6008\nby\n@tiangolo\n.\n0.92.0\n¶\n🚨 This is a security fix. Please upgrade as soon as possible.\nUpgrades\n¶\n⬆️ Upgrade Starlette to 0.25.0. PR\n#5996\nby\n@tiangolo\n.\nThis solves a vulnerability that could allow denial of service attacks by using many small multipart fields/files (parts), consuming high CPU and memory.\nOnly applications using forms (e.g. file uploads) could be affected.\nFor most cases, upgrading won't have any breaking changes.\n0.91.0\n¶\nUpgrades\n¶\n⬆️ Upgrade Starlette version to\n0.24.0\nand refactor internals for compatibility. PR\n#5985\nby\n@tiangolo\n.\nThis can solve nuanced errors when using middlewares. Before Starlette\n0.24.0\n, a new instance of each middleware class would be created when a new middleware was added. That normally was not a problem, unless the middleware class expected to be created only once, with only one instance, that happened in some cases. This upgrade would solve those cases (thanks\n@adriangb\n! Starlette PR\n#2017\n). Now the middleware class instances are created once, right before the first request (the first time the app is called).\nIf you depended on that previous behavior, you might need to update your code. As always, make sure your tests pass before merging the upgrade.\n0.90.1\n¶\nUpgrades\n¶\n⬆️ Upgrade Starlette range to allow 0.23.1. PR\n#5980\nby\n@tiangolo\n.\nDocs\n¶\n✏ Tweak wording to clarify\ndocs/en/docs/project-generation.md\n. PR\n#5930\nby\n@chandra-deb\n.\n✏ Update Pydantic GitHub URLs. PR\n#5952\nby\n@yezz123\n.\n📝 Add opinion from Cisco. PR\n#5981\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/cookie-params.md\n. PR\n#5890\nby\n@bnzone\n.\nInternal\n¶\n✏ Update\nzip-docs.sh\ninternal script, remove extra space. PR\n#5931\nby\n@JuanPerdomo00\n.\n0.90.0\n¶\nUpgrades\n¶\n⬆️ Bump Starlette from 0.22.0 to 0.23.0. Initial PR\n#5739\nby\n@Kludex\n.\nDocs\n¶\n📝 Add article \"Tortoise ORM / FastAPI 整合快速筆記\" to External Links. PR\n#5496\nby\n@Leon0824\n.\n👥 Update FastAPI People. PR\n#5954\nby\n@github-actions[bot]\n.\n📝 Micro-tweak help docs. PR\n#5960\nby\n@tiangolo\n.\n🔧 Update new issue chooser to direct to GitHub Discussions. PR\n#5948\nby\n@tiangolo\n.\n📝 Recommend GitHub Discussions for questions. PR\n#5944\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/body-fields.md\n. PR\n#5898\nby\n@simatheone\n.\n🌐 Add Russian translation for\ndocs/ru/docs/help-fastapi.md\n. PR\n#5970\nby\n@tiangolo\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/static-files.md\n. PR\n#5858\nby\n@batlopes\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/encoder.md\n. PR\n#5525\nby\n@felipebpl\n.\n🌐 Add Russian translation for\ndocs/ru/docs/contributing.md\n. PR\n#5870\nby\n@Xewus\n.\nInternal\n¶\n⬆️ Upgrade Ubuntu version for docs workflow. PR\n#5971\nby\n@tiangolo\n.\n🔧 Update sponsors badges. PR\n#5943\nby\n@tiangolo\n.\n✨ Compute FastAPI Experts including GitHub Discussions. PR\n#5941\nby\n@tiangolo\n.\n⬆️ Upgrade isort and update pre-commit. PR\n#5940\nby\n@tiangolo\n.\n🔧 Add template for questions in Discussions. PR\n#5920\nby\n@tiangolo\n.\n🔧 Update Sponsor Budget Insight to Powens. PR\n#5916\nby\n@tiangolo\n.\n🔧 Update GitHub Sponsors badge data. PR\n#5915\nby\n@tiangolo\n.\n0.89.1\n¶\nFixes\n¶\n🐛 Ignore Response classes on return annotation. PR\n#5855\nby\n@Kludex\n. See the new docs in the PR below.\nDocs\n¶\n📝 Update docs and examples for Response Model with Return Type Annotations, and update runtime error. PR\n#5873\nby\n@tiangolo\n. New docs at\nResponse Model - Return Type: Other Return Type Annotations\n.\n📝 Add External Link: FastAPI lambda container: serverless simplified. PR\n#5784\nby\n@rafrasenberg\n.\nTranslations\n¶\n🌐 Add Turkish translation for\ndocs/tr/docs/tutorial/first_steps.md\n. PR\n#5691\nby\n@Kadermiyanyedi\n.\n0.89.0\n¶\nFeatures\n¶\n✨ Add support for function return type annotations to declare the\nresponse_model\n. Initial PR\n#1436\nby\n@uriyyo\n.\nNow you can declare the return type /\nresponse_model\nin the function return type annotation:\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\nprice\n:\nfloat\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n()\n->\nlist\n[\nItem\n]:\nreturn\n[\nItem\n(\nname\n=\n\"Portal Gun\"\n,\nprice\n=\n42.0\n),\nItem\n(\nname\n=\n\"Plumbus\"\n,\nprice\n=\n32.0\n),\n]\nFastAPI will use the return type annotation to perform:\nData validation\nAutomatic documentation\nIt could power automatic client generators\nData filtering\nBefore this version it was only supported via the\nresponse_model\nparameter.\nRead more about it in the new docs:\nResponse Model - Return Type\n.\nDocs\n¶\n📝 Add External Link: Authorization on FastAPI with Casbin. PR\n#5712\nby\n@Xhy-5000\n.\n✏ Fix typo in\ndocs/en/docs/async.md\n. PR\n#5785\nby\n@Kingdageek\n.\n✏ Fix typo in\ndocs/en/docs/deployment/concepts.md\n. PR\n#5824\nby\n@kelbyfaessler\n.\nTranslations\n¶\n🌐 Add Russian translation for\ndocs/ru/docs/fastapi-people.md\n. PR\n#5577\nby\n@Xewus\n.\n🌐 Fix typo in Chinese translation for\ndocs/zh/docs/benchmarks.md\n. PR\n#4269\nby\n@15027668g\n.\n🌐 Add Korean translation for\ndocs/tutorial/cors.md\n. PR\n#3764\nby\n@NinaHwang\n.\nInternal\n¶\n⬆ Update coverage[toml] requirement from <7.0,>=6.5.0 to >=6.5.0,<8.0. PR\n#5801\nby\n@dependabot[bot]\n.\n⬆ Update uvicorn[standard] requirement from <0.19.0,>=0.12.0 to >=0.12.0,<0.21.0 for development. PR\n#5795\nby\n@dependabot[bot]\n.\n⬆ Bump dawidd6/action-download-artifact from 2.24.2 to 2.24.3. PR\n#5842\nby\n@dependabot[bot]\n.\n👥 Update FastAPI People. PR\n#5825\nby\n@github-actions[bot]\n.\n⬆ Bump types-ujson from 5.5.0 to 5.6.0.0. PR\n#5735\nby\n@dependabot[bot]\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.5.2 to 1.6.4. PR\n#5750\nby\n@dependabot[bot]\n.\n👷 Add GitHub Action gate/check. PR\n#5492\nby\n@webknjaz\n.\n🔧 Update sponsors, add Svix. PR\n#5848\nby\n@tiangolo\n.\n🔧 Remove Doist sponsor. PR\n#5847\nby\n@tiangolo\n.\n⬆ Update sqlalchemy requirement from <=1.4.41,>=1.3.18 to >=1.3.18,<1.4.43. PR\n#5540\nby\n@dependabot[bot]\n.\n⬆ Bump nwtgck/actions-netlify from 1.2.4 to 2.0.0. PR\n#5757\nby\n@dependabot[bot]\n.\n👷 Refactor CI artifact upload/download for docs previews. PR\n#5793\nby\n@tiangolo\n.\n⬆ Bump pypa/gh-action-pypi-publish from 1.5.1 to 1.5.2. PR\n#5714\nby\n@dependabot[bot]\n.\n👥 Update FastAPI People. PR\n#5722\nby\n@github-actions[bot]\n.\n🔧 Update sponsors, disable course bundle. PR\n#5713\nby\n@tiangolo\n.\n⬆ Update typer[all] requirement from <0.7.0,>=0.6.1 to >=0.6.1,<0.8.0. PR\n#5639\nby\n@dependabot[bot]\n.\n0.88.0\n¶\nUpgrades\n¶\n⬆ Bump Starlette to version\n0.22.0\nto fix bad encoding for query parameters in new\nTestClient\n. PR\n#5659\nby\n@azogue\n.\nDocs\n¶\n✏️ Fix typo in docs for\ndocs/en/docs/advanced/middleware.md\n. PR\n#5376\nby\n@rifatrakib\n.\nTranslations\n¶\n🌐 Add Portuguese translation for\ndocs/pt/docs/deployment/docker.md\n. PR\n#5663\nby\n@ayr-ton\n.\nInternal\n¶\n👷 Tweak build-docs to improve CI performance. PR\n#5699\nby\n@tiangolo\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#5566\nby\n@pre-commit-ci[bot]\n.\n⬆️ Upgrade Ruff. PR\n#5698\nby\n@tiangolo\n.\n👷 Remove pip cache for Smokeshow as it depends on a requirements.txt. PR\n#5700\nby\n@tiangolo\n.\n💚 Fix pip cache for Smokeshow. PR\n#5697\nby\n@tiangolo\n.\n👷 Fix and tweak CI cache handling. PR\n#5696\nby\n@tiangolo\n.\n👷 Update\nsetup-python\naction in tests to use new caching feature. PR\n#5680\nby\n@madkinsz\n.\n⬆ Bump black from 22.8.0 to 22.10.0. PR\n#5569\nby\n@dependabot[bot]\n.\n0.87.0\n¶\nHighlights of this release:\nUpgraded Starlette\nNow the\nTestClient\nis based on HTTPX instead of Requests. 🚀\nThere are some possible\nbreaking changes\nin the\nTestClient\nusage, but\n@Kludex\nbuilt\nbump-testclient\nto help you automatize migrating your tests. Make sure you are using Git and that you can undo any unnecessary changes (false positive changes, etc) before using\nbump-testclient\n.\nNew\nWebSocketException (and docs)\n, re-exported from Starlette.\nUpgraded and relaxed dependencies for package extras\nall\n(including new Uvicorn version), when you install\n\"fastapi[all]\"\n.\nNew docs about how to\nHelp Maintain FastAPI\n.\nFeatures\n¶\n⬆️ Upgrade and relax dependencies for extras \"all\". PR\n#5634\nby\n@tiangolo\n.\n✨ Re-export Starlette's\nWebSocketException\nand add it to docs. PR\n#5629\nby\n@tiangolo\n.\n📝 Update references to Requests for tests to HTTPX, and add HTTPX to extras. PR\n#5628\nby\n@tiangolo\n.\n⬆ Upgrade Starlette to\n0.21.0\n, including the new\nTestClient\nbased on HTTPX\n. PR\n#5471\nby\n@pawelrubin\n.\nDocs\n¶\n✏️ Tweak Help FastAPI from PR review after merging. PR\n#5633\nby\n@tiangolo\n.\n✏️  Clarify docs on CORS. PR\n#5627\nby\n@paxcodes\n.\n📝 Update Help FastAPI: Help Maintain FastAPI. PR\n#5632\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Fix highlight lines for Japanese translation for\ndocs/tutorial/query-params.md\n. PR\n#2969\nby\n@ftnext\n.\n🌐 Add French translation for\ndocs/fr/docs/advanced/additional-status-code.md\n. PR\n#5477\nby\n@axel584\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/request-forms-and-files.md\n. PR\n#5579\nby\n@batlopes\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/advanced/websockets.md\n. PR\n#4983\nby\n@xryuseix\n.\nInternal\n¶\n✨ Use Ruff for linting. PR\n#5630\nby\n@tiangolo\n.\n🛠 Add Arabic issue number to Notify Translations GitHub Action. PR\n#5610\nby\n@tiangolo\n.\n⬆ Bump dawidd6/action-download-artifact from 2.24.1 to 2.24.2. PR\n#5609\nby\n@dependabot[bot]\n.\n⬆ Bump dawidd6/action-download-artifact from 2.24.0 to 2.24.1. PR\n#5603\nby\n@dependabot[bot]\n.\n📝 Update coverage badge to use Samuel Colvin's Smokeshow. PR\n#5585\nby\n@tiangolo\n.\n0.86.0\n¶\nFeatures\n¶\n⬆ Add Python 3.11 to the officially supported versions. PR\n#5587\nby\n@tiangolo\n.\n✅ Enable tests for Python 3.11. PR\n#4881\nby\n@tiangolo\n.\nFixes\n¶\n🐛 Close FormData (uploaded files) after the request is done. PR\n#5465\nby\n@adriangb\n.\nDocs\n¶\n✏ Fix typo in\ndocs/en/docs/tutorial/security/oauth2-jwt.md\n. PR\n#5584\nby\n@vivekashok1221\n.\nTranslations\n¶\n🌐 Update wording in Chinese translation for\ndocs/zh/docs/python-types.md\n. PR\n#5416\nby\n@supercaizehua\n.\n🌐 Add Russian translation for\ndocs/ru/docs/deployment/index.md\n. PR\n#5336\nby\n@Xewus\n.\n🌐 Update Chinese translation for\ndocs/tutorial/security/oauth2-jwt.md\n. PR\n#3846\nby\n@jaystone776\n.\nInternal\n¶\n👷 Update FastAPI People to exclude bots: pre-commit-ci, dependabot. PR\n#5586\nby\n@tiangolo\n.\n🎨 Format OpenAPI JSON in\ntest_starlette_exception.py\n. PR\n#5379\nby\n@iudeen\n.\n👷 Switch from Codecov to Smokeshow plus pytest-cov to pure coverage for internal tests. PR\n#5583\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#5571\nby\n@github-actions[bot]\n.\n0.85.2\n¶\nDocs\n¶\n✏ Fix grammar and add helpful links to dependencies in\ndocs/en/docs/async.md\n. PR\n#5432\nby\n@pamelafox\n.\n✏ Fix broken link in\nalternatives.md\n. PR\n#5455\nby\n@su-shubham\n.\n✏ Fix typo in docs about contributing, for compatibility with\npip\nin Zsh. PR\n#5523\nby\n@zhangbo2012\n.\n📝 Fix typo in docs with examples for Python 3.10 instead of 3.9. PR\n#5545\nby\n@feliciss\n.\nTranslations\n¶\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/request-forms.md\n. PR\n#4934\nby\n@batlopes\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/tutorial/dependencies/classes-as-dependencies.md\n. PR\n#4971\nby\n@Zssaer\n.\n🌐 Add French translation for\ndeployment/deta.md\n. PR\n#3692\nby\n@rjNemo\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/query-params-str-validations.md\n. PR\n#5255\nby\n@hjlarry\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/tutorial/sql-databases.md\n. PR\n#4999\nby\n@Zssaer\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/advanced/wsgi.md\n. PR\n#4505\nby\n@ASpathfinder\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/body-multiple-params.md\n. PR\n#4111\nby\n@lbmendes\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/path-params-numeric-validations.md\n. PR\n#4099\nby\n@lbmendes\n.\n🌐 Add French translation for\ndeployment/versions.md\n. PR\n#3690\nby\n@rjNemo\n.\n🌐 Add French translation for\ndocs/fr/docs/help-fastapi.md\n. PR\n#2233\nby\n@JulianMaurin\n.\n🌐 Fix typo in Chinese translation for\ndocs/zh/docs/tutorial/security/first-steps.md\n. PR\n#5530\nby\n@yuki1sntSnow\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/response-status-code.md\n. PR\n#4922\nby\n@batlopes\n.\n🔧 Add config for Tamil translations. PR\n#5563\nby\n@tiangolo\n.\nInternal\n¶\n⬆ Bump internal dependency mypy from 0.971 to 0.982. PR\n#5541\nby\n@dependabot[bot]\n.\n⬆ Bump nwtgck/actions-netlify from 1.2.3 to 1.2.4. PR\n#5507\nby\n@dependabot[bot]\n.\n⬆ Bump internal dependency types-ujson from 5.4.0 to 5.5.0. PR\n#5537\nby\n@dependabot[bot]\n.\n⬆ Bump dawidd6/action-download-artifact from 2.23.0 to 2.24.0. PR\n#5508\nby\n@dependabot[bot]\n.\n⬆ Update internal dependency pytest-cov requirement from <4.0.0,>=2.12.0 to >=2.12.0,<5.0.0. PR\n#5539\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#5536\nby\n@pre-commit-ci[bot]\n.\n🐛 Fix internal Trio test warnings. PR\n#5547\nby\n@samuelcolvin\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#5408\nby\n@pre-commit-ci[bot]\n.\n⬆️ Upgrade Typer to include Rich in scripts for docs. PR\n#5502\nby\n@tiangolo\n.\n🐛 Fix calling\nmkdocs\nfor languages as a subprocess to fix/enable MkDocs Material search plugin. PR\n#5501\nby\n@tiangolo\n.\n0.85.1\n¶\nFixes\n¶\n🐛 Fix support for strings in OpenAPI status codes:\ndefault\n,\n1XX\n,\n2XX\n,\n3XX\n,\n4XX\n,\n5XX\n. PR\n#5187\nby\n@JarroVGIT\n.\nDocs\n¶\n📝 Add WayScript x FastAPI Tutorial to External Links section. PR\n#5407\nby\n@moneeka\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#5447\nby\n@github-actions[bot]\n.\n🔧 Disable Material for MkDocs search plugin. PR\n#5495\nby\n@tiangolo\n.\n🔇 Ignore Trio warning in tests for CI. PR\n#5483\nby\n@samuelcolvin\n.\n0.85.0\n¶\nFeatures\n¶\n⬆ Upgrade version required of Starlette from\n0.19.1\nto\n0.20.4\n. Initial PR\n#4820\nby\n@Kludex\n.\nThis includes several bug fixes in Starlette.\n⬆️ Upgrade Uvicorn max version in public extras: all. From\n>=0.12.0,<0.18.0\nto\n>=0.12.0,<0.19.0\n. PR\n#5401\nby\n@tiangolo\n.\nInternal\n¶\n⬆️ Upgrade dependencies for doc and dev internal extras: Typer, Uvicorn. PR\n#5400\nby\n@tiangolo\n.\n⬆️ Upgrade test dependencies: Black, HTTPX, databases, types-ujson. PR\n#5399\nby\n@tiangolo\n.\n⬆️ Upgrade mypy and tweak internal type annotations. PR\n#5398\nby\n@tiangolo\n.\n🔧 Update test dependencies, upgrade Pytest, move dependencies from dev to test. PR\n#5396\nby\n@tiangolo\n.\n0.84.0\n¶\nBreaking Changes\n¶\nThis version of FastAPI drops support for Python 3.6. 🔥 Please upgrade to a supported version of Python (3.7 or above), Python 3.6 reached the end-of-life a long time ago. 😅☠\n🔧 Update package metadata, drop support for Python 3.6, move build internals from Flit to Hatch. PR\n#5240\nby\n@ofek\n.\n0.83.0\n¶\n🚨 This is probably the last release (or one of the last releases) to support Python 3.6. 🔥\nPython 3.6 reached the\nend-of-life and is no longer supported by Python\nsince around a year ago.\nYou hopefully updated to a supported version of Python a while ago. If you haven't, you really should.\nFeatures\n¶\n✨ Add support in\njsonable_encoder\nfor include and exclude with dataclasses. PR\n#4923\nby\n@DCsunset\n.\nFixes\n¶\n🐛 Fix\nRuntimeError\nraised when\nHTTPException\nhas a status code with no content. PR\n#5365\nby\n@iudeen\n.\n🐛 Fix empty reponse body when default\nstatus_code\nis empty but the a\nResponse\nparameter with\nresponse.status_code\nis set. PR\n#5360\nby\n@tmeckel\n.\nDocs\n¶\n📝 Update\nSECURITY.md\n. PR\n#5377\nby\n@Kludex\n.\nInternal\n¶\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#5352\nby\n@pre-commit-ci[bot]\n.\n0.82.0\n¶\n🚨 This is probably the last release (or one of the last releases) to support Python 3.6. 🔥\nPython 3.6 reached the\nend-of-life and is no longer supported by Python\nsince around a year ago.\nYou hopefully updated to a supported version of Python a while ago. If you haven't, you really should.\nFeatures\n¶\n✨ Export\nWebSocketState\nin\nfastapi.websockets\n. PR\n#4376\nby\n@matiuszka\n.\n✨ Support Python internal description on Pydantic model's docstring. PR\n#3032\nby\n@Kludex\n.\n✨ Update\nORJSONResponse\nto support non\nstr\nkeys and serializing Numpy arrays. PR\n#3892\nby\n@baby5\n.\nFixes\n¶\n🐛 Allow exit code for dependencies with\nyield\nto always execute, by removing capacity limiter for them, to e.g. allow closing DB connections without deadlocks. PR\n#5122\nby\n@adriangb\n.\n🐛 Fix FastAPI People GitHub Action: set HTTPX timeout for GraphQL query request. PR\n#5222\nby\n@iudeen\n.\n🐛 Make sure a parameter defined as required is kept required in OpenAPI even if defined as optional in another dependency. PR\n#4319\nby\n@cd17822\n.\n🐛 Fix support for path parameters in WebSockets. PR\n#3879\nby\n@davidbrochart\n.\nDocs\n¶\n✏ Update Hypercorn link, now pointing to GitHub. PR\n#5346\nby\n@baconfield\n.\n✏ Tweak wording in\ndocs/en/docs/advanced/dataclasses.md\n. PR\n#3698\nby\n@pfackeldey\n.\n📝 Add note about Python 3.10\nX | Y\noperator in explanation about Response Models. PR\n#5307\nby\n@MendyLanda\n.\n📝 Add link to New Relic article: \"How to monitor FastAPI application performance using Python agent\". PR\n#5260\nby\n@sjyothi54\n.\n📝 Update docs for\nORJSONResponse\nwith details about improving performance. PR\n#2615\nby\n@falkben\n.\n📝 Add docs for creating a custom Response class. PR\n#5331\nby\n@tiangolo\n.\n📝 Add tip about using alias for form data fields. PR\n#5329\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Russian translation for\ndocs/ru/docs/features.md\n. PR\n#5315\nby\n@Xewus\n.\n🌐 Update Chinese translation for\ndocs/zh/docs/tutorial/request-files.md\n. PR\n#4529\nby\n@ASpathfinder\n.\n🌐 Add Chinese translation for\ndocs/zh/docs/tutorial/encoder.md\n. PR\n#4969\nby\n@Zssaer\n.\n🌐 Fix MkDocs file line for Portuguese translation of\nbackground-task.md\n. PR\n#5242\nby\n@ComicShrimp\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#5347\nby\n@github-actions[bot]\n.\n⬆ Bump dawidd6/action-download-artifact from 2.22.0 to 2.23.0. PR\n#5321\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#5318\nby\n@pre-commit-ci[bot]\n.\n✏ Fix a small code highlight line error. PR\n#5256\nby\n@hjlarry\n.\n♻ Internal small refactor, move\noperation_id\nparameter position in delete method for consistency with the code. PR\n#4474\nby\n@hiel\n.\n🔧 Update sponsors, disable ImgWhale. PR\n#5338\nby\n@tiangolo\n.\n0.81.0\n¶\nFeatures\n¶\n✨ Add ReDoc\n<noscript>\nwarning when JS is disabled. PR\n#5074\nby\n@evroon\n.\n✨ Add support for\nFrozenSet\nin parameters (e.g. query). PR\n#2938\nby\n@juntatalor\n.\n✨ Allow custom middlewares to raise\nHTTPException\ns and propagate them. PR\n#2036\nby\n@ghandic\n.\n✨ Preserve\njson.JSONDecodeError\ninformation when handling invalid JSON in request body, to support custom exception handlers that use its information. PR\n#4057\nby\n@UKnowWhoIm\n.\nFixes\n¶\n🐛 Fix\njsonable_encoder\nfor dataclasses with pydantic-compatible fields. PR\n#3607\nby\n@himbeles\n.\n🐛 Fix support for extending\nopenapi_extras\nwith parameter lists. PR\n#4267\nby\n@orilevari\n.\nDocs\n¶\n✏ Fix a simple typo in\ndocs/en/docs/python-types.md\n. PR\n#5193\nby\n@GlitchingCore\n.\n✏ Fix typos in\ntests/test_schema_extra_examples.py\n. PR\n#5126\nby\n@supraaxdd\n.\n✏ Fix typos in\ndocs/en/docs/tutorial/path-params-numeric-validations.md\n. PR\n#5142\nby\n@invisibleroads\n.\n📝 Add step about upgrading pip in the venv to avoid errors when installing dependencies\ndocs/en/docs/contributing.md\n. PR\n#5181\nby\n@edisnake\n.\n✏ Reword and clarify text in tutorial\ndocs/en/docs/tutorial/body-nested-models.md\n. PR\n#5169\nby\n@papb\n.\n✏ Fix minor typo in\ndocs/en/docs/features.md\n. PR\n#5206\nby\n@OtherBarry\n.\n✏ Fix minor typos in\ndocs/en/docs/async.md\n. PR\n#5125\nby\n@Ksenofanex\n.\n📝 Add external link to docs: \"Fastapi, Docker(Docker compose) and Postgres\". PR\n#5033\nby\n@krishnardt\n.\n📝 Simplify example for docs for Additional Responses, remove unnecessary\nelse\n. PR\n#4693\nby\n@adriangb\n.\n📝 Update docs, compare enums with identity instead of equality. PR\n#4905\nby\n@MicaelJarniac\n.\n✏ Fix typo in\ndocs/en/docs/python-types.md\n. PR\n#4886\nby\n@MicaelJarniac\n.\n🎨 Fix syntax highlighting in docs for OpenAPI Callbacks. PR\n#4368\nby\n@xncbf\n.\n✏ Reword confusing sentence in docs file\ntypo-fix-path-params-numeric-validations.md\n. PR\n#3219\nby\n@ccrenfroe\n.\n📝 Update docs for handling HTTP Basic Auth with\nsecrets.compare_digest()\nto account for non-ASCII characters. PR\n#3536\nby\n@lewoudar\n.\n📝 Update docs for testing, fix examples with relative imports. PR\n#5302\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Russian translation for\ndocs/ru/docs/index.md\n. PR\n#5289\nby\n@impocode\n.\n🌐 Add Russian translation for\ndocs/ru/docs/deployment/versions.md\n. PR\n#4985\nby\n@emp7yhead\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/header-params.md\n. PR\n#4921\nby\n@batlopes\n.\n🌐 Update\nko/mkdocs.yml\nfor a missing link. PR\n#5020\nby\n@dalinaum\n.\nInternal\n¶\n⬆ Bump dawidd6/action-download-artifact from 2.21.1 to 2.22.0. PR\n#5258\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#5196\nby\n@pre-commit-ci[bot]\n.\n🔥 Delete duplicated tests in\ntests/test_tutorial/test_sql_databases/test_sql_databases.py\n. PR\n#5040\nby\n@raccoonyy\n.\n♻ Simplify internal RegEx in\nfastapi/utils.py\n. PR\n#5057\nby\n@pylounge\n.\n🔧 Fix Type hint of\nauto_error\nwhich does not need to be\nOptional[bool]\n. PR\n#4933\nby\n@DavidKimDY\n.\n🔧 Update mypy config, use\nstrict = true\ninstead of manual configs. PR\n#4605\nby\n@michaeloliverx\n.\n♻ Change a\ndict()\nfor\n{}\nin\nfastapi/utils.py\n. PR\n#3138\nby\n@ShahriyarR\n.\n♻ Move internal variable for errors in\njsonable_encoder\nto put related code closer. PR\n#4560\nby\n@GuilleQP\n.\n♻ Simplify conditional assignment in\nfastapi/dependencies/utils.py\n. PR\n#4597\nby\n@cikay\n.\n⬆ Upgrade version pin accepted for Flake8, for internal code, to\nflake8 >=3.8.3,<6.0.0\n. PR\n#4097\nby\n@jamescurtin\n.\n🍱 Update Jina banner, fix typo. PR\n#5301\nby\n@tiangolo\n.\n0.80.0\n¶\nBreaking Changes - Fixes\n¶\n🐛 Fix\nresponse_model\nnot invalidating\nNone\n. PR\n#2725\nby\n@hukkin\n.\nIf you are using\nresponse_model\nwith some type that doesn't include\nNone\nbut the function is returning\nNone\n, it will now raise an internal server error, because you are returning invalid data that violates the contract in\nresponse_model\n. Before this release it would allow breaking that contract returning\nNone\n.\nFor example, if you have an app like this:\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\nprice\n:\nOptional\n[\nfloat\n]\n=\nNone\nowner_ids\n:\nOptional\n[\nList\n[\nint\n]]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/invalidnone\"\n,\nresponse_model\n=\nItem\n)\ndef\nget_invalid_none\n():\nreturn\nNone\n...calling the path\n/items/invalidnone\nwill raise an error, because\nNone\nis not a valid type for the\nresponse_model\ndeclared with\nItem\n.\nYou could also be implicitly returning\nNone\nwithout realizing, for example:\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\nprice\n:\nOptional\n[\nfloat\n]\n=\nNone\nowner_ids\n:\nOptional\n[\nList\n[\nint\n]]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/invalidnone\"\n,\nresponse_model\n=\nItem\n)\ndef\nget_invalid_none\n():\nif\nflag\n:\nreturn\n{\n\"name\"\n:\n\"foo\"\n}\n# if flag is False, at this point the function will implicitly return None\nIf you have\npath operations\nusing\nresponse_model\nthat need to be allowed to return\nNone\n, make it explicit in\nresponse_model\nusing\nUnion[Something, None]\n:\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\nprice\n:\nOptional\n[\nfloat\n]\n=\nNone\nowner_ids\n:\nOptional\n[\nList\n[\nint\n]]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/invalidnone\"\n,\nresponse_model\n=\nUnion\n[\nItem\n,\nNone\n])\ndef\nget_invalid_none\n():\nreturn\nNone\nThis way the data will be correctly validated, you won't have an internal server error, and the documentation will also reflect that this\npath operation\ncould return\nNone\n(or\nnull\nin JSON).\nFixes\n¶\n⬆ Upgrade Swagger UI copy of\noauth2-redirect.html\nto include fixes for flavors of authorization code flows in Swagger UI. PR\n#3439\ninitial PR by\n@koonpeng\n.\n♻ Strip empty whitespace from description extracted from docstrings. PR\n#2821\nby\n@and-semakin\n.\n🐛 Fix cached dependencies when using a dependency in\nSecurity()\nand other places (e.g.\nDepends()\n) with different OAuth2 scopes. PR\n#2945\nby\n@laggardkernel\n.\n🎨 Update type annotations for\nresponse_model\n, allow things like\nUnion[str, None]\n. PR\n#5294\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Fix typos in German translation for\ndocs/de/docs/features.md\n. PR\n#4533\nby\n@0xflotus\n.\n🌐 Add missing navigator for\nencoder.md\nin Korean translation. PR\n#5238\nby\n@joonas-yoon\n.\n(Empty PR merge by accident)\n#4913\n.\n0.79.1\n¶\nFixes\n¶\n🐛 Fix\njsonable_encoder\nusing\ninclude\nand\nexclude\nparameters for non-Pydantic objects. PR\n#2606\nby\n@xaviml\n.\n🐛 Fix edge case with repeated aliases names not shown in OpenAPI. PR\n#2351\nby\n@klaa97\n.\n📝 Add misc dependency installs to tutorial docs. PR\n#2126\nby\n@TeoZosa\n.\nDocs\n¶\n📝 Add note giving credit for illustrations to\nKetrina Thompson\n. PR\n#5284\nby\n@tiangolo\n.\n✏ Fix typo in\npython-types.md\n. PR\n#5116\nby\n@Kludex\n.\n✏ Fix typo in\ndocs/en/docs/python-types.md\n. PR\n#5007\nby\n@atiabbz\n.\n📝 Remove unneeded Django/Flask references from async topic intro. PR\n#5280\nby\n@carltongibson\n.\n✨ Add illustrations for Concurrent burgers and Parallel burgers. PR\n#5277\nby\n@tiangolo\n. Updated docs at:\nConcurrency and Burgers\n.\nTranslations\n¶\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/query-params.md\n. PR\n#4775\nby\n@batlopes\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/security/first-steps.md\n. PR\n#4954\nby\n@FLAIR7\n.\n🌐 Add translation for\ndocs/zh/docs/advanced/response-cookies.md\n. PR\n#4638\nby\n@zhangbo2012\n.\n🌐  Add French translation for\ndocs/fr/docs/deployment/index.md\n. PR\n#3689\nby\n@rjNemo\n.\n🌐 Add Portuguese translation for\ntutorial/handling-errors.md\n. PR\n#4769\nby\n@frnsimoes\n.\n🌐 Add French translation for\ndocs/fr/docs/history-design-future.md\n. PR\n#3451\nby\n@rjNemo\n.\n🌐 Add Russian translation for\ndocs/ru/docs/tutorial/background-tasks.md\n. PR\n#4854\nby\n@AdmiralDesu\n.\n🌐 Add Chinese translation for\ndocs/tutorial/security/first-steps.md\n. PR\n#3841\nby\n@jaystone776\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/advanced/nosql-databases.md\n. PR\n#4205\nby\n@sUeharaE4\n.\n🌐 Add Indonesian translation for\ndocs/id/docs/tutorial/index.md\n. PR\n#4705\nby\n@bas-baskara\n.\n🌐 Add Persian translation for\ndocs/fa/docs/index.md\nand tweak right-to-left CSS. PR\n#2395\nby\n@mohsen-mahmoodi\n.\nInternal\n¶\n🔧 Update Jina sponsorship. PR\n#5283\nby\n@tiangolo\n.\n🔧 Update Jina sponsorship. PR\n#5272\nby\n@tiangolo\n.\n🔧 Update sponsors, Striveworks badge. PR\n#5179\nby\n@tiangolo\n.\n0.79.0\n¶\nFixes - Breaking Changes\n¶\n🐛 Fix removing body from status codes that do not support it. PR\n#5145\nby\n@tiangolo\n.\nSetting\nstatus_code\nto\n204\n,\n304\n, or any code below\n200\n(1xx) will remove the body from the response.\nThis fixes an error in Uvicorn that otherwise would be thrown:\nRuntimeError: Response content longer than Content-Length\n.\nThis removes\nfastapi.openapi.constants.STATUS_CODES_WITH_NO_BODY\n, it is replaced by a function in utils.\nTranslations\n¶\n🌐 Start of Hebrew translation. PR\n#5050\nby\n@itay-raveh\n.\n🔧 Add config for Swedish translations notification. PR\n#5147\nby\n@tiangolo\n.\n🌐 Start of Swedish translation. PR\n#5062\nby\n@MrRawbin\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/advanced/index.md\n. PR\n#5043\nby\n@wakabame\n.\n🌐🇵🇱 Add Polish translation for\ndocs/pl/docs/tutorial/first-steps.md\n. PR\n#5024\nby\n@Valaraucoo\n.\nInternal\n¶\n🔧 Update translations notification for Hebrew. PR\n#5158\nby\n@tiangolo\n.\n🔧 Update Dependabot commit message. PR\n#5156\nby\n@tiangolo\n.\n⬆ Bump actions/upload-artifact from 2 to 3. PR\n#5148\nby\n@dependabot[bot]\n.\n⬆ Bump actions/cache from 2 to 3. PR\n#5149\nby\n@dependabot[bot]\n.\n🔧 Update sponsors badge configs. PR\n#5155\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#5154\nby\n@tiangolo\n.\n🔧 Update Jina sponsor badges. PR\n#5151\nby\n@tiangolo\n.\n⬆ Bump actions/checkout from 2 to 3. PR\n#5133\nby\n@dependabot[bot]\n.\n⬆ [pre-commit.ci] pre-commit autoupdate. PR\n#5030\nby\n@pre-commit-ci[bot]\n.\n⬆ Bump nwtgck/actions-netlify from 1.1.5 to 1.2.3. PR\n#5132\nby\n@dependabot[bot]\n.\n⬆ Bump codecov/codecov-action from 2 to 3. PR\n#5131\nby\n@dependabot[bot]\n.\n⬆ Bump dawidd6/action-download-artifact from 2.9.0 to 2.21.1. PR\n#5130\nby\n@dependabot[bot]\n.\n⬆ Bump actions/setup-python from 2 to 4. PR\n#5129\nby\n@dependabot[bot]\n.\n👷 Add Dependabot. PR\n#5128\nby\n@tiangolo\n.\n♻️ Move from\nOptional[X]\nto\nUnion[X, None]\nfor internal utils. PR\n#5124\nby\n@tiangolo\n.\n🔧 Update sponsors, remove Dropbase, add Doist. PR\n#5096\nby\n@tiangolo\n.\n🔧 Update sponsors, remove Classiq, add ImgWhale. PR\n#5079\nby\n@tiangolo\n.\n0.78.0\n¶\nFeatures\n¶\n✨ Add support for omitting\n...\nas default value when declaring required parameters with:\nPath()\nQuery()\nHeader()\nCookie()\nBody()\nForm()\nFile()\nNew docs at\nTutorial - Query Parameters and String Validations - Make it required\n. PR\n#4906\nby\n@tiangolo\n.\nUp to now, declaring a required parameter while adding additional validation or metadata needed using\n...\n(Ellipsis).\nFor example:\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\n,\nHeader\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nmain\n(\nitem_id\n:\nint\n=\nPath\n(\ndefault\n=...\n,\ngt\n=\n0\n),\nquery\n:\nstr\n=\nQuery\n(\ndefault\n=...\n,\nmax_length\n=\n10\n),\nsession\n:\nstr\n=\nCookie\n(\ndefault\n=...\n,\nmin_length\n=\n3\n),\nx_trace\n:\nstr\n=\nHeader\n(\ndefault\n=...\n,\ntitle\n=\n\"Tracing header\"\n),\n):\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\n...all these parameters are required because the default value is\n...\n(Ellipsis).\nBut now it's possible and supported to just omit the default value, as would be done with Pydantic fields, and the parameters would still be required.\n✨ For example, this is now supported:\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\n,\nHeader\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nmain\n(\nitem_id\n:\nint\n=\nPath\n(\ngt\n=\n0\n),\nquery\n:\nstr\n=\nQuery\n(\nmax_length\n=\n10\n),\nsession\n:\nstr\n=\nCookie\n(\nmin_length\n=\n3\n),\nx_trace\n:\nstr\n=\nHeader\n(\ntitle\n=\n\"Tracing header\"\n),\n):\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nTo declare parameters as optional (not required), you can set a default value as always, for example using\nNone\n:\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nFastAPI\n,\nHeader\n,\nPath\n,\nQuery\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nmain\n(\nitem_id\n:\nint\n=\nPath\n(\ngt\n=\n0\n),\nquery\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nQuery\n(\ndefault\n=\nNone\n,\nmax_length\n=\n10\n),\nsession\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nCookie\n(\ndefault\n=\nNone\n,\nmin_length\n=\n3\n),\nx_trace\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nHeader\n(\ndefault\n=\nNone\n,\ntitle\n=\n\"Tracing header\"\n),\n):\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nDocs\n¶\n📝 Add docs recommending\nUnion\nover\nOptional\nand migrate source examples. New docs at\nPython Types Intro - Using\nUnion\nor\nOptional\n. PR\n#4908\nby\n@tiangolo\n.\n🎨 Fix default value as set in tutorial for Path Operations Advanced Configurations. PR\n#4899\nby\n@tiangolo\n.\n📝 Add documentation for redefined path operations. PR\n#4864\nby\n@madkinsz\n.\n📝 Updates links for Celery documentation. PR\n#4736\nby\n@sammyzord\n.\n✏ Fix example code with sets in tutorial for body nested models. PR\n#3030\nby\n@hitrust\n.\n✏ Fix links to Pydantic docs. PR\n#4670\nby\n@kinuax\n.\n📝 Update docs about Swagger UI self-hosting with newer source links. PR\n#4813\nby\n@Kastakin\n.\n📝 Add link to external article: Building the Poll App From Django Tutorial With FastAPI And React. PR\n#4778\nby\n@jbrocher\n.\n📝 Add OpenAPI warning to \"Body - Fields\" docs with extra schema extensions. PR\n#4846\nby\n@ml-evs\n.\nTranslations\n¶\n🌐 Fix code examples in Japanese translation for\ndocs/ja/docs/tutorial/testing.md\n. PR\n#4623\nby\n@hirotoKirimaru\n.\nInternal\n¶\n♻ Refactor dict value extraction to minimize key lookups\nfastapi/utils.py\n. PR\n#3139\nby\n@ShahriyarR\n.\n✅ Add tests for required nonable parameters and body fields. PR\n#4907\nby\n@tiangolo\n.\n👷 Fix installing Material for MkDocs Insiders in CI. PR\n#4897\nby\n@tiangolo\n.\n👷 Add pre-commit CI instead of custom GitHub Action. PR\n#4896\nby\n@tiangolo\n.\n👷 Add pre-commit GitHub Action workflow. PR\n#4895\nby\n@tiangolo\n.\n📝 Add dark mode auto switch to docs based on OS preference. PR\n#4869\nby\n@ComicShrimp\n.\n🔥 Remove un-used old pending tests, already covered in other places. PR\n#4891\nby\n@tiangolo\n.\n🔧 Add Python formatting hooks to pre-commit. PR\n#4890\nby\n@tiangolo\n.\n🔧 Add pre-commit with first config and first formatting pass. PR\n#4888\nby\n@tiangolo\n.\n👷 Disable CI installing Material for MkDocs in forks. PR\n#4410\nby\n@dolfinus\n.\n0.77.1\n¶\nUpgrades\n¶\n⬆ Upgrade Starlette from 0.19.0 to 0.19.1. PR\n#4819\nby\n@Kludex\n.\nDocs\n¶\n📝 Add link to german article: REST-API Programmieren mittels Python und dem FastAPI Modul. PR\n#4624\nby\n@fschuermeyer\n.\n📝 Add external link: PyCharm Guide to FastAPI. PR\n#4512\nby\n@mukulmantosh\n.\n📝 Add external link to article: Building an API with FastAPI and Supabase and Deploying on Deta. PR\n#4440\nby\n@aUnicornDev\n.\n✏ Fix small typo in\ndocs/en/docs/tutorial/security/first-steps.md\n. PR\n#4515\nby\n@KikoIlievski\n.\nTranslations\n¶\n🌐 Add Polish translation for\ndocs/pl/docs/tutorial/index.md\n. PR\n#4516\nby\n@MKaczkow\n.\n✏ Fix typo in deployment. PR\n#4629\nby\n@raisulislam541\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/help-fastapi.md\n. PR\n#4583\nby\n@mateusjs\n.\nInternal\n¶\n🔧 Add notifications in issue for Uzbek translations. PR\n#4884\nby\n@tiangolo\n.\n0.77.0\n¶\nUpgrades\n¶\n⬆ Upgrade Starlette from 0.18.0 to 0.19.0. PR\n#4488\nby\n@Kludex\n.\nWhen creating an explicit\nJSONResponse\nthe\ncontent\nargument is now required.\nDocs\n¶\n📝 Add external link to article: Seamless FastAPI Configuration with ConfZ. PR\n#4414\nby\n@silvanmelchior\n.\n📝 Add external link to article: 5 Advanced Features of FastAPI You Should Try. PR\n#4436\nby\n@kaustubhgupta\n.\n✏ Reword to improve legibility of docs about\nTestClient\n. PR\n#4389\nby\n@rgilton\n.\n📝 Add external link to blog post about Kafka, FastAPI, and Ably. PR\n#4044\nby\n@Ugbot\n.\n✏ Fix typo in\ndocs/en/docs/tutorial/sql-databases.md\n. PR\n#4875\nby\n@wpyoga\n.\n✏ Fix typo in\ndocs/en/docs/async.md\n. PR\n#4726\nby\n@Prezu\n.\nTranslations\n¶\n🌐 Update source example highlights for\ndocs/zh/docs/tutorial/query-params-str-validations.md\n. PR\n#4237\nby\n@caimaoy\n.\n🌐 Remove translation docs references to aiofiles as it's no longer needed since AnyIO. PR\n#3594\nby\n@alonme\n.\n✏ 🌐 Fix typo in Portuguese translation for\ndocs/pt/docs/tutorial/path-params.md\n. PR\n#4722\nby\n@CleoMenezesJr\n.\n🌐 Fix live docs server for translations for some languages. PR\n#4729\nby\n@wakabame\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/cookie-params.md\n. PR\n#4112\nby\n@lbmendes\n.\n🌐 Fix French translation for\ndocs/tutorial/body.md\n. PR\n#4332\nby\n@Smlep\n.\n🌐 Add Japanese translation for\ndocs/ja/docs/advanced/conditional-openapi.md\n. PR\n#2631\nby\n@sh0nk\n.\n🌐 Fix Japanese translation of\ndocs/ja/docs/tutorial/body.md\n. PR\n#3062\nby\n@a-takahashi223\n.\n🌐 Add Portuguese translation for\ndocs/pt/docs/tutorial/background-tasks.md\n. PR\n#2170\nby\n@izaguerreiro\n.\n🌐 Add Portuguese translation for\ndocs/deployment/deta.md\n. PR\n#4442\nby\n@lsglucas\n.\n🌐 Add Russian translation for\ndocs/async.md\n. PR\n#4036\nby\n@Winand\n.\n🌐 Add Portuguese translation for\ndocs/tutorial/body.md\n. PR\n#3960\nby\n@leandrodesouzadev\n.\n🌐 Add Portuguese translation of\ntutorial/extra-data-types.md\n. PR\n#4077\nby\n@luccasmmg\n.\n🌐 Update German translation for\ndocs/features.md\n. PR\n#3905\nby\n@jomue\n.\n0.76.0\n¶\nUpgrades\n¶\n⬆ Upgrade Starlette from 0.17.1 to 0.18.0. PR\n#4483\nby\n@Kludex\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#4847\nby\n@github-actions[bot]\n.\n🔧 Add Budget Insight sponsor. PR\n#4824\nby\n@tiangolo\n.\n🍱 Update sponsor, ExoFlare badge. PR\n#4822\nby\n@tiangolo\n.\n🔧 Update sponsors, enable Dropbase again, update TalkPython link. PR\n#4821\nby\n@tiangolo\n.\n0.75.2\n¶\nThis release includes upgrades to third-party packages that handle security issues. Although there's a chance these issues don't affect you in particular, please upgrade as soon as possible.\nFixes\n¶\n✅ Fix new/recent tests with new fixed\nValidationError\nJSON Schema. PR\n#4806\nby\n@tiangolo\n.\n🐛 Fix JSON Schema for\nValidationError\nat field\nloc\n. PR\n#3810\nby\n@dconathan\n.\n🐛 Fix support for prefix on APIRouter WebSockets. PR\n#2640\nby\n@Kludex\n.\nUpgrades\n¶\n⬆️ Update ujson ranges for CVE-2021-45958. PR\n#4804\nby\n@tiangolo\n.\n⬆️ Upgrade dependencies upper range for extras \"all\". PR\n#4803\nby\n@tiangolo\n.\n⬆ Upgrade Swagger UI - swagger-ui-dist@4. This handles a security issue in Swagger UI itself where it could be possible to inject HTML into Swagger UI. Please upgrade as soon as you can, in particular if you expose your Swagger UI (\n/docs\n) publicly to non-expert users. PR\n#4347\nby\n@RAlanWright\n.\nInternal\n¶\n🔧 Update sponsors, add: ExoFlare, Ines Course; remove: Dropbase, Vim.so, Calmcode; update: Striveworks, TalkPython and TestDriven.io. PR\n#4805\nby\n@tiangolo\n.\n⬆️ Upgrade Codecov GitHub Action. PR\n#4801\nby\n@tiangolo\n.\n0.75.1\n¶\nTranslations\n¶\n🌐 Start Dutch translations. PR\n#4703\nby\n@tiangolo\n.\n🌐 Start Persian/Farsi translations. PR\n#4243\nby\n@aminalaee\n.\n✏ Reword sentence about handling errors. PR\n#1993\nby\n@khuhroproeza\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#4752\nby\n@github-actions[bot]\n.\n➖ Temporarily remove typer-cli from dependencies and upgrade Black to unblock Pydantic CI. PR\n#4754\nby\n@tiangolo\n.\n🔧 Add configuration to notify Dutch translations. PR\n#4702\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#4699\nby\n@github-actions[bot]\n.\n🐛 Fix FastAPI People generation to include missing file in commit. PR\n#4695\nby\n@tiangolo\n.\n🔧 Update Classiq sponsor links. PR\n#4688\nby\n@tiangolo\n.\n🔧 Add Classiq sponsor. PR\n#4671\nby\n@tiangolo\n.\n📝 Add Jina's QA Bot to the docs to help people that want to ask quick questions. PR\n#4655\nby\n@tiangolo\nbased on original PR\n#4626\nby\n@hanxiao\n.\n0.75.0\n¶\nFeatures\n¶\n✨ Add support for custom\ngenerate_unique_id_function\nand docs for generating clients. New docs:\nAdvanced - Generate Clients\n. PR\n#4650\nby\n@tiangolo\n.\n0.74.1\n¶\nFeatures\n¶\n✨ Include route in scope to allow middleware and other tools to extract its information. PR\n#4603\nby\n@tiangolo\n.\n0.74.0\n¶\nBreaking Changes\n¶\n✨ Update internal\nAsyncExitStack\nto fix context for dependencies with\nyield\n. PR\n#4575\nby\n@tiangolo\n.\nDependencies with\nyield\ncan now catch\nHTTPException\nand custom exceptions. For example:\nasync\ndef\nget_database\n():\nwith\nSession\n()\nas\nsession\n:\ntry\n:\nyield\nsession\nexcept\nHTTPException\n:\nsession\n.\nrollback\n()\nraise\nfinally\n:\nsession\n.\nclose\n()\nAfter the dependency with\nyield\nhandles the exception (or not) the exception is raised again. So that any exception handlers can catch it, or ultimately the default internal\nServerErrorMiddleware\n.\nIf you depended on exceptions not being received by dependencies with\nyield\n, and receiving an exception breaks the code after\nyield\n, you can use a block with\ntry\nand\nfinally\n:\nasync\ndef\ndo_something\n():\ntry\n:\nyield\nsomething\nfinally\n:\nsome_cleanup\n()\n...that way the\nfinally\nblock is run regardless of any exception that might happen.\nFeatures\n¶\nThe same PR\n#4575\nfrom above also fixes the\ncontextvars\ncontext for the code before and after\nyield\n. This was the main objective of that PR.\nThis means that now, if you set a value in a context variable before\nyield\n, the value would still be available after\nyield\n(as you would intuitively expect). And it also means that you can reset the context variable with a token afterwards.\nFor example, this works correctly now:\nfrom\ncontextvars\nimport\nContextVar\nfrom\ntyping\nimport\nAny\n,\nDict\n,\nOptional\nlegacy_request_state_context_var\n:\nContextVar\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]]\n=\nContextVar\n(\n\"legacy_request_state_context_var\"\n,\ndefault\n=\nNone\n)\nasync\ndef\nset_up_request_state_dependency\n():\nrequest_state\n=\n{\n\"user\"\n:\n\"deadpond\"\n}\ncontextvar_token\n=\nlegacy_request_state_context_var\n.\nset\n(\nrequest_state\n)\nyield\nrequest_state\nlegacy_request_state_context_var\n.\nreset\n(\ncontextvar_token\n)\n...before this change it would raise an error when resetting the context variable, because the\ncontextvars\ncontext was different, because of the way it was implemented.\nNote\n: You probably don't need\ncontextvars\n, and you should probably avoid using them. But they are powerful and useful in some advanced scenarios, for example, migrating from code that used Flask's\ng\nsemi-global variable.\nTechnical Details\n: If you want to know more of the technical details you can check out the PR description\n#4575\n.\nInternal\n¶\n🔧 Add Striveworks sponsor. PR\n#4596\nby\n@tiangolo\n.\n💚 Only build docs on push when on master to avoid duplicate runs from PRs. PR\n#4564\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#4502\nby\n@github-actions[bot]\n.\n0.73.0\n¶\nFeatures\n¶\n✨ Add support for declaring\nUploadFile\nparameters without explicit\nFile()\n. PR\n#4469\nby\n@tiangolo\n. New docs:\nRequest Files - File Parameters with UploadFile\n.\n✨ Add support for tags with Enums. PR\n#4468\nby\n@tiangolo\n. New docs:\nPath Operation Configuration - Tags with Enums\n.\n✨ Allow hiding from OpenAPI (and Swagger UI)\nQuery\n,\nCookie\n,\nHeader\n, and\nPath\nparameters. PR\n#3144\nby\n@astraldawn\n. New docs:\nQuery Parameters and String Validations - Exclude from OpenAPI\n.\nDocs\n¶\n📝 Tweak and improve docs for Request Files. PR\n#4470\nby\n@tiangolo\n.\nFixes\n¶\n🐛 Fix bug preventing to use OpenAPI when using tuples. PR\n#3874\nby\n@victorbenichoux\n.\n🐛 Prefer custom encoder over defaults if specified in\njsonable_encoder\n. PR\n#2061\nby\n@viveksunder\n.\n💚 Duplicate PR to trigger CI. PR\n#4467\nby\n@tiangolo\n.\nInternal\n¶\n🐛 Fix docs dependencies cache, to get the latest Material for MkDocs. PR\n#4466\nby\n@tiangolo\n.\n🔧 Add sponsor Dropbase. PR\n#4465\nby\n@tiangolo\n.\n0.72.0\n¶\nFeatures\n¶\n✨ Enable configuring Swagger UI parameters. Original PR\n#2568\nby\n@jmriebold\n. Here are the new docs:\nConfiguring Swagger UI\n.\nDocs\n¶\n📝 Update Python Types docs, add missing 3.6 / 3.9 example. PR\n#4434\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Update Chinese translation for\ndocs/help-fastapi.md\n. PR\n#3847\nby\n@jaystone776\n.\n🌐 Fix Korean translation for\ndocs/ko/docs/index.md\n. PR\n#4195\nby\n@kty4119\n.\n🌐 Add Polish translation for\ndocs/pl/docs/index.md\n. PR\n#4245\nby\n@MicroPanda123\n.\n🌐 Add Chinese translation for\ndocs\\tutorial\\path-operation-configuration.md\n. PR\n#3312\nby\n@jaystone776\n.\nInternal\n¶\n🔧 Enable MkDocs Material Insiders'\ncontent.tabs.link\n. PR\n#4399\nby\n@tiangolo\n.\n0.71.0\n¶\nFeatures\n¶\n✨ Add docs and tests for Python 3.9 and Python 3.10. PR\n#3712\nby\n@tiangolo\n.\nYou can start with\nPython Types Intro\n, it explains what changes between different Python versions, in Python 3.9 and in Python 3.10.\nAll the FastAPI docs are updated. Each code example in the docs that could use different syntax in Python 3.9 or Python 3.10 now has all the alternatives in tabs.\n⬆️ Upgrade Starlette to 0.17.1. PR\n#4145\nby\n@simondale00\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#4354\nby\n@github-actions[bot]\n.\n🔧 Add FastAPI Trove Classifier for PyPI as now there's one 🤷😁. PR\n#4386\nby\n@tiangolo\n.\n⬆ Upgrade MkDocs Material and configs. PR\n#4385\nby\n@tiangolo\n.\n0.70.1\n¶\nThere's nothing interesting in this particular FastAPI release. It is mainly to enable/unblock the release of the next version of Pydantic that comes packed with features and improvements. 🤩\nFixes\n¶\n🐛 Fix JSON Schema for dataclasses, supporting the fixes in Pydantic 1.9. PR\n#4272\nby\n@PrettyWood\n.\nTranslations\n¶\n🌐 Add Korean translation for\ndocs/tutorial/request-forms-and-files.md\n. PR\n#3744\nby\n@NinaHwang\n.\n🌐 Add Korean translation for\ndocs/tutorial/request-files.md\n. PR\n#3743\nby\n@NinaHwang\n.\n🌐 Add portuguese translation for\ndocs/tutorial/query-params-str-validations.md\n. PR\n#3965\nby\n@leandrodesouzadev\n.\n🌐 Add Korean translation for\ndocs/tutorial/response-status-code.md\n. PR\n#3742\nby\n@NinaHwang\n.\n🌐 Add Korean translation for Tutorial - JSON Compatible Encoder. PR\n#3152\nby\n@NEONKID\n.\n🌐 Add Korean translation for Tutorial - Path Parameters and Numeric Validations. PR\n#2432\nby\n@hard-coders\n.\n🌐 Add Korean translation for\ndocs/ko/docs/deployment/versions.md\n. PR\n#4121\nby\n@DevDae\n.\n🌐 Fix Korean translation for\ndocs/ko/docs/tutorial/index.md\n. PR\n#4193\nby\n@kimjaeyoonn\n.\n🔧 Add CryptAPI sponsor. PR\n#4264\nby\n@tiangolo\n.\n📝 Update\ndocs/tutorial/dependencies/classes-as-dependencies\n: Add type of query parameters in a description of\nClasses as dependencies\n. PR\n#4015\nby\n@0417taehyun\n.\n🌐 Add French translation for Tutorial - First steps. PR\n#3455\nby\n@Smlep\n.\n🌐 Add French translation for\ndocs/tutorial/path-params.md\n. PR\n#3548\nby\n@Smlep\n.\n🌐 Add French translation for\ndocs/tutorial/query-params.md\n. PR\n#3556\nby\n@Smlep\n.\n🌐 Add Turkish translation for\ndocs/python-types.md\n. PR\n#3926\nby\n@BilalAlpaslan\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#4274\nby\n@github-actions[bot]\n.\n0.70.0\n¶\nThis release just upgrades Starlette to the latest version,\n0.16.0\n, which includes several bug fixes and some small breaking changes.\nThese last\nthree consecutive releases\nare independent so that you can\nmigrate gradually\n:\nFirst to FastAPI\n0.68.2\n, with no breaking changes, but upgrading all the sub-dependencies.\nNext to FastAPI\n0.69.0\n, which upgrades Starlette to\n0.15.0\n, with AnyIO support, and a higher chance of having breaking changes in your code.\nFinally to FastAPI\n0.70.0\n, just upgrading Starlette to the latest version\n0.16.0\nwith additional bug fixes.\nThis way, in case there was a breaking change for your code in one of the releases, you can still benefit from the previous upgrades. ✨\nBreaking Changes - Upgrade\n¶\n⬆️ Upgrade Starlette to 0.16.0. PR\n#4016\nby\n@tiangolo\n.\nAlso upgrades the ranges of optional dependencies:\n\"jinja2 >=2.11.2,<4.0.0\"\n\"itsdangerous >=1.1.0,<3.0.0\"\n0.69.0\n¶\nBreaking Changes - Upgrade\n¶\nThis release adds support for\nTrio\n. ✨\nIt upgrades the version of Starlette to\n0.15.0\n, now based on\nAnyIO\n, and the internal async components in\nFastAPI\nare now based on AnyIO as well, making it compatible with both\nasyncio\nand\nTrio\n.\nYou can read the docs about running\nFastAPI with Trio using Hypercorn\n.\nThis release also removes\ngraphene\nas an optional dependency for GraphQL. If you need to work with GraphQL, the recommended library now is\nStrawberry\n. You can read the new\nFastAPI with GraphQL docs\n.\nFeatures\n¶\n✨ Add support for Trio via AnyIO, upgrading Starlette to\n0.15.0\n. PR\n#3372\nby\n@graingert\n.\n➖ Remove\ngraphene\nas an optional dependency. PR\n#4007\nby\n@tiangolo\n.\nDocs\n¶\n📝 Add docs for using Trio with Hypercorn. PR\n#4014\nby\n@tiangolo\n.\n✏ Fix typos in Deployment Guide. PR\n#3975\nby\n@ghandic\n.\n📝 Update docs with pip install calls when using extras with brackets, use quotes for compatibility with Zsh. PR\n#3131\nby\n@tomwei7\n.\n📝 Add external link to article: Deploying ML Models as API Using FastAPI and Heroku. PR\n#3904\nby\n@kaustubhgupta\n.\n✏ Fix typo in file paths in\ndocs/en/docs/contributing.md\n. PR\n#3752\nby\n@NinaHwang\n.\n✏ Fix a typo in\ndocs/en/docs/advanced/path-operation-advanced-configuration.md\nand\ndocs/en/docs/release-notes.md\n. PR\n#3750\nby\n@saintmalik\n.\n✏️ Add a missing comma in the security tutorial. PR\n#3564\nby\n@jalvaradosegura\n.\n✏ Fix typo in\ndocs/en/docs/help-fastapi.md\n. PR\n#3760\nby\n@jaystone776\n.\n✏ Fix typo about file path in\ndocs/en/docs/tutorial/bigger-applications.md\n. PR\n#3285\nby\n@HolyDorus\n.\n✏ Re-word to clarify test client in\ndocs/en/docs/tutorial/testing.md\n. PR\n#3382\nby\n@Bharat123rox\n.\n📝  Fix incorrect highlighted code. PR\n#3325\nby\n@paxcodes\n.\n📝 Add external link to article: How-to deploy FastAPI app to Heroku. PR\n#3241\nby\n@Jarmos-san\n.\n✏ Fix typo (mistranslation) in\ndocs/en/docs/advanced/templates.md\n. PR\n#3211\nby\n@oerpli\n.\n📝 Remove note about (now supported) feature from Swagger UI in\ndocs/en/docs/tutorial/request-files.md\n. PR\n#2803\nby\n@gsganden\n.\n✏ Fix typo re-word in\ndocs/tutorial/handling-errors.md\n. PR\n#2700\nby\n@graue70\n.\nTranslations\n¶\n🌐 Initialize Azerbaijani translations. PR\n#3941\nby\n@madatbay\n.\n🌐 Add Turkish translation for\ndocs/fastapi-people.md\n. PR\n#3848\nby\n@BilalAlpaslan\n.\nInternal\n¶\n📝 Add supported Python versions badge. PR\n#2794\nby\n@hramezani\n.\n✏ Fix link in Japanese docs for\ndocs/ja/docs/deployment/docker.md\n. PR\n#3245\nby\n@utamori\n.\n🔧 Correct DeprecationWarning config and comment in pytest settings. PR\n#4008\nby\n@graingert\n.\n🔧 Swap light/dark theme button icon. PR\n#3246\nby\n@eddsalkield\n.\n🔧 Lint only in Python 3.7 and above. PR\n#4006\nby\n@tiangolo\n.\n🔧 Add GitHub Action notify-translations config for Azerbaijani. PR\n#3995\nby\n@tiangolo\n.\n0.68.2\n¶\nThis release has\nno breaking changes\n. 🎉\nIt upgrades the version ranges of sub-dependencies to allow applications using FastAPI to easily upgrade them.\nSoon there will be a new FastAPI release upgrading Starlette to take advantage of recent improvements, but as that has a higher chance of having breaking changes, it will be in a separate release.\nFeatures\n¶\n⬆Increase supported version of aiofiles to suppress warnings. PR\n#2899\nby\n@SnkSynthesis\n.\n➖ Do not require backports in Python >= 3.7. PR\n#1880\nby\n@FFY00\n.\n⬆ Upgrade required Python version to >= 3.6.1, needed by typing.Deque, used by Pydantic. PR\n#2733\nby\n@hukkin\n.\n⬆️ Bump Uvicorn max range to 0.15.0. PR\n#3345\nby\n@Kludex\n.\nDocs\n¶\n📝 Update GraphQL docs, recommend Strawberry. PR\n#3981\nby\n@tiangolo\n.\n📝 Re-write and extend Deployment guide: Concepts, Uvicorn, Gunicorn, Docker, Containers, Kubernetes. PR\n#3974\nby\n@tiangolo\n.\n📝 Upgrade HTTPS guide with more explanations and diagrams. PR\n#3950\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Turkish translation for\ndocs/features.md\n. PR\n#1950\nby\n@ycd\n.\n🌐 Add Turkish translation for\ndocs/benchmarks.md\n. PR\n#2729\nby\n@Telomeraz\n.\n🌐 Add Turkish translation for\ndocs/index.md\n. PR\n#1908\nby\n@ycd\n.\n🌐 Add French translation for\ndocs/tutorial/body.md\n. PR\n#3671\nby\n@Smlep\n.\n🌐 Add French translation for\ndeployment/docker.md\n. PR\n#3694\nby\n@rjNemo\n.\n🌐 Add Portuguese translation for\ndocs/tutorial/path-params.md\n. PR\n#3664\nby\n@FelipeSilva93\n.\n🌐 Add Portuguese translation for\ndocs/deployment/https.md\n. PR\n#3754\nby\n@lsglucas\n.\n🌐 Add German translation for\ndocs/features.md\n. PR\n#3699\nby\n@mawassk\n.\nInternal\n¶\n✨ Update GitHub Action: notify-translations, to avoid a race conditions. PR\n#3989\nby\n@tiangolo\n.\n⬆️ Upgrade development\nautoflake\n, supporting multi-line imports. PR\n#3988\nby\n@tiangolo\n.\n⬆️ Increase dependency ranges for tests and docs: pytest-cov, pytest-asyncio, black, httpx, sqlalchemy, databases, mkdocs-markdownextradata-plugin. PR\n#3987\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#3986\nby\n@github-actions[bot]\n.\n💚 Fix badges in README and main page. PR\n#3979\nby\n@ghandic\n.\n⬆ Upgrade internal testing dependencies: mypy to version 0.910, add newly needed type packages. PR\n#3350\nby\n@ArcLightSlavik\n.\n✨ Add Deepset Sponsorship. PR\n#3976\nby\n@tiangolo\n.\n🎨 Tweak CSS styles for shell animations. PR\n#3888\nby\n@tiangolo\n.\n🔧 Add new Sponsor Calmcode.io. PR\n#3777\nby\n@tiangolo\n.\n0.68.1\n¶\n✨ Add support for\nread_with_orm_mode\n, to support\nSQLModel\nrelationship attributes. PR\n#3757\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Portuguese translation of\ndocs/fastapi-people.md\n. PR\n#3461\nby\n@ComicShrimp\n.\n🌐 Add Chinese translation for\ndocs/tutorial/dependencies/dependencies-in-path-operation-decorators.md\n. PR\n#3492\nby\n@jaystone776\n.\n🔧 Add new Translation tracking issues for German and Indonesian. PR\n#3718\nby\n@tiangolo\n.\n🌐 Add Chinese translation for\ndocs/tutorial/dependencies/sub-dependencies.md\n. PR\n#3491\nby\n@jaystone776\n.\n🌐 Add Portuguese translation for\ndocs/advanced/index.md\n. PR\n#3460\nby\n@ComicShrimp\n.\n🌐 Portuguese translation of\ndocs/async.md\n. PR\n#1330\nby\n@Serrones\n.\n🌐 Add French translation for\ndocs/async.md\n. PR\n#3416\nby\n@Smlep\n.\nInternal\n¶\n✨ Add GitHub Action: Notify Translations. PR\n#3715\nby\n@tiangolo\n.\n✨ Update computation of FastAPI People and sponsors. PR\n#3714\nby\n@tiangolo\n.\n✨ Enable recent Material for MkDocs Insiders features. PR\n#3710\nby\n@tiangolo\n.\n🔥 Remove/clean extra imports from examples in docs for features. PR\n#3709\nby\n@tiangolo\n.\n➕ Update docs library to include sources in Markdown. PR\n#3648\nby\n@tiangolo\n.\n⬆ Enable tests for Python 3.9. PR\n#2298\nby\n@Kludex\n.\n👥 Update FastAPI People. PR\n#3642\nby\n@github-actions[bot]\n.\n0.68.0\n¶\nFeatures\n¶\n✨ Add support for extensions and updates to the OpenAPI schema in each\npath operation\n. New docs:\nFastAPI Path Operation Advanced Configuration - OpenAPI Extra\n. Initial PR\n#1922\nby\n@edouardlp\n.\n✨ Add additional OpenAPI metadata parameters to\nFastAPI\nclass, shown on the automatic API docs UI. New docs:\nMetadata and Docs URLs\n. Initial PR\n#1812\nby\n@dkreeft\n.\n✨ Add\ndescription\nparameter to all the security scheme classes, e.g.\nAPIKeyQuery(name=\"key\", description=\"A very cool API key\")\n. PR\n#1757\nby\n@hylkepostma\n.\n✨ Update OpenAPI models, supporting recursive models and extensions. PR\n#3628\nby\n@tiangolo\n.\n✨ Import and re-export data structures from Starlette, used by Request properties, on\nfastapi.datastructures\n. Initial PR\n#1872\nby\n@jamescurtin\n.\nDocs\n¶\n📝 Update docs about async and response-model with more gender neutral language. PR\n#1869\nby\n@Edward-Knight\n.\nTranslations\n¶\n🌐 Add Russian translation for\ndocs/python-types.md\n. PR\n#3039\nby\n@dukkee\n.\n🌐 Add Chinese translation for\ndocs/tutorial/dependencies/index.md\n. PR\n#3489\nby\n@jaystone776\n.\n🌐 Add Russian translation for\ndocs/external-links.md\n. PR\n#3036\nby\n@dukkee\n.\n🌐 Add Chinese translation for\ndocs/tutorial/dependencies/global-dependencies.md\n. PR\n#3493\nby\n@jaystone776\n.\n🌐 Add Portuguese translation for\ndocs/deployment/versions.md\n. PR\n#3618\nby\n@lsglucas\n.\n🌐 Add Japanese translation for\ndocs/tutorial/security/oauth2-jwt.md\n. PR\n#3526\nby\n@sattosan\n.\nInternal\n¶\n✅ Add  the\ndocs_src\ndirectory to test coverage and update tests. Initial PR\n#1904\nby\n@Kludex\n.\n🔧 Add new GitHub templates with forms for new issues. PR\n#3612\nby\n@tiangolo\n.\n📝 Add official FastAPI Twitter to docs:\n@fastapi\n. PR\n#3578\nby\n@tiangolo\n.\n0.67.0\n¶\nFeatures\n¶\n✨ Add support for\ndataclasses\nin request bodies and\nresponse_model\n. New documentation:\nAdvanced User Guide - Using Dataclasses\n. PR\n#3577\nby\n@tiangolo\n.\n✨ Support\ndataclasses\nin responses. PR\n#3576\nby\n@tiangolo\n, continuation from initial PR\n#2722\nby\n@amitlissack\n.\nDocs\n¶\n📝 Add external link: How to Create A Fake Certificate Authority And Generate TLS Certs for FastAPI. PR\n#2839\nby\n@aitoehigie\n.\n✏ Fix code highlighted line in:\nbody-nested-models.md\n. PR\n#3463\nby\n@jaystone776\n.\n✏ Fix typo in\nbody-nested-models.md\n. PR\n#3462\nby\n@jaystone776\n.\n✏ Fix typo \"might me\" -> \"might be\" in\ndocs/en/docs/tutorial/schema-extra-example.md\n. PR\n#3362\nby\n@dbrakman\n.\n📝 Add external link: Building simple E-Commerce with NuxtJS and FastAPI. PR\n#3271\nby\n@ShahriyarR\n.\n📝 Add external link: Serve a machine learning model using Sklearn, FastAPI and Docker. PR\n#2974\nby\n@rodrigo-arenas\n.\n✏️ Fix typo on docstring in datastructures file. PR\n#2887\nby\n@Kludex\n.\n📝 Add External Link: Deploy FastAPI on Ubuntu and Serve using Caddy 2 Web Server. PR\n#3572\nby\n@tiangolo\n.\n📝 Add External Link, replaces #1898. PR\n#3571\nby\n@tiangolo\n.\nInternal\n¶\n🎨 Improve style for sponsors, add radius border. PR\n#2388\nby\n@Kludex\n.\n👷 Update GitHub Action latest-changes. PR\n#3574\nby\n@tiangolo\n.\n👷 Update GitHub Action latest-changes. PR\n#3573\nby\n@tiangolo\n.\n👷 Rename and clarify CI workflow job names. PR\n#3570\nby\n@tiangolo\n.\n👷 Update GitHub Action latest-changes, strike 2 ⚾. PR\n#3575\nby\n@tiangolo\n.\n🔧 Sort external links in docs to have the most recent at the top. PR\n#3568\nby\n@tiangolo\n.\n0.66.1\n¶\nTranslations\n¶\n🌐 Add basic setup for German translations. PR\n#3522\nby\n@0x4Dark\n.\n🌐 Add Portuguese translation for\ndocs/tutorial/security/index.md\n. PR\n#3507\nby\n@oandersonmagalhaes\n.\n🌐 Add Portuguese translation for\ndocs/deployment/index.md\n. PR\n#3337\nby\n@lsglucas\n.\nInternal\n¶\n🔧 Configure strict pytest options and update/refactor tests. Upgrade pytest to\n>=6.2.4,<7.0.0\nand pytest-cov to\n>=2.12.0,<3.0.0\n. Initial PR\n#2790\nby\n@graingert\n.\n⬆️ Upgrade python-jose dependency to\n>=3.3.0,<4.0.0\nfor tests. PR\n#3468\nby\n@tiangolo\n.\n0.66.0\n¶\nFeatures\n¶\n✨ Allow setting the\nresponse_class\nto\nRedirectResponse\nor\nFileResponse\nand returning the URL from the function. New and updated docs are in the tutorial section\nCustom Response - HTML, Stream, File, others\n, in\nRedirectResponse\nand in\nFileResponse\n. PR\n#3457\nby\n@tiangolo\n.\nFixes\n¶\n🐛 Fix include/exclude for dicts in\njsonable_encoder\n. PR\n#2016\nby\n@Rubikoid\n.\n🐛 Support custom OpenAPI / JSON Schema fields in the generated output OpenAPI. PR\n#1429\nby\n@jmagnusson\n.\nTranslations\n¶\n🌐 Add Spanish translation for\ntutorial/query-params.md\n. PR\n#2243\nby\n@mariacamilagl\n.\n🌐 Add Spanish translation for\nadvanced/response-directly.md\n. PR\n#1253\nby\n@jfunez\n.\n🌐 Add Spanish translation for\nadvanced/additional-status-codes.md\n. PR\n#1252\nby\n@jfunez\n.\n🌐 Add Spanish translation for\nadvanced/path-operation-advanced-configuration.md\n. PR\n#1251\nby\n@jfunez\n.\n0.65.3\n¶\nFixes\n¶\n♻ Assume request bodies contain JSON when no Content-Type header is provided. This fixes a breaking change introduced by\n0.65.2 with PR #2118\n. It should allow upgrading FastAPI applications with clients that send JSON data without a\nContent-Type\nheader. And there's still protection against CSRFs. PR\n#3456\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Initialize Indonesian translations. PR\n#3014\nby\n@pace-noge\n.\n🌐 Add Spanish translation of Tutorial - Path Parameters. PR\n#2219\nby\n@mariacamilagl\n.\n🌐 Add Spanish translation of Tutorial - First Steps. PR\n#2208\nby\n@mariacamilagl\n.\n🌐 Portuguese translation of Tutorial - Body - Fields. PR\n#3420\nby\n@ComicShrimp\n.\n🌐 Add Chinese translation for Tutorial - Request - Forms - and - Files. PR\n#3249\nby\n@jaystone776\n.\n🌐 Add Chinese translation for Tutorial - Handling - Errors. PR\n#3299\nby\n@jaystone776\n.\n🌐 Add Chinese translation for Tutorial - Form - Data. PR\n#3248\nby\n@jaystone776\n.\n🌐 Add Chinese translation for Tutorial - Body - Updates. PR\n#3237\nby\n@jaystone776\n.\n🌐 Add Chinese translation for FastAPI People. PR\n#3112\nby\n@hareru\n.\n🌐 Add French translation for Project Generation. PR\n#3197\nby\n@Smlep\n.\n🌐 Add French translation for Python Types Intro. PR\n#3185\nby\n@Smlep\n.\n🌐 Add French translation for External Links. PR\n#3103\nby\n@Smlep\n.\n🌐 Add French translation for Alternatives, Inspiration and Comparisons. PR\n#3020\nby\n@rjNemo\n.\n🌐 Fix Chinese translation code snippet mismatch in Tutorial - Python Types Intro. PR\n#2573\nby\n@BoYanZh\n.\n🌐 Add Portuguese translation for Development Contributing. PR\n#1364\nby\n@Serrones\n.\n🌐 Add Chinese translation for Tutorial - Request - Files. PR\n#3244\nby\n@jaystone776\n.\nInternal\n¶\n👥 Update FastAPI People. PR\n#3450\nby\n@github-actions[bot]\n.\n👥 Update FastAPI People. PR\n#3319\nby\n@github-actions[bot]\n.\n⬆ Upgrade docs development dependency on\ntyper-cli\nto >=0.0.12 to fix conflicts. PR\n#3429\nby\n@tiangolo\n.\n0.65.2\n¶\nSecurity fixes\n¶\n🔒 Check Content-Type request header before assuming JSON. Initial PR\n#2118\nby\n@patrickkwang\n.\nThis change fixes a\nCSRF\nsecurity vulnerability when using cookies for authentication in path operations with JSON payloads sent by browsers.\nIn versions lower than\n0.65.2\n, FastAPI would try to read the request payload as JSON even if the\ncontent-type\nheader sent was not set to\napplication/json\nor a compatible JSON media type (e.g.\napplication/geo+json\n).\nSo, a request with a content type of\ntext/plain\ncontaining JSON data would be accepted and the JSON data would be extracted.\nBut requests with content type\ntext/plain\nare exempt from\nCORS\npreflights, for being considered\nSimple requests\n. So, the browser would execute them right away including cookies, and the text content could be a JSON string that would be parsed and accepted by the FastAPI application.\nSee\nCVE-2021-32677\nfor more details.\nThanks to\nDima Boger\nfor the security report! 🙇🔒\nInternal\n¶\n🔧 Update sponsors badge, course bundle. PR\n#3340\nby\n@tiangolo\n.\n🔧 Add new gold sponsor Jina 🎉. PR\n#3291\nby\n@tiangolo\n.\n🔧 Add new banner sponsor badge for FastAPI courses bundle. PR\n#3288\nby\n@tiangolo\n.\n👷 Upgrade Issue Manager GitHub Action. PR\n#3236\nby\n@tiangolo\n.\n0.65.1\n¶\nSecurity fixes\n¶\n📌 Upgrade pydantic pin, to handle security vulnerability\nCVE-2021-29510\n. PR\n#3213\nby\n@tiangolo\n.\n0.65.0\n¶\nBreaking Changes - Upgrade\n¶\n⬆️  Upgrade Starlette to\n0.14.2\n, including internal\nUJSONResponse\nmigrated from Starlette. This includes several bug fixes and features from Starlette. PR\n#2335\nby\n@hanneskuettner\n.\nTranslations\n¶\n🌐 Initialize new language Polish for translations. PR\n#3170\nby\n@neternefer\n.\nInternal\n¶\n👷 Add GitHub Action cache to speed up CI installs. PR\n#3204\nby\n@tiangolo\n.\n⬆️ Upgrade setup-python GitHub Action to v2. PR\n#3203\nby\n@tiangolo\n.\n🐛 Fix docs script to generate a new translation language with\noverrides\nboilerplate. PR\n#3202\nby\n@tiangolo\n.\n✨ Add new Deta banner badge with new sponsorship tier 🙇. PR\n#3194\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#3189\nby\n@github-actions[bot]\n.\n🔊 Update FastAPI People to allow better debugging. PR\n#3188\nby\n@tiangolo\n.\n0.64.0\n¶\nFeatures\n¶\n✨ Add support for adding multiple\nexamples\nin request bodies and path, query, cookie, and header params. New docs:\nDeclare Request Example Data\n. Initial PR\n#1267\nby\n@austinorr\n.\nFixes\n¶\n📌 Pin SQLAlchemy range for tests, as it doesn't use SemVer. PR\n#3001\nby\n@tiangolo\n.\n🎨 Add newly required type annotations for mypy. PR\n#2882\nby\n@tiangolo\n.\n🎨 Remove internal \"type: ignore\", now unnecessary. PR\n#2424\nby\n@AsakuraMizu\n.\nDocs\n¶\n📝 Add link to article in Russian \"FastAPI: знакомимся с фреймворком\". PR\n#2564\nby\n@trkohler\n.\n📝 Add external link to blog post \"Authenticate Your FastAPI App with Auth0\". PR\n#2172\nby\n@dompatmore\n.\n📝 Fix broken link to article: Machine learning model serving in Python using FastAPI and Streamlit. PR\n#2557\nby\n@davidefiocco\n.\n📝 Add FastAPI Medium Article: Deploy a dockerized FastAPI application to AWS. PR\n#2515\nby\n@vjanz\n.\n✏ Fix typo in Tutorial - Handling Errors. PR\n#2486\nby\n@johnthagen\n.\n✏ Fix typo in Security OAuth2 scopes. PR\n#2407\nby\n@jugmac00\n.\n✏ Fix typo/clarify docs for SQL (Relational) Databases. PR\n#2393\nby\n@kangni\n.\n📝 Add external link to \"FastAPI for Flask Users\". PR\n#2280\nby\n@amitness\n.\nTranslations\n¶\n🌐 Fix Chinese translation of Tutorial - Query Parameters, remove obsolete content. PR\n#3051\nby\n@louis70109\n.\n🌐 Add French translation for Tutorial - Background Tasks. PR\n#3098\nby\n@Smlep\n.\n🌐 Fix Korean translation for docs/ko/docs/index.md. PR\n#3159\nby\n@SueNaEunYang\n.\n🌐 Add Korean translation for Tutorial - Query Parameters. PR\n#2390\nby\n@hard-coders\n.\n🌐 Add French translation for FastAPI People. PR\n#2232\nby\n@JulianMaurin\n.\n🌐 Add Korean translation for Tutorial - Path Parameters. PR\n#2355\nby\n@hard-coders\n.\n🌐 Add French translation for Features. PR\n#2157\nby\n@Jefidev\n.\n👥 Update FastAPI People. PR\n#3031\nby\n@github-actions[bot]\n.\n🌐 Add Chinese translation for Tutorial - Debugging. PR\n#2737\nby\n@blt232018\n.\n🌐 Add Chinese translation for Tutorial - Security - OAuth2 with Password (and hashing), Bearer with JWT tokens. PR\n#2642\nby\n@waynerv\n.\n🌐 Add Korean translation for Tutorial - Header Parameters. PR\n#2589\nby\n@mode9\n.\n🌐 Add Chinese translation for Tutorial - Metadata and Docs URLs. PR\n#2559\nby\n@blt232018\n.\n🌐 Add Korean translation for Tutorial - First Steps. PR\n#2323\nby\n@hard-coders\n.\n🌐 Add Chinese translation for Tutorial - CORS (Cross-Origin Resource Sharing). PR\n#2540\nby\n@blt232018\n.\n🌐 Add Chinese translation for Tutorial - Middleware. PR\n#2334\nby\n@lpdswing\n.\n🌐 Add Korean translation for Tutorial - Intro. PR\n#2317\nby\n@hard-coders\n.\n🌐 Add Chinese translation for Tutorial - Bigger Applications - Multiple Files. PR\n#2453\nby\n@waynerv\n.\n🌐 Add Chinese translation for Tutorial - Security - Security Intro. PR\n#2443\nby\n@waynerv\n.\n🌐 Add Chinese translation for Tutorial - Header Parameters. PR\n#2412\nby\n@maoyibo\n.\n🌐 Add Chinese translation for Tutorial - Extra Data Types. PR\n#2410\nby\n@maoyibo\n.\n🌐 Add Japanese translation for Deployment - Docker. PR\n#2312\nby\n@tokusumi\n.\n🌐 Add Japanese translation for Deployment - Versions. PR\n#2310\nby\n@tokusumi\n.\n🌐 Add Chinese translation for Tutorial - Cookie Parameters. PR\n#2261\nby\n@alicrazy1947\n.\n🌐 Add Japanese translation for Tutorial - Static files. PR\n#2260\nby\n@tokusumi\n.\n🌐 Add Japanese translation for Tutorial - Testing. PR\n#2259\nby\n@tokusumi\n.\n🌐 Add Japanese translation for Tutorial - Debugging. PR\n#2256\nby\n@tokusumi\n.\n🌐 Add Japanese translation for Tutorial - Middleware. PR\n#2255\nby\n@tokusumi\n.\n🌐 Add Japanese translation for Concurrency and async / await. PR\n#2058\nby\n@tokusumi\n.\n🌐 Add Chinese translation for Tutorial - Security - Simple OAuth2 with Password and Bearer. PR\n#2514\nby\n@waynerv\n.\n🌐 Add Japanese translation for Deployment - Deta. PR\n#2314\nby\n@tokusumi\n.\n🌐 Add Chinese translation for Tutorial - Security - Get Current User. PR\n#2474\nby\n@waynerv\n.\n🌐 Add Japanese translation for Deployment - Manually. PR\n#2313\nby\n@tokusumi\n.\n🌐 Add Japanese translation for Deployment - Intro. PR\n#2309\nby\n@tokusumi\n.\n🌐 Add Japanese translation for FastAPI People. PR\n#2254\nby\n@tokusumi\n.\n🌐 Add Japanese translation for Advanced - Path Operation Advanced Configuration. PR\n#2124\nby\n@Attsun1031\n.\n🌐 Add Japanese translation for External Links. PR\n#2070\nby\n@tokusumi\n.\n🌐 Add Japanese translation for Tutorial - Body - Updates. PR\n#1956\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for Tutorial - Form Data. PR\n#1943\nby\n@SwftAlpc\n.\n🌐 Add Japanese translation for Tutorial - Cookie Parameters. PR\n#1933\nby\n@SwftAlpc\n.\nInternal\n¶\n🔧 Update top banner, point to newsletter. PR\n#3003\nby\n@tiangolo\n.\n🔧 Disable sponsor WeTransfer. PR\n#3002\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#2880\nby\n@github-actions[bot]\n.\n👥 Update FastAPI People. PR\n#2739\nby\n@github-actions[bot]\n.\n🔧 Add new Gold Sponsor Talk Python 🎉. PR\n#2673\nby\n@tiangolo\n.\n🔧 Add new Gold Sponsor vim.so 🎉. PR\n#2669\nby\n@tiangolo\n.\n🔧 Add FastAPI user survey banner. PR\n#2623\nby\n@tiangolo\n.\n🔧 Add new Bronze Sponsor(s) 🥉🎉. PR\n#2622\nby\n@tiangolo\n.\n📝 Update social links: add Discord, fix GitHub. PR\n#2621\nby\n@tiangolo\n.\n🔧 Update FastAPI People GitHub Sponsors order. PR\n#2620\nby\n@tiangolo\n.\n🔧 Update InvestSuite sponsor data. PR\n#2608\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#2590\nby\n@github-actions[bot]\n.\n0.63.0\n¶\nFeatures\n¶\n✨ Improve type annotations, add support for mypy --strict, internally and for external packages. PR\n#2547\nby\n@tiangolo\n.\nBreaking changes\n¶\n⬆️ Upgrade Uvicorn when installing\nfastapi[all]\nto the latest version including\nuvloop\n, the new range is\nuvicorn[standard] >=0.12.0,<0.14.0\n. PR\n#2548\nby\n@tiangolo\n.\nFixes\n¶\n🐛 PR\n#2547\n(read above) also fixes some false-positive mypy errors with\ncallbacks\nparameters and when using the\nOAuth2\nclass.\nDocs\n¶\n📝 Update Uvicorn installation instructions to use uvicorn[standard] (includes uvloop). PR\n#2543\nby\n@tiangolo\n.\n📝 Update title for Deta tutorial. PR\n#2466\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#2454\nby\n@github-actions[bot]\n.\nTranslations\n¶\n🌐 Add docs lang selector widget. PR\n#2542\nby\n@tiangolo\n.\n🌐 Add Chinese translation for Tutorial - Response Status Code. PR\n#2442\nby\n@waynerv\n.\n🌐 Start translation of the documentation for the Albanian language. PR\n#2516\nby\n@vjanz\n.\n🌐 Add Chinese translation for Tutorial - Extra Models. PR\n#2416\nby\n@waynerv\n.\n🌐 Add Chinese translation for Tutorial - Response Model. PR\n#2414\nby\n@waynerv\n.\n🌐 Add Chinese translation for Tutorial - Schema Extra Example. PR\n#2411\nby\n@maoyibo\n.\n🌐 Add Korean translation for Index. PR\n#2192\nby\n@hard-coders\n.\n🌐 Add Japanese translation for Advanced User Guide - Additional Status Codes. PR\n#2145\nby\n@Attsun1031\n.\nInternal\n¶\n🐛 Fix docs overrides directory for translations. PR\n#2541\nby\n@tiangolo\n.\n➖ Remove Typer as a docs building dependency (covered by typer-cli) to fix pip resolver conflicts. PR\n#2539\nby\n@tiangolo\n.\n✨ Add newsletter: FastAPI and friends. PR\n#2509\nby\n@tiangolo\n.\n✨ Add new Gold Sponsor: InvestSuite 🎉. PR\n#2508\nby\n@tiangolo\n.\n🔧 Add issue template configs. PR\n#2476\nby\n@tiangolo\n.\n0.62.0\n¶\nFeatures\n¶\n✨ Add support for shared/top-level parameters (dependencies, tags, etc). PR\n#2434\nby\n@tiangolo\n.\nUp to now, for several options, the only way to apply them to a group of\npath operations\nwas in\ninclude_router\n. That works well, but the call to\napp.include_router()\nor\nrouter.include_router()\nis normally done in another file.\nThat means that, for example, to apply authentication to all the\npath operations\nin a router it would end up being done in a different file, instead of keeping related logic together.\nSetting options in\ninclude_router\nstill makes sense in some cases, for example, to override or increase configurations from a third party router included in an app. But in a router that is part of a bigger application, it would probably make more sense to add those settings when creating the\nAPIRouter\n.\nIn\nFastAPI\nThis allows setting the (mostly new) parameters (additionally to the already existing parameters):\ndefault_response_class\n: updated to handle defaults in\nAPIRouter\nand\ninclude_router\n.\ndependencies\n: to include ✨ top-level dependencies ✨ that apply to the whole application. E.g. to add global authentication.\ncallbacks\n: OpenAPI callbacks that apply to all the\npath operations\n.\ndeprecated\n: to mark all the\npath operations\nas deprecated. 🤷\ninclude_in_schema\n: to allow excluding all the\npath operations\nfrom the OpenAPI schema.\nresponses\n: OpenAPI responses that apply to all the\npath operations\n.\nFor example:\nfrom\nfastapi\nimport\nFastAPI\n,\nDepends\nasync\ndef\nsome_dependency\n():\nreturn\napp\n=\nFastAPI\n(\ndependencies\n=\n[\nDepends\n(\nsome_dependency\n)])\nIn\nAPIRouter\nThis allows setting the (mostly new) parameters (additionally to the already existing parameters):\ndefault_response_class\n: updated to handle defaults in\nAPIRouter\nand\ninclude_router\n. For example, it's not needed to set it explicitly when\ncreating callbacks\n.\ndependencies\n: to include ✨ router-level dependencies ✨ that apply to all the\npath operations\nin a router. Up to now, this was only possible with\ninclude_router\n.\ncallbacks\n: OpenAPI callbacks that apply to all the\npath operations\nin this router.\ndeprecated\n: to mark all the\npath operations\nin a router as deprecated.\ninclude_in_schema\n: to allow excluding all the\npath operations\nin a router from the OpenAPI schema.\nresponses\n: OpenAPI responses that apply to all the\npath operations\nin a router.\nprefix\n: to set the path prefix for a router. Up to now, this was only possible when calling\ninclude_router\n.\ntags\n: OpenAPI tags to apply to all the\npath operations\nin this router.\nFor example:\nfrom\nfastapi\nimport\nAPIRouter\n,\nDepends\nasync\ndef\nsome_dependency\n():\nreturn\nrouter\n=\nAPIRouter\n(\nprefix\n=\n\"/users\"\n,\ndependencies\n=\n[\nDepends\n(\nsome_dependency\n)])\nIn\ninclude_router\nMost of these settings are now supported in\nAPIRouter\n, which normally lives closer to the related code, so it is recommended to use\nAPIRouter\nwhen possible.\nBut\ninclude_router\nis still useful to, for example, adding options (like\ndependencies\n,\nprefix\n, and\ntags\n) when including a third party router, or a generic router that is shared between several projects.\nThis PR allows setting the (mostly new) parameters (additionally to the already existing parameters):\ndefault_response_class\n: updated to handle defaults in\nAPIRouter\nand\nFastAPI\n.\ndeprecated\n: to mark all the\npath operations\nin a router as deprecated in OpenAPI.\ninclude_in_schema\n: to allow disabling all the\npath operations\nfrom showing in the OpenAPI schema.\ncallbacks\n: OpenAPI callbacks that apply to all the\npath operations\nin this router.\nNote: all the previous parameters are still there, so it's still possible to declare\ndependencies\nin\ninclude_router\n.\nBreaking Changes\n¶\nPR\n#2434\nincludes several improvements that shouldn't affect normal use cases, but could affect in advanced scenarios:\nIf you are testing the generated OpenAPI (you shouldn't, FastAPI already tests it extensively for you): the order for\ntags\nin\ninclude_router\nand\npath operations\nwas updated for consistency, but it's a simple order change.\nIf you have advanced custom logic to access each route's\nroute.response_class\n, or the\nrouter.default_response_class\n, or the\napp.default_response_class\n: the default value for\nresponse_class\nin\nAPIRoute\nand for\ndefault_response_class\nin\nAPIRouter\nand\nFastAPI\nis now a\nDefaultPlaceholder\nused internally to handle and solve default values and overrides. The actual response class inside the\nDefaultPlaceholder\nis available at\nroute.response_class.value\n.\nDocs\n¶\nPR\n#2434\n(above) includes new or updated docs:\nAdvanced User Guide - OpenAPI Callbacks\n.\nTutorial - Bigger Applications\n.\nTutorial - Dependencies - Dependencies in path operation decorators\n.\nTutorial - Dependencies - Global Dependencies\n.\n📝 Add FastAPI monitoring blog post to External Links. PR\n#2324\nby\n@louisguitton\n.\n✏️ Fix typo in Deta tutorial. PR\n#2320\nby\n@tiangolo\n.\n✨ Add Discord chat. PR\n#2322\nby\n@tiangolo\n.\n📝 Fix image links for sponsors. PR\n#2304\nby\n@tiangolo\n.\nTranslations\n¶\n🌐 Add Japanese translation for Advanced - Custom Response. PR\n#2193\nby\n@Attsun1031\n.\n🌐 Add Chinese translation for Benchmarks. PR\n#2119\nby\n@spaceack\n.\n🌐 Add Chinese translation for Tutorial - Body - Nested Models. PR\n#1609\nby\n@waynerv\n.\n🌐 Add Chinese translation for Advanced - Custom Response. PR\n#1459\nby\n@RunningIkkyu\n.\n🌐 Add Chinese translation for Advanced - Return a Response Directly. PR\n#1452\nby\n@RunningIkkyu\n.\n🌐 Add Chinese translation for Advanced - Additional Status Codes. PR\n#1451\nby\n@RunningIkkyu\n.\n🌐 Add Chinese translation for Advanced - Path Operation Advanced Configuration. PR\n#1447\nby\n@RunningIkkyu\n.\n🌐 Add Chinese translation for Advanced User Guide - Intro. PR\n#1445\nby\n@RunningIkkyu\n.\nInternal\n¶\n🔧 Update TestDriven link to course in sponsors section. PR\n#2435\nby\n@tiangolo\n.\n🍱 Update sponsor logos. PR\n#2418\nby\n@tiangolo\n.\n💚 Fix disabling install of Material for MkDocs Insiders in forks, strike 1 ⚾. PR\n#2340\nby\n@tiangolo\n.\n🐛 Fix disabling Material for MkDocs Insiders install in forks. PR\n#2339\nby\n@tiangolo\n.\n✨ Add silver sponsor WeTransfer. PR\n#2338\nby\n@tiangolo\n.\n✨ Set up and enable Material for MkDocs Insiders for the docs. PR\n#2325\nby\n@tiangolo\n.\n0.61.2\n¶\nFixes\n¶\n📌 Relax Swagger UI version pin. PR\n#2089\nby\n@jmriebold\n.\n🐛 Fix bug overriding custom HTTPException and RequestValidationError from exception_handlers. PR\n#1924\nby\n@uriyyo\n.\n✏️ Fix typo on dependencies utils and cleanup unused variable. PR\n#1912\nby\n@Kludex\n.\nDocs\n¶\n✏️  Fix typo in Tutorial - Path Parameters. PR\n#2231\nby\n@mariacamilagl\n.\n✏ Fix a stylistic error in docs. PR\n#2206\nby\n@ddobrinskiy\n.\n✏ Fix capitalizaiton typo in docs. PR\n#2204\nby\n@imba-tjd\n.\n✏ Fix typo in docs. PR\n#2179\nby\n@ammarasmro\n.\n📝 Update/fix links in docs to use HTTPS. PR\n#2165\nby\n@imba-tjd\n.\n✏ Fix typos and add rewording in docs. PR\n#2159\nby\n@nukopy\n.\n📝 Fix code consistency in examples for Tutorial - User Guide - Path Parameters. PR\n#2158\nby\n@nukopy\n.\n📝 Fix renamed parameter\ncontent_type\ntypo. PR\n#2135\nby\n@TeoZosa\n.\n✏ Fix minor typos in docs. PR\n#2122\nby\n@TeoZosa\n.\n✏ Fix typos in docs and source examples. PR\n#2102\nby\n@AdrianDeAnda\n.\n✏ Fix incorrect Celery URLs in docs. PR\n#2100\nby\n@CircleOnCircles\n.\n📝 Simplify intro to Python Types, all currently supported Python versions include type hints 🎉. PR\n#2085\nby\n@ninjaaron\n.\n📝 Fix example code with sets in Tutorial - Body - Nested Models 3. PR\n#2054\nby\n@hitrust\n.\n📝 Fix example code with sets in Tutorial - Body - Nested Models 2. PR\n#2053\nby\n@hitrust\n.\n📝 Fix example code with sets in Tutorial - Body - Nested Models. PR\n#2052\nby\n@hitrust\n.\n✏ Fix typo in Benchmarks. PR\n#1995\nby\n@AlejoAsd\n.\n📝 Add note in CORS tutorial about allow_origins with [\"*\"] and allow_credentials. PR\n#1895\nby\n@dsmurrell\n.\n📝 Add deployment to Deta, the first gold sponsor 🎉. PR\n#2303\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#2282\nby\n@github-actions[bot]\n.\n✏️ Fix uppercase in Tutorial - Query parameters. PR\n#2245\nby\n@mariacamilagl\n.\n📝 Add articles to External Links. PR\n#2247\nby\n@tiangolo\n.\n✏ Fix typo in Spanish tutorial index. PR\n#2020\nby\n@aviloncho\n.\nTranslations\n¶\n🌐 Add Japanese translation for Advanced Tutorial - Response Directly. PR\n#2191\nby\n@Attsun1031\n.\n📝 Add Japanese translation for Tutorial - Security - First Steps. PR\n#2153\nby\n@komtaki\n.\n🌐 Add Japanese translation for Tutorial - Query Parameters and String Validations. PR\n#1901\nby\n@SwftAlpc\n.\n🌐 Add Portuguese translation for External Links. PR\n#1443\nby\n@Serrones\n.\n🌐 Add Japanese translation for Tutorial - CORS. PR\n#2125\nby\n@tokusumi\n.\n🌐 Add Japanese translation for Contributing. PR\n#2067\nby\n@komtaki\n.\n🌐 Add Japanese translation for Project Generation. PR\n#2050\nby\n@tokusumi\n.\n🌐 Add Japanese translation for Alternatives. PR\n#2043\nby\n@Attsun1031\n.\n🌐 Add Japanese translation for History Design and Future. PR\n#2002\nby\n@komtaki\n.\n🌐 Add Japanese translation for Benchmarks. PR\n#1992\nby\n@komtaki\n.\n🌐 Add Japanese translation for Tutorial - Header Parameters. PR\n#1935\nby\n@SwftAlpc\n.\n🌐 Add Portuguese translation for Tutorial - First Steps. PR\n#1861\nby\n@jessicapaz\n.\n🌐 Add Portuguese translation for Python Types. PR\n#1796\nby\n@izaguerreiro\n.\n🌐 Add Japanese translation for Help FastAPI. PR\n#1692\nby\n@tokusumi\n.\n🌐 Add Japanese translation for Tutorial - Body. PR\n#1683\nby\n@tokusumi\n.\n🌐 Add Japanese translation for Tutorial - Query Params. PR\n#1674\nby\n@tokusumi\n.\n🌐 Add Japanese translation for tutorial/path-params.md. PR\n#1671\nby\n@tokusumi\n.\n🌐 Add Japanese translation for tutorial/first-steps.md. PR\n#1658\nby\n@tokusumi\n.\n🌐 Add Japanese translation for tutorial/index.md. PR\n#1656\nby\n@tokusumi\n.\n🌐 Add translation to Portuguese for Project Generation. PR\n#1602\nby\n@Serrones\n.\n🌐 Add Japanese translation for Features. PR\n#1625\nby\n@tokusumi\n.\n🌐 Initialize new language Korean for translations. PR\n#2018\nby\n@hard-coders\n.\n🌐 Add Portuguese translation of Deployment. PR\n#1374\nby\n@Serrones\n.\nInternal\n¶\n🔥 Cleanup after upgrade for Docs Previews GitHub Action. PR\n#2248\nby\n@tiangolo\n.\n🐛 Fix CI docs preview, unzip docs. PR\n#2246\nby\n@tiangolo\n.\n✨ Add instant docs deploy previews for PRs from forks. PR\n#2244\nby\n@tiangolo\n.\n⚡️ Build docs for languages in parallel in subprocesses to speed up CI. PR\n#2242\nby\n@tiangolo\n.\n🐛 Fix docs order generation for partial translations. PR\n#2238\nby\n@tiangolo\n.\n👥 Update FastAPI People. PR\n#2202\nby\n@github-actions[bot]\n.\n♻️ Update FastAPI People GitHub Action to send the PR as github-actions. PR\n#2201\nby\n@tiangolo\n.\n🔧 Update FastAPI People GitHub Action config, run monthly. PR\n#2199\nby\n@tiangolo\n.\n🐛 Fix FastAPI People GitHub Action Docker dependency, strike 1 ⚾. PR\n#2198\nby\n@tiangolo\n.\n🐛 Fix FastAPI People GitHub Action Docker dependencies. PR\n#2197\nby\n@tiangolo\n.\n🐛 Fix FastAPI People GitHub Action when there's nothing to change. PR\n#2196\nby\n@tiangolo\n.\n👥 Add new section FastAPI People. PR\n#2195\nby\n@tiangolo\n.\n⬆️ Upgrade GitHub Action Latest Changes. PR\n#2190\nby\n@tiangolo\n.\n⬆️ Upgrade GitHub Action Label Approved. PR\n#2189\nby\n@tiangolo\n.\n🔧 Update GitHub Action Label Approved, run at 12:00. PR\n#2185\nby\n@tiangolo\n.\n👷 Upgrade GitHub Action Latest Changes. PR\n#2184\nby\n@tiangolo\n.\n👷 Set GitHub Action Label Approved to run daily, not every minute. PR\n#2163\nby\n@tiangolo\n.\n🔥 Remove pr-approvals GitHub Action as it's not compatible with forks. Use the new one. PR\n#2162\nby\n@tiangolo\n.\n👷 Add GitHub Action Latest Changes. PR\n#2160\n.\n👷 Add GitHub Action Label Approved. PR\n#2161\n.\n0.61.1\n¶\nFixes\n¶\nFix issues using\njsonable_encoder\nwith SQLAlchemy models directly. PR\n#1987\n.\nDocs\n¶\nFix typo in NoSQL docs. PR\n#1980\nby\n@facundojmaero\n.\nTranslations\n¶\nAdd translation for\nmain page to Japanese\nPR\n#1571\nby\n@ryuckel\n.\nInitialize French translations. PR\n#1975\nby\n@JulianMaurin-BM\n.\nInitialize Turkish translations. PR\n#1905\nby\n@ycd\n.\nInternal\n¶\nImprove docs maintainability by updating\nhl_lines\nsyntax to use ranges. PR\n#1863\nby\n@la-mar\n.\n0.61.0\n¶\nFeatures\n¶\nAdd support for injecting\nHTTPConnection\n(as\nRequest\nand\nWebSocket\n). Useful for sharing app state in dependencies. PR\n#1827\nby\n@nsidnev\n.\nExport\nWebSocketDisconnect\nand add example handling WebSocket disconnections to docs. PR\n#1822\nby\n@rkbeatss\n.\nBreaking Changes\n¶\nRequire Pydantic >\n1.0.0\n.\nRemove support for deprecated Pydantic\n0.32.2\n. This improves maintainability and allows new features.\nIn\nFastAPI\nand\nAPIRouter\n:\nRemove\npath operation decorators\nrelated/deprecated parameter\nresponse_model_skip_defaults\n(use\nresponse_model_exclude_unset\ninstead).\nChange\npath operation decorators\nparameter default for\nresponse_model_exclude\nfrom\nset()\nto\nNone\n(as is in Pydantic).\nIn\nencoders.jsonable_encoder\n:\nRemove deprecated\nskip_defaults\n, use instead\nexclude_unset\n.\nSet default of\nexclude\nfrom\nset()\nto\nNone\n(as is in Pydantic).\nPR\n#1862\n.\nIn\nencoders.jsonable_encoder\nremove parameter\nsqlalchemy_safe\n.\nIt was an early hack to allow returning SQLAlchemy models, but it was never documented, and the recommended way is using Pydantic's\norm_mode\nas described in the tutorial:\nSQL (Relational) Databases\n.\nPR\n#1864\n.\nDocs\n¶\nAdd link to the course by TestDriven.io:\nTest-Driven Development with FastAPI and Docker\n. PR\n#1860\n.\nFix empty log message in docs example about handling errors. PR\n#1815\nby\n@manlix\n.\nReword text to reduce ambiguity while not being gender-specific. PR\n#1824\nby\n@Mause\n.\nInternal\n¶\nAdd Flake8 linting. Original PR\n#1774\nby\n@MashhadiNima\n.\nDisable Gitter bot, as it's currently broken, and Gitter's response doesn't show the problem. PR\n#1853\n.\n0.60.2\n¶\nFix typo in docs for query parameters. PR\n#1832\nby\n@ycd\n.\nAdd docs about\nAsync Tests\n. PR\n#1619\nby\n@empicano\n.\nRaise an exception when using form data (\nForm\n,\nFile\n) without having\npython-multipart\ninstalled.\nUp to now the application would run, and raise an exception only when receiving a request with form data, the new behavior, raising early, will prevent from deploying applications with broken dependencies.\nIt also detects if the correct package\npython-multipart\nis installed instead of the incorrect\nmultipart\n(both importable as\nmultipart\n).\nPR\n#1851\nbased on original PR\n#1627\nby\n@chrisngyn\n,\n@YKo20010\n,\n@kx-chen\n.\nRe-enable Gitter releases bot. PR\n#1831\n.\nAdd link to async SQL databases tutorial from main SQL tutorial. PR\n#1813\nby\n@short2strings\n.\nFix typo in tutorial about behind a proxy. PR\n#1807\nby\n@toidi\n.\nFix typo in Portuguese docs. PR\n#1795\nby\n@izaguerreiro\n.\nAdd translations setup for Ukrainian. PR\n#1830\n.\nAdd external link\nBuild And Host Fast Data Science Applications Using FastAPI\n. PR\n#1786\nby\n@Kludex\n.\nFix encoding of Pydantic models that inherit from others models with custom\njson_encoders\n. PR\n#1769\nby\n@henrybetts\n.\nSimplify and improve\njsonable_encoder\n. PR\n#1754\nby\n@MashhadiNima\n.\nSimplify internal code syntax in several points. PR\n#1753\nby\n@uriyyo\n.\nImprove internal typing, declare\nOptional\nparameters. PR\n#1731\nby\n@MashhadiNima\n.\nAdd external link\nDeploy FastAPI on Azure App Service\nto docs. PR\n#1726\nby\n@windson\n.\nAdd link to Starlette docs about WebSocket testing. PR\n#1717\nby\n@hellocoldworld\n.\nRefactor generating dependant, merge for loops. PR\n#1714\nby\n@Bloodielie\n.\nUpdate example for templates with Jinja to include HTML media type. PR\n#1690\nby\n@frafra\n.\nFix typos in docs for security. PR\n#1678\nby\n@nilslindemann\n.\nFix typos in docs for dependencies. PR\n#1675\nby\n@nilslindemann\n.\nFix type annotation for\n**extra\nparameters in\nFastAPI\n. PR\n#1659\nby\n@bharel\n.\nBump MkDocs Material to fix docs in browsers with dark mode. PR\n#1789\nby\n@adriencaccia\n.\nRemove docs preview comment from each commit. PR\n#1826\n.\nUpdate GitHub context extraction for Gitter notification bot. PR\n#1766\n.\n0.60.1\n¶\nAdd debugging logs for GitHub actions to introspect GitHub hidden context. PR\n#1764\n.\nUse OS preference theme for online docs. PR\n#1760\nby\n@adriencaccia\n.\nUpgrade Starlette to version\n0.13.6\nto handle a vulnerability when using static files in Windows. PR\n#1759\nby\n@jamesag26\n.\nPin Swagger UI temporarily, waiting for a fix for\nswagger-api/swagger-ui#6249\n. PR\n#1763\n.\nUpdate GitHub Actions, use commit from PR for docs preview, not commit from pre-merge. PR\n#1761\n.\nUpdate GitHub Actions, refactor Gitter bot. PR\n#1746\n.\n0.60.0\n¶\nAdd GitHub Action to watch for missing preview docs and trigger a preview deploy. PR\n#1740\n.\nAdd custom GitHub Action to get artifact with docs preview. PR\n#1739\n.\nAdd new GitHub Actions to preview docs from PRs. PR\n#1738\n.\nAdd XML test coverage to support GitHub Actions. PR\n#1737\n.\nUpdate badges and remove Travis now that GitHub Actions is the main CI. PR\n#1736\n.\nAdd GitHub Actions for CI, move from Travis. PR\n#1735\n.\nAdd support for adding OpenAPI schema for GET requests with a body. PR\n#1626\nby\n@victorphoenix3\n.\n0.59.0\n¶\nFix typo in docstring for OAuth2 utils. PR\n#1621\nby\n@tomarv2\n.\nUpdate JWT docs to use Python-jose instead of PyJWT. Initial PR\n#1610\nby\n@asheux\n.\nFix/re-enable search bar in docs. PR\n#1703\n.\nAuto-generate a \"server\" in OpenAPI\nservers\nwhen there's a\nroot_path\ninstead of prefixing all the\npaths\n:\nAdd a new parameter for\nFastAPI\nclasses:\nroot_path_in_servers\nto disable the auto-generation of\nservers\n.\nNew docs about\nroot_path\nand\nservers\nin\nAdditional Servers\n.\nUpdate OAuth2 examples to use a relative URL for\ntokenUrl=\"token\"\nto make sure those examples keep working as-is even when behind a reverse proxy.\nInitial PR\n#1596\nby\n@rkbeatss\n.\nFix typo/link in External Links. PR\n#1702\n.\nUpdate handling of\nExternal Links\nto use a data file and allow translating the headers without becoming obsolete quickly when new links are added. PR\n#https://github.com/tiangolo/fastapi/pull/1701\n.\nAdd external link\nMachine learning model serving in Python using FastAPI and Streamlit\nto docs. PR\n#1669\nby\n@davidefiocco\n.\nAdd note in docs on order in Pydantic Unions. PR\n#1591\nby\n@kbanc\n.\nImprove support for tests in editor. PR\n#1699\n.\nPin dependencies. PR\n#1697\n.\nUpdate isort to version 5.x.x. PR\n#1670\nby\n@asheux\n.\n0.58.1\n¶\nAdd link in docs to Pydantic data types. PR\n#1612\nby\n@tayoogunbiyi\n.\nFix link in warning logs for\nopenapi_prefix\n. PR\n#1611\nby\n@bavaria95\n.\nFix bad link in docs. PR\n#1603\nby\n@molto0504\n.\nAdd Vim temporary files to\n.gitignore\nfor contributors using Vim. PR\n#1590\nby\n@asheux\n.\nFix typo in docs for sub-applications. PR\n#1578\nby\n@schlpbch\n.\nUse\nOptional\nin all the examples in the docs. Original PR\n#1574\nby\n@chrisngyn\n,\n@kx-chen\n,\n@YKo20010\n. Updated and merged PR\n#1644\n.\nUpdate tests and handling of\nresponse_model_by_alias\n. PR\n#1642\n.\nAdd translation to Chinese for\nBody - Fields - 请求体 - 字段\n. PR\n#1569\nby\n@waynerv\n.\nUpdate Chinese translation of main page. PR\n#1564\nby\n@waynerv\n.\nAdd translation to Chinese for\nBody - Multiple Parameters - 请求体 - 多个参数\n. PR\n#1532\nby\n@waynerv\n.\nAdd translation to Chinese for\nPath Parameters and Numeric Validations - 路径参数和数值校验\n. PR\n#1506\nby\n@waynerv\n.\nAdd GitHub action to auto-label approved PRs (mainly for translations). PR\n#1638\n.\n0.58.0\n¶\nDeep merge OpenAPI responses to preserve all the additional metadata. PR\n#1577\n.\nMention in docs that only main app events are run (not sub-apps). PR\n#1554\nby\n@amacfie\n.\nFix body validation error response, do not include body variable when it is not embedded. PR\n#1553\nby\n@amacfie\n.\nFix testing OAuth2 security scopes when using dependency overrides. PR\n#1549\nby\n@amacfie\n.\nFix Model for JSON Schema keyword\nnot\nas a JSON Schema instead of a list. PR\n#1548\nby\n@v-do\n.\nAdd support for OpenAPI\nservers\n. PR\n#1547\nby\n@mikaello\n.\n0.57.0\n¶\nRemove broken link from \"External Links\". PR\n#1565\nby\n@victorphoenix3\n.\nUpdate/fix docs for\nWebSockets with dependencies\n. Original PR\n#1540\nby\n@ChihSeanHsu\n.\nAdd support for Python's\nhttp.HTTPStatus\nin\nstatus_code\nparameters. PR\n#1534\nby\n@retnikt\n.\nWhen using Pydantic models with\n__root__\n, use the internal value in\njsonable_encoder\n. PR\n#1524\nby\n@patrickkwang\n.\nUpdate docs for path parameters. PR\n#1521\nby\n@yankeexe\n.\nUpdate docs for first steps, links and rewording. PR\n#1518\nby\n@yankeexe\n.\nEnable\nshowCommonExtensions\nin Swagger UI to show additional validations like\nmaxLength\n, etc. PR\n#1466\nby\n@TiewKH\n.\nMake\nOAuth2PasswordRequestFormStrict\nimportable directly from\nfastapi.security\n. PR\n#1462\nby\n@RichardHoekstra\n.\nAdd docs about\nDefault response class\n. PR\n#1455\nby\n@TezRomacH\n.\nAdd note in docs about additional parameters\nresponse_model_exclude_defaults\nand\nresponse_model_exclude_none\nin\nResponse Model\n. PR\n#1427\nby\n@wshayes\n.\nAdd note about\nPyCharm Pydantic plugin\nto docs. PR\n#1420\nby\n@koxudaxi\n.\nUpdate and clarify testing function name. PR\n#1395\nby\n@chenl\n.\nFix duplicated headers created by indirect dependencies that use the request directly. PR\n#1386\nby\n@obataku\nfrom tests by\n@scottsmith2gmail\n.\nUpgrade Starlette version to\n0.13.4\n. PR\n#1361\nby\n@rushton\n.\nImprove error handling and feedback for requests with invalid JSON. PR\n#1354\nby\n@aviramha\n.\nAdd support for declaring metadata for tags in OpenAPI. New docs at\nTutorial - Metadata and Docs URLs - Metadata for tags\n. PR\n#1348\nby\n@thomas-maschler\n.\nAdd basic setup for Russian translations. PR\n#1566\n.\nRemove obsolete Chinese articles after adding official community translations. PR\n#1510\nby\n@waynerv\n.\nAdd\n__repr__\nfor\npath operation function\nparameter helpers (like\nQuery\n,\nDepends\n, etc) to simplify debugging. PR\n#1560\nby\n@rkbeatss\nand\n@victorphoenix3\n.\n0.56.1\n¶\nAdd link to advanced docs from tutorial. PR\n#1512\nby\n@kx-chen\n.\nRemove internal unnecessary f-strings. PR\n#1526\nby\n@kotamatsuoka\n.\nAdd translation to Chinese for\nQuery Parameters and String Validations - 查询参数和字符串校验\n. PR\n#1500\nby\n@waynerv\n.\nAdd translation to Chinese for\nRequest Body - 请求体\n. PR\n#1492\nby\n@waynerv\n.\nAdd translation to Chinese for\nHelp FastAPI - Get Help - 帮助 FastAPI - 获取帮助\n. PR\n#1465\nby\n@waynerv\n.\nAdd translation to Chinese for\nQuery Parameters - 查询参数\n. PR\n#1454\nby\n@waynerv\n.\nAdd translation to Chinese for\nContributing - 开发 - 贡献\n. PR\n#1460\nby\n@waynerv\n.\nAdd translation to Chinese for\nPath Parameters - 路径参数\n. PR\n#1453\nby\n@waynerv\n.\nAdd official Microsoft project generator for\nserving spaCy with FastAPI and Azure Cognitive Skills\nto\nProject Generators\n. PR\n#1390\nby\n@kabirkhan\n.\nUpdate docs in\nPython Types Intro\nto include info about\nOptional\n. Original PR\n#1377\nby\n@yaegassy\n.\nFix support for callable class dependencies with\nyield\n. PR\n#1365\nby\n@mrosales\n.\nFix/remove incorrect error logging when a client sends invalid payloads. PR\n#1351\nby\n@dbanty\n.\nAdd translation to Chinese for\nFirst Steps - 第一步\n. PR\n#1323\nby\n@waynerv\n.\nFix generating OpenAPI for apps using callbacks with routers including Pydantic models. PR\n#1322\nby\n@nsidnev\n.\nOptimize internal regex performance in\nget_path_param_names()\n. PR\n#1243\nby\n@heckad\n.\nRemove\n*,\nfrom functions in docs where it's not needed. PR\n#1239\nby\n@pankaj-giri\n.\nStart translations for Italian. PR\n#1557\nby\n@csr\n.\n0.56.0\n¶\nAdd support for ASGI\nroot_path\n:\nUse\nroot_path\ninternally for mounted applications, so that OpenAPI and the docs UI works automatically without extra configurations and parameters.\nAdd new\nroot_path\nparameter for\nFastAPI\napplications to provide it in cases where it can be set with the command line (e.g. for Uvicorn and Hypercorn, with the parameter\n--root-path\n).\nDeprecate\nopenapi_prefix\nparameter in favor of the new\nroot_path\nparameter.\nAdd new/updated docs for\nSub Applications - Mounts\n, without\nopenapi_prefix\n(as it is now handled automatically).\nAdd new/updated docs for\nBehind a Proxy\n, including how to setup a local testing proxy with Traefik and using\nroot_path\n.\nUpdate docs for\nExtending OpenAPI\nwith the new\nopenapi_prefix\nparameter passed (internally generated from\nroot_path\n).\nOriginal PR\n#1199\nby\n@iksteen\n.\nUpdate new issue templates and docs:\nHelp FastAPI - Get Help\n. PR\n#1531\n.\nUpdate GitHub action issue-manager. PR\n#1520\n.\nAdd new links:\nEnglish articles\n:\nReal-time Notifications with Python and Postgres\nby\nGuillermo Cruz\n.\nMicroservice in Python using FastAPI\nby\nPaurakh Sharma Humagain\n.\nBuild simple API service with Python FastAPI — Part 1\nby\ncuongld2\n.\nFastAPI + Zeit.co = 🚀\nby\nPaul Sec\n.\nBuild a web API from scratch with FastAPI - the workshop\nby\nSebastián Ramírez (tiangolo)\n.\nBuild a Secure Twilio Webhook with Python and FastAPI\nby\nTwilio\n.\nUsing FastAPI with Django\nby\nStavros Korokithakis\n.\nIntroducing Dispatch\nby\nNetflix\n.\nPodcasts\n:\nBuild The Next Generation Of Python Web Applications With FastAPI - Episode 259 - interview to Sebastían Ramírez (tiangolo)\nby\nPodcast.\n__init__\n.\nTalks\n:\nPyConBY 2020: Serve ML models easily with FastAPI\nby\nSebastián Ramírez (tiangolo)\n.\n[VIRTUAL] Py.Amsterdam's flying Software Circus: Intro to FastAPI\nby\nSebastián Ramírez (tiangolo)\n.\nPR\n#1467\n.\nAdd translation to Chinese for\nPython Types Intro - Python 类型提示简介\n. PR\n#1197\nby\n@waynerv\n.\n0.55.1\n¶\nFix handling of enums with their own schema in path parameters. To support\npydantic/pydantic#1432\nin FastAPI. PR\n#1463\n.\n0.55.0\n¶\nAllow enums to allow them to have their own schemas in OpenAPI. To support\npydantic/pydantic#1432\nin FastAPI. PR\n#1461\n.\nAdd links for funding through\nGitHub sponsors\n. PR\n#1425\n.\nUpdate issue template for for questions. PR\n#1344\nby\n@retnikt\n.\nUpdate warning about storing passwords in docs. PR\n#1336\nby\n@skorokithakis\n.\nFix typo. PR\n#1326\nby\n@chenl\n.\nAdd translation to Portuguese for\nAlternatives, Inspiration and Comparisons - Alternativas, Inspiração e Comparações\n. PR\n#1325\nby\n@Serrones\n.\nFix 2 typos in docs. PR\n#1324\nby\n@waynerv\n.\nUpdate CORS docs, fix correct default of\nmax_age=600\n. PR\n#1301\nby\n@derekbekoe\n.\nAdd translation of\nmain page to Portuguese\n. PR\n#1300\nby\n@Serrones\n.\nRe-word and clarify docs for extra info in fields. PR\n#1299\nby\n@chris-allnutt\n.\nMake sure the\n*\nin short features in the docs is consistent (after\n.\n) in all languages. PR\n#1424\n.\nUpdate order of execution for\nget_db\nin SQLAlchemy tutorial. PR\n#1293\nby\n@bcb\n.\nFix typos in Async docs. PR\n#1423\n.\n0.54.2\n¶\nAdd translation to Spanish for\nConcurrency and async / await - Concurrencia y async / await\n. PR\n#1290\nby\n@alvaropernas\n.\nRemove obsolete vote link. PR\n#1289\nby\n@donhui\n.\nAllow disabling docs UIs by just disabling OpenAPI with\nopenapi_url=None\n. New example in docs:\nAdvanced: Conditional OpenAPI\n. PR\n#1421\n.\nAdd translation to Portuguese for\nBenchmarks - Comparações\n. PR\n#1274\nby\n@Serrones\n.\nAdd translation to Portuguese for\nTutorial - User Guide - Intro - Tutorial - Guia de Usuário - Introdução\n. PR\n#1259\nby\n@marcosmmb\n.\nAllow using Unicode in MkDocs for translations. PR\n#1419\n.\nAdd translation to Spanish for\nAdvanced User Guide - Intro - Guía de Usuario Avanzada - Introducción\n. PR\n#1250\nby\n@jfunez\n.\nAdd translation to Portuguese for\nHistory, Design and Future - História, Design e Futuro\n. PR\n#1249\nby\n@marcosmmb\n.\nAdd translation to Portuguese for\nFeatures - Recursos\n. PR\n#1248\nby\n@marcosmmb\n.\nAdd translation to Spanish for\nTutorial - User Guide - Intro - Tutorial - Guía de Usuario - Introducción\n. PR\n#1244\nby\n@MartinEliasQ\n.\nAdd translation to Chinese for\nDeployment - 部署\n. PR\n#1203\nby\n@RunningIkkyu\n.\nAdd translation to Chinese for\nTutorial - User Guide - Intro - 教程 - 用户指南 - 简介\n. PR\n#1202\nby\n@waynerv\n.\nAdd translation to Chinese for\nFeatures - 特性\n. PR\n#1192\nby\n@Dustyposa\n.\nAdd translation for\nmain page to Chinese\nPR\n#1191\nby\n@waynerv\n.\nUpdate docs for project generation. PR\n#1287\n.\nAdd Spanish translation for\nIntroducción a los Tipos de Python (Python Types Intro)\n. PR\n#1237\nby\n@mariacamilagl\n.\nAdd Spanish translation for\nCaracterísticas (Features)\n. PR\n#1220\nby\n@mariacamilagl\n.\n0.54.1\n¶\nUpdate database test setup. PR\n#1226\n.\nImprove test debugging by showing response text in failing tests. PR\n#1222\nby\n@samuelcolvin\n.\n0.54.0\n¶\nFix grammatical mistakes in async docs. PR\n#1188\nby\n@mickeypash\n.\nAdd support for\nresponse_model_exclude_defaults\nand\nresponse_model_exclude_none\n:\nDeprecate the parameter\ninclude_none\nin\njsonable_encoder\nand add the inverted\nexclude_none\n, to keep in sync with Pydantic.\nPR\n#1166\nby\n@voegtlel\n.\nAdd example about\nTesting a Database\n. Initial PR\n#1144\nby\n@duganchen\n.\nUpdate docs for\nDevelopment - Contributing: Translations\nincluding note about reviewing translation PRs.\n#1215\n.\nUpdate log style in README.md for GitHub Markdown compatibility. PR\n#1200\nby\n#geekgao\n.\nAdd Python venv\nenv\nto\n.gitignore\n. PR\n#1212\nby\n@cassiobotaro\n.\nStart Portuguese translations. PR\n#1210\nby\n@cassiobotaro\n.\nUpdate docs for Pydantic's\nSettings\nusing a dependency with\n@lru_cache()\n. PR\n#1214\n.\nAdd first translation to Spanish\nFastAPI\n. PR\n#1201\nby\n@mariacamilagl\n.\nAdd docs about\nSettings and Environment Variables\n. Initial PR\n1118\nby\n@alexmitelman\n.\n0.53.2\n¶\nFix automatic embedding of body fields for dependencies and sub-dependencies. Original PR\n#1079\nby\n@Toad2186\n.\nFix dependency overrides in WebSocket testing. PR\n#1122\nby\n@amitlissack\n.\nFix docs script to ensure languages are always sorted. PR\n#1189\n.\nStart translations for Chinese. PR\n#1187\nby\n@RunningIkkyu\n.\nAdd docs for\nSchema Extra - Example\n. PR\n#1185\n.\n0.53.1\n¶\nFix included example after translations refactor. PR\n#1182\n.\nAdd docs example for\nexample\nin\nField\n. Docs at\nBody - Fields: JSON Schema extras\n. PR\n#1106\nby\n@JohnPaton\n.\nFix using recursive models in\nresponse_model\n. PR\n#1164\nby\n@voegtlel\n.\nAdd docs for\nPycharm Debugging\n. PR\n#1096\nby\n@youngquan\n.\nFix typo in docs. PR\n#1148\nby\n@PLNech\n.\nUpdate Windows development environment instructions. PR\n#1179\n.\n0.53.0\n¶\nUpdate test coverage badge. PR\n#1175\n.\nAdd\norjson\nto\npip install fastapi[all]\n. PR\n#1161\nby\n@michael0liver\n.\nFix included example for\nGZipMiddleware\n. PR\n#1138\nby\n@arimbr\n.\nFix class name in docstring for\nOAuth2PasswordRequestFormStrict\n. PR\n#1126\nby\n@adg-mh\n.\nClarify function name in example in docs. PR\n#1121\nby\n@tmsick\n.\nAdd external link\nApache Kafka producer and consumer with FastAPI and aiokafka\nto docs. PR\n#1112\nby\n@iwpnd\n.\nFix serialization when using\nby_alias\nor\nexclude_unset\nand returning data with Pydantic models. PR\n#1074\nby\n@juhovh-aiven\n.\nAdd Gitter chat to docs. PR\n#1061\nby\n@aakashnand\n.\nUpdate and simplify translations docs. PR\n#1171\n.\nUpdate development of FastAPI docs, set address to\n127.0.0.1\nto improve Windows support. PR\n#1169\nby\n@mariacamilagl\n.\nAdd support for docs translations. New docs:\nDevelopment - Contributing: Docs: Translations\n. PR\n#1168\n.\nUpdate terminal styles in docs and add note about\nTyper\n, the FastAPI of CLIs\n. PR\n#1139\n.\n0.52.0\n¶\nAdd new high-performance JSON response class using\norjson\n. New docs:\nCustom Response - HTML, Stream, File, others:\nORJSONResponse\n. PR\n#1065\n.\n0.51.0\n¶\nRe-export utils from Starlette:\nThis allows using things like\nfrom fastapi.responses import JSONResponse\ninstead of\nfrom starlette.responses import JSONResponse\n.\nIt's mainly syntax sugar, a convenience for developer experience.\nNow\nRequest\n,\nResponse\n,\nWebSocket\n,\nstatus\ncan be imported directly from\nfastapi\nas in\nfrom fastapi import Response\n. This is because those are frequently used, to use the request directly, to set headers and cookies, to get status codes, etc.\nDocumentation changes in many places, but new docs and noticeable improvements:\nCustom Response - HTML, Stream, File, others\n.\nAdvanced Middleware\n.\nIncluding WSGI - Flask, Django, others\n.\nPR\n#1064\n.\n0.50.0\n¶\nAdd link to Release Notes from docs about pinning versions for deployment. PR\n#1058\n.\nUpgrade code to use the latest version of Starlette, including:\nSeveral bug fixes.\nOptional redirects of slashes, with or without ending in\n/\n.\nEvents for routers,\n\"startup\"\n, and\n\"shutdown\"\n.\nPR\n#1057\n.\nAdd docs about pinning FastAPI versions for deployment:\nDeployment: FastAPI versions\n. PR\n#1056\n.\n0.49.2\n¶\nFix links in release notes. PR\n#1052\nby\n@sattosan\n.\nFix typo in release notes. PR\n#1051\nby\n@sattosan\n.\nRefactor/clarify\nserialize_response\nparameter name to avoid confusion. PR\n#1031\nby\n@patrickmckenna\n.\nRefactor calling each a path operation's handler function in an isolated function, to simplify profiling. PR\n#1027\nby\n@sm-Fifteen\n.\nAdd missing dependencies for testing. PR\n#1026\nby\n@sm-Fifteen\n.\nFix accepting valid types for response models, including Python types like\nList[int]\n. PR\n#1017\nby\n@patrickmckenna\n.\nFix format in SQL tutorial. PR\n#1015\nby\n@vegarsti\n.\n0.49.1\n¶\nFix path operation duplicated parameters when used in dependencies and the path operation function. PR\n#994\nby\n@merowinger92\n.\nUpdate Netlify previews deployment GitHub action as the fix is already merged and there's a new release. PR\n#1047\n.\nMove mypy configurations to config file. PR\n#987\nby\n@hukkinj1\n.\nTemporary fix to Netlify previews not deployable from PRs from forks. PR\n#1046\nby\n@mariacamilagl\n.\n0.49.0\n¶\nFix encoding of\npathlib\npaths in\njsonable_encoder\n. PR\n#978\nby\n@patrickmckenna\n.\nAdd articles to\nExternal Links\n:\nPythonのWeb frameworkのパフォーマンス比較 (Django, Flask, responder, FastAPI, japronto)\nand\n[FastAPI] Python製のASGI Web フレームワーク FastAPIに入門する\n. PR\n#974\nby\n@tokusumi\n.\nFix broken links in docs. PR\n#949\nby\n@tsotnikov\n.\nFix small typos. PR\n#941\nby\n@NikitaKolesov\n.\nUpdate and clarify docs for dependencies with\nyield\n. PR\n#986\n.\nAdd Mermaid JS support for diagrams in docs. Add first diagrams to\nDependencies: First Steps\nand\nDependencies with\nyield\nand\nHTTPException\n. PR\n#985\n.\nUpdate CI to run docs deployment in GitHub actions. PR\n#983\n.\nAllow\ncallable\ns in\npath operation functions\n, like functions modified with\nfunctools.partial\n. PR\n#977\n.\n0.48.0\n¶\nRun linters first in tests to error out faster. PR\n#948\n.\nLog warning about\nemail-validator\nonly when used. PR\n#946\n.\nSimplify\nPeewee docs\nwith double dependency with\nyield\n. PR\n#947\n.\nAdd article\nExternal Links\n:\nCreate and Deploy FastAPI app to Heroku\n. PR\n#942\nby\n@windson\n.\nUpdate description of Sanic, as it is now ASGI too. PR\n#932\nby\n@raphaelauv\n.\nFix typo in main page. PR\n#920\nby\n@mMarzeta\n.\nFix parsing of possibly invalid bodies. PR\n#918\nby\n@dmontagu\n.\nFix typo\n#916\nby\n@adursun\n.\nAllow\nAny\ntype for enums in OpenAPI. PR\n#906\nby\n@songzhi\n.\nAdd article to\nExternal Links\n:\nHow to continuously deploy a FastAPI to AWS Lambda with AWS SAM\n. PR\n#901\nby\n@iwpnd\n.\nAdd note about using Body parameters without Pydantic. PR\n#900\nby\n@pawamoy\n.\nFix Pydantic field clone logic. PR\n#899\nby\n@deuce2367\n.\nFix link in middleware docs. PR\n#893\nby\n@linchiwei123\n.\nRename default API title from \"Fast API\" to \"FastAPI\" for consistency. PR\n#890\n.\n0.47.1\n¶\nFix model filtering in\nresponse_model\n, cloning sub-models. PR\n#889\n.\nFix FastAPI serialization of Pydantic models using ORM mode blocking the event loop. PR\n#888\n.\n0.47.0\n¶\nRefactor documentation to make a simpler and shorter\nTutorial - User Guide\nand an additional\nAdvanced User Guide\nwith all the additional docs. PR\n#887\n.\nTweak external links, Markdown format, typos. PR\n#881\n.\nFix bug in tutorial handling HTTP Basic Auth\nusername\nand\npassword\n. PR\n#865\nby\n@isaevpd\n.\nFix handling form\npath operation\nparameters declared with pure classes like\nlist\n,\ntuple\n, etc. PR\n#856\nby\n@nsidnev\n.\nAdd request\nbody\nto\nRequestValidationError\n, new docs:\nUse the\nRequestValidationError\nbody\n. Initial PR\n#853\nby\n@aviramha\n.\nUpdate\nExternal Links\nwith new links and dynamic GitHub projects with\nfastapi\ntopic. PR\n#850\n.\nFix Peewee\ncontextvars\nhandling in docs:\nSQL (Relational) Databases with Peewee\n. PR\n#879\n.\nSetup development environment with Python's Venv and Flit, instead of requiring the extra Pipenv duplicating dependencies. Updated docs:\nDevelopment - Contributing\n. PR\n#877\n.\nUpdate docs for\nHTTP Basic Auth\nto improve security against timing attacks. Initial PR\n#807\nby\n@zwass\n.\n0.46.0\n¶\nFix typos and tweak configs. PR\n#837\n.\nAdd link to Chinese article in\nExternal Links\n. PR\n810\nby\n@wxq0309\n.\nImplement\nOAuth2AuthorizationCodeBearer\nclass. PR\n#797\nby\n@kuwv\n.\nUpdate example upgrade in docs main page. PR\n#795\nby\n@cdeil\n.\nFix callback handling for sub-routers. PR\n#792\nby\n@jekirl\n.\nFix typos. PR\n#784\nby\n@kkinder\n.\nAdd 4 Japanese articles to\nExternal Links\n. PR\n#783\nby\n@HymanZHAN\n.\nAdd support for subtypes of main types in\njsonable_encoder\n, e.g. asyncpg's UUIDs. PR\n#756\nby\n@RmStorm\n.\nFix usage of Pydantic's\nHttpUrl\nin docs. PR\n#832\nby\n@Dustyposa\n.\nFix Twitter links in docs. PR\n#813\nby\n@justindujardin\n.\nAdd docs for correctly\nusing FastAPI with Peewee ORM\n. Including how to overwrite parts of Peewee to correctly handle async threads. PR\n#789\n.\n0.45.0\n¶\nAdd support for OpenAPI Callbacks:\nNew docs:\nOpenAPI Callbacks\n.\nRefactor generation of\noperationId\ns to be valid Python names (also valid variables in most languages).\nAdd\ndefault_response_class\nparameter to\nAPIRouter\n.\nOriginal PR\n#722\nby\n@booooh\n.\nRefactor logging to use the same logger everywhere, update log strings and levels. PR\n#781\n.\nAdd article to\nExternal Links\n:\nПочему Вы должны попробовать FastAPI?\n. PR\n#766\nby\n@prostomarkeloff\n.\nRemove gender bias in docs for handling errors. PR\n#780\n. Original idea in PR\n#761\nby\n@classywhetten\n.\nRename docs and references to\nbody-schema\nto\nbody-fields\nto keep in line with Pydantic. PR\n#746\nby\n@prostomarkeloff\n.\n0.44.1\n¶\nAdd GitHub social preview images to git. PR\n#752\n.\nUpdate PyPI \"trove classifiers\". PR\n#751\n.\nAdd full support for Python 3.8. Enable Python 3.8 in full in Travis. PR\n749\n.\nUpdate \"new issue\" templates. PR\n#749\n.\nFix serialization of errors for exotic Pydantic types. PR\n#748\nby\n@dmontagu\n.\n0.44.0\n¶\nAdd GitHub action\nIssue Manager\n. PR\n#742\n.\nFix typos in docs. PR\n734\nby\n@bundabrg\n.\nFix usage of\ncustom_encoder\nin\njsonable_encoder\n. PR\n#715\nby\n@matrixise\n.\nFix invalid XML example. PR\n710\nby\n@OcasoProtal\n.\nFix typos and update wording in deployment docs. PR\n#700\nby\n@marier-nico\n.\nAdd note about dependencies in\nAPIRouter\ndocs. PR\n#698\nby\n@marier-nico\n.\nAdd support for async class methods as dependencies\n#681\nby\n@frankie567\n.\nAdd FastAPI with Swagger UI cheatsheet to external links. PR\n#671\nby\n@euri10\n.\nFix typo in HTTP protocol in CORS example. PR\n#647\nby\n@forestmonster\n.\nAdd support for Pydantic versions\n1.0.0\nand above, with temporary (deprecated) backwards compatibility for Pydantic\n0.32.2\n. PR\n#646\nby\n@dmontagu\n.\n0.43.0\n¶\nUpdate docs to reduce gender bias. PR\n#645\nby\n@ticosax\n.\nAdd docs about\noverriding the\noperationId\nfor all the\npath operations\nbased on their function name. PR\n#642\nby\n@SKalt\n.\nFix validators in models generating an incorrect key order. PR\n#637\nby\n@jaddison\n.\nGenerate correct OpenAPI docs for responses with no content. PR\n#621\nby\n@brotskydotcom\n.\nRemove\n$\nfrom Bash code blocks in docs for consistency. PR\n#613\nby\n@nstapelbroek\n.\nAdd docs for\nself-serving docs' (Swagger UI) static assets\n, e.g. to use the docs offline, or without Internet. Initial PR\n#557\nby\n@svalouch\n.\nFix\nblack\nlinting after upgrade. PR\n#682\nby\n@frankie567\n.\n0.42.0\n¶\nAdd dependencies with\nyield\n, a.k.a. exit steps, context managers, cleanup, teardown, ...\nThis allows adding extra code after a dependency is done. It can be used, for example, to close database connections.\nDependencies with\nyield\ncan be normal or\nasync\n,\nFastAPI\nwill run normal dependencies in a threadpool.\nThey can be combined with normal dependencies.\nIt's possible to have arbitrary trees/levels of dependencies with\nyield\nand exit steps are handled in the correct order automatically.\nIt works by default in Python 3.7 or above. For Python 3.6, it requires the extra backport dependencies:\nasync-exit-stack\nasync-generator\nNew docs at\nDependencies with\nyield\n.\nUpdated database docs\nSQL (Relational) Databases: Main\nFastAPI\napp\n.\nPR\n#595\n.\nFix\nsitemap.xml\nin website. PR\n#598\nby\n@samuelcolvin\n.\n0.41.0\n¶\nUpgrade required Starlette to\n0.12.9\n, the new range is\n>=0.12.9,<=0.12.9\n.\nAdd\nState\nto FastAPI apps at\napp.state\n.\nPR\n#593\n.\nImprove handling of custom classes for\nRequest\ns and\nAPIRoute\ns.\nThis helps to more easily solve use cases like:\nReading a body before and/or after a request (equivalent to a middleware).\nRun middleware-like code only for a subset of\npath operations\n.\nProcess a request before passing it to a\npath operation function\n. E.g. decompressing, deserializing, etc.\nProcessing a response after being generated by\npath operation functions\nbut before returning it. E.g. adding custom headers, logging, adding extra metadata.\nNew docs section:\nCustom Request and APIRoute class\n.\nPR\n#589\nby\n@dmontagu\n.\nFix preserving custom route class in routers when including other sub-routers. PR\n#538\nby\n@dmontagu\n.\n0.40.0\n¶\nAdd notes to docs about installing\npython-multipart\nwhen using forms. PR\n#574\nby\n@sliptonic\n.\nGenerate OpenAPI schemas in alphabetical order. PR\n#554\nby\n@dmontagu\n.\nAdd support for truncating docstrings from\npath operation functions\n.\nNew docs at\nAdvanced description from docstring\n.\nPR\n#556\nby\n@svalouch\n.\nFix\nDOCTYPE\nin HTML files generated for Swagger UI and ReDoc. PR\n#537\nby\n@Trim21\n.\nFix handling\n4XX\nresponses overriding default\n422\nvalidation error responses. PR\n#517\nby\n@tsouvarev\n.\nFix typo in documentation for\nSimple HTTP Basic Auth\n. PR\n#514\nby\n@prostomarkeloff\n.\nFix incorrect documentation example in\nfirst steps\n. PR\n#511\nby\n@IgnatovFedor\n.\nAdd support for Swagger UI\ninitOauth\nsettings with the parameter\nswagger_ui_init_oauth\n. PR\n#499\nby\n@zamiramir\n.\n0.39.0\n¶\nAllow path parameters to have default values (e.g.\nNone\n) and discard them instead of raising an error.\nThis allows declaring a parameter like\nuser_id: str = None\nthat can be taken from a query parameter, but the same\npath operation\ncan be included in a router with a path\n/users/{user_id}\n, in which case will be taken from the path and will be required.\nPR\n#464\nby\n@jonathanunderwood\n.\nAdd support for setting a\ndefault_response_class\nin the\nFastAPI\ninstance or in\ninclude_router\n. Initial PR\n#467\nby\n@toppk\n.\nAdd support for type annotations using strings and\nfrom __future__ import annotations\n. PR\n#451\nby\n@dmontagu\n.\n0.38.1\n¶\nFix incorrect\nRequest\nclass import. PR\n#493\nby\n@kamalgill\n.\n0.38.0\n¶\nAdd recent articles to\nExternal Links\nand recent opinions. PR\n#490\n.\nUpgrade support range for Starlette to include\n0.12.8\n. The new range is\n>=0.11.1,<=0.12.8\"\n. PR\n#477\nby\n@dmontagu\n.\nUpgrade support to Pydantic version 0.32.2 and update internal code to use it (breaking change). PR\n#463\nby\n@dmontagu\n.\n0.37.0\n¶\nAdd support for custom route classes for advanced use cases. PR\n#468\nby\n@dmontagu\n.\nAllow disabling Google fonts in ReDoc. PR\n#481\nby\n@b1-luettje\n.\nFix security issue: when returning a sub-class of a response model and using\nskip_defaults\nit could leak information. PR\n#485\nby\n@dmontagu\n.\nEnable tests for Python 3.8-dev. PR\n#465\nby\n@Jamim\n.\nAdd support and tests for Pydantic dataclasses in\nresponse_model\n. PR\n#454\nby\n@dconathan\n.\nFix typo in OAuth2 JWT tutorial. PR\n#447\nby\n@pablogamboa\n.\nUse the\nmedia_type\nparameter in\nBody()\nparams to set the media type in OpenAPI for\nrequestBody\n. PR\n#439\nby\n@divums\n.\nAdd article\nDeploying a scikit-learn model with ONNX and FastAPI\nby\nNico Axtmann\n. PR\n#438\nby\n@naxty\n.\nAllow setting custom\n422\n(validation error) response/schema in OpenAPI.\nAnd use media type from response class instead of fixed\napplication/json\n(the default).\nPR\n#437\nby\n@divums\n.\nFix using\n\"default\"\nextra response with status codes at the same time. PR\n#489\n.\nAllow additional responses to use status code ranges (like\n5XX\nand\n4XX\n) and\n\"default\"\n. PR\n#435\nby\n@divums\n.\n0.36.0\n¶\nFix implementation for\nskip_defaults\nwhen returning a Pydantic model. PR\n#422\nby\n@dmontagu\n.\nFix OpenAPI generation when using the same dependency in multiple places for the same\npath operation\n. PR\n#417\nby\n@dmontagu\n.\nAllow having empty paths in\npath operations\nused with\ninclude_router\nand a\nprefix\n.\nThis allows having a router for\n/cats\nand all its\npath operations\n, while having one of them for\n/cats\n.\nNow it doesn't have to be only\n/cats/\n(with a trailing slash).\nTo use it, declare the path in the\npath operation\nas the empty string (\n\"\"\n).\nPR\n#415\nby\n@vitalik\n.\nFix mypy error after merging PR #415. PR\n#462\n.\n0.35.0\n¶\nFix typo in routing\nassert\n. PR\n#419\nby\n@pablogamboa\n.\nFix typo in docs. PR\n#411\nby\n@bronsen\n.\nFix parsing a body type declared with\nUnion\n. PR\n#400\nby\n@koxudaxi\n.\n0.34.0\n¶\nUpgrade Starlette supported range to include the latest\n0.12.7\n. The new range is\n0.11.1,<=0.12.7\n. PR\n#367\nby\n@dedsm\n.\nAdd test for OpenAPI schema with duplicate models from PR\n#333\nby\n@dmontagu\n. PR\n#385\n.\n0.33.0\n¶\nUpgrade Pydantic version to\n0.30.0\n. PR\n#384\nby\n@jekirl\n.\n0.32.0\n¶\nFix typo in docs for features. PR\n#380\nby\n@MartinoMensio\n.\nFix source code\nlimit\nfor example in\nQuery Parameters\n. PR\n#366\nby\n@Smashman\n.\nUpdate wording in docs about\nOAuth2 scopes\n. PR\n#371\nby\n@cjw296\n.\nUpdate docs for\nEnum\ns to inherit from\nstr\nand improve Swagger UI rendering. PR\n#351\n.\nFix regression, add Swagger UI deep linking again. PR\n#350\n.\nAdd test for having path templates in\nprefix\nof\n.include_router\n. PR\n#349\n.\nAdd note to docs:\nInclude the same router multiple times with different\nprefix\n. PR\n#348\n.\nFix OpenAPI/JSON Schema generation for two functions with the same name (in different modules) with the same composite bodies.\nComposite bodies' IDs are now based on path, not only on route name, as the auto-generated name uses the function names, that can be duplicated in different modules.\nThe same new ID generation applies to response models.\nThis also changes the generated title for those models.\nOnly composite bodies and response models are affected because those are generated dynamically, they don't have a module (a Python file).\nThis also adds the possibility of using\n.include_router()\nwith the same\nAPIRouter\nmultiple\ntimes, with different prefixes, e.g.\n/api/v2\nand\n/api/latest\n, and it will now work correctly.\nPR\n#347\n.\n0.31.0\n¶\nUpgrade Pydantic supported version to\n0.29.0\n.\nNew supported version range is\n\"pydantic >=0.28,<=0.29.0\"\n.\nThis adds support for Pydantic\nGeneric Models\n, kudos to\n@dmontagu\n.\nPR\n#344\n.\n0.30.1\n¶\nAdd section in docs about\nExternal Links and Articles\n. PR\n#341\n.\nRemove\nPipfile.lock\nfrom the repository as it is only used by FastAPI contributors (developers of FastAPI itself). See the PR for more details. PR\n#340\n.\nUpdate section about\nHelp FastAPI - Get Help\n. PR\n#339\n.\nRefine internal type declarations to improve/remove Mypy errors in users' code. PR\n#338\n.\nUpdate and clarify\nSQL tutorial with SQLAlchemy\n. PR\n#331\nby\n@mariacamilagl\n.\nAdd SQLite\nonline viewers to the docs\n. PR\n#330\nby\n@cyrilbois\n.\n0.30.0\n¶\nAdd support for Pydantic's ORM mode:\nUpdated documentation about SQL with SQLAlchemy, using Pydantic models with ORM mode, SQLAlchemy models with relations, separation of files, simplification of code and other changes. New docs:\nSQL (Relational) Databases\n.\nThe new support for ORM mode fixes issues/adds features related to ORMs with lazy-loading, hybrid properties, dynamic/getters (using\n@property\ndecorators) and several other use cases.\nThis applies to ORMs like SQLAlchemy, Peewee, Tortoise ORM, GINO ORM and virtually any other.\nIf your\npath operations\nreturn an arbitrary object with attributes (e.g.\nmy_item.name\ninstead of\nmy_item[\"name\"]\n) AND you use a\nresponse_model\n, make sure to update the Pydantic models with\norm_mode = True\nas described in the docs (link above).\nNew documentation about receiving plain\ndict\ns as request bodies:\nBodies of arbitrary\ndict\ns\n.\nNew documentation about returning arbitrary\ndict\ns in responses:\nResponse with arbitrary\ndict\n.\nTechnical Details\n:\nWhen declaring a\nresponse_model\nit is used directly to generate the response content, from whatever was returned from the\npath operation function\n.\nBefore this, the return content was first passed through\njsonable_encoder\nto ensure it was a \"jsonable\" object, like a\ndict\n, instead of an arbitrary object with attributes (like an ORM model). That's why you should make sure to update your Pydantic models for objects with attributes to use\norm_mode = True\n.\nIf you don't have a\nresponse_model\n, the return object will still be passed through\njsonable_encoder\nfirst.\nWhen a\nresponse_model\nis declared, the same\nresponse_model\ntype declaration won't be used as is, it will be \"cloned\" to create an new one (a cloned Pydantic\nField\nwith all the submodels cloned as well).\nThis avoids/fixes a potential security issue: as the returned object is passed directly to Pydantic, if the returned object was a subclass of the\nresponse_model\n(e.g. you return a\nUserInDB\nthat inherits from\nUser\nbut contains extra fields, like\nhashed_password\n, and\nUser\nis used in the\nresponse_model\n), it would still pass the validation (because\nUserInDB\nis a subclass of\nUser\n) and the object would be returned as-is, including the\nhashed_password\n. To fix this, the declared\nresponse_model\nis cloned, if it is a Pydantic model class (or contains Pydantic model classes in it, e.g. in a\nList[Item]\n), the Pydantic model class(es) will be a different one (the \"cloned\" one). So, an object that is a subclass won't simply pass the validation and returned as-is, because it is no longer a sub-class of the cloned\nresponse_model\n. Instead, a new Pydantic model object will be created with the contents of the returned object. So, it will be a new object (made with the data from the returned one), and will be filtered by the cloned\nresponse_model\n, containing only the declared fields as normally.\nPR\n#322\n.\nRemove/clean unused RegEx code in routing. PR\n#314\nby\n@dmontagu\n.\nUse default response status code descriptions for additional responses. PR\n#313\nby\n@duxiaoyao\n.\nUpgrade Pydantic support to\n0.28\n. PR\n#320\nby\n@jekirl\n.\n0.29.1\n¶\nFix handling an empty-body request with a required body param. PR\n#311\n.\nFix broken link in docs:\nReturn a Response directly\n. PR\n#306\nby\n@dmontagu\n.\nFix docs discrepancy in docs for\nResponse Model\n. PR\n#288\nby\n@awiddersheim\n.\n0.29.0\n¶\nAdd support for declaring a\nResponse\nparameter:\nThis allows declaring:\nResponse Cookies\n.\nResponse Headers\n.\nAn HTTP Status Code different than the default:\nResponse - Change Status Code\n.\nAll of this while still being able to return arbitrary objects (\ndict\n, DB model, etc).\nUpdate attribution to Hug, for inspiring the\nresponse\nparameter pattern.\nPR\n#294\n.\n0.28.0\n¶\nImplement dependency cache per request.\nThis avoids calling each dependency multiple times for the same request.\nThis is useful while calling external services, performing costly computation, etc.\nThis also means that if a dependency was declared as a\npath operation decorator\ndependency, possibly at the router level (with\n.include_router()\n) and then it is declared again in a specific\npath operation\n, the dependency will be called only once.\nThe cache can be disabled per dependency declaration, using\nuse_cache=False\nas in\nDepends(your_dependency, use_cache=False)\n.\nUpdated docs at:\nUsing the same dependency multiple times\n.\nPR\n#292\n.\nImplement dependency overrides for testing.\nThis allows using overrides/mocks of dependencies during tests.\nNew docs:\nTesting Dependencies with Overrides\n.\nPR\n#291\n.\n0.27.2\n¶\nFix path and query parameters receiving\ndict\nas a valid type. It should be mapped to a body payload. PR\n#287\n. Updated docs at:\nQuery parameter list / multiple values with defaults: Using\nlist\n.\n0.27.1\n¶\nFix\nauto_error=False\nhandling in\nHTTPBearer\nsecurity scheme. Do not\nraise\nwhen there's an incorrect\nAuthorization\nheader if\nauto_error=False\n. PR\n#282\n.\nFix type declaration of\nHTTPException\n. PR\n#279\n.\n0.27.0\n¶\nFix broken link in docs about OAuth 2.0 with scopes. PR\n#275\nby\n@dmontagu\n.\nRefactor param extraction using Pydantic\nField\n:\nLarge refactor, improvement, and simplification of param extraction from\npath operations\n.\nFix/add support for list\nquery parameters\nwith list defaults. New documentation:\nQuery parameter list / multiple values with defaults\n.\nAdd support for enumerations in\npath operation\nparameters. New documentation:\nPath Parameters: Predefined values\n.\nAdd support for type annotations using\nOptional\nas in\nparam: Optional[str] = None\n. New documentation:\nOptional type declarations\n.\nPR\n#278\n.\n0.26.0\n¶\nSeparate error handling for validation errors.\nThis will allow developers to customize the exception handlers.\nDocument better how to handle exceptions and use error handlers.\nInclude\nRequestValidationError\nand\nWebSocketRequestValidationError\n(this last one will be useful once\nencode/starlette#527\nor equivalent is merged).\nNew documentation about exceptions handlers:\nInstall custom exception handlers\n.\nOverride the default exception handlers\n.\nReuse\nFastAPI's\nexception handlers\n.\nPR\n#273\n.\nFix support for\npaths\nin\npath parameters\nwithout needing explicit\nPath(...)\n.\nPR\n#256\n.\nDocumented in PR\n#272\nby\n@wshayes\n.\nNew documentation at:\nPath Parameters containing paths\n.\nUpdate docs for testing FastAPI. Include using\nPOST\n, sending JSON, testing headers, etc. New documentation:\nTesting\n. PR\n#271\n.\nFix type declaration of\nresponse_model\nto allow generic Python types as\nList[Model]\n. Mainly to fix\nmypy\nfor users. PR\n#266\n.\n0.25.0\n¶\nAdd support for Pydantic's\ninclude\n,\nexclude\n,\nby_alias\n.\nUpdate documentation:\nResponse Model\n.\nAdd docs for:\nBody - updates\n, using Pydantic's\nskip_defaults\n.\nAdd method consistency tests.\nPR\n#264\n.\nAdd\nCONTRIBUTING.md\nfile to GitHub, to help new contributors. PR\n#255\nby\n@wshayes\n.\nAdd support for Pydantic's\nskip_defaults\n:\nThere's a new\npath operation decorator\nparameter\nresponse_model_skip_defaults\n.\nThe name of the parameter will most probably change in a future version to\nresponse_skip_defaults\n,\nmodel_skip_defaults\nor something similar.\nNew\ndocumentation section about using\nresponse_model_skip_defaults\n.\nPR\n#248\nby\n@wshayes\n.\n0.24.0\n¶\nAdd support for WebSockets with dependencies and parameters.\nSupport included for:\nDepends\nSecurity\nCookie\nHeader\nPath\nQuery\n...as these are compatible with the WebSockets protocol (e.g.\nBody\nis not).\nUpdated documentation for WebSockets\n.\nPR\n#178\nby\n@jekirl\n.\nUpgrade the compatible version of Pydantic to\n0.26.0\n.\nThis includes JSON Schema support for IP address and network objects, bug fixes, and other features.\nPR\n#247\nby\n@euri10\n.\n0.23.0\n¶\nUpgrade the compatible version of Starlette to\n0.12.0\n.\nThis includes support for ASGI 3 (the latest version of the standard).\nIt's now possible to use\nStarlette's\nStreamingResponse\nwith iterators, like\nfile-like\nobjects (as those returned by\nopen()\n).\nIt's now possible to use the low level utility\niterate_in_threadpool\nfrom\nstarlette.concurrency\n(for advanced scenarios).\nPR\n#243\n.\nAdd OAuth2 redirect page for Swagger UI. This allows having delegated authentication in the Swagger UI docs. For this to work, you need to add\n{your_origin}/docs/oauth2-redirect\nto the allowed callbacks in your OAuth2 provider (in Auth0, Facebook, Google, etc).\nFor example, during development, it could be\nhttp://localhost:8000/docs/oauth2-redirect\n.\nKeep in mind that this callback URL is independent of whichever one is used by your frontend. You might also have another callback at\nhttps://yourdomain.com/login/callback\n.\nThis is only to allow delegated authentication in the API docs with Swagger UI.\nPR\n#198\nby\n@steinitzu\n.\nMake Swagger UI and ReDoc route handlers (\npath operations\n) be\nasync\nfunctions instead of lambdas to improve performance. PR\n#241\nby\n@Trim21\n.\nMake Swagger UI and ReDoc URLs parameterizable, allowing to host and serve local versions of them and have offline docs. PR\n#112\nby\n@euri10\n.\n0.22.0\n¶\nAdd support for\ndependencies\nparameter:\nA parameter in\npath operation decorators\n, for dependencies that should be executed but the return value is not important or not used in the\npath operation function\n.\nA parameter in the\n.include_router()\nmethod of FastAPI applications and routers, to include dependencies that should be executed in each\npath operation\nin a router.\nThis is useful, for example, to require authentication or permissions in specific group of\npath operations\n.\nDifferent\ndependencies\ncan be applied to different routers.\nThese\ndependencies\nare run before the normal parameter dependencies. And normal dependencies are run too. They can be combined.\nDependencies declared in a router are executed first, then the ones defined in\npath operation decorators\n, and then the ones declared in normal parameters. They are all combined and executed.\nAll this also supports using\nSecurity\nwith\nscopes\nin those\ndependencies\nparameters, for more advanced OAuth 2.0 security scenarios with scopes.\nNew documentation about\ndependencies in\npath operation decorators\n.\nNew documentation about\ndependencies in the\ninclude_router()\nmethod\n.\nPR\n#235\n.\nFix OpenAPI documentation of Starlette URL convertors. Specially useful when using\npath\nconvertors, to take a whole path as a parameter, like\n/some/url/{p:path}\n. PR\n#234\nby\n@euri10\n.\nMake default parameter utilities exported from\nfastapi\nbe functions instead of classes (the new functions return instances of those classes). To be able to override the return types and fix\nmypy\nerrors in FastAPI's users' code. Applies to\nPath\n,\nQuery\n,\nHeader\n,\nCookie\n,\nBody\n,\nForm\n,\nFile\n,\nDepends\n, and\nSecurity\n. PR\n#226\nand PR\n#231\n.\nSeparate development scripts\ntest.sh\n,\nlint.sh\n, and\nformat.sh\n. PR\n#232\n.\nRe-enable\nblack\nformatting checks for Python 3.7. PR\n#229\nby\n@zamiramir\n.\n0.21.0\n¶\nOn body parsing errors, raise\nfrom\nprevious exception, to allow better introspection in logging code. PR\n#192\nby\n@ricardomomm\n.\nUse Python logger named \"\nfastapi\n\" instead of root logger. PR\n#222\nby\n@euri10\n.\nUpgrade Pydantic to version 0.25. PR\n#225\nby\n@euri10\n.\nFix typo in routing. PR\n#221\nby\n@djlambert\n.\n0.20.1\n¶\nAdd typing information to package including file\npy.typed\n. PR\n#209\nby\n@meadsteve\n.\nAdd FastAPI bot for Gitter. To automatically announce new releases. PR\n#189\n.\n0.20.0\n¶\nUpgrade OAuth2:\nUpgrade Password flow using Bearer tokens to use the correct HTTP status code 401\nUNAUTHORIZED\n, with\nWWW-Authenticate\nheaders.\nUpdate, simplify, and improve all the\nsecurity docs\n.\nAdd new\nscope_str\nto\nSecurityScopes\nand update docs:\nOAuth2 scopes\n.\nUpdate docs, images, tests.\nPR\n#188\n.\nInclude\nHypercorn\nas an alternative ASGI server in the docs. PR\n#187\n.\nAdd docs for\nStatic Files\nand\nTemplates\n. PR\n#186\n.\nAdd docs for handling\nResponse Cookies\nand\nResponse Headers\n. PR\n#185\n.\nFix typos in docs. PR\n#176\nby\n@chdsbd\n.\n0.19.0\n¶\nRename\npath operation decorator\nparameter\ncontent_type\nto\nresponse_class\n. PR\n#183\n.\nAdd docs:\nHow to use the\njsonable_encoder\nin\nJSON compatible encoder\n.\nHow to\nReturn a Response directly\n.\nUpdate how to use a\nCustom Response Class\n.\nPR\n#184\n.\n0.18.0\n¶\nAdd docs for\nHTTP Basic Auth\n. PR\n#177\n.\nUpgrade HTTP Basic Auth handling with automatic headers (automatic browser login prompt). PR\n#175\n.\nUpdate dependencies for security. PR\n#174\n.\nAdd docs for\nMiddleware\n. PR\n#173\n.\n0.17.0\n¶\nMake Flit publish from CI. PR\n#170\n.\nAdd documentation about handling\nCORS (Cross-Origin Resource Sharing)\n. PR\n#169\n.\nBy default, encode by alias. This allows using Pydantic\nalias\nparameters working by default. PR\n#168\n.\n0.16.0\n¶\nUpgrade\npath operation\ndocstring\nparsing to support proper Markdown descriptions. New documentation at\nPath Operation Configuration\n. PR\n#163\n.\nRefactor internal usage of Pydantic to use correct data types. PR\n#164\n.\nUpgrade Pydantic to version\n0.23\n. PR\n#160\nby\n@euri10\n.\nFix typo in Tutorial about Extra Models. PR\n#159\nby\n@danielmichaels\n.\nFix\nQuery Parameters\nURL examples in docs. PR\n#157\nby\n@hayata-yamamoto\n.\n0.15.0\n¶\nAdd support for multiple file uploads (as a single form field). New docs at:\nMultiple file uploads\n. PR\n#158\n.\nAdd docs for:\nAdditional Status Codes\n. PR\n#156\n.\n0.14.0\n¶\nImprove automatically generated names of\npath operations\nin OpenAPI (in API docs). A function\nread_items\ninstead of having a generated name \"Read Items Get\" will have \"Read Items\". PR\n#155\n.\nAdd docs for:\nTesting\nFastAPI\n. PR\n#151\n.\nUpdate\n/docs\nSwagger UI to enable deep linking. This allows sharing the URL pointing directly to the\npath operation\ndocumentation in the docs. PR\n#148\nby\n@wshayes\n.\nUpdate development dependencies,\nPipfile.lock\n. PR\n#150\n.\nInclude Falcon and Hug in:\nAlternatives, Inspiration and Comparisons\n.\n0.13.0\n¶\nImprove/upgrade OAuth2 scopes support with\nSecurityScopes\n:\nSecurityScopes\ncan be declared as a parameter like\nRequest\n, to get the scopes of all super-dependencies/dependants.\nImprove\nSecurity\nhandling, merging scopes when declaring\nSecurityScopes\n.\nAllow using\nSecurityBase\n(like\nOAuth2\n) classes with\nDepends\nand still document them.\nSecurity\nnow is needed only to declare\nscopes\n.\nUpdated docs about:\nOAuth2 with Password (and hashing), Bearer with JWT tokens\n.\nNew docs about:\nOAuth2 scopes\n.\nPR\n#141\n.\n0.12.1\n¶\nFix bug: handling additional\nresponses\nin\nAPIRouter.include_router()\n. PR\n#140\n.\nFix typo in SQL tutorial. PR\n#138\nby\n@mostaphaRoudsari\n.\nFix typos in section about nested models and OAuth2 with JWT. PR\n#127\nby\n@mmcloud\n.\n0.12.0\n¶\nAdd additional\nresponses\nparameter to\npath operation decorators\nto extend responses in OpenAPI (and API docs).\nIt also allows extending existing responses generated from\nresponse_model\n, declare other media types (like images), etc.\nThe new documentation is here:\nAdditional Responses\n.\nresponses\ncan also be added to\n.include_router()\n, the updated docs are here:\nBigger Applications\n.\nPR\n#97\noriginally initiated by\n@barsi\n.\nUpdate\nscripts/test-cov-html.sh\nto allow passing extra parameters like\n-vv\n, for development.\n0.11.0\n¶\nAdd\nauto_error\nparameter to security utility functions. Allowing them to be optional. Also allowing to have multiple alternative security schemes that are then checked in a single dependency instead of each one verifying and returning the error to the client automatically when not satisfied. PR\n#134\n.\nUpdate\nSQL Tutorial\nto close database sessions even when there are exceptions. PR\n#89\nby\n@alexiri\n.\nFix duplicate dependency in\npyproject.toml\n. PR\n#128\nby\n@zxalif\n.\n0.10.3\n¶\nAdd Gitter chat, badge, links, etc.\nhttps://gitter.im/tiangolo/fastapi\n. PR\n#117\n.\nAdd docs about\nExtending OpenAPI\n. PR\n#126\n.\nMake Travis run Ubuntu Xenial (newer version) and Python 3.7 instead of Python 3.7-dev. PR\n#92\nby\n@blueyed\n.\nFix duplicated param variable creation. PR\n#123\nby\n@yihuang\n.\nAdd note in\nResponse Model docs\nabout why using a function parameter instead of a function return type annotation. PR\n#109\nby\n@JHSaunders\n.\nFix event docs (startup/shutdown) function name. PR\n#105\nby\n@stratosgear\n.\n0.10.2\n¶\nFix OpenAPI (JSON Schema) for declarations of Python\nUnion\n(JSON Schema\nadditionalProperties\n). PR\n#121\n.\nUpdate\nBackground Tasks\nwith a note on Celery.\nDocument response models using unions and lists, updated at:\nExtra Models\n. PR\n#108\n.\n0.10.1\n¶\nAdd docs and tests for\nencode/databases\n. New docs at:\nAsync SQL (Relational) Databases\n. PR\n#107\n.\n0.10.0\n¶\nAdd support for Background Tasks in\npath operation functions\nand dependencies. New documentation about\nBackground Tasks is here\n. PR\n#103\n.\nAdd support for\n.websocket_route()\nin\nAPIRouter\n. PR\n#100\nby\n@euri10\n.\nNew docs section about\nEvents: startup - shutdown\n. PR\n#99\n.\n0.9.1\n¶\nDocument receiving\nMultiple values with the same query parameter\nand\nDuplicate headers\n. PR\n#95\n.\n0.9.0\n¶\nUpgrade compatible Pydantic version to\n0.21.0\n. PR\n#90\n.\nAdd documentation for:\nApplication Configuration\n.\nFix typo in docs. PR\n#76\nby\n@matthewhegarty\n.\nFix link in \"Deployment\" to \"Bigger Applications\".\n0.8.0\n¶\nMake development scripts executable. PR\n#76\nby\n@euri10\n.\nAdd support for adding\ntags\nin\napp.include_router()\n. PR\n#55\nby\n@euri10\n. Documentation updated in the section:\nBigger Applications\n.\nUpdate docs related to Uvicorn to use new\n--reload\noption from version\n0.5.x\n. PR\n#74\n.\nUpdate\nisort\nimports and scripts to be compatible with newer versions. PR\n#75\n.\n0.7.1\n¶\nUpdate\ntechnical details about\nasync def\nhandling\nwith respect to previous frameworks. PR\n#64\nby\n@haizaar\n.\nAdd\ndeployment documentation for Docker in Raspberry Pi\nand other architectures.\nTrigger Docker images build on Travis CI automatically. PR\n#65\n.\n0.7.0\n¶\nAdd support for\nUploadFile\nin\nFile\nparameter annotations.\nThis includes a file-like interface.\nHere's the updated documentation for declaring\nFile\nparameters with\nUploadFile\n.\nAnd here's the updated documentation for using\nForm\nparameters mixed with\nFile\nparameters, supporting\nbytes\nand\nUploadFile\nat the same time.\nPR\n#63\n.\n0.6.4\n¶\nAdd\ntechnical details about\nasync def\nhandling to docs\n. PR\n#61\n.\nAdd docs for\nDebugging FastAPI applications in editors\n.\nClarify\nBigger Applications deployed with Docker\n.\nFix typos in docs.\nAdd section about\nHistory, Design and Future\n.\nAdd docs for using\nWebSockets with\nFastAPI\n. PR\n#62\n.\n0.6.3\n¶\nAdd Favicons to docs. PR\n#53\n.\n0.6.2\n¶\nIntroduce new project generator based on FastAPI and PostgreSQL:\nhttps://github.com/tiangolo/full-stack-fastapi-postgresql\n. PR\n#52\n.\nUpdate\nSQL tutorial with SQLAlchemy, using\nDepends\nto improve editor support and reduce code repetition\n. PR\n#52\n.\nImprove middleware naming in tutorial for SQL with SQLAlchemy\nhttps://fastapi.tiangolo.com/tutorial/sql-databases/\n.\n0.6.1\n¶\nAdd docs for GraphQL:\nhttps://fastapi.tiangolo.com/advanced/graphql/\n. PR\n#48\n.\n0.6.0\n¶\nUpdate SQL with SQLAlchemy tutorial at\nhttps://fastapi.tiangolo.com/tutorial/sql-databases/\nusing the new official\nrequest.state\n. PR\n#45\n.\nUpgrade Starlette to version\n0.11.1\nand add required compatibility changes. PR\n#44\n.\n0.5.1\n¶\nAdd section about\nhelping and getting help with\nFastAPI\n.\nAdd note about\npath operations order in docs\n.\nUpdate\nsection about error handling\nwith more information and make relation with Starlette error handling utilities more explicit. PR\n#41\n.\nAdd\nDevelopment - Contributing section to the docs\n. PR\n#42\n.\n0.5.0\n¶\nAdd new\nHTTPException\nwith support for custom headers. With new documentation for handling errors at:\nhttps://fastapi.tiangolo.com/tutorial/handling-errors/\n. PR\n#35\n.\nAdd\ndocumentation to use Starlette\nRequest\nobject\ndirectly. Check\n#25\nby\n@euri10\n.\nAdd issue templates to simplify reporting bugs, getting help, etc:\n#34\n.\nUpdate example for the SQLAlchemy tutorial at\nhttps://fastapi.tiangolo.com/tutorial/sql-databases/\nusing middleware and database session attached to request.\n0.4.0\n¶\nAdd\nopenapi_prefix\n, support for reverse proxy and mounting sub-applications. See the docs at\nhttps://fastapi.tiangolo.com/advanced/sub-applications-proxy/\n:\n#26\nby\n@kabirkhan\n.\nUpdate\ndocs/tutorial for SQLAlchemy\nincluding note about\nDB Browser for SQLite\n.\n0.3.0\n¶\nFix/add SQLAlchemy support, including ORM, and update\ndocs for SQLAlchemy\n:\n#30\n.\n0.2.1\n¶\nFix\njsonable_encoder\nfor Pydantic models with\nConfig\nbut without\njson_encoders\n:\n#29\n.\n0.2.0\n¶\nFix typos in Security section:\n#24\nby\n@kkinder\n.\nAdd support for Pydantic custom JSON encoders:\n#21\nby\n@euri10\n.\n0.1.19\n¶\nUpgrade Starlette version to the current latest\n0.10.1\n:\n#17\nby\n@euri10\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/deployment/concepts/",
    "title": "Deployments Concepts¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeployments Concepts\nTable of contents\nSecurity - HTTPS\nExample Tools for HTTPS\nProgram and Process\nWhat is a Program\nWhat is a Process\nRunning on Startup\nIn a Remote Server\nRun Automatically on Startup\nSeparate Program\nExample Tools to Run at Startup\nRestarts\nWe Make Mistakes\nSmall Errors Automatically Handled\nBigger Errors - Crashes\nRestart After Crash\nExample Tools to Restart Automatically\nReplication - Processes and Memory\nMultiple Processes - Workers\nWorker Processes and Ports\nMemory per Process\nServer Memory\nMultiple Processes - An Example\nExamples of Replication Tools and Strategies\nPrevious Steps Before Starting\nExamples of Previous Steps Strategies\nResource Utilization\nRecap\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nSecurity - HTTPS\nExample Tools for HTTPS\nProgram and Process\nWhat is a Program\nWhat is a Process\nRunning on Startup\nIn a Remote Server\nRun Automatically on Startup\nSeparate Program\nExample Tools to Run at Startup\nRestarts\nWe Make Mistakes\nSmall Errors Automatically Handled\nBigger Errors - Crashes\nRestart After Crash\nExample Tools to Restart Automatically\nReplication - Processes and Memory\nMultiple Processes - Workers\nWorker Processes and Ports\nMemory per Process\nServer Memory\nMultiple Processes - An Example\nExamples of Replication Tools and Strategies\nPrevious Steps Before Starting\nExamples of Previous Steps Strategies\nResource Utilization\nRecap\nFastAPI\nLearn\nDeployment\nDeployments Concepts\n¶\nWhen deploying a\nFastAPI\napplication, or actually, any type of web API, there are several concepts that you probably care about, and using them you can find the\nmost appropriate\nway to\ndeploy your application\n.\nSome of the important concepts are:\nSecurity - HTTPS\nRunning on startup\nRestarts\nReplication (the number of processes running)\nMemory\nPrevious steps before starting\nWe'll see how they would affect\ndeployments\n.\nIn the end, the ultimate objective is to be able to\nserve your API clients\nin a way that is\nsecure\n, to\navoid disruptions\n, and to use the\ncompute resources\n(for example remote servers/virtual machines) as efficiently as possible. 🚀\nI'll tell you a bit more about these\nconcepts\nhere, and that would hopefully give you the\nintuition\nyou would need to decide how to deploy your API in very different environments, possibly even in\nfuture\nones that don't exist yet.\nBy considering these concepts, you will be able to\nevaluate and design\nthe best way to deploy\nyour own APIs\n.\nIn the next chapters, I'll give you more\nconcrete recipes\nto deploy FastAPI applications.\nBut for now, let's check these important\nconceptual ideas\n. These concepts also apply to any other type of web API. 💡\nSecurity - HTTPS\n¶\nIn the\nprevious chapter about HTTPS\nwe learned about how HTTPS provides encryption for your API.\nWe also saw that HTTPS is normally provided by a component\nexternal\nto your application server, a\nTLS Termination Proxy\n.\nAnd there has to be something in charge of\nrenewing the HTTPS certificates\n, it could be the same component or it could be something different.\nExample Tools for HTTPS\n¶\nSome of the tools you could use as a TLS Termination Proxy are:\nTraefik\nAutomatically handles certificates renewals ✨\nCaddy\nAutomatically handles certificates renewals ✨\nNginx\nWith an external component like Certbot for certificate renewals\nHAProxy\nWith an external component like Certbot for certificate renewals\nKubernetes with an Ingress Controller like Nginx\nWith an external component like cert-manager for certificate renewals\nHandled internally by a cloud provider as part of their services (read below 👇)\nAnother option is that you could use a\ncloud service\nthat does more of the work including setting up HTTPS. It could have some restrictions or charge you more, etc. But in that case, you wouldn't have to set up a TLS Termination Proxy yourself.\nI'll show you some concrete examples in the next chapters.\nThen the next concepts to consider are all about the program running your actual API (e.g. Uvicorn).\nProgram and Process\n¶\nWe will talk a lot about the running \"\nprocess\n\", so it's useful to have clarity about what it means, and what's the difference with the word \"\nprogram\n\".\nWhat is a Program\n¶\nThe word\nprogram\nis commonly used to describe many things:\nThe\ncode\nthat you write, the\nPython files\n.\nThe\nfile\nthat can be\nexecuted\nby the operating system, for example:\npython\n,\npython.exe\nor\nuvicorn\n.\nA particular program while it is\nrunning\non the operating system, using the CPU, and storing things in memory. This is also called a\nprocess\n.\nWhat is a Process\n¶\nThe word\nprocess\nis normally used in a more specific way, only referring to the thing that is running in the operating system (like in the last point above):\nA particular program while it is\nrunning\non the operating system.\nThis doesn't refer to the file, nor to the code, it refers\nspecifically\nto the thing that is being\nexecuted\nand managed by the operating system.\nAny program, any code,\ncan only do things\nwhen it is being\nexecuted\n. So, when there's a\nprocess running\n.\nThe process can be\nterminated\n(or \"killed\") by you, or by the operating system. At that point, it stops running/being executed, and it can\nno longer do things\n.\nEach application that you have running on your computer has some process behind it, each running program, each window, etc. And there are normally many processes running\nat the same time\nwhile a computer is on.\nThere can be\nmultiple processes\nof the\nsame program\nrunning at the same time.\nIf you check out the \"task manager\" or \"system monitor\" (or similar tools) in your operating system, you will be able to see many of those processes running.\nAnd, for example, you will probably see that there are multiple processes running the same browser program (Firefox, Chrome, Edge, etc). They normally run one process per tab, plus some other extra processes.\nNow that we know the difference between the terms\nprocess\nand\nprogram\n, let's continue talking about deployments.\nRunning on Startup\n¶\nIn most cases, when you create a web API, you want it to be\nalways running\n, uninterrupted, so that your clients can always access it. This is of course, unless you have a specific reason why you want it to run only in certain situations, but most of the time you want it constantly running and\navailable\n.\nIn a Remote Server\n¶\nWhen you set up a remote server (a cloud server, a virtual machine, etc.) the simplest thing you can do is use\nfastapi run\n(which uses Uvicorn) or something  similar, manually, the same way you do when developing locally.\nAnd it will work and will be useful\nduring development\n.\nBut if your connection to the server is lost, the\nrunning process\nwill probably die.\nAnd if the server is restarted (for example after updates, or migrations from the cloud provider) you probably\nwon't notice it\n. And because of that, you won't even know that you have to restart the process manually. So, your API will just stay dead. 😱\nRun Automatically on Startup\n¶\nIn general, you will probably want the server program (e.g. Uvicorn) to be started automatically on server startup, and without needing any\nhuman intervention\n, to have a process always running with your API (e.g. Uvicorn running your FastAPI app).\nSeparate Program\n¶\nTo achieve this, you will normally have a\nseparate program\nthat would make sure your application is run on startup. And in many cases, it would also make sure other components or applications are also run, for example, a database.\nExample Tools to Run at Startup\n¶\nSome examples of the tools that can do this job are:\nDocker\nKubernetes\nDocker Compose\nDocker in Swarm Mode\nSystemd\nSupervisor\nHandled internally by a cloud provider as part of their services\nOthers...\nI'll give you more concrete examples in the next chapters.\nRestarts\n¶\nSimilar to making sure your application is run on startup, you probably also want to make sure it is\nrestarted\nafter failures.\nWe Make Mistakes\n¶\nWe, as humans, make\nmistakes\n, all the time. Software almost\nalways\nhas\nbugs\nhidden in different places. 🐛\nAnd we as developers keep improving the code as we find those bugs and as we implement new features (possibly adding new bugs too 😅).\nSmall Errors Automatically Handled\n¶\nWhen building web APIs with FastAPI, if there's an error in our code, FastAPI will normally contain it to the single request that triggered the error. 🛡\nThe client will get a\n500 Internal Server Error\nfor that request, but the application will continue working for the next requests instead of just crashing completely.\nBigger Errors - Crashes\n¶\nNevertheless, there might be cases where we write some code that\ncrashes the entire application\nmaking Uvicorn and Python crash. 💥\nAnd still, you would probably not want the application to stay dead because there was an error in one place, you probably want it to\ncontinue running\nat least for the\npath operations\nthat are not broken.\nRestart After Crash\n¶\nBut in those cases with really bad errors that crash the running\nprocess\n, you would want an external component that is in charge of\nrestarting\nthe process, at least a couple of times...\nTip\n...Although if the whole application is just\ncrashing immediately\nit probably doesn't make sense to keep restarting it forever. But in those cases, you will probably notice it during development, or at least right after deployment.\nSo let's focus on the main cases, where it could crash entirely in some particular cases\nin the future\n, and it still makes sense to restart it.\nYou would probably want to have the thing in charge of restarting your application as an\nexternal component\n, because by that point, the same application with Uvicorn and Python already crashed, so there's nothing in the same code of the same app that could do anything about it.\nExample Tools to Restart Automatically\n¶\nIn most cases, the same tool that is used to\nrun the program on startup\nis also used to handle automatic\nrestarts\n.\nFor example, this could be handled by:\nDocker\nKubernetes\nDocker Compose\nDocker in Swarm Mode\nSystemd\nSupervisor\nHandled internally by a cloud provider as part of their services\nOthers...\nReplication - Processes and Memory\n¶\nWith a FastAPI application, using a server program like the\nfastapi\ncommand that runs Uvicorn, running it once in\none process\ncan serve multiple clients concurrently.\nBut in many cases, you will want to run several worker processes at the same time.\nMultiple Processes - Workers\n¶\nIf you have more clients than what a single process can handle (for example if the virtual machine is not too big) and you have\nmultiple cores\nin the server's CPU, then you could have\nmultiple processes\nrunning with the same application at the same time, and distribute all the requests among them.\nWhen you run\nmultiple processes\nof the same API program, they are commonly called\nworkers\n.\nWorker Processes and Ports\n¶\nRemember from the docs\nAbout HTTPS\nthat only one process can be listening on one combination of port and IP address in a server?\nThis is still true.\nSo, to be able to have\nmultiple processes\nat the same time, there has to be a\nsingle process listening on a port\nthat then transmits the communication to each worker process in some way.\nMemory per Process\n¶\nNow, when the program loads things in memory, for example, a machine learning model in a variable, or the contents of a large file in a variable, all that\nconsumes a bit of the memory (RAM)\nof the server.\nAnd multiple processes normally\ndon't share any memory\n. This means that each running process has its own things, variables, and memory. And if you are consuming a large amount of memory in your code,\neach process\nwill consume an equivalent amount of memory.\nServer Memory\n¶\nFor example, if your code loads a Machine Learning model with\n1 GB in size\n, when you run one process with your API, it will consume at least 1 GB of RAM. And if you start\n4 processes\n(4 workers), each will consume 1 GB of RAM. So in total, your API will consume\n4 GB of RAM\n.\nAnd if your remote server or virtual machine only has 3 GB of RAM, trying to load more than 4 GB of RAM will cause problems. 🚨\nMultiple Processes - An Example\n¶\nIn this example, there's a\nManager Process\nthat starts and controls two\nWorker Processes\n.\nThis Manager Process would probably be the one listening on the\nport\nin the IP. And it would transmit all the communication to the worker processes.\nThose worker processes would be the ones running your application, they would perform the main computations to receive a\nrequest\nand return a\nresponse\n, and they would load anything you put in variables in RAM.\nAnd of course, the same machine would probably have\nother processes\nrunning as well, apart from your application.\nAn interesting detail is that the percentage of the\nCPU used\nby each process can\nvary\na lot over time, but the\nmemory (RAM)\nnormally stays more or less\nstable\n.\nIf you have an API that does a comparable amount of computations every time and you have a lot of clients, then the\nCPU utilization\nwill probably\nalso be stable\n(instead of constantly going up and down quickly).\nExamples of Replication Tools and Strategies\n¶\nThere can be several approaches to achieve this, and I'll tell you more about specific strategies in the next chapters, for example when talking about Docker and containers.\nThe main constraint to consider is that there has to be a\nsingle\ncomponent handling the\nport\nin the\npublic IP\n. And then it has to have a way to\ntransmit\nthe communication to the replicated\nprocesses/workers\n.\nHere are some possible combinations and strategies:\nUvicorn\nwith\n--workers\nOne Uvicorn\nprocess manager\nwould listen on the\nIP\nand\nport\n, and it would start\nmultiple Uvicorn worker processes\n.\nKubernetes\nand other distributed\ncontainer systems\nSomething in the\nKubernetes\nlayer would listen on the\nIP\nand\nport\n. The replication would be by having\nmultiple containers\n, each with\none Uvicorn process\nrunning.\nCloud services\nthat handle this for you\nThe cloud service will probably\nhandle replication for you\n. It would possibly let you define\na process to run\n, or a\ncontainer image\nto use, in any case, it would most probably be\na single Uvicorn process\n, and the cloud service would be in charge of replicating it.\nTip\nDon't worry if some of these items about\ncontainers\n, Docker, or Kubernetes don't make a lot of sense yet.\nI'll tell you more about container images, Docker, Kubernetes, etc. in a future chapter:\nFastAPI in Containers - Docker\n.\nPrevious Steps Before Starting\n¶\nThere are many cases where you want to perform some steps\nbefore starting\nyour application.\nFor example, you might want to run\ndatabase migrations\n.\nBut in most cases, you will want to perform these steps only\nonce\n.\nSo, you will want to have a\nsingle process\nto perform those\nprevious steps\n, before starting the application.\nAnd you will have to make sure that it's a single process running those previous steps\neven\nif afterwards, you start\nmultiple processes\n(multiple workers) for the application itself. If those steps were run by\nmultiple processes\n, they would\nduplicate\nthe work by running it in\nparallel\n, and if the steps were something delicate like a database migration, they could cause conflicts with each other.\nOf course, there are some cases where there's no problem in running the previous steps multiple times, in that case, it's a lot easier to handle.\nTip\nAlso, keep in mind that depending on your setup, in some cases you\nmight not even need any previous steps\nbefore starting your application.\nIn that case, you wouldn't have to worry about any of this. 🤷\nExamples of Previous Steps Strategies\n¶\nThis will\ndepend heavily\non the way you\ndeploy your system\n, and it would probably be connected to the way you start programs, handling restarts, etc.\nHere are some possible ideas:\nAn \"Init Container\" in Kubernetes that runs before your app container\nA bash script that runs the previous steps and then starts your application\nYou would still need a way to start/restart\nthat\nbash script, detect errors, etc.\nTip\nI'll give you more concrete examples for doing this with containers in a future chapter:\nFastAPI in Containers - Docker\n.\nResource Utilization\n¶\nYour server(s) is (are) a\nresource\n, you can consume or\nutilize\n, with your programs, the computation time on the CPUs, and the RAM memory available.\nHow much of the system resources do you want to be consuming/utilizing? It might be easy to think \"not much\", but in reality, you will probably want to consume\nas much as possible without crashing\n.\nIf you are paying for 3 servers but you are using only a little bit of their RAM and CPU, you are probably\nwasting money\n💸, and probably\nwasting server electric power\n🌎, etc.\nIn that case, it could be better to have only 2 servers and use a higher percentage of their resources (CPU, memory, disk, network bandwidth, etc).\nOn the other hand, if you have 2 servers and you are using\n100% of their CPU and RAM\n, at some point one process will ask for more memory, and the server will have to use the disk as \"memory\" (which can be thousands of times slower), or even\ncrash\n. Or one process might need to do some computation and would have to wait until the CPU is free again.\nIn this case, it would be better to get\none extra server\nand run some processes on it so that they all have\nenough RAM and CPU time\n.\nThere's also the chance that for some reason you have a\nspike\nof usage of your API. Maybe it went viral, or maybe some other services or bots start using it. And you might want to have extra resources to be safe in those cases.\nYou could put an\narbitrary number\nto target, for example, something\nbetween 50% to 90%\nof resource utilization. The point is that those are probably the main things you will want to measure and use to tweak your deployments.\nYou can use simple tools like\nhtop\nto see the CPU and RAM used in your server or the amount used by each process. Or you can use more complex monitoring tools, which may be distributed across servers, etc.\nRecap\n¶\nYou have been reading here some of the main concepts that you would probably need to keep in mind when deciding how to deploy your application:\nSecurity - HTTPS\nRunning on startup\nRestarts\nReplication (the number of processes running)\nMemory\nPrevious steps before starting\nUnderstanding these ideas and how to apply them should give you the intuition necessary to take any decisions when configuring and tweaking your deployments. 🤓\nIn the next sections, I'll give you more concrete examples of possible strategies you can follow. 🚀\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/openapi/",
    "title": "OpenAPI¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nFastAPI\nReference\nOpenAPI\nOpenAPI\n¶\nThere are several utilities to handle OpenAPI.\nYou normally don't need to use them unless you have a specific advanced use case that requires it.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/benchmarks/",
    "title": "Benchmarks¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nBenchmarks\nTable of contents\nBenchmarks and speed\nRepository Management\nRelease Notes\nTable of contents\nBenchmarks and speed\nFastAPI\nAbout\nBenchmarks\n¶\nIndependent TechEmpower benchmarks show\nFastAPI\napplications running under Uvicorn as\none of the fastest Python frameworks available\n, only below Starlette and Uvicorn themselves (used internally by FastAPI).\nBut when checking benchmarks and comparisons you should keep the following in mind.\nBenchmarks and speed\n¶\nWhen you check the benchmarks, it is common to see several tools of different types compared as equivalent.\nSpecifically, to see Uvicorn, Starlette and FastAPI compared together (among many other tools).\nThe simpler the problem solved by the tool, the better performance it will get. And most of the benchmarks don't test the additional features provided by the tool.\nThe hierarchy is like:\nUvicorn\n: an ASGI server\nStarlette\n: (uses Uvicorn) a web microframework\nFastAPI\n: (uses Starlette) an API microframework with several additional features for building APIs, with data validation, etc.\nUvicorn\n:\nWill have the best performance, as it doesn't have much extra code apart from the server itself.\nYou wouldn't write an application in Uvicorn directly. That would mean that your code would have to include more or less, at least, all the code provided by Starlette (or\nFastAPI\n). And if you did that, your final application would have the same overhead as having used a framework and minimizing your app code and bugs.\nIf you are comparing Uvicorn, compare it against Daphne, Hypercorn, uWSGI, etc. Application servers.\nStarlette\n:\nWill have the next best performance, after Uvicorn. In fact, Starlette uses Uvicorn to run. So, it probably can only get \"slower\" than Uvicorn by having to execute more code.\nBut it provides you the tools to build simple web applications, with routing based on paths, etc.\nIf you are comparing Starlette, compare it against Sanic, Flask, Django, etc. Web frameworks (or microframeworks).\nFastAPI\n:\nThe same way that Starlette uses Uvicorn and cannot be faster than it,\nFastAPI\nuses Starlette, so it cannot be faster than it.\nFastAPI provides more features on top of Starlette. Features that you almost always need when building APIs, like data validation and serialization. And by using it, you get automatic documentation for free (the automatic documentation doesn't even add overhead to running applications, it is generated on startup).\nIf you didn't use FastAPI and used Starlette directly (or another tool, like Sanic, Flask, Responder, etc) you would have to implement all the data validation and serialization yourself. So, your final application would still have the same overhead as if it was built using FastAPI. And in many cases, this data validation and serialization is the biggest amount of code written in applications.\nSo, by using FastAPI you are saving development time, bugs, lines of code, and you would probably get the same performance (or better) you would if you didn't use it (as you would have to implement it all in your code).\nIf you are comparing FastAPI, compare it against a web application framework (or set of tools) that provides data validation, serialization and documentation, like Flask-apispec, NestJS, Molten, etc. Frameworks with integrated automatic data validation, serialization and documentation.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/response-directly/",
    "title": "Return a Response Directly¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nReturn a Response Directly\nTable of contents\nReturn a\nResponse\nUsing the\njsonable_encoder\nin a\nResponse\nReturning a custom\nResponse\nNotes\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nReturn a\nResponse\nUsing the\njsonable_encoder\nin a\nResponse\nReturning a custom\nResponse\nNotes\nFastAPI\nLearn\nAdvanced User Guide\nReturn a Response Directly\n¶\nWhen you create a\nFastAPI\npath operation\nyou can normally return any data from it: a\ndict\n, a\nlist\n, a Pydantic model, a database model, etc.\nBy default,\nFastAPI\nwould automatically convert that return value to JSON using the\njsonable_encoder\nexplained in\nJSON Compatible Encoder\n.\nThen, behind the scenes, it would put that JSON-compatible data (e.g. a\ndict\n) inside of a\nJSONResponse\nthat would be used to send the response to the client.\nBut you can return a\nJSONResponse\ndirectly from your\npath operations\n.\nIt might be useful, for example, to return custom headers or cookies.\nReturn a\nResponse\n¶\nIn fact, you can return any\nResponse\nor any sub-class of it.\nTip\nJSONResponse\nitself is a sub-class of\nResponse\n.\nAnd when you return a\nResponse\n,\nFastAPI\nwill pass it directly.\nIt won't do any data conversion with Pydantic models, it won't convert the contents to any type, etc.\nThis gives you a lot of flexibility. You can return any data type, override any data declaration or validation, etc.\nUsing the\njsonable_encoder\nin a\nResponse\n¶\nBecause\nFastAPI\ndoesn't make any changes to a\nResponse\nyou return, you have to make sure its contents are ready for it.\nFor example, you cannot put a Pydantic model in a\nJSONResponse\nwithout first converting it to a\ndict\nwith all the data types (like\ndatetime\n,\nUUID\n, etc) converted to JSON-compatible types.\nFor those cases, you can use the\njsonable_encoder\nto convert your data before passing it to a response:\nPython 3.8+\nfrom\ndatetime\nimport\ndatetime\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.encoders\nimport\njsonable_encoder\nfrom\nfastapi.responses\nimport\nJSONResponse\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\ntitle\n:\nstr\ntimestamp\n:\ndatetime\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{id}\n\"\n)\ndef\nupdate_item\n(\nid\n:\nstr\n,\nitem\n:\nItem\n):\njson_compatible_item_data\n=\njsonable_encoder\n(\nitem\n)\nreturn\nJSONResponse\n(\ncontent\n=\njson_compatible_item_data\n)\nTechnical Details\nYou could also use\nfrom starlette.responses import JSONResponse\n.\nFastAPI\nprovides the same\nstarlette.responses\nas\nfastapi.responses\njust as a convenience for you, the developer. But most of the available responses come directly from Starlette.\nReturning a custom\nResponse\n¶\nThe example above shows all the parts you need, but it's not very useful yet, as you could have just returned the\nitem\ndirectly, and\nFastAPI\nwould put it in a\nJSONResponse\nfor you, converting it to a\ndict\n, etc. All that by default.\nNow, let's see how you could use that to return a custom response.\nLet's say that you want to return an\nXML\nresponse.\nYou could put your XML content in a string, put that in a\nResponse\n, and return it:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nResponse\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/legacy/\"\n)\ndef\nget_legacy_data\n():\ndata\n=\n\"\"\"<?xml version=\"1.0\"?>\n<shampoo>\n<Header>\nApply shampoo here.\n</Header>\n<Body>\nYou'll have to use soap here.\n</Body>\n</shampoo>\n\"\"\"\nreturn\nResponse\n(\ncontent\n=\ndata\n,\nmedia_type\n=\n\"application/xml\"\n)\nNotes\n¶\nWhen you return a\nResponse\ndirectly its data is not validated, converted (serialized), or documented automatically.\nBut you can still document it as described in\nAdditional Responses in OpenAPI\n.\nYou can see in later sections how to use/declare these custom\nResponse\ns while still having automatic data conversion, documentation, etc.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/background/",
    "title": "Background Tasks -BackgroundTasks¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nBackground Tasks -\nBackgroundTasks\nTable of contents\nBackgroundTasks\nExample\nfunc\nargs\nkwargs\nis_async\ntasks\nadd_task\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nBackgroundTasks\nExample\nfunc\nargs\nkwargs\nis_async\ntasks\nadd_task\nFastAPI\nReference\nBackground Tasks -\nBackgroundTasks\n¶\nYou can declare a parameter in a\npath operation function\nor dependency function with the type\nBackgroundTasks\n, and then you can use it to schedule the execution of background tasks after the response is sent.\nYou can import it directly from\nfastapi\n:\nfrom\nfastapi\nimport\nBackgroundTasks\nfastapi.BackgroundTasks\n¶\nBackgroundTasks\n(\ntasks\n=\nNone\n)\nBases:\nBackgroundTasks\nA collection of background tasks that will be called after a response has been\nsent to the client.\nRead more about it in the\nFastAPI docs for Background Tasks\n.\nExample\n¶\nfrom\nfastapi\nimport\nBackgroundTasks\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nwrite_notification\n(\nemail\n:\nstr\n,\nmessage\n=\n\"\"\n):\nwith\nopen\n(\n\"log.txt\"\n,\nmode\n=\n\"w\"\n)\nas\nemail_file\n:\ncontent\n=\nf\n\"notification for\n{\nemail\n}\n:\n{\nmessage\n}\n\"\nemail_file\n.\nwrite\n(\ncontent\n)\n@app\n.\npost\n(\n\"/send-notification/\n{email}\n\"\n)\nasync\ndef\nsend_notification\n(\nemail\n:\nstr\n,\nbackground_tasks\n:\nBackgroundTasks\n):\nbackground_tasks\n.\nadd_task\n(\nwrite_notification\n,\nemail\n,\nmessage\n=\n\"some notification\"\n)\nreturn\n{\n\"message\"\n:\n\"Notification sent in the background\"\n}\nSource code in\nstarlette/background.py\n33\n34\ndef\n__init__\n(\nself\n,\ntasks\n:\nSequence\n[\nBackgroundTask\n]\n|\nNone\n=\nNone\n):\nself\n.\ntasks\n=\nlist\n(\ntasks\n)\nif\ntasks\nelse\n[]\nfunc\ninstance-attribute\n¶\nfunc\n=\nfunc\nargs\ninstance-attribute\n¶\nargs\n=\nargs\nkwargs\ninstance-attribute\n¶\nkwargs\n=\nkwargs\nis_async\ninstance-attribute\n¶\nis_async\n=\nis_async_callable\n(\nfunc\n)\ntasks\ninstance-attribute\n¶\ntasks\n=\nlist\n(\ntasks\n)\nif\ntasks\nelse\n[]\nadd_task\n¶\nadd_task\n(\nfunc\n,\n*\nargs\n,\n**\nkwargs\n)\nAdd a function to be called in the background after the response is sent.\nRead more about it in the\nFastAPI docs for Background Tasks\n.\nPARAMETER\nDESCRIPTION\nfunc\nThe function to call after the response is sent.\nIt can be a regular\ndef\nfunction or an\nasync def\nfunction.\nTYPE:\nCallable\n[\nP\n,\nAny\n]\nSource code in\nfastapi/background.py\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\ndef\nadd_task\n(\nself\n,\nfunc\n:\nAnnotated\n[\nCallable\n[\nP\n,\nAny\n],\nDoc\n(\n\"\"\"\nThe function to call after the response is sent.\nIt can be a regular `def` function or an `async def` function.\n\"\"\"\n),\n],\n*\nargs\n:\nP\n.\nargs\n,\n**\nkwargs\n:\nP\n.\nkwargs\n,\n)\n->\nNone\n:\n\"\"\"\nAdd a function to be called in the background after the response is sent.\nRead more about it in the\n[FastAPI docs for Background Tasks](https://fastapi.tiangolo.com/tutorial/background-tasks/).\n\"\"\"\nreturn\nsuper\n()\n.\nadd_task\n(\nfunc\n,\n*\nargs\n,\n**\nkwargs\n)\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/extra-data-types/",
    "title": "Extra Data Types¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nExtra Data Types\nTable of contents\nOther data types\nExample\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nOther data types\nExample\nFastAPI\nLearn\nTutorial - User Guide\nExtra Data Types\n¶\nUp to now, you have been using common data types, like:\nint\nfloat\nstr\nbool\nBut you can also use more complex data types.\nAnd you will still have the same features as seen up to now:\nGreat editor support.\nData conversion from incoming requests.\nData conversion for response data.\nData validation.\nAutomatic annotation and documentation.\nOther data types\n¶\nHere are some of the additional data types you can use:\nUUID\n:\nA standard \"Universally Unique Identifier\", common as an ID in many databases and systems.\nIn requests and responses will be represented as a\nstr\n.\ndatetime.datetime\n:\nA Python\ndatetime.datetime\n.\nIn requests and responses will be represented as a\nstr\nin ISO 8601 format, like:\n2008-09-15T15:53:00+05:00\n.\ndatetime.date\n:\nPython\ndatetime.date\n.\nIn requests and responses will be represented as a\nstr\nin ISO 8601 format, like:\n2008-09-15\n.\ndatetime.time\n:\nA Python\ndatetime.time\n.\nIn requests and responses will be represented as a\nstr\nin ISO 8601 format, like:\n14:23:55.003\n.\ndatetime.timedelta\n:\nA Python\ndatetime.timedelta\n.\nIn requests and responses will be represented as a\nfloat\nof total seconds.\nPydantic also allows representing it as a \"ISO 8601 time diff encoding\",\nsee the docs for more info\n.\nfrozenset\n:\nIn requests and responses, treated the same as a\nset\n:\nIn requests, a list will be read, eliminating duplicates and converting it to a\nset\n.\nIn responses, the\nset\nwill be converted to a\nlist\n.\nThe generated schema will specify that the\nset\nvalues are unique (using JSON Schema's\nuniqueItems\n).\nbytes\n:\nStandard Python\nbytes\n.\nIn requests and responses will be treated as\nstr\n.\nThe generated schema will specify that it's a\nstr\nwith\nbinary\n\"format\".\nDecimal\n:\nStandard Python\nDecimal\n.\nIn requests and responses, handled the same as a\nfloat\n.\nYou can check all the valid Pydantic data types here:\nPydantic data types\n.\nExample\n¶\nHere's an example\npath operation\nwith parameters using some of the above types.\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntime\n,\ntimedelta\nfrom\ntyping\nimport\nAnnotated\nfrom\nuuid\nimport\nUUID\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nUUID\n,\nstart_datetime\n:\nAnnotated\n[\ndatetime\n,\nBody\n()],\nend_datetime\n:\nAnnotated\n[\ndatetime\n,\nBody\n()],\nprocess_after\n:\nAnnotated\n[\ntimedelta\n,\nBody\n()],\nrepeat_at\n:\nAnnotated\n[\ntime\n|\nNone\n,\nBody\n()]\n=\nNone\n,\n):\nstart_process\n=\nstart_datetime\n+\nprocess_after\nduration\n=\nend_datetime\n-\nstart_process\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"start_datetime\"\n:\nstart_datetime\n,\n\"end_datetime\"\n:\nend_datetime\n,\n\"process_after\"\n:\nprocess_after\n,\n\"repeat_at\"\n:\nrepeat_at\n,\n\"start_process\"\n:\nstart_process\n,\n\"duration\"\n:\nduration\n,\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntime\n,\ntimedelta\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nuuid\nimport\nUUID\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nUUID\n,\nstart_datetime\n:\nAnnotated\n[\ndatetime\n,\nBody\n()],\nend_datetime\n:\nAnnotated\n[\ndatetime\n,\nBody\n()],\nprocess_after\n:\nAnnotated\n[\ntimedelta\n,\nBody\n()],\nrepeat_at\n:\nAnnotated\n[\nUnion\n[\ntime\n,\nNone\n],\nBody\n()]\n=\nNone\n,\n):\nstart_process\n=\nstart_datetime\n+\nprocess_after\nduration\n=\nend_datetime\n-\nstart_process\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"start_datetime\"\n:\nstart_datetime\n,\n\"end_datetime\"\n:\nend_datetime\n,\n\"process_after\"\n:\nprocess_after\n,\n\"repeat_at\"\n:\nrepeat_at\n,\n\"start_process\"\n:\nstart_process\n,\n\"duration\"\n:\nduration\n,\n}\nfrom\ndatetime\nimport\ndatetime\n,\ntime\n,\ntimedelta\nfrom\ntyping\nimport\nUnion\nfrom\nuuid\nimport\nUUID\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nUUID\n,\nstart_datetime\n:\nAnnotated\n[\ndatetime\n,\nBody\n()],\nend_datetime\n:\nAnnotated\n[\ndatetime\n,\nBody\n()],\nprocess_after\n:\nAnnotated\n[\ntimedelta\n,\nBody\n()],\nrepeat_at\n:\nAnnotated\n[\nUnion\n[\ntime\n,\nNone\n],\nBody\n()]\n=\nNone\n,\n):\nstart_process\n=\nstart_datetime\n+\nprocess_after\nduration\n=\nend_datetime\n-\nstart_process\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"start_datetime\"\n:\nstart_datetime\n,\n\"end_datetime\"\n:\nend_datetime\n,\n\"process_after\"\n:\nprocess_after\n,\n\"repeat_at\"\n:\nrepeat_at\n,\n\"start_process\"\n:\nstart_process\n,\n\"duration\"\n:\nduration\n,\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntime\n,\ntimedelta\nfrom\nuuid\nimport\nUUID\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nUUID\n,\nstart_datetime\n:\ndatetime\n=\nBody\n(),\nend_datetime\n:\ndatetime\n=\nBody\n(),\nprocess_after\n:\ntimedelta\n=\nBody\n(),\nrepeat_at\n:\ntime\n|\nNone\n=\nBody\n(\ndefault\n=\nNone\n),\n):\nstart_process\n=\nstart_datetime\n+\nprocess_after\nduration\n=\nend_datetime\n-\nstart_process\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"start_datetime\"\n:\nstart_datetime\n,\n\"end_datetime\"\n:\nend_datetime\n,\n\"process_after\"\n:\nprocess_after\n,\n\"repeat_at\"\n:\nrepeat_at\n,\n\"start_process\"\n:\nstart_process\n,\n\"duration\"\n:\nduration\n,\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntime\n,\ntimedelta\nfrom\ntyping\nimport\nUnion\nfrom\nuuid\nimport\nUUID\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nUUID\n,\nstart_datetime\n:\ndatetime\n=\nBody\n(),\nend_datetime\n:\ndatetime\n=\nBody\n(),\nprocess_after\n:\ntimedelta\n=\nBody\n(),\nrepeat_at\n:\nUnion\n[\ntime\n,\nNone\n]\n=\nBody\n(\ndefault\n=\nNone\n),\n):\nstart_process\n=\nstart_datetime\n+\nprocess_after\nduration\n=\nend_datetime\n-\nstart_process\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"start_datetime\"\n:\nstart_datetime\n,\n\"end_datetime\"\n:\nend_datetime\n,\n\"process_after\"\n:\nprocess_after\n,\n\"repeat_at\"\n:\nrepeat_at\n,\n\"start_process\"\n:\nstart_process\n,\n\"duration\"\n:\nduration\n,\n}\nNote that the parameters inside the function have their natural data type, and you can, for example, perform normal date manipulations, like:\nPython 3.10+\nfrom\ndatetime\nimport\ndatetime\n,\ntime\n,\ntimedelta\nfrom\ntyping\nimport\nAnnotated\nfrom\nuuid\nimport\nUUID\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nUUID\n,\nstart_datetime\n:\nAnnotated\n[\ndatetime\n,\nBody\n()],\nend_datetime\n:\nAnnotated\n[\ndatetime\n,\nBody\n()],\nprocess_after\n:\nAnnotated\n[\ntimedelta\n,\nBody\n()],\nrepeat_at\n:\nAnnotated\n[\ntime\n|\nNone\n,\nBody\n()]\n=\nNone\n,\n):\nstart_process\n=\nstart_datetime\n+\nprocess_after\nduration\n=\nend_datetime\n-\nstart_process\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"start_datetime\"\n:\nstart_datetime\n,\n\"end_datetime\"\n:\nend_datetime\n,\n\"process_after\"\n:\nprocess_after\n,\n\"repeat_at\"\n:\nrepeat_at\n,\n\"start_process\"\n:\nstart_process\n,\n\"duration\"\n:\nduration\n,\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ndatetime\nimport\ndatetime\n,\ntime\n,\ntimedelta\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nuuid\nimport\nUUID\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nUUID\n,\nstart_datetime\n:\nAnnotated\n[\ndatetime\n,\nBody\n()],\nend_datetime\n:\nAnnotated\n[\ndatetime\n,\nBody\n()],\nprocess_after\n:\nAnnotated\n[\ntimedelta\n,\nBody\n()],\nrepeat_at\n:\nAnnotated\n[\nUnion\n[\ntime\n,\nNone\n],\nBody\n()]\n=\nNone\n,\n):\nstart_process\n=\nstart_datetime\n+\nprocess_after\nduration\n=\nend_datetime\n-\nstart_process\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"start_datetime\"\n:\nstart_datetime\n,\n\"end_datetime\"\n:\nend_datetime\n,\n\"process_after\"\n:\nprocess_after\n,\n\"repeat_at\"\n:\nrepeat_at\n,\n\"start_process\"\n:\nstart_process\n,\n\"duration\"\n:\nduration\n,\n}\nfrom\ndatetime\nimport\ndatetime\n,\ntime\n,\ntimedelta\nfrom\ntyping\nimport\nUnion\nfrom\nuuid\nimport\nUUID\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nUUID\n,\nstart_datetime\n:\nAnnotated\n[\ndatetime\n,\nBody\n()],\nend_datetime\n:\nAnnotated\n[\ndatetime\n,\nBody\n()],\nprocess_after\n:\nAnnotated\n[\ntimedelta\n,\nBody\n()],\nrepeat_at\n:\nAnnotated\n[\nUnion\n[\ntime\n,\nNone\n],\nBody\n()]\n=\nNone\n,\n):\nstart_process\n=\nstart_datetime\n+\nprocess_after\nduration\n=\nend_datetime\n-\nstart_process\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"start_datetime\"\n:\nstart_datetime\n,\n\"end_datetime\"\n:\nend_datetime\n,\n\"process_after\"\n:\nprocess_after\n,\n\"repeat_at\"\n:\nrepeat_at\n,\n\"start_process\"\n:\nstart_process\n,\n\"duration\"\n:\nduration\n,\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntime\n,\ntimedelta\nfrom\nuuid\nimport\nUUID\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nUUID\n,\nstart_datetime\n:\ndatetime\n=\nBody\n(),\nend_datetime\n:\ndatetime\n=\nBody\n(),\nprocess_after\n:\ntimedelta\n=\nBody\n(),\nrepeat_at\n:\ntime\n|\nNone\n=\nBody\n(\ndefault\n=\nNone\n),\n):\nstart_process\n=\nstart_datetime\n+\nprocess_after\nduration\n=\nend_datetime\n-\nstart_process\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"start_datetime\"\n:\nstart_datetime\n,\n\"end_datetime\"\n:\nend_datetime\n,\n\"process_after\"\n:\nprocess_after\n,\n\"repeat_at\"\n:\nrepeat_at\n,\n\"start_process\"\n:\nstart_process\n,\n\"duration\"\n:\nduration\n,\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ndatetime\nimport\ndatetime\n,\ntime\n,\ntimedelta\nfrom\ntyping\nimport\nUnion\nfrom\nuuid\nimport\nUUID\nfrom\nfastapi\nimport\nBody\n,\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_items\n(\nitem_id\n:\nUUID\n,\nstart_datetime\n:\ndatetime\n=\nBody\n(),\nend_datetime\n:\ndatetime\n=\nBody\n(),\nprocess_after\n:\ntimedelta\n=\nBody\n(),\nrepeat_at\n:\nUnion\n[\ntime\n,\nNone\n]\n=\nBody\n(\ndefault\n=\nNone\n),\n):\nstart_process\n=\nstart_datetime\n+\nprocess_after\nduration\n=\nend_datetime\n-\nstart_process\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"start_datetime\"\n:\nstart_datetime\n,\n\"end_datetime\"\n:\nend_datetime\n,\n\"process_after\"\n:\nprocess_after\n,\n\"repeat_at\"\n:\nrepeat_at\n,\n\"start_process\"\n:\nstart_process\n,\n\"duration\"\n:\nduration\n,\n}\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/request-form-models/",
    "title": "Form Models¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nForm Models\nTable of contents\nPydantic Models for Forms\nCheck the Docs\nForbid Extra Form Fields\nSummary\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nPydantic Models for Forms\nCheck the Docs\nForbid Extra Form Fields\nSummary\nFastAPI\nLearn\nTutorial - User Guide\nForm Models\n¶\nYou can use\nPydantic models\nto declare\nform fields\nin FastAPI.\nInfo\nTo use forms, first install\npython-multipart\n.\nMake sure you create a\nvirtual environment\n, activate it, and then install it, for example:\n$\npip\ninstall\npython-multipart\nNote\nThis is supported since FastAPI version\n0.113.0\n. 🤓\nPydantic Models for Forms\n¶\nYou just need to declare a\nPydantic model\nwith the fields you want to receive as\nform fields\n, and then declare the parameter as\nForm\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nFormData\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\ndata\n:\nAnnotated\n[\nFormData\n,\nForm\n()]):\nreturn\ndata\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nFormData\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\ndata\n:\nAnnotated\n[\nFormData\n,\nForm\n()]):\nreturn\ndata\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nFormData\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\ndata\n:\nFormData\n=\nForm\n()):\nreturn\ndata\nFastAPI\nwill\nextract\nthe data for\neach field\nfrom the\nform data\nin the request and give you the Pydantic model you defined.\nCheck the Docs\n¶\nYou can verify it in the docs UI at\n/docs\n:\nForbid Extra Form Fields\n¶\nIn some special use cases (probably not very common), you might want to\nrestrict\nthe form fields to only those declared in the Pydantic model. And\nforbid\nany\nextra\nfields.\nNote\nThis is supported since FastAPI version\n0.114.0\n. 🤓\nYou can use Pydantic's model configuration to\nforbid\nany\nextra\nfields:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nFormData\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\ndata\n:\nAnnotated\n[\nFormData\n,\nForm\n()]):\nreturn\ndata\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nclass\nFormData\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\ndata\n:\nAnnotated\n[\nFormData\n,\nForm\n()]):\nreturn\ndata\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nForm\nfrom\npydantic\nimport\nBaseModel\napp\n=\nFastAPI\n()\nclass\nFormData\n(\nBaseModel\n):\nusername\n:\nstr\npassword\n:\nstr\nmodel_config\n=\n{\n\"extra\"\n:\n\"forbid\"\n}\n@app\n.\npost\n(\n\"/login/\"\n)\nasync\ndef\nlogin\n(\ndata\n:\nFormData\n=\nForm\n()):\nreturn\ndata\nIf a client tries to send some extra data, they will receive an\nerror\nresponse.\nFor example, if the client tries to send the form fields:\nusername\n:\nRick\npassword\n:\nPortal Gun\nextra\n:\nMr. Poopybutthole\nThey will receive an error response telling them that the field\nextra\nis not allowed:\n{\n\"detail\"\n:\n[\n{\n\"type\"\n:\n\"extra_forbidden\"\n,\n\"loc\"\n:\n[\n\"body\"\n,\n\"extra\"\n],\n\"msg\"\n:\n\"Extra inputs are not permitted\"\n,\n\"input\"\n:\n\"Mr. Poopybutthole\"\n}\n]\n}\nSummary\n¶\nYou can use Pydantic models to declare form fields in FastAPI. 😎\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/testing/",
    "title": "Testing¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nTesting\nTable of contents\nUsing\nTestClient\nSeparating tests\nFastAPI\napp file\nTesting file\nTesting: extended example\nExtended\nFastAPI\napp file\nExtended testing file\nRun it\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nUsing\nTestClient\nSeparating tests\nFastAPI\napp file\nTesting file\nTesting: extended example\nExtended\nFastAPI\napp file\nExtended testing file\nRun it\nFastAPI\nLearn\nTutorial - User Guide\nTesting\n¶\nThanks to\nStarlette\n, testing\nFastAPI\napplications is easy and enjoyable.\nIt is based on\nHTTPX\n, which in turn is designed based on Requests, so it's very familiar and intuitive.\nWith it, you can use\npytest\ndirectly with\nFastAPI\n.\nUsing\nTestClient\n¶\nInfo\nTo use\nTestClient\n, first install\nhttpx\n.\nMake sure you create a\nvirtual environment\n, activate it, and then install it, for example:\n$\npip\ninstall\nhttpx\nImport\nTestClient\n.\nCreate a\nTestClient\nby passing your\nFastAPI\napplication to it.\nCreate functions with a name that starts with\ntest_\n(this is standard\npytest\nconventions).\nUse the\nTestClient\nobject the same way as you do with\nhttpx\n.\nWrite simple\nassert\nstatements with the standard Python expressions that you need to check (again, standard\npytest\n).\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.testclient\nimport\nTestClient\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nread_main\n():\nreturn\n{\n\"msg\"\n:\n\"Hello World\"\n}\nclient\n=\nTestClient\n(\napp\n)\ndef\ntest_read_main\n():\nresponse\n=\nclient\n.\nget\n(\n\"/\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"msg\"\n:\n\"Hello World\"\n}\nTip\nNotice that the testing functions are normal\ndef\n, not\nasync def\n.\nAnd the calls to the client are also normal calls, not using\nawait\n.\nThis allows you to use\npytest\ndirectly without complications.\nTechnical Details\nYou could also use\nfrom starlette.testclient import TestClient\n.\nFastAPI\nprovides the same\nstarlette.testclient\nas\nfastapi.testclient\njust as a convenience for you, the developer. But it comes directly from Starlette.\nTip\nIf you want to call\nasync\nfunctions in your tests apart from sending requests to your FastAPI application (e.g. asynchronous database functions), have a look at the\nAsync Tests\nin the advanced tutorial.\nSeparating tests\n¶\nIn a real application, you probably would have your tests in a different file.\nAnd your\nFastAPI\napplication might also be composed of several files/modules, etc.\nFastAPI\napp file\n¶\nLet's say you have a file structure as described in\nBigger Applications\n:\n.\n├── app\n│   ├── __init__.py\n│   └── main.py\nIn the file\nmain.py\nyou have your\nFastAPI\napp:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nread_main\n():\nreturn\n{\n\"msg\"\n:\n\"Hello World\"\n}\nTesting file\n¶\nThen you could have a file\ntest_main.py\nwith your tests. It could live on the same Python package (the same directory with a\n__init__.py\nfile):\n.\n├── app\n│   ├── __init__.py\n│   ├── main.py\n│   └── test_main.py\nBecause this file is in the same package, you can use relative imports to import the object\napp\nfrom the\nmain\nmodule (\nmain.py\n):\nPython 3.8+\nfrom\nfastapi.testclient\nimport\nTestClient\nfrom\n.main\nimport\napp\nclient\n=\nTestClient\n(\napp\n)\ndef\ntest_read_main\n():\nresponse\n=\nclient\n.\nget\n(\n\"/\"\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"msg\"\n:\n\"Hello World\"\n}\n...and have the code for the tests just like before.\nTesting: extended example\n¶\nNow let's extend this example and add more details to see how to test different parts.\nExtended\nFastAPI\napp file\n¶\nLet's continue with the same file structure as before:\n.\n├── app\n│   ├── __init__.py\n│   ├── main.py\n│   └── test_main.py\nLet's say that now the file\nmain.py\nwith your\nFastAPI\napp has some other\npath operations\n.\nIt has a\nGET\noperation that could return an error.\nIt has a\nPOST\noperation that could return several errors.\nBoth\npath operations\nrequire an\nX-Token\nheader.\nPython 3.10+\nPython 3.9+\nPython 3.8+\nPython 3.10+ non-Annotated\nPython 3.8+ non-Annotated\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\n,\nHTTPException\nfrom\npydantic\nimport\nBaseModel\nfake_secret_token\n=\n\"coneofsilence\"\nfake_db\n=\n{\n\"foo\"\n:\n{\n\"id\"\n:\n\"foo\"\n,\n\"title\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"There goes my hero\"\n},\n\"bar\"\n:\n{\n\"id\"\n:\n\"bar\"\n,\n\"title\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n},\n}\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nid\n:\nstr\ntitle\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_main\n(\nitem_id\n:\nstr\n,\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\nfake_secret_token\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Invalid X-Token header\"\n)\nif\nitem_id\nnot\nin\nfake_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nreturn\nfake_db\n[\nitem_id\n]\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n,\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\nfake_secret_token\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Invalid X-Token header\"\n)\nif\nitem\n.\nid\nin\nfake_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n409\n,\ndetail\n=\n\"Item already exists\"\n)\nfake_db\n[\nitem\n.\nid\n]\n=\nitem\nreturn\nitem\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\n,\nHTTPException\nfrom\npydantic\nimport\nBaseModel\nfake_secret_token\n=\n\"coneofsilence\"\nfake_db\n=\n{\n\"foo\"\n:\n{\n\"id\"\n:\n\"foo\"\n,\n\"title\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"There goes my hero\"\n},\n\"bar\"\n:\n{\n\"id\"\n:\n\"bar\"\n,\n\"title\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n},\n}\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nid\n:\nstr\ntitle\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_main\n(\nitem_id\n:\nstr\n,\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\nfake_secret_token\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Invalid X-Token header\"\n)\nif\nitem_id\nnot\nin\nfake_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nreturn\nfake_db\n[\nitem_id\n]\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n,\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\nfake_secret_token\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Invalid X-Token header\"\n)\nif\nitem\n.\nid\nin\nfake_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n409\n,\ndetail\n=\n\"Item already exists\"\n)\nfake_db\n[\nitem\n.\nid\n]\n=\nitem\nreturn\nitem\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\n,\nHTTPException\nfrom\npydantic\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\nfake_secret_token\n=\n\"coneofsilence\"\nfake_db\n=\n{\n\"foo\"\n:\n{\n\"id\"\n:\n\"foo\"\n,\n\"title\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"There goes my hero\"\n},\n\"bar\"\n:\n{\n\"id\"\n:\n\"bar\"\n,\n\"title\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n},\n}\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nid\n:\nstr\ntitle\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_main\n(\nitem_id\n:\nstr\n,\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\nfake_secret_token\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Invalid X-Token header\"\n)\nif\nitem_id\nnot\nin\nfake_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nreturn\nfake_db\n[\nitem_id\n]\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n,\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\nfake_secret_token\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Invalid X-Token header\"\n)\nif\nitem\n.\nid\nin\nfake_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n409\n,\ndetail\n=\n\"Item already exists\"\n)\nfake_db\n[\nitem\n.\nid\n]\n=\nitem\nreturn\nitem\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\n,\nHTTPException\nfrom\npydantic\nimport\nBaseModel\nfake_secret_token\n=\n\"coneofsilence\"\nfake_db\n=\n{\n\"foo\"\n:\n{\n\"id\"\n:\n\"foo\"\n,\n\"title\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"There goes my hero\"\n},\n\"bar\"\n:\n{\n\"id\"\n:\n\"bar\"\n,\n\"title\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n},\n}\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nid\n:\nstr\ntitle\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_main\n(\nitem_id\n:\nstr\n,\nx_token\n:\nstr\n=\nHeader\n()):\nif\nx_token\n!=\nfake_secret_token\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Invalid X-Token header\"\n)\nif\nitem_id\nnot\nin\nfake_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nreturn\nfake_db\n[\nitem_id\n]\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n,\nx_token\n:\nstr\n=\nHeader\n()):\nif\nx_token\n!=\nfake_secret_token\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Invalid X-Token header\"\n)\nif\nitem\n.\nid\nin\nfake_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n409\n,\ndetail\n=\n\"Item already exists\"\n)\nfake_db\n[\nitem\n.\nid\n]\n=\nitem\nreturn\nitem\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nHeader\n,\nHTTPException\nfrom\npydantic\nimport\nBaseModel\nfake_secret_token\n=\n\"coneofsilence\"\nfake_db\n=\n{\n\"foo\"\n:\n{\n\"id\"\n:\n\"foo\"\n,\n\"title\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"There goes my hero\"\n},\n\"bar\"\n:\n{\n\"id\"\n:\n\"bar\"\n,\n\"title\"\n:\n\"Bar\"\n,\n\"description\"\n:\n\"The bartenders\"\n},\n}\napp\n=\nFastAPI\n()\nclass\nItem\n(\nBaseModel\n):\nid\n:\nstr\ntitle\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\nread_main\n(\nitem_id\n:\nstr\n,\nx_token\n:\nstr\n=\nHeader\n()):\nif\nx_token\n!=\nfake_secret_token\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Invalid X-Token header\"\n)\nif\nitem_id\nnot\nin\nfake_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Item not found\"\n)\nreturn\nfake_db\n[\nitem_id\n]\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItem\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n,\nx_token\n:\nstr\n=\nHeader\n()):\nif\nx_token\n!=\nfake_secret_token\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"Invalid X-Token header\"\n)\nif\nitem\n.\nid\nin\nfake_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n409\n,\ndetail\n=\n\"Item already exists\"\n)\nfake_db\n[\nitem\n.\nid\n]\n=\nitem\nreturn\nitem\nExtended testing file\n¶\nYou could then update\ntest_main.py\nwith the extended tests:\nPython 3.8+\nfrom\nfastapi.testclient\nimport\nTestClient\nfrom\n.main\nimport\napp\nclient\n=\nTestClient\n(\napp\n)\ndef\ntest_read_item\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/foo\"\n,\nheaders\n=\n{\n\"X-Token\"\n:\n\"coneofsilence\"\n})\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"id\"\n:\n\"foo\"\n,\n\"title\"\n:\n\"Foo\"\n,\n\"description\"\n:\n\"There goes my hero\"\n,\n}\ndef\ntest_read_item_bad_token\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/foo\"\n,\nheaders\n=\n{\n\"X-Token\"\n:\n\"hailhydra\"\n})\nassert\nresponse\n.\nstatus_code\n==\n400\nassert\nresponse\n.\njson\n()\n==\n{\n\"detail\"\n:\n\"Invalid X-Token header\"\n}\ndef\ntest_read_nonexistent_item\n():\nresponse\n=\nclient\n.\nget\n(\n\"/items/baz\"\n,\nheaders\n=\n{\n\"X-Token\"\n:\n\"coneofsilence\"\n})\nassert\nresponse\n.\nstatus_code\n==\n404\nassert\nresponse\n.\njson\n()\n==\n{\n\"detail\"\n:\n\"Item not found\"\n}\ndef\ntest_create_item\n():\nresponse\n=\nclient\n.\npost\n(\n\"/items/\"\n,\nheaders\n=\n{\n\"X-Token\"\n:\n\"coneofsilence\"\n},\njson\n=\n{\n\"id\"\n:\n\"foobar\"\n,\n\"title\"\n:\n\"Foo Bar\"\n,\n\"description\"\n:\n\"The Foo Barters\"\n},\n)\nassert\nresponse\n.\nstatus_code\n==\n200\nassert\nresponse\n.\njson\n()\n==\n{\n\"id\"\n:\n\"foobar\"\n,\n\"title\"\n:\n\"Foo Bar\"\n,\n\"description\"\n:\n\"The Foo Barters\"\n,\n}\ndef\ntest_create_item_bad_token\n():\nresponse\n=\nclient\n.\npost\n(\n\"/items/\"\n,\nheaders\n=\n{\n\"X-Token\"\n:\n\"hailhydra\"\n},\njson\n=\n{\n\"id\"\n:\n\"bazz\"\n,\n\"title\"\n:\n\"Bazz\"\n,\n\"description\"\n:\n\"Drop the bazz\"\n},\n)\nassert\nresponse\n.\nstatus_code\n==\n400\nassert\nresponse\n.\njson\n()\n==\n{\n\"detail\"\n:\n\"Invalid X-Token header\"\n}\ndef\ntest_create_existing_item\n():\nresponse\n=\nclient\n.\npost\n(\n\"/items/\"\n,\nheaders\n=\n{\n\"X-Token\"\n:\n\"coneofsilence\"\n},\njson\n=\n{\n\"id\"\n:\n\"foo\"\n,\n\"title\"\n:\n\"The Foo ID Stealers\"\n,\n\"description\"\n:\n\"There goes my stealer\"\n,\n},\n)\nassert\nresponse\n.\nstatus_code\n==\n409\nassert\nresponse\n.\njson\n()\n==\n{\n\"detail\"\n:\n\"Item already exists\"\n}\nWhenever you need the client to pass information in the request and you don't know how to, you can search (Google) how to do it in\nhttpx\n, or even how to do it with\nrequests\n, as HTTPX's design is based on Requests' design.\nThen you just do the same in your tests.\nE.g.:\nTo pass a\npath\nor\nquery\nparameter, add it to the URL itself.\nTo pass a JSON body, pass a Python object (e.g. a\ndict\n) to the parameter\njson\n.\nIf you need to send\nForm Data\ninstead of JSON, use the\ndata\nparameter instead.\nTo pass\nheaders\n, use a\ndict\nin the\nheaders\nparameter.\nFor\ncookies\n, a\ndict\nin the\ncookies\nparameter.\nFor more information about how to pass data to the backend (using\nhttpx\nor the\nTestClient\n) check the\nHTTPX documentation\n.\nInfo\nNote that the\nTestClient\nreceives data that can be converted to JSON, not Pydantic models.\nIf you have a Pydantic model in your test and you want to send its data to the application during testing, you can use the\njsonable_encoder\ndescribed in\nJSON Compatible Encoder\n.\nRun it\n¶\nAfter that, you just need to install\npytest\n.\nMake sure you create a\nvirtual environment\n, activate it, and then install it, for example:\n$\npip\ninstall\npytest\n---> 100%\nIt will detect the files and tests automatically, execute them, and report the results back to you.\nRun the tests with:\n$\npytest\n================ test session starts ================\nplatform linux -- Python 3.6.9, pytest-5.3.5, py-1.8.1, pluggy-0.13.1\nrootdir: /home/user/code/superawesome-cli/app\nplugins: forked-1.1.3, xdist-1.31.0, cov-2.8.1\ncollected 6 items\n---> 100%\ntest_main.py <span style=\"color: green; white-space: pre;\">......                            [100%]</span>\n<span style=\"color: green;\">================= 1 passed in 0.03s =================</span>\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/dependencies/sub-dependencies/",
    "title": "Sub-dependencies¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nSub-dependencies\nTable of contents\nFirst dependency \"dependable\"\nSecond dependency, \"dependable\" and \"dependant\"\nUse the dependency\nUsing the same dependency multiple times\nRecap\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nFirst dependency \"dependable\"\nSecond dependency, \"dependable\" and \"dependant\"\nUse the dependency\nUsing the same dependency multiple times\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nDependencies\nSub-dependencies\n¶\nYou can create dependencies that have\nsub-dependencies\n.\nThey can be as\ndeep\nas you need them to be.\nFastAPI\nwill take care of solving them.\nFirst dependency \"dependable\"\n¶\nYou could create a first dependency (\"dependable\") like:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nstr\n|\nNone\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_extractor\n)],\nlast_query\n:\nAnnotated\n[\nstr\n|\nNone\n,\nCookie\n()]\n=\nNone\n,\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_or_cookie_extractor\n)],\n):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_extractor\n)],\nlast_query\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nCookie\n()]\n=\nNone\n,\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_or_cookie_extractor\n)],\n):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_extractor\n)],\nlast_query\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nCookie\n()]\n=\nNone\n,\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_or_cookie_extractor\n)],\n):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nstr\n|\nNone\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nstr\n=\nDepends\n(\nquery_extractor\n),\nlast_query\n:\nstr\n|\nNone\n=\nCookie\n(\ndefault\n=\nNone\n)\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nstr\n=\nDepends\n(\nquery_or_cookie_extractor\n)):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nstr\n=\nDepends\n(\nquery_extractor\n),\nlast_query\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nCookie\n(\ndefault\n=\nNone\n),\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nstr\n=\nDepends\n(\nquery_or_cookie_extractor\n)):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\nIt declares an optional query parameter\nq\nas a\nstr\n, and then it just returns it.\nThis is quite simple (not very useful), but will help us focus on how the sub-dependencies work.\nSecond dependency, \"dependable\" and \"dependant\"\n¶\nThen you can create another dependency function (a \"dependable\") that at the same time declares a dependency of its own (so it is a \"dependant\" too):\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nstr\n|\nNone\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_extractor\n)],\nlast_query\n:\nAnnotated\n[\nstr\n|\nNone\n,\nCookie\n()]\n=\nNone\n,\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_or_cookie_extractor\n)],\n):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_extractor\n)],\nlast_query\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nCookie\n()]\n=\nNone\n,\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_or_cookie_extractor\n)],\n):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_extractor\n)],\nlast_query\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nCookie\n()]\n=\nNone\n,\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_or_cookie_extractor\n)],\n):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nstr\n|\nNone\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nstr\n=\nDepends\n(\nquery_extractor\n),\nlast_query\n:\nstr\n|\nNone\n=\nCookie\n(\ndefault\n=\nNone\n)\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nstr\n=\nDepends\n(\nquery_or_cookie_extractor\n)):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nstr\n=\nDepends\n(\nquery_extractor\n),\nlast_query\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nCookie\n(\ndefault\n=\nNone\n),\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nstr\n=\nDepends\n(\nquery_or_cookie_extractor\n)):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\nLet's focus on the parameters declared:\nEven though this function is a dependency (\"dependable\") itself, it also declares another dependency (it \"depends\" on something else).\nIt depends on the\nquery_extractor\n, and assigns the value returned by it to the parameter\nq\n.\nIt also declares an optional\nlast_query\ncookie, as a\nstr\n.\nIf the user didn't provide any query\nq\n, we use the last query used, which we saved to a cookie before.\nUse the dependency\n¶\nThen we can use the dependency with:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nstr\n|\nNone\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_extractor\n)],\nlast_query\n:\nAnnotated\n[\nstr\n|\nNone\n,\nCookie\n()]\n=\nNone\n,\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_or_cookie_extractor\n)],\n):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_extractor\n)],\nlast_query\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nCookie\n()]\n=\nNone\n,\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_or_cookie_extractor\n)],\n):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_extractor\n)],\nlast_query\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nCookie\n()]\n=\nNone\n,\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nquery_or_cookie_extractor\n)],\n):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nstr\n|\nNone\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nstr\n=\nDepends\n(\nquery_extractor\n),\nlast_query\n:\nstr\n|\nNone\n=\nCookie\n(\ndefault\n=\nNone\n)\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nstr\n=\nDepends\n(\nquery_or_cookie_extractor\n)):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nCookie\n,\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\ndef\nquery_extractor\n(\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\nq\ndef\nquery_or_cookie_extractor\n(\nq\n:\nstr\n=\nDepends\n(\nquery_extractor\n),\nlast_query\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nCookie\n(\ndefault\n=\nNone\n),\n):\nif\nnot\nq\n:\nreturn\nlast_query\nreturn\nq\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_query\n(\nquery_or_default\n:\nstr\n=\nDepends\n(\nquery_or_cookie_extractor\n)):\nreturn\n{\n\"q_or_cookie\"\n:\nquery_or_default\n}\nInfo\nNotice that we are only declaring one dependency in the\npath operation function\n, the\nquery_or_cookie_extractor\n.\nBut\nFastAPI\nwill know that it has to solve\nquery_extractor\nfirst, to pass the results of that to\nquery_or_cookie_extractor\nwhile calling it.\ngraph TB\n\nquery_extractor([\"query_extractor\"])\nquery_or_cookie_extractor([\"query_or_cookie_extractor\"])\n\nread_query[\"/items/\"]\n\nquery_extractor --> query_or_cookie_extractor --> read_query\nUsing the same dependency multiple times\n¶\nIf one of your dependencies is declared multiple times for the same\npath operation\n, for example, multiple dependencies have a common sub-dependency,\nFastAPI\nwill know to call that sub-dependency only once per request.\nAnd it will save the returned value in a\n\"cache\"\nand pass it to all the \"dependants\" that need it in that specific request, instead of calling the dependency multiple times for the same request.\nIn an advanced scenario where you know you need the dependency to be called at every step (possibly multiple times) in the same request instead of using the \"cached\" value, you can set the parameter\nuse_cache=False\nwhen using\nDepends\n:\nPython 3.8+\nPython 3.8+ non-Annotated\nasync\ndef\nneedy_dependency\n(\nfresh_value\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_value\n,\nuse_cache\n=\nFalse\n)]):\nreturn\n{\n\"fresh_value\"\n:\nfresh_value\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nasync\ndef\nneedy_dependency\n(\nfresh_value\n:\nstr\n=\nDepends\n(\nget_value\n,\nuse_cache\n=\nFalse\n)):\nreturn\n{\n\"fresh_value\"\n:\nfresh_value\n}\nRecap\n¶\nApart from all the fancy words used here, the\nDependency Injection\nsystem is quite simple.\nJust functions that look the same as the\npath operation functions\n.\nBut still, it is very powerful, and allows you to declare arbitrarily deeply nested dependency \"graphs\" (trees).\nTip\nAll this might not seem as useful with these simple examples.\nBut you will see how useful it is in the chapters about\nsecurity\n.\nAnd you will also see the amounts of code it will save you.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/additional-responses/",
    "title": "Additional Responses in OpenAPI¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nAdditional Responses in OpenAPI\nTable of contents\nAdditional Response with\nmodel\nAdditional media types for the main response\nCombining information\nCombine predefined responses and custom ones\nMore information about OpenAPI responses\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAdditional Response with\nmodel\nAdditional media types for the main response\nCombining information\nCombine predefined responses and custom ones\nMore information about OpenAPI responses\nFastAPI\nLearn\nAdvanced User Guide\nAdditional Responses in OpenAPI\n¶\nWarning\nThis is a rather advanced topic.\nIf you are starting with\nFastAPI\n, you might not need this.\nYou can declare additional responses, with additional status codes, media types, descriptions, etc.\nThose additional responses will be included in the OpenAPI schema, so they will also appear in the API docs.\nBut for those additional responses you have to make sure you return a\nResponse\nlike\nJSONResponse\ndirectly, with your status code and content.\nAdditional Response with\nmodel\n¶\nYou can pass to your\npath operation decorators\na parameter\nresponses\n.\nIt receives a\ndict\n: the keys are status codes for each response (like\n200\n), and the values are other\ndict\ns with the information for each of them.\nEach of those response\ndict\ns can have a key\nmodel\n, containing a Pydantic model, just like\nresponse_model\n.\nFastAPI\nwill take that model, generate its JSON Schema and include it in the correct place in OpenAPI.\nFor example, to declare another response with a status code\n404\nand a Pydantic model\nMessage\n, you can write:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nJSONResponse\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nid\n:\nstr\nvalue\n:\nstr\nclass\nMessage\n(\nBaseModel\n):\nmessage\n:\nstr\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n,\nresponses\n=\n{\n404\n:\n{\n\"model\"\n:\nMessage\n}})\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nif\nitem_id\n==\n\"foo\"\n:\nreturn\n{\n\"id\"\n:\n\"foo\"\n,\n\"value\"\n:\n\"there goes my hero\"\n}\nreturn\nJSONResponse\n(\nstatus_code\n=\n404\n,\ncontent\n=\n{\n\"message\"\n:\n\"Item not found\"\n})\nNote\nKeep in mind that you have to return the\nJSONResponse\ndirectly.\nInfo\nThe\nmodel\nkey is not part of OpenAPI.\nFastAPI\nwill take the Pydantic model from there, generate the JSON Schema, and put it in the correct place.\nThe correct place is:\nIn the key\ncontent\n, that has as value another JSON object (\ndict\n) that contains:\nA key with the media type, e.g.\napplication/json\n, that contains as value another JSON object, that contains:\nA key\nschema\n, that has as the value the JSON Schema from the model, here's the correct place.\nFastAPI\nadds a reference here to the global JSON Schemas in another place in your OpenAPI instead of including it directly. This way, other applications and clients can use those JSON Schemas directly, provide better code generation tools, etc.\nThe generated responses in the OpenAPI for this\npath operation\nwill be:\n{\n\"responses\"\n:\n{\n\"404\"\n:\n{\n\"description\"\n:\n\"Additional Response\"\n,\n\"content\"\n:\n{\n\"application/json\"\n:\n{\n\"schema\"\n:\n{\n\"$ref\"\n:\n\"#/components/schemas/Message\"\n}\n}\n}\n},\n\"200\"\n:\n{\n\"description\"\n:\n\"Successful Response\"\n,\n\"content\"\n:\n{\n\"application/json\"\n:\n{\n\"schema\"\n:\n{\n\"$ref\"\n:\n\"#/components/schemas/Item\"\n}\n}\n}\n},\n\"422\"\n:\n{\n\"description\"\n:\n\"Validation Error\"\n,\n\"content\"\n:\n{\n\"application/json\"\n:\n{\n\"schema\"\n:\n{\n\"$ref\"\n:\n\"#/components/schemas/HTTPValidationError\"\n}\n}\n}\n}\n}\n}\nThe schemas are referenced to another place inside the OpenAPI schema:\n{\n\"components\"\n:\n{\n\"schemas\"\n:\n{\n\"Message\"\n:\n{\n\"title\"\n:\n\"Message\"\n,\n\"required\"\n:\n[\n\"message\"\n],\n\"type\"\n:\n\"object\"\n,\n\"properties\"\n:\n{\n\"message\"\n:\n{\n\"title\"\n:\n\"Message\"\n,\n\"type\"\n:\n\"string\"\n}\n}\n},\n\"Item\"\n:\n{\n\"title\"\n:\n\"Item\"\n,\n\"required\"\n:\n[\n\"id\"\n,\n\"value\"\n],\n\"type\"\n:\n\"object\"\n,\n\"properties\"\n:\n{\n\"id\"\n:\n{\n\"title\"\n:\n\"Id\"\n,\n\"type\"\n:\n\"string\"\n},\n\"value\"\n:\n{\n\"title\"\n:\n\"Value\"\n,\n\"type\"\n:\n\"string\"\n}\n}\n},\n\"ValidationError\"\n:\n{\n\"title\"\n:\n\"ValidationError\"\n,\n\"required\"\n:\n[\n\"loc\"\n,\n\"msg\"\n,\n\"type\"\n],\n\"type\"\n:\n\"object\"\n,\n\"properties\"\n:\n{\n\"loc\"\n:\n{\n\"title\"\n:\n\"Location\"\n,\n\"type\"\n:\n\"array\"\n,\n\"items\"\n:\n{\n\"type\"\n:\n\"string\"\n}\n},\n\"msg\"\n:\n{\n\"title\"\n:\n\"Message\"\n,\n\"type\"\n:\n\"string\"\n},\n\"type\"\n:\n{\n\"title\"\n:\n\"Error Type\"\n,\n\"type\"\n:\n\"string\"\n}\n}\n},\n\"HTTPValidationError\"\n:\n{\n\"title\"\n:\n\"HTTPValidationError\"\n,\n\"type\"\n:\n\"object\"\n,\n\"properties\"\n:\n{\n\"detail\"\n:\n{\n\"title\"\n:\n\"Detail\"\n,\n\"type\"\n:\n\"array\"\n,\n\"items\"\n:\n{\n\"$ref\"\n:\n\"#/components/schemas/ValidationError\"\n}\n}\n}\n}\n}\n}\n}\nAdditional media types for the main response\n¶\nYou can use this same\nresponses\nparameter to add different media types for the same main response.\nFor example, you can add an additional media type of\nimage/png\n, declaring that your\npath operation\ncan return a JSON object (with media type\napplication/json\n) or a PNG image:\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nFileResponse\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nid\n:\nstr\nvalue\n:\nstr\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n,\nresponses\n=\n{\n200\n:\n{\n\"content\"\n:\n{\n\"image/png\"\n:\n{}},\n\"description\"\n:\n\"Return the JSON item or an image.\"\n,\n}\n},\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n,\nimg\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\n):\nif\nimg\n:\nreturn\nFileResponse\n(\n\"image.png\"\n,\nmedia_type\n=\n\"image/png\"\n)\nelse\n:\nreturn\n{\n\"id\"\n:\n\"foo\"\n,\n\"value\"\n:\n\"there goes my hero\"\n}\nNote\nNotice that you have to return the image using a\nFileResponse\ndirectly.\nInfo\nUnless you specify a different media type explicitly in your\nresponses\nparameter, FastAPI will assume the response has the same media type as the main response class (default\napplication/json\n).\nBut if you have specified a custom response class with\nNone\nas its media type, FastAPI will use\napplication/json\nfor any additional response that has an associated model.\nCombining information\n¶\nYou can also combine response information from multiple places, including the\nresponse_model\n,\nstatus_code\n, and\nresponses\nparameters.\nYou can declare a\nresponse_model\n, using the default status code\n200\n(or a custom one if you need), and then declare additional information for that same response in\nresponses\n, directly in the OpenAPI schema.\nFastAPI\nwill keep the additional information from\nresponses\n, and combine it with the JSON Schema from your model.\nFor example, you can declare a response with a status code\n404\nthat uses a Pydantic model and has a custom\ndescription\n.\nAnd a response with a status code\n200\nthat uses your\nresponse_model\n, but includes a custom\nexample\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nJSONResponse\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nid\n:\nstr\nvalue\n:\nstr\nclass\nMessage\n(\nBaseModel\n):\nmessage\n:\nstr\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n,\nresponses\n=\n{\n404\n:\n{\n\"model\"\n:\nMessage\n,\n\"description\"\n:\n\"The item was not found\"\n},\n200\n:\n{\n\"description\"\n:\n\"Item requested by ID\"\n,\n\"content\"\n:\n{\n\"application/json\"\n:\n{\n\"example\"\n:\n{\n\"id\"\n:\n\"bar\"\n,\n\"value\"\n:\n\"The bar tenders\"\n}\n}\n},\n},\n},\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n):\nif\nitem_id\n==\n\"foo\"\n:\nreturn\n{\n\"id\"\n:\n\"foo\"\n,\n\"value\"\n:\n\"there goes my hero\"\n}\nelse\n:\nreturn\nJSONResponse\n(\nstatus_code\n=\n404\n,\ncontent\n=\n{\n\"message\"\n:\n\"Item not found\"\n})\nIt will all be combined and included in your OpenAPI, and shown in the API docs:\nCombine predefined responses and custom ones\n¶\nYou might want to have some predefined responses that apply to many\npath operations\n, but you want to combine them with custom responses needed by each\npath operation\n.\nFor those cases, you can use the Python technique of \"unpacking\" a\ndict\nwith\n**dict_to_unpack\n:\nold_dict\n=\n{\n\"old key\"\n:\n\"old value\"\n,\n\"second old key\"\n:\n\"second old value\"\n,\n}\nnew_dict\n=\n{\n**\nold_dict\n,\n\"new key\"\n:\n\"new value\"\n}\nHere,\nnew_dict\nwill contain all the key-value pairs from\nold_dict\nplus the new key-value pair:\n{\n\"old key\"\n:\n\"old value\"\n,\n\"second old key\"\n:\n\"second old value\"\n,\n\"new key\"\n:\n\"new value\"\n,\n}\nYou can use that technique to reuse some predefined responses in your\npath operations\nand combine them with additional custom ones.\nFor example:\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.responses\nimport\nFileResponse\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nid\n:\nstr\nvalue\n:\nstr\nresponses\n=\n{\n404\n:\n{\n\"description\"\n:\n\"Item not found\"\n},\n302\n:\n{\n\"description\"\n:\n\"The item was moved\"\n},\n403\n:\n{\n\"description\"\n:\n\"Not enough privileges\"\n},\n}\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n,\nresponse_model\n=\nItem\n,\nresponses\n=\n{\n**\nresponses\n,\n200\n:\n{\n\"content\"\n:\n{\n\"image/png\"\n:\n{}}}},\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n,\nimg\n:\nUnion\n[\nbool\n,\nNone\n]\n=\nNone\n):\nif\nimg\n:\nreturn\nFileResponse\n(\n\"image.png\"\n,\nmedia_type\n=\n\"image/png\"\n)\nelse\n:\nreturn\n{\n\"id\"\n:\n\"foo\"\n,\n\"value\"\n:\n\"there goes my hero\"\n}\nMore information about OpenAPI responses\n¶\nTo see what exactly you can include in the responses, you can check these sections in the OpenAPI specification:\nOpenAPI Responses Object\n, it includes the\nResponse Object\n.\nOpenAPI Response Object\n, you can include anything from this directly in each response inside your\nresponses\nparameter. Including\ndescription\n,\nheaders\n,\ncontent\n(inside of this is that you declare different media types and JSON Schemas), and\nlinks\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/using-request-directly/",
    "title": "Using the Request Directly¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing the Request Directly\nTable of contents\nDetails about the\nRequest\nobject\nUse the\nRequest\nobject directly\nRequest\ndocumentation\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nDetails about the\nRequest\nobject\nUse the\nRequest\nobject directly\nRequest\ndocumentation\nFastAPI\nLearn\nAdvanced User Guide\nUsing the Request Directly\n¶\nUp to now, you have been declaring the parts of the request that you need with their types.\nTaking data from:\nThe path as parameters.\nHeaders.\nCookies.\netc.\nAnd by doing so,\nFastAPI\nis validating that data, converting it and generating documentation for your API automatically.\nBut there are situations where you might need to access the\nRequest\nobject directly.\nDetails about the\nRequest\nobject\n¶\nAs\nFastAPI\nis actually\nStarlette\nunderneath, with a layer of several tools on top, you can use Starlette's\nRequest\nobject directly when you need to.\nIt would also mean that if you get data from the\nRequest\nobject directly (for example, read the body) it won't be validated, converted or documented (with OpenAPI, for the automatic API user interface) by FastAPI.\nAlthough any other parameter declared normally (for example, the body with a Pydantic model) would still be validated, converted, annotated, etc.\nBut there are specific cases where it's useful to get the\nRequest\nobject.\nUse the\nRequest\nobject directly\n¶\nLet's imagine you want to get the client's IP address/host inside of your\npath operation function\n.\nFor that you need to access the request directly.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nread_root\n(\nitem_id\n:\nstr\n,\nrequest\n:\nRequest\n):\nclient_host\n=\nrequest\n.\nclient\n.\nhost\nreturn\n{\n\"client_host\"\n:\nclient_host\n,\n\"item_id\"\n:\nitem_id\n}\nBy declaring a\npath operation function\nparameter with the type being the\nRequest\nFastAPI\nwill know to pass the\nRequest\nin that parameter.\nTip\nNote that in this case, we are declaring a path parameter beside the request parameter.\nSo, the path parameter will be extracted, validated, converted to the specified type and annotated with OpenAPI.\nThe same way, you can declare any other parameter as normally, and additionally, get the\nRequest\ntoo.\nRequest\ndocumentation\n¶\nYou can read more details about the\nRequest\nobject in the official Starlette documentation site\n.\nTechnical Details\nYou could also use\nfrom starlette.requests import Request\n.\nFastAPI\nprovides it directly just as a convenience for you, the developer. But it comes directly from Starlette.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/management-tasks/",
    "title": "Repository Management Tasks¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nRepository Management Tasks\nTable of contents\nBe Nice\nWhen Things are Difficult\nEdit PR Titles\nAdd Labels to PRs\nAdd Labels to Translation PRs\nMerge Translation PRs\nFirst Translation PR\nReview PRs\nFastAPI People PRs\nExternal Links PRs\nDependabot PRs\nMark GitHub Discussions Answers\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nBe Nice\nWhen Things are Difficult\nEdit PR Titles\nAdd Labels to PRs\nAdd Labels to Translation PRs\nMerge Translation PRs\nFirst Translation PR\nReview PRs\nFastAPI People PRs\nExternal Links PRs\nDependabot PRs\nMark GitHub Discussions Answers\nFastAPI\nResources\nRepository Management Tasks\n¶\nThese are the tasks that can be performed to manage the FastAPI repository by\nteam members\n.\nTip\nThis section is useful only to a handful of people, team members with permissions to manage the repository. You can probably skip it. 😉\n...so, you are a\nteam member of FastAPI\n? Wow, you are so cool! 😎\nYou can help with everything on\nHelp FastAPI - Get Help\nthe same ways as external contributors. But additionally, there are some tasks that only you (as part of the team) can perform.\nHere are the general instructions for the tasks you can perform.\nThanks a lot for your help. 🙇\nBe Nice\n¶\nFirst of all, be nice. 😊\nYou probably are super nice if you were added to the team, but it's worth mentioning it. 🤓\nWhen Things are Difficult\n¶\nWhen things are great, everything is easier, so that doesn't need much instructions. But when things are difficult, here are some guidelines.\nTry to find the good side. In general, if people are not being unfriendly, try to thank their effort and interest, even if you disagree with the main subject (discussion, PR), just thank them for being interested in the project, or for having dedicated some time to try to do something.\nIt's difficult to convey emotion in text, use emojis to help. 😅\nIn discussions and PRs, in many cases, people bring their frustration and show it without filter, in many cases exaggerating, complaining, being entitled, etc. That's really not nice, and when it happens, it lowers our priority to solve their problems. But still, try to breath, and be gentle with your answers.\nTry to avoid using bitter sarcasm or potentially passive-aggressive comments. If something is wrong, it's better to be direct (try to be gentle) than sarcastic.\nTry to be as specific and objective as possible, avoid generalizations.\nFor conversations that are more difficult, for example to reject a PR, you can ask me (@tiangolo) to handle it directly.\nEdit PR Titles\n¶\nEdit the PR title to start with an emoji from\ngitmoji\n.\nUse the emoji character, not the GitHub code. So, use\n🐛\ninstead of\n:bug:\n. This is so that it shows up correctly outside of GitHub, for example in the release notes.\nFor translations use the\n🌐\nemoji (\"globe with meridians\").\nStart the title with a verb. For example\nAdd\n,\nRefactor\n,\nFix\n, etc. This way the title will say the action that the PR does. Like\nAdd support for teleporting\n, instead of\nTeleporting wasn't working, so this PR fixes it\n.\nEdit the text of the PR title to start in \"imperative\", like giving an order. So, instead of\nAdding support for teleporting\nuse\nAdd support for teleporting\n.\nTry to make the title descriptive about what it achieves. If it's a feature, try to describe it, for example\nAdd support for teleporting\ninstead of\nCreate TeleportAdapter class\n.\nDo not finish the title with a period (\n.\n).\nWhen the PR is for a translation, start with the\n🌐\nand then\nAdd {language} translation for\nand then the translated file path. For example:\n🌐 Add Spanish translation for\n`docs/es/docs/teleporting.md`\nOnce the PR is merged, a GitHub Action (\nlatest-changes\n) will use the PR title to update the latest changes automatically.\nSo, having a nice PR title will not only look nice in GitHub, but also in the release notes. 📝\nAdd Labels to PRs\n¶\nThe same GitHub Action\nlatest-changes\nuses one label in the PR to decide the section in the release notes to put this PR in.\nMake sure you use a supported label from the\nlatest-changes list of labels\n:\nbreaking\n: Breaking Changes\nExisting code will break if they update the version without changing their code. This rarely happens, so this label is not frequently used.\nsecurity\n: Security Fixes\nThis is for security fixes, like vulnerabilities. It would almost never be used.\nfeature\n: Features\nNew features, adding support for things that didn't exist before.\nbug\n: Fixes\nSomething that was supported didn't work, and this fixes it. There are many PRs that claim to be bug fixes because the user is doing something in an unexpected way that is not supported, but they considered it what should be supported by default. Many of these are actually features or refactors. But in some cases there's an actual bug.\nrefactor\n: Refactors\nThis is normally for changes to the internal code that don't change the behavior. Normally it improves maintainability, or enables future features, etc.\nupgrade\n: Upgrades\nThis is for upgrades to direct dependencies from the project, or extra optional dependencies, normally in\npyproject.toml\n. So, things that would affect final users, they would end up receiving the upgrade in their code base once they update. But this is not for upgrades to internal dependencies used for development, testing, docs, etc. Those internal dependencies, normally in\nrequirements.txt\nfiles or GitHub Action versions should be marked as\ninternal\n, not\nupgrade\n.\ndocs\n: Docs\nChanges in docs. This includes updating the docs, fixing typos. But it doesn't include changes to translations.\nYou can normally quickly detect it by going to the \"Files changed\" tab in the PR and checking if the updated file(s) starts with\ndocs/en/docs\n. The original version of the docs is always in English, so in\ndocs/en/docs\n.\nlang-all\n: Translations\nUse this for translations. You can normally quickly detect it by going to the \"Files changed\" tab in the PR and checking if the updated file(s) starts with\ndocs/{some lang}/docs\nbut not\ndocs/en/docs\n. For example,\ndocs/es/docs\n.\ninternal\n: Internal\nUse this for changes that only affect how the repo is managed. For example upgrades to internal dependencies, changes in GitHub Actions or scripts, etc.\nTip\nSome tools like Dependabot, will add some labels, like\ndependencies\n, but have in mind that this label is not used by the\nlatest-changes\nGitHub Action, so it won't be used in the release notes. Please make sure one of the labels above is added.\nAdd Labels to Translation PRs\n¶\nWhen there's a PR for a translation, apart from adding the\nlang-all\nlabel, also add a label for the language.\nThere will be a label for each language using the language code, like\nlang-{lang code}\n, for example,\nlang-es\nfor Spanish,\nlang-fr\nfor French, etc.\nAdd the specific language label.\nAdd the label\nawaiting-review\n.\nThe label\nawaiting-review\nis special, only used for translations. A GitHub Action will detect it, then it will read the language label, and it will update the GitHub Discussions managing the translations for that language to notify people that there's a new translation to review.\nOnce a native speaker comes, reviews the PR, and approves it, the GitHub Action will come and remove the\nawaiting-review\nlabel, and add the\napproved-1\nlabel.\nThis way, we can notice when there are new translations ready, because they have the\napproved-1\nlabel.\nMerge Translation PRs\n¶\nFor Spanish, as I'm a native speaker and it's a language close to me, I will give it a final review myself and in most cases tweak the PR a bit before merging it.\nFor the other languages, confirm that:\nThe title is correct following the instructions above.\nIt has the labels\nlang-all\nand\nlang-{lang code}\n.\nThe PR changes only one Markdown file adding a translation.\nOr in some cases, at most two files, if they are small, for the same language, and people reviewed them.\nIf it's the first translation for that language, it will have additional\nmkdocs.yml\nfiles, for those cases follow the instructions below.\nThe PR doesn't add any additional or extraneous files.\nThe translation seems to have a similar structure as the original English file.\nThe translation doesn't seem to change the original content, for example with obvious additional documentation sections.\nThe translation doesn't use different Markdown structures, for example adding HTML tags when the original didn't have them.\nThe \"admonition\" sections, like\ntip\n,\ninfo\n, etc. are not changed or translated. For example:\n/// tip\nThis is a tip.\n///\nlooks like this:\nTip\nThis is a tip.\n...it could be translated as:\n/// tip\nEsto es un consejo.\n///\n...but needs to keep the exact\ntip\nkeyword. If it was translated to\nconsejo\n, like:\n/// consejo\nEsto es un consejo.\n///\nit would change the style to the default one, it would look like:\n/// consejo\nEsto es un consejo.\n///\nThose don't have to be translated, but if they are, they need to be written as:\n/// tip | consejo\nEsto es un consejo.\n///\nWhich looks like:\nconsejo\nEsto es un consejo.\nFirst Translation PR\n¶\nWhen there's a first translation for a language, it will have a\ndocs/{lang code}/docs/index.md\ntranslated file and a\ndocs/{lang code}/mkdocs.yml\n.\nFor example, for Bosnian, it would be:\ndocs/bs/docs/index.md\ndocs/bs/mkdocs.yml\nThe\nmkdocs.yml\nfile will have only the following content:\nINHERIT\n:\n../en/mkdocs.yml\nThe language code would normally be in the\nISO 639-1 list of language codes\n.\nIn any case, the language code should be in the file\ndocs/language_names.yml\n.\nThere won't be yet a label for the language code, for example, if it was Bosnian, there wouldn't be a\nlang-bs\n. Before creating the label and adding it to the PR, create the GitHub Discussion:\nGo to the\nTranslations GitHub Discussions\nCreate a new discussion with the title\nBosnian Translations\n(or the language name in English)\nA description of:\n## Bosnian translations\nThis is the issue to track translations of the docs to Bosnian. 🚀\nHere are the [\nPRs to review with the label `lang-bs`\n](\nhttps://github.com/fastapi/fastapi/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-desc+label%3Alang-bs+label%3A%22awaiting-review%22\n). 🤓\nUpdate \"Bosnian\" with the new language.\nAnd update the search link to point to the new language label that will be created, like\nlang-bs\n.\nCreate and add the label to that new Discussion just created, like\nlang-bs\n.\nThen go back to the PR, and add the label, like\nlang-bs\n, and\nlang-all\nand\nawaiting-review\n.\nNow the GitHub action will automatically detect the label\nlang-bs\nand will post in that Discussion that this PR is waiting to be reviewed.\nReview PRs\n¶\nIf a PR doesn't explain what it does or why, ask for more information.\nA PR should have a specific use case that it is solving.\nIf the PR is for a feature, it should have docs.\nUnless it's a feature we want to discourage, like support for a corner case that we don't want users to use.\nThe docs should include a source example file, not write Python directly in Markdown.\nIf the source example(s) file can have different syntax for Python 3.8, 3.9, 3.10, there should be different versions of the file, and they should be shown in tabs in the docs.\nThere should be tests testing the source example.\nBefore the PR is applied, the new tests should fail.\nAfter applying the PR, the new tests should pass.\nCoverage should stay at 100%.\nIf you see the PR makes sense, or we discussed it and considered it should be accepted, you can add commits on top of the PR to tweak it, to add docs, tests, format, refactor, remove extra files, etc.\nFeel free to comment in the PR to ask for more information, to suggest changes, etc.\nOnce you think the PR is ready, move it in the internal GitHub project for me to review it.\nFastAPI People PRs\n¶\nEvery month, a GitHub Action updates the FastAPI People data. Those PRs look like this one:\n👥 Update FastAPI People\n.\nIf the tests are passing, you can merge it right away.\nExternal Links PRs\n¶\nWhen people add external links they edit this file\nexternal_links.yml\n.\nMake sure the new link is in the correct category (e.g. \"Podcasts\") and language (e.g. \"Japanese\").\nA new link should be at the top of its list.\nThe link URL should work (it should not return a 404).\nThe content of the link should be about FastAPI.\nThe new addition should have these fields:\nauthor\n: The name of the author.\nlink\n: The URL with the content.\ntitle\n: The title of the link (the title of the article, podcast, etc).\nAfter checking all these things and ensuring the PR has the right labels, you can merge it.\nDependabot PRs\n¶\nDependabot will create PRs to update dependencies for several things, and those PRs all look similar, but some are way more delicate than others.\nIf the PR is for a direct dependency, so, Dependabot is modifying\npyproject.toml\n,\ndon't merge it\n. 😱 Let me check it first. There's a good chance that some additional tweaks or updates are needed.\nIf the PR updates one of the internal dependencies, for example it's modifying\nrequirements.txt\nfiles, or GitHub Action versions, if the tests are passing, the release notes (shown in a summary in the PR) don't show any obvious potential breaking change, you can merge it. 😎\nMark GitHub Discussions Answers\n¶\nWhen a question in GitHub Discussions has been answered, mark the answer by clicking \"Mark as answer\".\nYou can filter discussions by\nQuestions\nthat are\nUnanswered\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/security/http-basic-auth/",
    "title": "HTTP Basic Auth¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nHTTP Basic Auth\nTable of contents\nSimple HTTP Basic Auth\nCheck the username\nTiming Attacks\nThe time to answer helps the attackers\nA \"professional\" attack\nFix it with\nsecrets.compare_digest()\nReturn the error\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nSimple HTTP Basic Auth\nCheck the username\nTiming Attacks\nThe time to answer helps the attackers\nA \"professional\" attack\nFix it with\nsecrets.compare_digest()\nReturn the error\nFastAPI\nLearn\nAdvanced User Guide\nAdvanced Security\nHTTP Basic Auth\n¶\nFor the simplest cases, you can use HTTP Basic Auth.\nIn HTTP Basic Auth, the application expects a header that contains a username and a password.\nIf it doesn't receive it, it returns an HTTP 401 \"Unauthorized\" error.\nAnd returns a header\nWWW-Authenticate\nwith a value of\nBasic\n, and an optional\nrealm\nparameter.\nThat tells the browser to show the integrated prompt for a username and password.\nThen, when you type that username and password, the browser sends them in the header automatically.\nSimple HTTP Basic Auth\n¶\nImport\nHTTPBasic\nand\nHTTPBasicCredentials\n.\nCreate a \"\nsecurity\nscheme\" using\nHTTPBasic\n.\nUse that\nsecurity\nwith a dependency in your\npath operation\n.\nIt returns an object of type\nHTTPBasicCredentials\n:\nIt contains the\nusername\nand\npassword\nsent.\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nHTTPBasic\n,\nHTTPBasicCredentials\napp\n=\nFastAPI\n()\nsecurity\n=\nHTTPBasic\n()\n@app\n.\nget\n(\n\"/users/me\"\n)\ndef\nread_current_user\n(\ncredentials\n:\nAnnotated\n[\nHTTPBasicCredentials\n,\nDepends\n(\nsecurity\n)]):\nreturn\n{\n\"username\"\n:\ncredentials\n.\nusername\n,\n\"password\"\n:\ncredentials\n.\npassword\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nHTTPBasic\n,\nHTTPBasicCredentials\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nsecurity\n=\nHTTPBasic\n()\n@app\n.\nget\n(\n\"/users/me\"\n)\ndef\nread_current_user\n(\ncredentials\n:\nAnnotated\n[\nHTTPBasicCredentials\n,\nDepends\n(\nsecurity\n)]):\nreturn\n{\n\"username\"\n:\ncredentials\n.\nusername\n,\n\"password\"\n:\ncredentials\n.\npassword\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nHTTPBasic\n,\nHTTPBasicCredentials\napp\n=\nFastAPI\n()\nsecurity\n=\nHTTPBasic\n()\n@app\n.\nget\n(\n\"/users/me\"\n)\ndef\nread_current_user\n(\ncredentials\n:\nHTTPBasicCredentials\n=\nDepends\n(\nsecurity\n)):\nreturn\n{\n\"username\"\n:\ncredentials\n.\nusername\n,\n\"password\"\n:\ncredentials\n.\npassword\n}\nWhen you try to open the URL for the first time (or click the \"Execute\" button in the docs) the browser will ask you for your username and password:\nCheck the username\n¶\nHere's a more complete example.\nUse a dependency to check if the username and password are correct.\nFor this, use the Python standard module\nsecrets\nto check the username and password.\nsecrets.compare_digest()\nneeds to take\nbytes\nor a\nstr\nthat only contains ASCII characters (the ones in English), this means it wouldn't work with characters like\ná\n, as in\nSebastián\n.\nTo handle that, we first convert the\nusername\nand\npassword\nto\nbytes\nencoding them with UTF-8.\nThen we can use\nsecrets.compare_digest()\nto ensure that\ncredentials.username\nis\n\"stanleyjobson\"\n, and that\ncredentials.password\nis\n\"swordfish\"\n.\nPython 3.9+\nimport\nsecrets\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nHTTPBasic\n,\nHTTPBasicCredentials\napp\n=\nFastAPI\n()\nsecurity\n=\nHTTPBasic\n()\ndef\nget_current_username\n(\ncredentials\n:\nAnnotated\n[\nHTTPBasicCredentials\n,\nDepends\n(\nsecurity\n)],\n):\ncurrent_username_bytes\n=\ncredentials\n.\nusername\n.\nencode\n(\n\"utf8\"\n)\ncorrect_username_bytes\n=\nb\n\"stanleyjobson\"\nis_correct_username\n=\nsecrets\n.\ncompare_digest\n(\ncurrent_username_bytes\n,\ncorrect_username_bytes\n)\ncurrent_password_bytes\n=\ncredentials\n.\npassword\n.\nencode\n(\n\"utf8\"\n)\ncorrect_password_bytes\n=\nb\n\"swordfish\"\nis_correct_password\n=\nsecrets\n.\ncompare_digest\n(\ncurrent_password_bytes\n,\ncorrect_password_bytes\n)\nif\nnot\n(\nis_correct_username\nand\nis_correct_password\n):\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Basic\"\n},\n)\nreturn\ncredentials\n.\nusername\n@app\n.\nget\n(\n\"/users/me\"\n)\ndef\nread_current_user\n(\nusername\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_current_username\n)]):\nreturn\n{\n\"username\"\n:\nusername\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nimport\nsecrets\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nHTTPBasic\n,\nHTTPBasicCredentials\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nsecurity\n=\nHTTPBasic\n()\ndef\nget_current_username\n(\ncredentials\n:\nAnnotated\n[\nHTTPBasicCredentials\n,\nDepends\n(\nsecurity\n)],\n):\ncurrent_username_bytes\n=\ncredentials\n.\nusername\n.\nencode\n(\n\"utf8\"\n)\ncorrect_username_bytes\n=\nb\n\"stanleyjobson\"\nis_correct_username\n=\nsecrets\n.\ncompare_digest\n(\ncurrent_username_bytes\n,\ncorrect_username_bytes\n)\ncurrent_password_bytes\n=\ncredentials\n.\npassword\n.\nencode\n(\n\"utf8\"\n)\ncorrect_password_bytes\n=\nb\n\"swordfish\"\nis_correct_password\n=\nsecrets\n.\ncompare_digest\n(\ncurrent_password_bytes\n,\ncorrect_password_bytes\n)\nif\nnot\n(\nis_correct_username\nand\nis_correct_password\n):\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Basic\"\n},\n)\nreturn\ncredentials\n.\nusername\n@app\n.\nget\n(\n\"/users/me\"\n)\ndef\nread_current_user\n(\nusername\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_current_username\n)]):\nreturn\n{\n\"username\"\n:\nusername\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nimport\nsecrets\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nHTTPBasic\n,\nHTTPBasicCredentials\napp\n=\nFastAPI\n()\nsecurity\n=\nHTTPBasic\n()\ndef\nget_current_username\n(\ncredentials\n:\nHTTPBasicCredentials\n=\nDepends\n(\nsecurity\n)):\ncurrent_username_bytes\n=\ncredentials\n.\nusername\n.\nencode\n(\n\"utf8\"\n)\ncorrect_username_bytes\n=\nb\n\"stanleyjobson\"\nis_correct_username\n=\nsecrets\n.\ncompare_digest\n(\ncurrent_username_bytes\n,\ncorrect_username_bytes\n)\ncurrent_password_bytes\n=\ncredentials\n.\npassword\n.\nencode\n(\n\"utf8\"\n)\ncorrect_password_bytes\n=\nb\n\"swordfish\"\nis_correct_password\n=\nsecrets\n.\ncompare_digest\n(\ncurrent_password_bytes\n,\ncorrect_password_bytes\n)\nif\nnot\n(\nis_correct_username\nand\nis_correct_password\n):\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Basic\"\n},\n)\nreturn\ncredentials\n.\nusername\n@app\n.\nget\n(\n\"/users/me\"\n)\ndef\nread_current_user\n(\nusername\n:\nstr\n=\nDepends\n(\nget_current_username\n)):\nreturn\n{\n\"username\"\n:\nusername\n}\nThis would be similar to:\nif\nnot\n(\ncredentials\n.\nusername\n==\n\"stanleyjobson\"\n)\nor\nnot\n(\ncredentials\n.\npassword\n==\n\"swordfish\"\n):\n# Return some error\n...\nBut by using the\nsecrets.compare_digest()\nit will be secure against a type of attacks called \"timing attacks\".\nTiming Attacks\n¶\nBut what's a \"timing attack\"?\nLet's imagine some attackers are trying to guess the username and password.\nAnd they send a request with a username\njohndoe\nand a password\nlove123\n.\nThen the Python code in your application would be equivalent to something like:\nif\n\"johndoe\"\n==\n\"stanleyjobson\"\nand\n\"love123\"\n==\n\"swordfish\"\n:\n...\nBut right at the moment Python compares the first\nj\nin\njohndoe\nto the first\ns\nin\nstanleyjobson\n, it will return\nFalse\n, because it already knows that those two strings are not the same, thinking that \"there's no need to waste more computation comparing the rest of the letters\". And your application will say \"Incorrect username or password\".\nBut then the attackers try with username\nstanleyjobsox\nand password\nlove123\n.\nAnd your application code does something like:\nif\n\"stanleyjobsox\"\n==\n\"stanleyjobson\"\nand\n\"love123\"\n==\n\"swordfish\"\n:\n...\nPython will have to compare the whole\nstanleyjobso\nin both\nstanleyjobsox\nand\nstanleyjobson\nbefore realizing that both strings are not the same. So it will take some extra microseconds to reply back \"Incorrect username or password\".\nThe time to answer helps the attackers\n¶\nAt that point, by noticing that the server took some microseconds longer to send the \"Incorrect username or password\" response, the attackers will know that they got\nsomething\nright, some of the initial letters were right.\nAnd then they can try again knowing that it's probably something more similar to\nstanleyjobsox\nthan to\njohndoe\n.\nA \"professional\" attack\n¶\nOf course, the attackers would not try all this by hand, they would write a program to do it, possibly with thousands or millions of tests per second. And they would get just one extra correct letter at a time.\nBut doing that, in some minutes or hours the attackers would have guessed the correct username and password, with the \"help\" of our application, just using the time taken to answer.\nFix it with\nsecrets.compare_digest()\n¶\nBut in our code we are actually using\nsecrets.compare_digest()\n.\nIn short, it will take the same time to compare\nstanleyjobsox\nto\nstanleyjobson\nthan it takes to compare\njohndoe\nto\nstanleyjobson\n. And the same for the password.\nThat way, using\nsecrets.compare_digest()\nin your application code, it will be safe against this whole range of security attacks.\nReturn the error\n¶\nAfter detecting that the credentials are incorrect, return an\nHTTPException\nwith a status code 401 (the same returned when no credentials are provided) and add the header\nWWW-Authenticate\nto make the browser show the login prompt again:\nPython 3.9+\nimport\nsecrets\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nHTTPBasic\n,\nHTTPBasicCredentials\napp\n=\nFastAPI\n()\nsecurity\n=\nHTTPBasic\n()\ndef\nget_current_username\n(\ncredentials\n:\nAnnotated\n[\nHTTPBasicCredentials\n,\nDepends\n(\nsecurity\n)],\n):\ncurrent_username_bytes\n=\ncredentials\n.\nusername\n.\nencode\n(\n\"utf8\"\n)\ncorrect_username_bytes\n=\nb\n\"stanleyjobson\"\nis_correct_username\n=\nsecrets\n.\ncompare_digest\n(\ncurrent_username_bytes\n,\ncorrect_username_bytes\n)\ncurrent_password_bytes\n=\ncredentials\n.\npassword\n.\nencode\n(\n\"utf8\"\n)\ncorrect_password_bytes\n=\nb\n\"swordfish\"\nis_correct_password\n=\nsecrets\n.\ncompare_digest\n(\ncurrent_password_bytes\n,\ncorrect_password_bytes\n)\nif\nnot\n(\nis_correct_username\nand\nis_correct_password\n):\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Basic\"\n},\n)\nreturn\ncredentials\n.\nusername\n@app\n.\nget\n(\n\"/users/me\"\n)\ndef\nread_current_user\n(\nusername\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_current_username\n)]):\nreturn\n{\n\"username\"\n:\nusername\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nimport\nsecrets\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nHTTPBasic\n,\nHTTPBasicCredentials\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nsecurity\n=\nHTTPBasic\n()\ndef\nget_current_username\n(\ncredentials\n:\nAnnotated\n[\nHTTPBasicCredentials\n,\nDepends\n(\nsecurity\n)],\n):\ncurrent_username_bytes\n=\ncredentials\n.\nusername\n.\nencode\n(\n\"utf8\"\n)\ncorrect_username_bytes\n=\nb\n\"stanleyjobson\"\nis_correct_username\n=\nsecrets\n.\ncompare_digest\n(\ncurrent_username_bytes\n,\ncorrect_username_bytes\n)\ncurrent_password_bytes\n=\ncredentials\n.\npassword\n.\nencode\n(\n\"utf8\"\n)\ncorrect_password_bytes\n=\nb\n\"swordfish\"\nis_correct_password\n=\nsecrets\n.\ncompare_digest\n(\ncurrent_password_bytes\n,\ncorrect_password_bytes\n)\nif\nnot\n(\nis_correct_username\nand\nis_correct_password\n):\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Basic\"\n},\n)\nreturn\ncredentials\n.\nusername\n@app\n.\nget\n(\n\"/users/me\"\n)\ndef\nread_current_user\n(\nusername\n:\nAnnotated\n[\nstr\n,\nDepends\n(\nget_current_username\n)]):\nreturn\n{\n\"username\"\n:\nusername\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nimport\nsecrets\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nstatus\nfrom\nfastapi.security\nimport\nHTTPBasic\n,\nHTTPBasicCredentials\napp\n=\nFastAPI\n()\nsecurity\n=\nHTTPBasic\n()\ndef\nget_current_username\n(\ncredentials\n:\nHTTPBasicCredentials\n=\nDepends\n(\nsecurity\n)):\ncurrent_username_bytes\n=\ncredentials\n.\nusername\n.\nencode\n(\n\"utf8\"\n)\ncorrect_username_bytes\n=\nb\n\"stanleyjobson\"\nis_correct_username\n=\nsecrets\n.\ncompare_digest\n(\ncurrent_username_bytes\n,\ncorrect_username_bytes\n)\ncurrent_password_bytes\n=\ncredentials\n.\npassword\n.\nencode\n(\n\"utf8\"\n)\ncorrect_password_bytes\n=\nb\n\"swordfish\"\nis_correct_password\n=\nsecrets\n.\ncompare_digest\n(\ncurrent_password_bytes\n,\ncorrect_password_bytes\n)\nif\nnot\n(\nis_correct_username\nand\nis_correct_password\n):\nraise\nHTTPException\n(\nstatus_code\n=\nstatus\n.\nHTTP_401_UNAUTHORIZED\n,\ndetail\n=\n\"Incorrect username or password\"\n,\nheaders\n=\n{\n\"WWW-Authenticate\"\n:\n\"Basic\"\n},\n)\nreturn\ncredentials\n.\nusername\n@app\n.\nget\n(\n\"/users/me\"\n)\ndef\nread_current_user\n(\nusername\n:\nstr\n=\nDepends\n(\nget_current_username\n)):\nreturn\n{\n\"username\"\n:\nusername\n}\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/request-forms-and-files/",
    "title": "Request Forms and Files¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nRequest Forms and Files\nTable of contents\nImport\nFile\nand\nForm\nDefine\nFile\nand\nForm\nparameters\nRecap\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nImport\nFile\nand\nForm\nDefine\nFile\nand\nForm\nparameters\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nRequest Forms and Files\n¶\nYou can define files and form fields at the same time using\nFile\nand\nForm\n.\nInfo\nTo receive uploaded files and/or form data, first install\npython-multipart\n.\nMake sure you create a\nvirtual environment\n, activate it, and then install it, for example:\n$\npip\ninstall\npython-multipart\nImport\nFile\nand\nForm\n¶\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nForm\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n()],\nfileb\n:\nAnnotated\n[\nUploadFile\n,\nFile\n()],\ntoken\n:\nAnnotated\n[\nstr\n,\nForm\n()],\n):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n),\n\"token\"\n:\ntoken\n,\n\"fileb_content_type\"\n:\nfileb\n.\ncontent_type\n,\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nForm\n,\nUploadFile\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n()],\nfileb\n:\nAnnotated\n[\nUploadFile\n,\nFile\n()],\ntoken\n:\nAnnotated\n[\nstr\n,\nForm\n()],\n):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n),\n\"token\"\n:\ntoken\n,\n\"fileb_content_type\"\n:\nfileb\n.\ncontent_type\n,\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nForm\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nbytes\n=\nFile\n(),\nfileb\n:\nUploadFile\n=\nFile\n(),\ntoken\n:\nstr\n=\nForm\n()\n):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n),\n\"token\"\n:\ntoken\n,\n\"fileb_content_type\"\n:\nfileb\n.\ncontent_type\n,\n}\nDefine\nFile\nand\nForm\nparameters\n¶\nCreate file and form parameters the same way you would for\nBody\nor\nQuery\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nForm\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n()],\nfileb\n:\nAnnotated\n[\nUploadFile\n,\nFile\n()],\ntoken\n:\nAnnotated\n[\nstr\n,\nForm\n()],\n):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n),\n\"token\"\n:\ntoken\n,\n\"fileb_content_type\"\n:\nfileb\n.\ncontent_type\n,\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nForm\n,\nUploadFile\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n()],\nfileb\n:\nAnnotated\n[\nUploadFile\n,\nFile\n()],\ntoken\n:\nAnnotated\n[\nstr\n,\nForm\n()],\n):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n),\n\"token\"\n:\ntoken\n,\n\"fileb_content_type\"\n:\nfileb\n.\ncontent_type\n,\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nForm\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nbytes\n=\nFile\n(),\nfileb\n:\nUploadFile\n=\nFile\n(),\ntoken\n:\nstr\n=\nForm\n()\n):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n),\n\"token\"\n:\ntoken\n,\n\"fileb_content_type\"\n:\nfileb\n.\ncontent_type\n,\n}\nThe files and form fields will be uploaded as form data and you will receive the files and form fields.\nAnd you can declare some of the files as\nbytes\nand some as\nUploadFile\n.\nWarning\nYou can declare multiple\nFile\nand\nForm\nparameters in a\npath operation\n, but you can't also declare\nBody\nfields that you expect to receive as JSON, as the request will have the body encoded using\nmultipart/form-data\ninstead of\napplication/json\n.\nThis is not a limitation of\nFastAPI\n, it's part of the HTTP protocol.\nRecap\n¶\nUse\nFile\nand\nForm\ntogether when you need to receive data and files in the same request.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/security/",
    "title": "Security Tools¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nSecurity Tools\nTable of contents\nAPI Key Security Schemes\nAPIKeyCookie\nUsage\nExample\nmodel\nscheme_name\nauto_error\ncheck_api_key\nAPIKeyHeader\nUsage\nExample\nmodel\nscheme_name\nauto_error\ncheck_api_key\nAPIKeyQuery\nUsage\nExample\nmodel\nscheme_name\nauto_error\ncheck_api_key\nHTTP Authentication Schemes\nHTTPBasic\nUsage\nExample\nmodel\nscheme_name\nrealm\nauto_error\nHTTPBearer\nUsage\nExample\nmodel\nscheme_name\nauto_error\nHTTPDigest\nUsage\nExample\nmodel\nscheme_name\nauto_error\nHTTP Credentials\nHTTPAuthorizationCredentials\nscheme\ncredentials\nHTTPBasicCredentials\nusername\npassword\nOAuth2 Authentication\nOAuth2\nmodel\nscheme_name\nauto_error\nOAuth2AuthorizationCodeBearer\nmodel\nscheme_name\nauto_error\nOAuth2PasswordBearer\nmodel\nscheme_name\nauto_error\nOAuth2 Password Form\nOAuth2PasswordRequestForm\nExample\ngrant_type\nusername\npassword\nscopes\nclient_id\nclient_secret\nOAuth2PasswordRequestFormStrict\nExample\ngrant_type\nusername\npassword\nscopes\nclient_id\nclient_secret\nOAuth2 Security Scopes in Dependencies\nSecurityScopes\nscopes\nscope_str\nOpenID Connect\nOpenIdConnect\nmodel\nscheme_name\nauto_error\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAPI Key Security Schemes\nAPIKeyCookie\nUsage\nExample\nmodel\nscheme_name\nauto_error\ncheck_api_key\nAPIKeyHeader\nUsage\nExample\nmodel\nscheme_name\nauto_error\ncheck_api_key\nAPIKeyQuery\nUsage\nExample\nmodel\nscheme_name\nauto_error\ncheck_api_key\nHTTP Authentication Schemes\nHTTPBasic\nUsage\nExample\nmodel\nscheme_name\nrealm\nauto_error\nHTTPBearer\nUsage\nExample\nmodel\nscheme_name\nauto_error\nHTTPDigest\nUsage\nExample\nmodel\nscheme_name\nauto_error\nHTTP Credentials\nHTTPAuthorizationCredentials\nscheme\ncredentials\nHTTPBasicCredentials\nusername\npassword\nOAuth2 Authentication\nOAuth2\nmodel\nscheme_name\nauto_error\nOAuth2AuthorizationCodeBearer\nmodel\nscheme_name\nauto_error\nOAuth2PasswordBearer\nmodel\nscheme_name\nauto_error\nOAuth2 Password Form\nOAuth2PasswordRequestForm\nExample\ngrant_type\nusername\npassword\nscopes\nclient_id\nclient_secret\nOAuth2PasswordRequestFormStrict\nExample\ngrant_type\nusername\npassword\nscopes\nclient_id\nclient_secret\nOAuth2 Security Scopes in Dependencies\nSecurityScopes\nscopes\nscope_str\nOpenID Connect\nOpenIdConnect\nmodel\nscheme_name\nauto_error\nFastAPI\nReference\nSecurity Tools\n¶\nWhen you need to declare dependencies with OAuth2 scopes you use\nSecurity()\n.\nBut you still need to define what is the dependable, the callable that you pass as a parameter to\nDepends()\nor\nSecurity()\n.\nThere are multiple tools that you can use to create those dependables, and they get integrated into OpenAPI so they are shown in the automatic docs UI, they can be used by automatically generated clients and SDKs, etc.\nYou can import them from\nfastapi.security\n:\nfrom\nfastapi.security\nimport\n(\nAPIKeyCookie\n,\nAPIKeyHeader\n,\nAPIKeyQuery\n,\nHTTPAuthorizationCredentials\n,\nHTTPBasic\n,\nHTTPBasicCredentials\n,\nHTTPBearer\n,\nHTTPDigest\n,\nOAuth2\n,\nOAuth2AuthorizationCodeBearer\n,\nOAuth2PasswordBearer\n,\nOAuth2PasswordRequestForm\n,\nOAuth2PasswordRequestFormStrict\n,\nOpenIdConnect\n,\nSecurityScopes\n,\n)\nAPI Key Security Schemes\n¶\nfastapi.security.APIKeyCookie\n¶\nAPIKeyCookie\n(\n*\n,\nname\n,\nscheme_name\n=\nNone\n,\ndescription\n=\nNone\n,\nauto_error\n=\nTrue\n)\nBases:\nAPIKeyBase\nAPI key authentication using a cookie.\nThis defines the name of the cookie that should be provided in the request with\nthe API key and integrates that into the OpenAPI documentation. It extracts\nthe key value sent in the cookie automatically and provides it as the dependency\nresult. But it doesn't define how to set that cookie.\nUsage\n¶\nCreate an instance object and use that object as the dependency in\nDepends()\n.\nThe dependency result will be a string containing the key value.\nExample\n¶\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nAPIKeyCookie\napp\n=\nFastAPI\n()\ncookie_scheme\n=\nAPIKeyCookie\n(\nname\n=\n\"session\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nsession\n:\nstr\n=\nDepends\n(\ncookie_scheme\n)):\nreturn\n{\n\"session\"\n:\nsession\n}\nPARAMETER\nDESCRIPTION\nname\nCookie name.\nTYPE:\nstr\nscheme_name\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nauto_error\nBy default, if the cookie is not provided,\nAPIKeyCookie\nwill\nautomatically cancel the request and send the client an error.\nIf\nauto_error\nis set to\nFalse\n, when the cookie is not available,\ninstead of erroring out, the dependency result will be\nNone\n.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, in a cookie or\nin an HTTP Bearer token).\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/security/api_key.py\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\ndef\n__init__\n(\nself\n,\n*\n,\nname\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"Cookie name.\"\n)],\nscheme_name\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nauto_error\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBy default, if the cookie is not provided, `APIKeyCookie` will\nautomatically cancel the request and send the client an error.\nIf `auto_error` is set to `False`, when the cookie is not available,\ninstead of erroring out, the dependency result will be `None`.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, in a cookie or\nin an HTTP Bearer token).\n\"\"\"\n),\n]\n=\nTrue\n,\n):\nself\n.\nmodel\n:\nAPIKey\n=\nAPIKey\n(\n**\n{\n\"in\"\n:\nAPIKeyIn\n.\ncookie\n},\nname\n=\nname\n,\ndescription\n=\ndescription\n,\n)\nself\n.\nscheme_name\n=\nscheme_name\nor\nself\n.\n__class__\n.\n__name__\nself\n.\nauto_error\n=\nauto_error\nmodel\ninstance-attribute\n¶\nmodel\n=\nAPIKey\n(\n**\n{\n\"in\"\n:\ncookie\n},\nname\n=\nname\n,\ndescription\n=\ndescription\n)\nscheme_name\ninstance-attribute\n¶\nscheme_name\n=\nscheme_name\nor\n__name__\nauto_error\ninstance-attribute\n¶\nauto_error\n=\nauto_error\ncheck_api_key\nstaticmethod\n¶\ncheck_api_key\n(\napi_key\n,\nauto_error\n)\nSource code in\nfastapi/security/api_key.py\n12\n13\n14\n15\n16\n17\n18\n19\n20\n@staticmethod\ndef\ncheck_api_key\n(\napi_key\n:\nOptional\n[\nstr\n],\nauto_error\n:\nbool\n)\n->\nOptional\n[\nstr\n]:\nif\nnot\napi_key\n:\nif\nauto_error\n:\nraise\nHTTPException\n(\nstatus_code\n=\nHTTP_403_FORBIDDEN\n,\ndetail\n=\n\"Not authenticated\"\n)\nreturn\nNone\nreturn\napi_key\nfastapi.security.APIKeyHeader\n¶\nAPIKeyHeader\n(\n*\n,\nname\n,\nscheme_name\n=\nNone\n,\ndescription\n=\nNone\n,\nauto_error\n=\nTrue\n)\nBases:\nAPIKeyBase\nAPI key authentication using a header.\nThis defines the name of the header that should be provided in the request with\nthe API key and integrates that into the OpenAPI documentation. It extracts\nthe key value sent in the header automatically and provides it as the dependency\nresult. But it doesn't define how to send that key to the client.\nUsage\n¶\nCreate an instance object and use that object as the dependency in\nDepends()\n.\nThe dependency result will be a string containing the key value.\nExample\n¶\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nAPIKeyHeader\napp\n=\nFastAPI\n()\nheader_scheme\n=\nAPIKeyHeader\n(\nname\n=\n\"x-key\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\nkey\n:\nstr\n=\nDepends\n(\nheader_scheme\n)):\nreturn\n{\n\"key\"\n:\nkey\n}\nPARAMETER\nDESCRIPTION\nname\nHeader name.\nTYPE:\nstr\nscheme_name\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nauto_error\nBy default, if the header is not provided,\nAPIKeyHeader\nwill\nautomatically cancel the request and send the client an error.\nIf\nauto_error\nis set to\nFalse\n, when the header is not available,\ninstead of erroring out, the dependency result will be\nNone\n.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, in a header or\nin an HTTP Bearer token).\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/security/api_key.py\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\ndef\n__init__\n(\nself\n,\n*\n,\nname\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"Header name.\"\n)],\nscheme_name\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nauto_error\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBy default, if the header is not provided, `APIKeyHeader` will\nautomatically cancel the request and send the client an error.\nIf `auto_error` is set to `False`, when the header is not available,\ninstead of erroring out, the dependency result will be `None`.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, in a header or\nin an HTTP Bearer token).\n\"\"\"\n),\n]\n=\nTrue\n,\n):\nself\n.\nmodel\n:\nAPIKey\n=\nAPIKey\n(\n**\n{\n\"in\"\n:\nAPIKeyIn\n.\nheader\n},\nname\n=\nname\n,\ndescription\n=\ndescription\n,\n)\nself\n.\nscheme_name\n=\nscheme_name\nor\nself\n.\n__class__\n.\n__name__\nself\n.\nauto_error\n=\nauto_error\nmodel\ninstance-attribute\n¶\nmodel\n=\nAPIKey\n(\n**\n{\n\"in\"\n:\nheader\n},\nname\n=\nname\n,\ndescription\n=\ndescription\n)\nscheme_name\ninstance-attribute\n¶\nscheme_name\n=\nscheme_name\nor\n__name__\nauto_error\ninstance-attribute\n¶\nauto_error\n=\nauto_error\ncheck_api_key\nstaticmethod\n¶\ncheck_api_key\n(\napi_key\n,\nauto_error\n)\nSource code in\nfastapi/security/api_key.py\n12\n13\n14\n15\n16\n17\n18\n19\n20\n@staticmethod\ndef\ncheck_api_key\n(\napi_key\n:\nOptional\n[\nstr\n],\nauto_error\n:\nbool\n)\n->\nOptional\n[\nstr\n]:\nif\nnot\napi_key\n:\nif\nauto_error\n:\nraise\nHTTPException\n(\nstatus_code\n=\nHTTP_403_FORBIDDEN\n,\ndetail\n=\n\"Not authenticated\"\n)\nreturn\nNone\nreturn\napi_key\nfastapi.security.APIKeyQuery\n¶\nAPIKeyQuery\n(\n*\n,\nname\n,\nscheme_name\n=\nNone\n,\ndescription\n=\nNone\n,\nauto_error\n=\nTrue\n)\nBases:\nAPIKeyBase\nAPI key authentication using a query parameter.\nThis defines the name of the query parameter that should be provided in the request\nwith the API key and integrates that into the OpenAPI documentation. It extracts\nthe key value sent in the query parameter automatically and provides it as the\ndependency result. But it doesn't define how to send that API key to the client.\nUsage\n¶\nCreate an instance object and use that object as the dependency in\nDepends()\n.\nThe dependency result will be a string containing the key value.\nExample\n¶\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nAPIKeyQuery\napp\n=\nFastAPI\n()\nquery_scheme\n=\nAPIKeyQuery\n(\nname\n=\n\"api_key\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\napi_key\n:\nstr\n=\nDepends\n(\nquery_scheme\n)):\nreturn\n{\n\"api_key\"\n:\napi_key\n}\nPARAMETER\nDESCRIPTION\nname\nQuery parameter name.\nTYPE:\nstr\nscheme_name\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nauto_error\nBy default, if the query parameter is not provided,\nAPIKeyQuery\nwill\nautomatically cancel the request and send the client an error.\nIf\nauto_error\nis set to\nFalse\n, when the query parameter is not\navailable, instead of erroring out, the dependency result will be\nNone\n.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, in a query\nparameter or in an HTTP Bearer token).\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/security/api_key.py\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\ndef\n__init__\n(\nself\n,\n*\n,\nname\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"Query parameter name.\"\n),\n],\nscheme_name\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nauto_error\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBy default, if the query parameter is not provided, `APIKeyQuery` will\nautomatically cancel the request and send the client an error.\nIf `auto_error` is set to `False`, when the query parameter is not\navailable, instead of erroring out, the dependency result will be\n`None`.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, in a query\nparameter or in an HTTP Bearer token).\n\"\"\"\n),\n]\n=\nTrue\n,\n):\nself\n.\nmodel\n:\nAPIKey\n=\nAPIKey\n(\n**\n{\n\"in\"\n:\nAPIKeyIn\n.\nquery\n},\nname\n=\nname\n,\ndescription\n=\ndescription\n,\n)\nself\n.\nscheme_name\n=\nscheme_name\nor\nself\n.\n__class__\n.\n__name__\nself\n.\nauto_error\n=\nauto_error\nmodel\ninstance-attribute\n¶\nmodel\n=\nAPIKey\n(\n**\n{\n\"in\"\n:\nquery\n},\nname\n=\nname\n,\ndescription\n=\ndescription\n)\nscheme_name\ninstance-attribute\n¶\nscheme_name\n=\nscheme_name\nor\n__name__\nauto_error\ninstance-attribute\n¶\nauto_error\n=\nauto_error\ncheck_api_key\nstaticmethod\n¶\ncheck_api_key\n(\napi_key\n,\nauto_error\n)\nSource code in\nfastapi/security/api_key.py\n12\n13\n14\n15\n16\n17\n18\n19\n20\n@staticmethod\ndef\ncheck_api_key\n(\napi_key\n:\nOptional\n[\nstr\n],\nauto_error\n:\nbool\n)\n->\nOptional\n[\nstr\n]:\nif\nnot\napi_key\n:\nif\nauto_error\n:\nraise\nHTTPException\n(\nstatus_code\n=\nHTTP_403_FORBIDDEN\n,\ndetail\n=\n\"Not authenticated\"\n)\nreturn\nNone\nreturn\napi_key\nHTTP Authentication Schemes\n¶\nfastapi.security.HTTPBasic\n¶\nHTTPBasic\n(\n*\n,\nscheme_name\n=\nNone\n,\nrealm\n=\nNone\n,\ndescription\n=\nNone\n,\nauto_error\n=\nTrue\n)\nBases:\nHTTPBase\nHTTP Basic authentication.\nUsage\n¶\nCreate an instance object and use that object as the dependency in\nDepends()\n.\nThe dependency result will be an\nHTTPBasicCredentials\nobject containing the\nusername\nand the\npassword\n.\nRead more about it in the\nFastAPI docs for HTTP Basic Auth\n.\nExample\n¶\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nHTTPBasic\n,\nHTTPBasicCredentials\napp\n=\nFastAPI\n()\nsecurity\n=\nHTTPBasic\n()\n@app\n.\nget\n(\n\"/users/me\"\n)\ndef\nread_current_user\n(\ncredentials\n:\nAnnotated\n[\nHTTPBasicCredentials\n,\nDepends\n(\nsecurity\n)]):\nreturn\n{\n\"username\"\n:\ncredentials\n.\nusername\n,\n\"password\"\n:\ncredentials\n.\npassword\n}\nPARAMETER\nDESCRIPTION\nscheme_name\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nrealm\nHTTP Basic authentication realm.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nauto_error\nBy default, if the HTTP Basic authentication is not provided (a\nheader),\nHTTPBasic\nwill automatically cancel the request and send the\nclient an error.\nIf\nauto_error\nis set to\nFalse\n, when the HTTP Basic authentication\nis not available, instead of erroring out, the dependency result will\nbe\nNone\n.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, in HTTP Basic\nauthentication or in an HTTP Bearer token).\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/security/http.py\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\ndef\n__init__\n(\nself\n,\n*\n,\nscheme_name\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nrealm\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nHTTP Basic authentication realm.\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nauto_error\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBy default, if the HTTP Basic authentication is not provided (a\nheader), `HTTPBasic` will automatically cancel the request and send the\nclient an error.\nIf `auto_error` is set to `False`, when the HTTP Basic authentication\nis not available, instead of erroring out, the dependency result will\nbe `None`.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, in HTTP Basic\nauthentication or in an HTTP Bearer token).\n\"\"\"\n),\n]\n=\nTrue\n,\n):\nself\n.\nmodel\n=\nHTTPBaseModel\n(\nscheme\n=\n\"basic\"\n,\ndescription\n=\ndescription\n)\nself\n.\nscheme_name\n=\nscheme_name\nor\nself\n.\n__class__\n.\n__name__\nself\n.\nrealm\n=\nrealm\nself\n.\nauto_error\n=\nauto_error\nmodel\ninstance-attribute\n¶\nmodel\n=\nHTTPBase\n(\nscheme\n=\n'basic'\n,\ndescription\n=\ndescription\n)\nscheme_name\ninstance-attribute\n¶\nscheme_name\n=\nscheme_name\nor\n__name__\nrealm\ninstance-attribute\n¶\nrealm\n=\nrealm\nauto_error\ninstance-attribute\n¶\nauto_error\n=\nauto_error\nfastapi.security.HTTPBearer\n¶\nHTTPBearer\n(\n*\n,\nbearerFormat\n=\nNone\n,\nscheme_name\n=\nNone\n,\ndescription\n=\nNone\n,\nauto_error\n=\nTrue\n)\nBases:\nHTTPBase\nHTTP Bearer token authentication.\nUsage\n¶\nCreate an instance object and use that object as the dependency in\nDepends()\n.\nThe dependency result will be an\nHTTPAuthorizationCredentials\nobject containing\nthe\nscheme\nand the\ncredentials\n.\nExample\n¶\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nHTTPAuthorizationCredentials\n,\nHTTPBearer\napp\n=\nFastAPI\n()\nsecurity\n=\nHTTPBearer\n()\n@app\n.\nget\n(\n\"/users/me\"\n)\ndef\nread_current_user\n(\ncredentials\n:\nAnnotated\n[\nHTTPAuthorizationCredentials\n,\nDepends\n(\nsecurity\n)]\n):\nreturn\n{\n\"scheme\"\n:\ncredentials\n.\nscheme\n,\n\"credentials\"\n:\ncredentials\n.\ncredentials\n}\nPARAMETER\nDESCRIPTION\nbearerFormat\nBearer token format.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nscheme_name\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nauto_error\nBy default, if the HTTP Bearer token is not provided (in an\nAuthorization\nheader),\nHTTPBearer\nwill automatically cancel the\nrequest and send the client an error.\nIf\nauto_error\nis set to\nFalse\n, when the HTTP Bearer token\nis not available, instead of erroring out, the dependency result will\nbe\nNone\n.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, in an HTTP\nBearer token or in a cookie).\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/security/http.py\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\ndef\n__init__\n(\nself\n,\n*\n,\nbearerFormat\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"Bearer token format.\"\n)]\n=\nNone\n,\nscheme_name\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nauto_error\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBy default, if the HTTP Bearer token is not provided (in an\n`Authorization` header), `HTTPBearer` will automatically cancel the\nrequest and send the client an error.\nIf `auto_error` is set to `False`, when the HTTP Bearer token\nis not available, instead of erroring out, the dependency result will\nbe `None`.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, in an HTTP\nBearer token or in a cookie).\n\"\"\"\n),\n]\n=\nTrue\n,\n):\nself\n.\nmodel\n=\nHTTPBearerModel\n(\nbearerFormat\n=\nbearerFormat\n,\ndescription\n=\ndescription\n)\nself\n.\nscheme_name\n=\nscheme_name\nor\nself\n.\n__class__\n.\n__name__\nself\n.\nauto_error\n=\nauto_error\nmodel\ninstance-attribute\n¶\nmodel\n=\nHTTPBearer\n(\nbearerFormat\n=\nbearerFormat\n,\ndescription\n=\ndescription\n)\nscheme_name\ninstance-attribute\n¶\nscheme_name\n=\nscheme_name\nor\n__name__\nauto_error\ninstance-attribute\n¶\nauto_error\n=\nauto_error\nfastapi.security.HTTPDigest\n¶\nHTTPDigest\n(\n*\n,\nscheme_name\n=\nNone\n,\ndescription\n=\nNone\n,\nauto_error\n=\nTrue\n)\nBases:\nHTTPBase\nHTTP Digest authentication.\nUsage\n¶\nCreate an instance object and use that object as the dependency in\nDepends()\n.\nThe dependency result will be an\nHTTPAuthorizationCredentials\nobject containing\nthe\nscheme\nand the\ncredentials\n.\nExample\n¶\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nHTTPAuthorizationCredentials\n,\nHTTPDigest\napp\n=\nFastAPI\n()\nsecurity\n=\nHTTPDigest\n()\n@app\n.\nget\n(\n\"/users/me\"\n)\ndef\nread_current_user\n(\ncredentials\n:\nAnnotated\n[\nHTTPAuthorizationCredentials\n,\nDepends\n(\nsecurity\n)]\n):\nreturn\n{\n\"scheme\"\n:\ncredentials\n.\nscheme\n,\n\"credentials\"\n:\ncredentials\n.\ncredentials\n}\nPARAMETER\nDESCRIPTION\nscheme_name\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nauto_error\nBy default, if the HTTP Digest is not provided,\nHTTPDigest\nwill\nautomatically cancel the request and send the client an error.\nIf\nauto_error\nis set to\nFalse\n, when the HTTP Digest is not\navailable, instead of erroring out, the dependency result will\nbe\nNone\n.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, in HTTP\nDigest or in a cookie).\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/security/http.py\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\ndef\n__init__\n(\nself\n,\n*\n,\nscheme_name\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nauto_error\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBy default, if the HTTP Digest is not provided, `HTTPDigest` will\nautomatically cancel the request and send the client an error.\nIf `auto_error` is set to `False`, when the HTTP Digest is not\navailable, instead of erroring out, the dependency result will\nbe `None`.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, in HTTP\nDigest or in a cookie).\n\"\"\"\n),\n]\n=\nTrue\n,\n):\nself\n.\nmodel\n=\nHTTPBaseModel\n(\nscheme\n=\n\"digest\"\n,\ndescription\n=\ndescription\n)\nself\n.\nscheme_name\n=\nscheme_name\nor\nself\n.\n__class__\n.\n__name__\nself\n.\nauto_error\n=\nauto_error\nmodel\ninstance-attribute\n¶\nmodel\n=\nHTTPBase\n(\nscheme\n=\n'digest'\n,\ndescription\n=\ndescription\n)\nscheme_name\ninstance-attribute\n¶\nscheme_name\n=\nscheme_name\nor\n__name__\nauto_error\ninstance-attribute\n¶\nauto_error\n=\nauto_error\nHTTP Credentials\n¶\nfastapi.security.HTTPAuthorizationCredentials\n¶\nBases:\nBaseModel\nThe HTTP authorization credentials in the result of using\nHTTPBearer\nor\nHTTPDigest\nin a dependency.\nThe HTTP authorization header value is split by the first space.\nThe first part is the\nscheme\n, the second part is the\ncredentials\n.\nFor example, in an HTTP Bearer token scheme, the client will send a header\nlike:\nAuthorization: Bearer deadbeef12346\nIn this case:\nscheme\nwill have the value\n\"Bearer\"\ncredentials\nwill have the value\n\"deadbeef12346\"\nscheme\ninstance-attribute\n¶\nscheme\nThe HTTP authorization scheme extracted from the header value.\ncredentials\ninstance-attribute\n¶\ncredentials\nThe HTTP authorization credentials extracted from the header value.\nfastapi.security.HTTPBasicCredentials\n¶\nBases:\nBaseModel\nThe HTTP Basic credentials given as the result of using\nHTTPBasic\nin a\ndependency.\nRead more about it in the\nFastAPI docs for HTTP Basic Auth\n.\nusername\ninstance-attribute\n¶\nusername\nThe HTTP Basic username.\npassword\ninstance-attribute\n¶\npassword\nThe HTTP Basic password.\nOAuth2 Authentication\n¶\nfastapi.security.OAuth2\n¶\nOAuth2\n(\n*\n,\nflows\n=\nOAuthFlows\n(),\nscheme_name\n=\nNone\n,\ndescription\n=\nNone\n,\nauto_error\n=\nTrue\n)\nBases:\nSecurityBase\nThis is the base class for OAuth2 authentication, an instance of it would be used\nas a dependency. All other OAuth2 classes inherit from it and customize it for\neach OAuth2 flow.\nYou normally would not create a new class inheriting from it but use one of the\nexisting subclasses, and maybe compose them if you want to support multiple flows.\nRead more about it in the\nFastAPI docs for Security\n.\nPARAMETER\nDESCRIPTION\nflows\nThe dictionary of OAuth2 flows.\nTYPE:\nUnion\n[\nOAuthFlows\n,\nDict\n[\nstr\n,\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nOAuthFlows\n()\nscheme_name\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nauto_error\nBy default, if no HTTP Authorization header is provided, required for\nOAuth2 authentication, it will automatically cancel the request and\nsend the client an error.\nIf\nauto_error\nis set to\nFalse\n, when the HTTP Authorization header\nis not available, instead of erroring out, the dependency result will\nbe\nNone\n.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, with OAuth2\nor in a cookie).\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/security/oauth2.py\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\ndef\n__init__\n(\nself\n,\n*\n,\nflows\n:\nAnnotated\n[\nUnion\n[\nOAuthFlowsModel\n,\nDict\n[\nstr\n,\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nThe dictionary of OAuth2 flows.\n\"\"\"\n),\n]\n=\nOAuthFlowsModel\n(),\nscheme_name\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nauto_error\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBy default, if no HTTP Authorization header is provided, required for\nOAuth2 authentication, it will automatically cancel the request and\nsend the client an error.\nIf `auto_error` is set to `False`, when the HTTP Authorization header\nis not available, instead of erroring out, the dependency result will\nbe `None`.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, with OAuth2\nor in a cookie).\n\"\"\"\n),\n]\n=\nTrue\n,\n):\nself\n.\nmodel\n=\nOAuth2Model\n(\nflows\n=\ncast\n(\nOAuthFlowsModel\n,\nflows\n),\ndescription\n=\ndescription\n)\nself\n.\nscheme_name\n=\nscheme_name\nor\nself\n.\n__class__\n.\n__name__\nself\n.\nauto_error\n=\nauto_error\nmodel\ninstance-attribute\n¶\nmodel\n=\nOAuth2\n(\nflows\n=\ncast\n(\nOAuthFlows\n,\nflows\n),\ndescription\n=\ndescription\n)\nscheme_name\ninstance-attribute\n¶\nscheme_name\n=\nscheme_name\nor\n__name__\nauto_error\ninstance-attribute\n¶\nauto_error\n=\nauto_error\nfastapi.security.OAuth2AuthorizationCodeBearer\n¶\nOAuth2AuthorizationCodeBearer\n(\nauthorizationUrl\n,\ntokenUrl\n,\nrefreshUrl\n=\nNone\n,\nscheme_name\n=\nNone\n,\nscopes\n=\nNone\n,\ndescription\n=\nNone\n,\nauto_error\n=\nTrue\n,\n)\nBases:\nOAuth2\nOAuth2 flow for authentication using a bearer token obtained with an OAuth2 code\nflow. An instance of it would be used as a dependency.\nPARAMETER\nDESCRIPTION\ntokenUrl\nThe URL to obtain the OAuth2 token.\nTYPE:\nstr\nrefreshUrl\nThe URL to refresh the token and obtain a new one.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nscheme_name\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nscopes\nThe OAuth2 scopes that would be required by the\npath operations\nthat\nuse this dependency.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nstr\n]]\nDEFAULT:\nNone\ndescription\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nauto_error\nBy default, if no HTTP Authorization header is provided, required for\nOAuth2 authentication, it will automatically cancel the request and\nsend the client an error.\nIf\nauto_error\nis set to\nFalse\n, when the HTTP Authorization header\nis not available, instead of erroring out, the dependency result will\nbe\nNone\n.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, with OAuth2\nor in a cookie).\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/security/oauth2.py\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\ndef\n__init__\n(\nself\n,\nauthorizationUrl\n:\nstr\n,\ntokenUrl\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL to obtain the OAuth2 token.\n\"\"\"\n),\n],\nrefreshUrl\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nThe URL to refresh the token and obtain a new one.\n\"\"\"\n),\n]\n=\nNone\n,\nscheme_name\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nscopes\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nstr\n]],\nDoc\n(\n\"\"\"\nThe OAuth2 scopes that would be required by the *path operations* that\nuse this dependency.\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nauto_error\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBy default, if no HTTP Authorization header is provided, required for\nOAuth2 authentication, it will automatically cancel the request and\nsend the client an error.\nIf `auto_error` is set to `False`, when the HTTP Authorization header\nis not available, instead of erroring out, the dependency result will\nbe `None`.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, with OAuth2\nor in a cookie).\n\"\"\"\n),\n]\n=\nTrue\n,\n):\nif\nnot\nscopes\n:\nscopes\n=\n{}\nflows\n=\nOAuthFlowsModel\n(\nauthorizationCode\n=\ncast\n(\nAny\n,\n{\n\"authorizationUrl\"\n:\nauthorizationUrl\n,\n\"tokenUrl\"\n:\ntokenUrl\n,\n\"refreshUrl\"\n:\nrefreshUrl\n,\n\"scopes\"\n:\nscopes\n,\n},\n)\n)\nsuper\n()\n.\n__init__\n(\nflows\n=\nflows\n,\nscheme_name\n=\nscheme_name\n,\ndescription\n=\ndescription\n,\nauto_error\n=\nauto_error\n,\n)\nmodel\ninstance-attribute\n¶\nmodel\n=\nOAuth2\n(\nflows\n=\ncast\n(\nOAuthFlows\n,\nflows\n),\ndescription\n=\ndescription\n)\nscheme_name\ninstance-attribute\n¶\nscheme_name\n=\nscheme_name\nor\n__name__\nauto_error\ninstance-attribute\n¶\nauto_error\n=\nauto_error\nfastapi.security.OAuth2PasswordBearer\n¶\nOAuth2PasswordBearer\n(\ntokenUrl\n,\nscheme_name\n=\nNone\n,\nscopes\n=\nNone\n,\ndescription\n=\nNone\n,\nauto_error\n=\nTrue\n,\nrefreshUrl\n=\nNone\n,\n)\nBases:\nOAuth2\nOAuth2 flow for authentication using a bearer token obtained with a password.\nAn instance of it would be used as a dependency.\nRead more about it in the\nFastAPI docs for Simple OAuth2 with Password and Bearer\n.\nPARAMETER\nDESCRIPTION\ntokenUrl\nThe URL to obtain the OAuth2 token. This would be the\npath operation\nthat has\nOAuth2PasswordRequestForm\nas a dependency.\nTYPE:\nstr\nscheme_name\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nscopes\nThe OAuth2 scopes that would be required by the\npath operations\nthat\nuse this dependency.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nstr\n]]\nDEFAULT:\nNone\ndescription\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nauto_error\nBy default, if no HTTP Authorization header is provided, required for\nOAuth2 authentication, it will automatically cancel the request and\nsend the client an error.\nIf\nauto_error\nis set to\nFalse\n, when the HTTP Authorization header\nis not available, instead of erroring out, the dependency result will\nbe\nNone\n.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, with OAuth2\nor in a cookie).\nTYPE:\nbool\nDEFAULT:\nTrue\nrefreshUrl\nThe URL to refresh the token and obtain a new one.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nSource code in\nfastapi/security/oauth2.py\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\ndef\n__init__\n(\nself\n,\ntokenUrl\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL to obtain the OAuth2 token. This would be the *path operation*\nthat has `OAuth2PasswordRequestForm` as a dependency.\n\"\"\"\n),\n],\nscheme_name\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nscopes\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nstr\n]],\nDoc\n(\n\"\"\"\nThe OAuth2 scopes that would be required by the *path operations* that\nuse this dependency.\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nauto_error\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBy default, if no HTTP Authorization header is provided, required for\nOAuth2 authentication, it will automatically cancel the request and\nsend the client an error.\nIf `auto_error` is set to `False`, when the HTTP Authorization header\nis not available, instead of erroring out, the dependency result will\nbe `None`.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, with OAuth2\nor in a cookie).\n\"\"\"\n),\n]\n=\nTrue\n,\nrefreshUrl\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nThe URL to refresh the token and obtain a new one.\n\"\"\"\n),\n]\n=\nNone\n,\n):\nif\nnot\nscopes\n:\nscopes\n=\n{}\nflows\n=\nOAuthFlowsModel\n(\npassword\n=\ncast\n(\nAny\n,\n{\n\"tokenUrl\"\n:\ntokenUrl\n,\n\"refreshUrl\"\n:\nrefreshUrl\n,\n\"scopes\"\n:\nscopes\n,\n},\n)\n)\nsuper\n()\n.\n__init__\n(\nflows\n=\nflows\n,\nscheme_name\n=\nscheme_name\n,\ndescription\n=\ndescription\n,\nauto_error\n=\nauto_error\n,\n)\nmodel\ninstance-attribute\n¶\nmodel\n=\nOAuth2\n(\nflows\n=\ncast\n(\nOAuthFlows\n,\nflows\n),\ndescription\n=\ndescription\n)\nscheme_name\ninstance-attribute\n¶\nscheme_name\n=\nscheme_name\nor\n__name__\nauto_error\ninstance-attribute\n¶\nauto_error\n=\nauto_error\nOAuth2 Password Form\n¶\nfastapi.security.OAuth2PasswordRequestForm\n¶\nOAuth2PasswordRequestForm\n(\n*\n,\ngrant_type\n=\nNone\n,\nusername\n,\npassword\n,\nscope\n=\n\"\"\n,\nclient_id\n=\nNone\n,\nclient_secret\n=\nNone\n)\nThis is a dependency class to collect the\nusername\nand\npassword\nas form data\nfor an OAuth2 password flow.\nThe OAuth2 specification dictates that for a password flow the data should be\ncollected using form data (instead of JSON) and that it should have the specific\nfields\nusername\nand\npassword\n.\nAll the initialization parameters are extracted from the request.\nRead more about it in the\nFastAPI docs for Simple OAuth2 with Password and Bearer\n.\nExample\n¶\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordRequestForm\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/login\"\n)\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestForm\n,\nDepends\n()]):\ndata\n=\n{}\ndata\n[\n\"scopes\"\n]\n=\n[]\nfor\nscope\nin\nform_data\n.\nscopes\n:\ndata\n[\n\"scopes\"\n]\n.\nappend\n(\nscope\n)\nif\nform_data\n.\nclient_id\n:\ndata\n[\n\"client_id\"\n]\n=\nform_data\n.\nclient_id\nif\nform_data\n.\nclient_secret\n:\ndata\n[\n\"client_secret\"\n]\n=\nform_data\n.\nclient_secret\nreturn\ndata\nNote that for OAuth2 the scope\nitems:read\nis a single scope in an opaque string.\nYou could have custom internal logic to separate it by colon characters (\n:\n) or\nsimilar, and get the two parts\nitems\nand\nread\n. Many applications do that to\ngroup and organize permissions, you could do it as well in your application, just\nknow that that it is application specific, it's not part of the specification.\nPARAMETER\nDESCRIPTION\ngrant_type\nThe OAuth2 spec says it is required and MUST be the fixed string\n\"password\". Nevertheless, this dependency class is permissive and\nallows not passing it. If you want to enforce it, use instead the\nOAuth2PasswordRequestFormStrict\ndependency.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nusername\nusername\nstring. The OAuth2 spec requires the exact field name\nusername\n.\nTYPE:\nstr\npassword\npassword\nstring. The OAuth2 spec requires the exact field name\npassword\n.\nTYPE:\nstr\nscope\nA single string with actually several scopes separated by spaces. Each\nscope is also a string.\nFor example, a single string with:\n```python\n\"items:read items:write users:read profile openid\"\n````\nwould represent the scopes:\nitems:read\nitems:write\nusers:read\nprofile\nopenid\nTYPE:\nstr\nDEFAULT:\n''\nclient_id\nIf there's a\nclient_id\n, it can be sent as part of the form fields.\nBut the OAuth2 specification recommends sending the\nclient_id\nand\nclient_secret\n(if any) using HTTP Basic auth.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nclient_secret\nIf there's a\nclient_password\n(and a\nclient_id\n), they can be sent\nas part of the form fields. But the OAuth2 specification recommends\nsending the\nclient_id\nand\nclient_secret\n(if any) using HTTP Basic\nauth.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nSource code in\nfastapi/security/oauth2.py\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\ndef\n__init__\n(\nself\n,\n*\n,\ngrant_type\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nForm\n(\npattern\n=\n\"^password$\"\n),\nDoc\n(\n\"\"\"\nThe OAuth2 spec says it is required and MUST be the fixed string\n\"password\". Nevertheless, this dependency class is permissive and\nallows not passing it. If you want to enforce it, use instead the\n`OAuth2PasswordRequestFormStrict` dependency.\n\"\"\"\n),\n]\n=\nNone\n,\nusername\n:\nAnnotated\n[\nstr\n,\nForm\n(),\nDoc\n(\n\"\"\"\n`username` string. The OAuth2 spec requires the exact field name\n`username`.\n\"\"\"\n),\n],\npassword\n:\nAnnotated\n[\nstr\n,\nForm\n(\njson_schema_extra\n=\n{\n\"format\"\n:\n\"password\"\n}),\nDoc\n(\n\"\"\"\n`password` string. The OAuth2 spec requires the exact field name\n`password`.\n\"\"\"\n),\n],\nscope\n:\nAnnotated\n[\nstr\n,\nForm\n(),\nDoc\n(\n\"\"\"\nA single string with actually several scopes separated by spaces. Each\nscope is also a string.\nFor example, a single string with:\n```python\n\"items:read items:write users:read profile openid\"\n````\nwould represent the scopes:\n* `items:read`\n* `items:write`\n* `users:read`\n* `profile`\n* `openid`\n\"\"\"\n),\n]\n=\n\"\"\n,\nclient_id\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nForm\n(),\nDoc\n(\n\"\"\"\nIf there's a `client_id`, it can be sent as part of the form fields.\nBut the OAuth2 specification recommends sending the `client_id` and\n`client_secret` (if any) using HTTP Basic auth.\n\"\"\"\n),\n]\n=\nNone\n,\nclient_secret\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nForm\n(\njson_schema_extra\n=\n{\n\"format\"\n:\n\"password\"\n}),\nDoc\n(\n\"\"\"\nIf there's a `client_password` (and a `client_id`), they can be sent\nas part of the form fields. But the OAuth2 specification recommends\nsending the `client_id` and `client_secret` (if any) using HTTP Basic\nauth.\n\"\"\"\n),\n]\n=\nNone\n,\n):\nself\n.\ngrant_type\n=\ngrant_type\nself\n.\nusername\n=\nusername\nself\n.\npassword\n=\npassword\nself\n.\nscopes\n=\nscope\n.\nsplit\n()\nself\n.\nclient_id\n=\nclient_id\nself\n.\nclient_secret\n=\nclient_secret\ngrant_type\ninstance-attribute\n¶\ngrant_type\n=\ngrant_type\nusername\ninstance-attribute\n¶\nusername\n=\nusername\npassword\ninstance-attribute\n¶\npassword\n=\npassword\nscopes\ninstance-attribute\n¶\nscopes\n=\nsplit\n()\nclient_id\ninstance-attribute\n¶\nclient_id\n=\nclient_id\nclient_secret\ninstance-attribute\n¶\nclient_secret\n=\nclient_secret\nfastapi.security.OAuth2PasswordRequestFormStrict\n¶\nOAuth2PasswordRequestFormStrict\n(\ngrant_type\n,\nusername\n,\npassword\n,\nscope\n=\n\"\"\n,\nclient_id\n=\nNone\n,\nclient_secret\n=\nNone\n,\n)\nBases:\nOAuth2PasswordRequestForm\nThis is a dependency class to collect the\nusername\nand\npassword\nas form data\nfor an OAuth2 password flow.\nThe OAuth2 specification dictates that for a password flow the data should be\ncollected using form data (instead of JSON) and that it should have the specific\nfields\nusername\nand\npassword\n.\nAll the initialization parameters are extracted from the request.\nThe only difference between\nOAuth2PasswordRequestFormStrict\nand\nOAuth2PasswordRequestForm\nis that\nOAuth2PasswordRequestFormStrict\nrequires the\nclient to send the form field\ngrant_type\nwith the value\n\"password\"\n, which\nis required in the OAuth2 specification (it seems that for no particular reason),\nwhile for\nOAuth2PasswordRequestForm\ngrant_type\nis optional.\nRead more about it in the\nFastAPI docs for Simple OAuth2 with Password and Bearer\n.\nExample\n¶\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordRequestForm\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/login\"\n)\ndef\nlogin\n(\nform_data\n:\nAnnotated\n[\nOAuth2PasswordRequestFormStrict\n,\nDepends\n()]):\ndata\n=\n{}\ndata\n[\n\"scopes\"\n]\n=\n[]\nfor\nscope\nin\nform_data\n.\nscopes\n:\ndata\n[\n\"scopes\"\n]\n.\nappend\n(\nscope\n)\nif\nform_data\n.\nclient_id\n:\ndata\n[\n\"client_id\"\n]\n=\nform_data\n.\nclient_id\nif\nform_data\n.\nclient_secret\n:\ndata\n[\n\"client_secret\"\n]\n=\nform_data\n.\nclient_secret\nreturn\ndata\nNote that for OAuth2 the scope\nitems:read\nis a single scope in an opaque string.\nYou could have custom internal logic to separate it by colon characters (\n:\n) or\nsimilar, and get the two parts\nitems\nand\nread\n. Many applications do that to\ngroup and organize permissions, you could do it as well in your application, just\nknow that that it is application specific, it's not part of the specification.\nthe OAuth2 spec says it is required and MUST be the fixed string \"password\".\nThis dependency is strict about it. If you want to be permissive, use instead the\nOAuth2PasswordRequestForm dependency class.\nusername: username string. The OAuth2 spec requires the exact field name \"username\".\npassword: password string. The OAuth2 spec requires the exact field name \"password\".\nscope: Optional string. Several scopes (each one a string) separated by spaces. E.g.\n    \"items:read items:write users:read profile openid\"\nclient_id: optional string. OAuth2 recommends sending the client_id and client_secret (if any)\n    using HTTP Basic auth, as: client_id:client_secret\nclient_secret: optional string. OAuth2 recommends sending the client_id and client_secret (if any)\n    using HTTP Basic auth, as: client_id:client_secret\nPARAMETER\nDESCRIPTION\ngrant_type\nThe OAuth2 spec says it is required and MUST be the fixed string\n\"password\". This dependency is strict about it. If you want to be\npermissive, use instead the\nOAuth2PasswordRequestForm\ndependency\nclass.\nTYPE:\nstr\nusername\nusername\nstring. The OAuth2 spec requires the exact field name\nusername\n.\nTYPE:\nstr\npassword\npassword\nstring. The OAuth2 spec requires the exact field name\npassword\n.\nTYPE:\nstr\nscope\nA single string with actually several scopes separated by spaces. Each\nscope is also a string.\nFor example, a single string with:\n```python\n\"items:read items:write users:read profile openid\"\n````\nwould represent the scopes:\nitems:read\nitems:write\nusers:read\nprofile\nopenid\nTYPE:\nstr\nDEFAULT:\n''\nclient_id\nIf there's a\nclient_id\n, it can be sent as part of the form fields.\nBut the OAuth2 specification recommends sending the\nclient_id\nand\nclient_secret\n(if any) using HTTP Basic auth.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nclient_secret\nIf there's a\nclient_password\n(and a\nclient_id\n), they can be sent\nas part of the form fields. But the OAuth2 specification recommends\nsending the\nclient_id\nand\nclient_secret\n(if any) using HTTP Basic\nauth.\nTYPE:\nUnion\n[\nstr\n, None]\nDEFAULT:\nNone\nSource code in\nfastapi/security/oauth2.py\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\ndef\n__init__\n(\nself\n,\ngrant_type\n:\nAnnotated\n[\nstr\n,\nForm\n(\npattern\n=\n\"^password$\"\n),\nDoc\n(\n\"\"\"\nThe OAuth2 spec says it is required and MUST be the fixed string\n\"password\". This dependency is strict about it. If you want to be\npermissive, use instead the `OAuth2PasswordRequestForm` dependency\nclass.\n\"\"\"\n),\n],\nusername\n:\nAnnotated\n[\nstr\n,\nForm\n(),\nDoc\n(\n\"\"\"\n`username` string. The OAuth2 spec requires the exact field name\n`username`.\n\"\"\"\n),\n],\npassword\n:\nAnnotated\n[\nstr\n,\nForm\n(),\nDoc\n(\n\"\"\"\n`password` string. The OAuth2 spec requires the exact field name\n`password`.\n\"\"\"\n),\n],\nscope\n:\nAnnotated\n[\nstr\n,\nForm\n(),\nDoc\n(\n\"\"\"\nA single string with actually several scopes separated by spaces. Each\nscope is also a string.\nFor example, a single string with:\n```python\n\"items:read items:write users:read profile openid\"\n````\nwould represent the scopes:\n* `items:read`\n* `items:write`\n* `users:read`\n* `profile`\n* `openid`\n\"\"\"\n),\n]\n=\n\"\"\n,\nclient_id\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nForm\n(),\nDoc\n(\n\"\"\"\nIf there's a `client_id`, it can be sent as part of the form fields.\nBut the OAuth2 specification recommends sending the `client_id` and\n`client_secret` (if any) using HTTP Basic auth.\n\"\"\"\n),\n]\n=\nNone\n,\nclient_secret\n:\nAnnotated\n[\nUnion\n[\nstr\n,\nNone\n],\nForm\n(),\nDoc\n(\n\"\"\"\nIf there's a `client_password` (and a `client_id`), they can be sent\nas part of the form fields. But the OAuth2 specification recommends\nsending the `client_id` and `client_secret` (if any) using HTTP Basic\nauth.\n\"\"\"\n),\n]\n=\nNone\n,\n):\nsuper\n()\n.\n__init__\n(\ngrant_type\n=\ngrant_type\n,\nusername\n=\nusername\n,\npassword\n=\npassword\n,\nscope\n=\nscope\n,\nclient_id\n=\nclient_id\n,\nclient_secret\n=\nclient_secret\n,\n)\ngrant_type\ninstance-attribute\n¶\ngrant_type\n=\ngrant_type\nusername\ninstance-attribute\n¶\nusername\n=\nusername\npassword\ninstance-attribute\n¶\npassword\n=\npassword\nscopes\ninstance-attribute\n¶\nscopes\n=\nsplit\n()\nclient_id\ninstance-attribute\n¶\nclient_id\n=\nclient_id\nclient_secret\ninstance-attribute\n¶\nclient_secret\n=\nclient_secret\nOAuth2 Security Scopes in Dependencies\n¶\nfastapi.security.SecurityScopes\n¶\nSecurityScopes\n(\nscopes\n=\nNone\n)\nThis is a special class that you can define in a parameter in a dependency to\nobtain the OAuth2 scopes required by all the dependencies in the same chain.\nThis way, multiple dependencies can have different scopes, even when used in the\nsame\npath operation\n. And with this, you can access all the scopes required in\nall those dependencies in a single place.\nRead more about it in the\nFastAPI docs for OAuth2 scopes\n.\nPARAMETER\nDESCRIPTION\nscopes\nThis will be filled by FastAPI.\nTYPE:\nOptional\n[\nList\n[\nstr\n]]\nDEFAULT:\nNone\nSource code in\nfastapi/security/oauth2.py\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\ndef\n__init__\n(\nself\n,\nscopes\n:\nAnnotated\n[\nOptional\n[\nList\n[\nstr\n]],\nDoc\n(\n\"\"\"\nThis will be filled by FastAPI.\n\"\"\"\n),\n]\n=\nNone\n,\n):\nself\n.\nscopes\n:\nAnnotated\n[\nList\n[\nstr\n],\nDoc\n(\n\"\"\"\nThe list of all the scopes required by dependencies.\n\"\"\"\n),\n]\n=\nscopes\nor\n[]\nself\n.\nscope_str\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nAll the scopes required by all the dependencies in a single string\nseparated by spaces, as defined in the OAuth2 specification.\n\"\"\"\n),\n]\n=\n\" \"\n.\njoin\n(\nself\n.\nscopes\n)\nscopes\ninstance-attribute\n¶\nscopes\n=\nscopes\nor\n[]\nThe list of all the scopes required by dependencies.\nscope_str\ninstance-attribute\n¶\nscope_str\n=\njoin\n(\nscopes\n)\nAll the scopes required by all the dependencies in a single string\nseparated by spaces, as defined in the OAuth2 specification.\nOpenID Connect\n¶\nfastapi.security.OpenIdConnect\n¶\nOpenIdConnect\n(\n*\n,\nopenIdConnectUrl\n,\nscheme_name\n=\nNone\n,\ndescription\n=\nNone\n,\nauto_error\n=\nTrue\n)\nBases:\nSecurityBase\nOpenID Connect authentication class. An instance of it would be used as a\ndependency.\nPARAMETER\nDESCRIPTION\nopenIdConnectUrl\nThe OpenID Connect URL.\nTYPE:\nstr\nscheme_name\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nauto_error\nBy default, if no HTTP Authorization header is provided, required for\nOpenID Connect authentication, it will automatically cancel the request\nand send the client an error.\nIf\nauto_error\nis set to\nFalse\n, when the HTTP Authorization header\nis not available, instead of erroring out, the dependency result will\nbe\nNone\n.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, with OpenID\nConnect or in a cookie).\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/security/open_id_connect_url.py\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\ndef\n__init__\n(\nself\n,\n*\n,\nopenIdConnectUrl\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe OpenID Connect URL.\n\"\"\"\n),\n],\nscheme_name\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme name.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nSecurity scheme description.\nIt will be included in the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\nauto_error\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBy default, if no HTTP Authorization header is provided, required for\nOpenID Connect authentication, it will automatically cancel the request\nand send the client an error.\nIf `auto_error` is set to `False`, when the HTTP Authorization header\nis not available, instead of erroring out, the dependency result will\nbe `None`.\nThis is useful when you want to have optional authentication.\nIt is also useful when you want to have authentication that can be\nprovided in one of multiple optional ways (for example, with OpenID\nConnect or in a cookie).\n\"\"\"\n),\n]\n=\nTrue\n,\n):\nself\n.\nmodel\n=\nOpenIdConnectModel\n(\nopenIdConnectUrl\n=\nopenIdConnectUrl\n,\ndescription\n=\ndescription\n)\nself\n.\nscheme_name\n=\nscheme_name\nor\nself\n.\n__class__\n.\n__name__\nself\n.\nauto_error\n=\nauto_error\nmodel\ninstance-attribute\n¶\nmodel\n=\nOpenIdConnect\n(\nopenIdConnectUrl\n=\nopenIdConnectUrl\n,\ndescription\n=\ndescription\n,\n)\nscheme_name\ninstance-attribute\n¶\nscheme_name\n=\nscheme_name\nor\n__name__\nauto_error\ninstance-attribute\n¶\nauto_error\n=\nauto_error\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/security/first-steps/",
    "title": "Security - First Steps¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nSecurity - First Steps\nTable of contents\nHow it looks\nCreate\nmain.py\nRun it\nCheck it\nThe\npassword\nflow\nFastAPI\n's\nOAuth2PasswordBearer\nUse it\nWhat it does\nRecap\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nHow it looks\nCreate\nmain.py\nRun it\nCheck it\nThe\npassword\nflow\nFastAPI\n's\nOAuth2PasswordBearer\nUse it\nWhat it does\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nSecurity\nSecurity - First Steps\n¶\nLet's imagine that you have your\nbackend\nAPI in some domain.\nAnd you have a\nfrontend\nin another domain or in a different path of the same domain (or in a mobile application).\nAnd you want to have a way for the frontend to authenticate with the backend, using a\nusername\nand\npassword\n.\nWe can use\nOAuth2\nto build that with\nFastAPI\n.\nBut let's save you the time of reading the full long specification just to find those little pieces of information you need.\nLet's use the tools provided by\nFastAPI\nto handle security.\nHow it looks\n¶\nLet's first just use the code and see how it works, and then we'll come back to understand what's happening.\nCreate\nmain.py\n¶\nCopy the example in a file\nmain.py\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nreturn\n{\n\"token\"\n:\ntoken\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nreturn\n{\n\"token\"\n:\ntoken\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nreturn\n{\n\"token\"\n:\ntoken\n}\nRun it\n¶\nInfo\nThe\npython-multipart\npackage is automatically installed with\nFastAPI\nwhen you run the\npip install \"fastapi[standard]\"\ncommand.\nHowever, if you use the\npip install fastapi\ncommand, the\npython-multipart\npackage is not included by default.\nTo install it manually, make sure you create a\nvirtual environment\n, activate it, and then install it with:\n$\npip\ninstall\npython-multipart\nThis is because\nOAuth2\nuses \"form data\" for sending the\nusername\nand\npassword\n.\nRun the example with:\n$\nfastapi\ndev\nmain.py\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nCheck it\n¶\nGo to the interactive docs at:\nhttp://127.0.0.1:8000/docs\n.\nYou will see something like this:\nAuthorize button!\nYou already have a shiny new \"Authorize\" button.\nAnd your\npath operation\nhas a little lock in the top-right corner that you can click.\nAnd if you click it, you have a little authorization form to type a\nusername\nand\npassword\n(and other optional fields):\nNote\nIt doesn't matter what you type in the form, it won't work yet. But we'll get there.\nThis is of course not the frontend for the final users, but it's a great automatic tool to document interactively all your API.\nIt can be used by the frontend team (that can also be yourself).\nIt can be used by third party applications and systems.\nAnd it can also be used by yourself, to debug, check and test the same application.\nThe\npassword\nflow\n¶\nNow let's go back a bit and understand what is all that.\nThe\npassword\n\"flow\" is one of the ways (\"flows\") defined in OAuth2, to handle security and authentication.\nOAuth2 was designed so that the backend or API could be independent of the server that authenticates the user.\nBut in this case, the same\nFastAPI\napplication will handle the API and the authentication.\nSo, let's review it from that simplified point of view:\nThe user types the\nusername\nand\npassword\nin the frontend, and hits\nEnter\n.\nThe frontend (running in the user's browser) sends that\nusername\nand\npassword\nto a specific URL in our API (declared with\ntokenUrl=\"token\"\n).\nThe API checks that\nusername\nand\npassword\n, and responds with a \"token\" (we haven't implemented any of this yet).\nA \"token\" is just a string with some content that we can use later to verify this user.\nNormally, a token is set to expire after some time.\nSo, the user will have to log in again at some point later.\nAnd if the token is stolen, the risk is less. It is not like a permanent key that will work forever (in most of the cases).\nThe frontend stores that token temporarily somewhere.\nThe user clicks in the frontend to go to another section of the frontend web app.\nThe frontend needs to fetch some more data from the API.\nBut it needs authentication for that specific endpoint.\nSo, to authenticate with our API, it sends a header\nAuthorization\nwith a value of\nBearer\nplus the token.\nIf the token contains\nfoobar\n, the content of the\nAuthorization\nheader would be:\nBearer foobar\n.\nFastAPI\n's\nOAuth2PasswordBearer\n¶\nFastAPI\nprovides several tools, at different levels of abstraction, to implement these security features.\nIn this example we are going to use\nOAuth2\n, with the\nPassword\nflow, using a\nBearer\ntoken. We do that using the\nOAuth2PasswordBearer\nclass.\nInfo\nA \"bearer\" token is not the only option.\nBut it's the best one for our use case.\nAnd it might be the best for most use cases, unless you are an OAuth2 expert and know exactly why there's another option that better suits your needs.\nIn that case,\nFastAPI\nalso provides you with the tools to build it.\nWhen we create an instance of the\nOAuth2PasswordBearer\nclass we pass in the\ntokenUrl\nparameter. This parameter contains the URL that the client (the frontend running in the user's browser) will use to send the\nusername\nand\npassword\nin order to get a token.\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nreturn\n{\n\"token\"\n:\ntoken\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nreturn\n{\n\"token\"\n:\ntoken\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nreturn\n{\n\"token\"\n:\ntoken\n}\nTip\nHere\ntokenUrl=\"token\"\nrefers to a relative URL\ntoken\nthat we haven't created yet. As it's a relative URL, it's equivalent to\n./token\n.\nBecause we are using a relative URL, if your API was located at\nhttps://example.com/\n, then it would refer to\nhttps://example.com/token\n. But if your API was located at\nhttps://example.com/api/v1/\n, then it would refer to\nhttps://example.com/api/v1/token\n.\nUsing a relative URL is important to make sure your application keeps working even in an advanced use case like\nBehind a Proxy\n.\nThis parameter doesn't create that endpoint /\npath operation\n, but declares that the URL\n/token\nwill be the one that the client should use to get the token. That information is used in OpenAPI, and then in the interactive API documentation systems.\nWe will soon also create the actual path operation.\nInfo\nIf you are a very strict \"Pythonista\" you might dislike the style of the parameter name\ntokenUrl\ninstead of\ntoken_url\n.\nThat's because it is using the same name as in the OpenAPI spec. So that if you need to investigate more about any of these security schemes you can just copy and paste it to find more information about it.\nThe\noauth2_scheme\nvariable is an instance of\nOAuth2PasswordBearer\n, but it is also a \"callable\".\nIt could be called as:\noauth2_scheme\n(\nsome\n,\nparameters\n)\nSo, it can be used with\nDepends\n.\nUse it\n¶\nNow you can pass that\noauth2_scheme\nin a dependency with\nDepends\n.\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nreturn\n{\n\"token\"\n:\ntoken\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ntoken\n:\nAnnotated\n[\nstr\n,\nDepends\n(\noauth2_scheme\n)]):\nreturn\n{\n\"token\"\n:\ntoken\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\nfrom\nfastapi.security\nimport\nOAuth2PasswordBearer\napp\n=\nFastAPI\n()\noauth2_scheme\n=\nOAuth2PasswordBearer\n(\ntokenUrl\n=\n\"token\"\n)\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ntoken\n:\nstr\n=\nDepends\n(\noauth2_scheme\n)):\nreturn\n{\n\"token\"\n:\ntoken\n}\nThis dependency will provide a\nstr\nthat is assigned to the parameter\ntoken\nof the\npath operation function\n.\nFastAPI\nwill know that it can use this dependency to define a \"security scheme\" in the OpenAPI schema (and the automatic API docs).\nTechnical Details\nFastAPI\nwill know that it can use the class\nOAuth2PasswordBearer\n(declared in a dependency) to define the security scheme in OpenAPI because it inherits from\nfastapi.security.oauth2.OAuth2\n, which in turn inherits from\nfastapi.security.base.SecurityBase\n.\nAll the security utilities that integrate with OpenAPI (and the automatic API docs) inherit from\nSecurityBase\n, that's how\nFastAPI\ncan know how to integrate them in OpenAPI.\nWhat it does\n¶\nIt will go and look in the request for that\nAuthorization\nheader, check if the value is\nBearer\nplus some token, and will return the token as a\nstr\n.\nIf it doesn't see an\nAuthorization\nheader, or the value doesn't have a\nBearer\ntoken, it will respond with a 401 status code error (\nUNAUTHORIZED\n) directly.\nYou don't even have to check if the token exists to return an error. You can be sure that if your function is executed, it will have a\nstr\nin that token.\nYou can try it already in the interactive docs:\nWe are not verifying the validity of the token yet, but that's a start already.\nRecap\n¶\nSo, in just 3 or 4 extra lines, you already have some primitive form of security.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/request-files/",
    "title": "Request Files¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Files\nTable of contents\nImport\nFile\nDefine\nFile\nParameters\nFile Parameters with\nUploadFile\nUploadFile\nWhat is \"Form Data\"\nOptional File Upload\nUploadFile\nwith Additional Metadata\nMultiple File Uploads\nMultiple File Uploads with Additional Metadata\nRecap\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nImport\nFile\nDefine\nFile\nParameters\nFile Parameters with\nUploadFile\nUploadFile\nWhat is \"Form Data\"\nOptional File Upload\nUploadFile\nwith Additional Metadata\nMultiple File Uploads\nMultiple File Uploads with Additional Metadata\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nRequest Files\n¶\nYou can define files to be uploaded by the client using\nFile\n.\nInfo\nTo receive uploaded files, first install\npython-multipart\n.\nMake sure you create a\nvirtual environment\n, activate it, and then install it, for example:\n$\npip\ninstall\npython-multipart\nThis is because uploaded files are sent as \"form data\".\nImport\nFile\n¶\nImport\nFile\nand\nUploadFile\nfrom\nfastapi\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n()]):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n()]):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nbytes\n=\nFile\n()):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nDefine\nFile\nParameters\n¶\nCreate file parameters the same way you would for\nBody\nor\nForm\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n()]):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n()]):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nbytes\n=\nFile\n()):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nInfo\nFile\nis a class that inherits directly from\nForm\n.\nBut remember that when you import\nQuery\n,\nPath\n,\nFile\nand others from\nfastapi\n, those are actually functions that return special classes.\nTip\nTo declare File bodies, you need to use\nFile\n, because otherwise the parameters would be interpreted as query parameters or body (JSON) parameters.\nThe files will be uploaded as \"form data\".\nIf you declare the type of your\npath operation function\nparameter as\nbytes\n,\nFastAPI\nwill read the file for you and you will receive the contents as\nbytes\n.\nKeep in mind that this means that the whole contents will be stored in memory. This will work well for small files.\nBut there are several cases in which you might benefit from using\nUploadFile\n.\nFile Parameters with\nUploadFile\n¶\nDefine a file parameter with a type of\nUploadFile\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n()]):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n()]):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nbytes\n=\nFile\n()):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nUsing\nUploadFile\nhas several advantages over\nbytes\n:\nYou don't have to use\nFile()\nin the default value of the parameter.\nIt uses a \"spooled\" file:\nA file stored in memory up to a maximum size limit, and after passing this limit it will be stored in disk.\nThis means that it will work well for large files like images, videos, large binaries, etc. without consuming all the memory.\nYou can get metadata from the uploaded file.\nIt has a\nfile-like\nasync\ninterface.\nIt exposes an actual Python\nSpooledTemporaryFile\nobject that you can pass directly to other libraries that expect a file-like object.\nUploadFile\n¶\nUploadFile\nhas the following attributes:\nfilename\n: A\nstr\nwith the original file name that was uploaded (e.g.\nmyimage.jpg\n).\ncontent_type\n: A\nstr\nwith the content type (MIME type / media type) (e.g.\nimage/jpeg\n).\nfile\n: A\nSpooledTemporaryFile\n(a\nfile-like\nobject). This is the actual Python file object that you can pass directly to other functions or libraries that expect a \"file-like\" object.\nUploadFile\nhas the following\nasync\nmethods. They all call the corresponding file methods underneath (using the internal\nSpooledTemporaryFile\n).\nwrite(data)\n: Writes\ndata\n(\nstr\nor\nbytes\n) to the file.\nread(size)\n: Reads\nsize\n(\nint\n) bytes/characters of the file.\nseek(offset)\n: Goes to the byte position\noffset\n(\nint\n) in the file.\nE.g.,\nawait myfile.seek(0)\nwould go to the start of the file.\nThis is especially useful if you run\nawait myfile.read()\nonce and then need to read the contents again.\nclose()\n: Closes the file.\nAs all these methods are\nasync\nmethods, you need to \"await\" them.\nFor example, inside of an\nasync\npath operation function\nyou can get the contents with:\ncontents\n=\nawait\nmyfile\n.\nread\n()\nIf you are inside of a normal\ndef\npath operation function\n, you can access the\nUploadFile.file\ndirectly, for example:\ncontents\n=\nmyfile\n.\nfile\n.\nread\n()\nasync\nTechnical Details\nWhen you use the\nasync\nmethods,\nFastAPI\nruns the file methods in a threadpool and awaits for them.\nStarlette Technical Details\nFastAPI\n's\nUploadFile\ninherits directly from\nStarlette\n's\nUploadFile\n, but adds some necessary parts to make it compatible with\nPydantic\nand the other parts of FastAPI.\nWhat is \"Form Data\"\n¶\nThe way HTML forms (\n<form></form>\n) sends the data to the server normally uses a \"special\" encoding for that data, it's different from JSON.\nFastAPI\nwill make sure to read that data from the right place instead of JSON.\nTechnical Details\nData from forms is normally encoded using the \"media type\"\napplication/x-www-form-urlencoded\nwhen it doesn't include files.\nBut when the form includes files, it is encoded as\nmultipart/form-data\n. If you use\nFile\n,\nFastAPI\nwill know it has to get the files from the correct part of the body.\nIf you want to read more about these encodings and form fields, head to the\nMDN\nweb docs for\nPOST\n.\nWarning\nYou can declare multiple\nFile\nand\nForm\nparameters in a\npath operation\n, but you can't also declare\nBody\nfields that you expect to receive as JSON, as the request will have the body encoded using\nmultipart/form-data\ninstead of\napplication/json\n.\nThis is not a limitation of\nFastAPI\n, it's part of the HTTP protocol.\nOptional File Upload\n¶\nYou can make a file optional by using standard type annotations and setting a default value of\nNone\n:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n|\nNone\n,\nFile\n()]\n=\nNone\n):\nif\nnot\nfile\n:\nreturn\n{\n\"message\"\n:\n\"No file sent\"\n}\nelse\n:\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n|\nNone\n=\nNone\n):\nif\nnot\nfile\n:\nreturn\n{\n\"message\"\n:\n\"No upload file sent\"\n}\nelse\n:\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nUnion\n[\nbytes\n,\nNone\n],\nFile\n()]\n=\nNone\n):\nif\nnot\nfile\n:\nreturn\n{\n\"message\"\n:\n\"No file sent\"\n}\nelse\n:\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUnion\n[\nUploadFile\n,\nNone\n]\n=\nNone\n):\nif\nnot\nfile\n:\nreturn\n{\n\"message\"\n:\n\"No upload file sent\"\n}\nelse\n:\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nUnion\n[\nbytes\n,\nNone\n],\nFile\n()]\n=\nNone\n):\nif\nnot\nfile\n:\nreturn\n{\n\"message\"\n:\n\"No file sent\"\n}\nelse\n:\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUnion\n[\nUploadFile\n,\nNone\n]\n=\nNone\n):\nif\nnot\nfile\n:\nreturn\n{\n\"message\"\n:\n\"No upload file sent\"\n}\nelse\n:\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nbytes\n|\nNone\n=\nFile\n(\ndefault\n=\nNone\n)):\nif\nnot\nfile\n:\nreturn\n{\n\"message\"\n:\n\"No file sent\"\n}\nelse\n:\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n|\nNone\n=\nNone\n):\nif\nnot\nfile\n:\nreturn\n{\n\"message\"\n:\n\"No upload file sent\"\n}\nelse\n:\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nUnion\n[\nbytes\n,\nNone\n]\n=\nFile\n(\ndefault\n=\nNone\n)):\nif\nnot\nfile\n:\nreturn\n{\n\"message\"\n:\n\"No file sent\"\n}\nelse\n:\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUnion\n[\nUploadFile\n,\nNone\n]\n=\nNone\n):\nif\nnot\nfile\n:\nreturn\n{\n\"message\"\n:\n\"No upload file sent\"\n}\nelse\n:\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nUploadFile\nwith Additional Metadata\n¶\nYou can also use\nFile()\nwith\nUploadFile\n, for example, to set additional metadata:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n(\ndescription\n=\n\"A file read as bytes\"\n)]):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nAnnotated\n[\nUploadFile\n,\nFile\n(\ndescription\n=\n\"A file read as UploadFile\"\n)],\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nAnnotated\n[\nbytes\n,\nFile\n(\ndescription\n=\n\"A file read as bytes\"\n)]):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nAnnotated\n[\nUploadFile\n,\nFile\n(\ndescription\n=\n\"A file read as UploadFile\"\n)],\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_file\n(\nfile\n:\nbytes\n=\nFile\n(\ndescription\n=\n\"A file read as bytes\"\n)):\nreturn\n{\n\"file_size\"\n:\nlen\n(\nfile\n)}\n@app\n.\npost\n(\n\"/uploadfile/\"\n)\nasync\ndef\ncreate_upload_file\n(\nfile\n:\nUploadFile\n=\nFile\n(\ndescription\n=\n\"A file read as UploadFile\"\n),\n):\nreturn\n{\n\"filename\"\n:\nfile\n.\nfilename\n}\nMultiple File Uploads\n¶\nIt's possible to upload several files at the same time.\nThey would be associated to the same \"form field\" sent using \"form data\".\nTo use that, declare a list of\nbytes\nor\nUploadFile\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_files\n(\nfiles\n:\nAnnotated\n[\nlist\n[\nbytes\n],\nFile\n()]):\nreturn\n{\n\"file_sizes\"\n:\n[\nlen\n(\nfile\n)\nfor\nfile\nin\nfiles\n]}\n@app\n.\npost\n(\n\"/uploadfiles/\"\n)\nasync\ndef\ncreate_upload_files\n(\nfiles\n:\nlist\n[\nUploadFile\n]):\nreturn\n{\n\"filenames\"\n:\n[\nfile\n.\nfilename\nfor\nfile\nin\nfiles\n]}\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\ncontent\n=\n\"\"\"\n<body>\n<form action=\"/files/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n<form action=\"/uploadfiles/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n</body>\n\"\"\"\nreturn\nHTMLResponse\n(\ncontent\n=\ncontent\n)\n🤓 Other versions and variants\nPython 3.8+\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\nfastapi.responses\nimport\nHTMLResponse\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_files\n(\nfiles\n:\nAnnotated\n[\nList\n[\nbytes\n],\nFile\n()]):\nreturn\n{\n\"file_sizes\"\n:\n[\nlen\n(\nfile\n)\nfor\nfile\nin\nfiles\n]}\n@app\n.\npost\n(\n\"/uploadfiles/\"\n)\nasync\ndef\ncreate_upload_files\n(\nfiles\n:\nList\n[\nUploadFile\n]):\nreturn\n{\n\"filenames\"\n:\n[\nfile\n.\nfilename\nfor\nfile\nin\nfiles\n]}\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\ncontent\n=\n\"\"\"\n<body>\n<form action=\"/files/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n<form action=\"/uploadfiles/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n</body>\n\"\"\"\nreturn\nHTMLResponse\n(\ncontent\n=\ncontent\n)\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_files\n(\nfiles\n:\nlist\n[\nbytes\n]\n=\nFile\n()):\nreturn\n{\n\"file_sizes\"\n:\n[\nlen\n(\nfile\n)\nfor\nfile\nin\nfiles\n]}\n@app\n.\npost\n(\n\"/uploadfiles/\"\n)\nasync\ndef\ncreate_upload_files\n(\nfiles\n:\nlist\n[\nUploadFile\n]):\nreturn\n{\n\"filenames\"\n:\n[\nfile\n.\nfilename\nfor\nfile\nin\nfiles\n]}\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\ncontent\n=\n\"\"\"\n<body>\n<form action=\"/files/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n<form action=\"/uploadfiles/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n</body>\n\"\"\"\nreturn\nHTMLResponse\n(\ncontent\n=\ncontent\n)\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_files\n(\nfiles\n:\nList\n[\nbytes\n]\n=\nFile\n()):\nreturn\n{\n\"file_sizes\"\n:\n[\nlen\n(\nfile\n)\nfor\nfile\nin\nfiles\n]}\n@app\n.\npost\n(\n\"/uploadfiles/\"\n)\nasync\ndef\ncreate_upload_files\n(\nfiles\n:\nList\n[\nUploadFile\n]):\nreturn\n{\n\"filenames\"\n:\n[\nfile\n.\nfilename\nfor\nfile\nin\nfiles\n]}\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\ncontent\n=\n\"\"\"\n<body>\n<form action=\"/files/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n<form action=\"/uploadfiles/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n</body>\n\"\"\"\nreturn\nHTMLResponse\n(\ncontent\n=\ncontent\n)\nYou will receive, as declared, a\nlist\nof\nbytes\nor\nUploadFile\ns.\nTechnical Details\nYou could also use\nfrom starlette.responses import HTMLResponse\n.\nFastAPI\nprovides the same\nstarlette.responses\nas\nfastapi.responses\njust as a convenience for you, the developer. But most of the available responses come directly from Starlette.\nMultiple File Uploads with Additional Metadata\n¶\nAnd the same way as before, you can use\nFile()\nto set additional parameters, even for\nUploadFile\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_files\n(\nfiles\n:\nAnnotated\n[\nlist\n[\nbytes\n],\nFile\n(\ndescription\n=\n\"Multiple files as bytes\"\n)],\n):\nreturn\n{\n\"file_sizes\"\n:\n[\nlen\n(\nfile\n)\nfor\nfile\nin\nfiles\n]}\n@app\n.\npost\n(\n\"/uploadfiles/\"\n)\nasync\ndef\ncreate_upload_files\n(\nfiles\n:\nAnnotated\n[\nlist\n[\nUploadFile\n],\nFile\n(\ndescription\n=\n\"Multiple files as UploadFile\"\n)\n],\n):\nreturn\n{\n\"filenames\"\n:\n[\nfile\n.\nfilename\nfor\nfile\nin\nfiles\n]}\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\ncontent\n=\n\"\"\"\n<body>\n<form action=\"/files/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n<form action=\"/uploadfiles/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n</body>\n\"\"\"\nreturn\nHTMLResponse\n(\ncontent\n=\ncontent\n)\n🤓 Other versions and variants\nPython 3.8+\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\nfastapi.responses\nimport\nHTMLResponse\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_files\n(\nfiles\n:\nAnnotated\n[\nList\n[\nbytes\n],\nFile\n(\ndescription\n=\n\"Multiple files as bytes\"\n)],\n):\nreturn\n{\n\"file_sizes\"\n:\n[\nlen\n(\nfile\n)\nfor\nfile\nin\nfiles\n]}\n@app\n.\npost\n(\n\"/uploadfiles/\"\n)\nasync\ndef\ncreate_upload_files\n(\nfiles\n:\nAnnotated\n[\nList\n[\nUploadFile\n],\nFile\n(\ndescription\n=\n\"Multiple files as UploadFile\"\n)\n],\n):\nreturn\n{\n\"filenames\"\n:\n[\nfile\n.\nfilename\nfor\nfile\nin\nfiles\n]}\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\ncontent\n=\n\"\"\"\n<body>\n<form action=\"/files/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n<form action=\"/uploadfiles/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n</body>\n\"\"\"\nreturn\nHTMLResponse\n(\ncontent\n=\ncontent\n)\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_files\n(\nfiles\n:\nlist\n[\nbytes\n]\n=\nFile\n(\ndescription\n=\n\"Multiple files as bytes\"\n),\n):\nreturn\n{\n\"file_sizes\"\n:\n[\nlen\n(\nfile\n)\nfor\nfile\nin\nfiles\n]}\n@app\n.\npost\n(\n\"/uploadfiles/\"\n)\nasync\ndef\ncreate_upload_files\n(\nfiles\n:\nlist\n[\nUploadFile\n]\n=\nFile\n(\ndescription\n=\n\"Multiple files as UploadFile\"\n),\n):\nreturn\n{\n\"filenames\"\n:\n[\nfile\n.\nfilename\nfor\nfile\nin\nfiles\n]}\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\ncontent\n=\n\"\"\"\n<body>\n<form action=\"/files/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n<form action=\"/uploadfiles/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n</body>\n\"\"\"\nreturn\nHTMLResponse\n(\ncontent\n=\ncontent\n)\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\nfrom\nfastapi\nimport\nFastAPI\n,\nFile\n,\nUploadFile\nfrom\nfastapi.responses\nimport\nHTMLResponse\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/files/\"\n)\nasync\ndef\ncreate_files\n(\nfiles\n:\nList\n[\nbytes\n]\n=\nFile\n(\ndescription\n=\n\"Multiple files as bytes\"\n),\n):\nreturn\n{\n\"file_sizes\"\n:\n[\nlen\n(\nfile\n)\nfor\nfile\nin\nfiles\n]}\n@app\n.\npost\n(\n\"/uploadfiles/\"\n)\nasync\ndef\ncreate_upload_files\n(\nfiles\n:\nList\n[\nUploadFile\n]\n=\nFile\n(\ndescription\n=\n\"Multiple files as UploadFile\"\n),\n):\nreturn\n{\n\"filenames\"\n:\n[\nfile\n.\nfilename\nfor\nfile\nin\nfiles\n]}\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\ncontent\n=\n\"\"\"\n<body>\n<form action=\"/files/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n<form action=\"/uploadfiles/\" enctype=\"multipart/form-data\" method=\"post\">\n<input name=\"files\" type=\"file\" multiple>\n<input type=\"submit\">\n</form>\n</body>\n\"\"\"\nreturn\nHTMLResponse\n(\ncontent\n=\ncontent\n)\nRecap\n¶\nUse\nFile\n,\nbytes\n, and\nUploadFile\nto declare files to be uploaded in the request, sent as form data.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/testclient/",
    "title": "Test Client -TestClient¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nTest Client -\nTestClient\nTable of contents\nTestClient\nheaders\nfollow_redirects\nmax_redirects\nis_closed\ntrust_env\ntimeout\nevent_hooks\nauth\nbase_url\ncookies\nparams\ntask\nportal\nasync_backend\napp\napp_state\nbuild_request\nstream\nsend\nclose\nrequest\nget\noptions\nhead\npost\nput\npatch\ndelete\nwebsocket_connect\nlifespan\nwait_startup\nwait_shutdown\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nTestClient\nheaders\nfollow_redirects\nmax_redirects\nis_closed\ntrust_env\ntimeout\nevent_hooks\nauth\nbase_url\ncookies\nparams\ntask\nportal\nasync_backend\napp\napp_state\nbuild_request\nstream\nsend\nclose\nrequest\nget\noptions\nhead\npost\nput\npatch\ndelete\nwebsocket_connect\nlifespan\nwait_startup\nwait_shutdown\nFastAPI\nReference\nTest Client -\nTestClient\n¶\nYou can use the\nTestClient\nclass to test FastAPI applications without creating an actual HTTP and socket connection, just communicating directly with the FastAPI code.\nRead more about it in the\nFastAPI docs for Testing\n.\nYou can import it directly from\nfastapi.testclient\n:\nfrom\nfastapi.testclient\nimport\nTestClient\nfastapi.testclient.TestClient\n¶\nTestClient\n(\napp\n,\nbase_url\n=\n\"http://testserver\"\n,\nraise_server_exceptions\n=\nTrue\n,\nroot_path\n=\n\"\"\n,\nbackend\n=\n\"asyncio\"\n,\nbackend_options\n=\nNone\n,\ncookies\n=\nNone\n,\nheaders\n=\nNone\n,\nfollow_redirects\n=\nTrue\n,\nclient\n=\n(\n\"testclient\"\n,\n50000\n),\n)\nBases:\nClient\nSource code in\nstarlette/testclient.py\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\ndef\n__init__\n(\nself\n,\napp\n:\nASGIApp\n,\nbase_url\n:\nstr\n=\n\"http://testserver\"\n,\nraise_server_exceptions\n:\nbool\n=\nTrue\n,\nroot_path\n:\nstr\n=\n\"\"\n,\nbackend\n:\nLiteral\n[\n\"asyncio\"\n,\n\"trio\"\n]\n=\n\"asyncio\"\n,\nbackend_options\n:\ndict\n[\nstr\n,\nAny\n]\n|\nNone\n=\nNone\n,\ncookies\n:\nhttpx\n.\n_types\n.\nCookieTypes\n|\nNone\n=\nNone\n,\nheaders\n:\ndict\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nfollow_redirects\n:\nbool\n=\nTrue\n,\nclient\n:\ntuple\n[\nstr\n,\nint\n]\n=\n(\n\"testclient\"\n,\n50000\n),\n)\n->\nNone\n:\nself\n.\nasync_backend\n=\n_AsyncBackend\n(\nbackend\n=\nbackend\n,\nbackend_options\n=\nbackend_options\nor\n{})\nif\n_is_asgi3\n(\napp\n):\nasgi_app\n=\napp\nelse\n:\napp\n=\ncast\n(\nASGI2App\n,\napp\n)\n# type: ignore[assignment]\nasgi_app\n=\n_WrapASGI2\n(\napp\n)\n# type: ignore[arg-type]\nself\n.\napp\n=\nasgi_app\nself\n.\napp_state\n:\ndict\n[\nstr\n,\nAny\n]\n=\n{}\ntransport\n=\n_TestClientTransport\n(\nself\n.\napp\n,\nportal_factory\n=\nself\n.\n_portal_factory\n,\nraise_server_exceptions\n=\nraise_server_exceptions\n,\nroot_path\n=\nroot_path\n,\napp_state\n=\nself\n.\napp_state\n,\nclient\n=\nclient\n,\n)\nif\nheaders\nis\nNone\n:\nheaders\n=\n{}\nheaders\n.\nsetdefault\n(\n\"user-agent\"\n,\n\"testclient\"\n)\nsuper\n()\n.\n__init__\n(\nbase_url\n=\nbase_url\n,\nheaders\n=\nheaders\n,\ntransport\n=\ntransport\n,\nfollow_redirects\n=\nfollow_redirects\n,\ncookies\n=\ncookies\n,\n)\nheaders\nproperty\nwritable\n¶\nheaders\nHTTP headers to include when sending requests.\nfollow_redirects\ninstance-attribute\n¶\nfollow_redirects\n=\nfollow_redirects\nmax_redirects\ninstance-attribute\n¶\nmax_redirects\n=\nmax_redirects\nis_closed\nproperty\n¶\nis_closed\nCheck if the client being closed\ntrust_env\nproperty\n¶\ntrust_env\ntimeout\nproperty\nwritable\n¶\ntimeout\nevent_hooks\nproperty\nwritable\n¶\nevent_hooks\nauth\nproperty\nwritable\n¶\nauth\nAuthentication class used when none is passed at the request-level.\nSee also\nAuthentication\n.\nbase_url\nproperty\nwritable\n¶\nbase_url\nBase URL to use when sending requests with relative URLs.\ncookies\nproperty\nwritable\n¶\ncookies\nCookie values to include when sending requests.\nparams\nproperty\nwritable\n¶\nparams\nQuery parameters to include in the URL when sending requests.\ntask\ninstance-attribute\n¶\ntask\nportal\nclass-attribute\ninstance-attribute\n¶\nportal\n=\nNone\nasync_backend\ninstance-attribute\n¶\nasync_backend\n=\n_AsyncBackend\n(\nbackend\n=\nbackend\n,\nbackend_options\n=\nbackend_options\nor\n{}\n)\napp\ninstance-attribute\n¶\napp\n=\nasgi_app\napp_state\ninstance-attribute\n¶\napp_state\n=\n{}\nbuild_request\n¶\nbuild_request\n(\nmethod\n,\nurl\n,\n*\n,\ncontent\n=\nNone\n,\ndata\n=\nNone\n,\nfiles\n=\nNone\n,\njson\n=\nNone\n,\nparams\n=\nNone\n,\nheaders\n=\nNone\n,\ncookies\n=\nNone\n,\ntimeout\n=\nUSE_CLIENT_DEFAULT\n,\nextensions\n=\nNone\n)\nBuild and return a request instance.\nThe\nparams\n,\nheaders\nand\ncookies\narguments\nare merged with any values set on the client.\nThe\nurl\nargument is merged with any\nbase_url\nset on the client.\nSee also:\nRequest instances\nSource code in\nhttpx/_client.py\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\ndef\nbuild_request\n(\nself\n,\nmethod\n:\nstr\n,\nurl\n:\nURL\n|\nstr\n,\n*\n,\ncontent\n:\nRequestContent\n|\nNone\n=\nNone\n,\ndata\n:\nRequestData\n|\nNone\n=\nNone\n,\nfiles\n:\nRequestFiles\n|\nNone\n=\nNone\n,\njson\n:\ntyping\n.\nAny\n|\nNone\n=\nNone\n,\nparams\n:\nQueryParamTypes\n|\nNone\n=\nNone\n,\nheaders\n:\nHeaderTypes\n|\nNone\n=\nNone\n,\ncookies\n:\nCookieTypes\n|\nNone\n=\nNone\n,\ntimeout\n:\nTimeoutTypes\n|\nUseClientDefault\n=\nUSE_CLIENT_DEFAULT\n,\nextensions\n:\nRequestExtensions\n|\nNone\n=\nNone\n,\n)\n->\nRequest\n:\n\"\"\"\nBuild and return a request instance.\n* The `params`, `headers` and `cookies` arguments\nare merged with any values set on the client.\n* The `url` argument is merged with any `base_url` set on the client.\nSee also: [Request instances][0]\n[0]: /advanced/clients/#request-instances\n\"\"\"\nurl\n=\nself\n.\n_merge_url\n(\nurl\n)\nheaders\n=\nself\n.\n_merge_headers\n(\nheaders\n)\ncookies\n=\nself\n.\n_merge_cookies\n(\ncookies\n)\nparams\n=\nself\n.\n_merge_queryparams\n(\nparams\n)\nextensions\n=\n{}\nif\nextensions\nis\nNone\nelse\nextensions\nif\n\"timeout\"\nnot\nin\nextensions\n:\ntimeout\n=\n(\nself\n.\ntimeout\nif\nisinstance\n(\ntimeout\n,\nUseClientDefault\n)\nelse\nTimeout\n(\ntimeout\n)\n)\nextensions\n=\ndict\n(\n**\nextensions\n,\ntimeout\n=\ntimeout\n.\nas_dict\n())\nreturn\nRequest\n(\nmethod\n,\nurl\n,\ncontent\n=\ncontent\n,\ndata\n=\ndata\n,\nfiles\n=\nfiles\n,\njson\n=\njson\n,\nparams\n=\nparams\n,\nheaders\n=\nheaders\n,\ncookies\n=\ncookies\n,\nextensions\n=\nextensions\n,\n)\nstream\n¶\nstream\n(\nmethod\n,\nurl\n,\n*\n,\ncontent\n=\nNone\n,\ndata\n=\nNone\n,\nfiles\n=\nNone\n,\njson\n=\nNone\n,\nparams\n=\nNone\n,\nheaders\n=\nNone\n,\ncookies\n=\nNone\n,\nauth\n=\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n=\nUSE_CLIENT_DEFAULT\n,\ntimeout\n=\nUSE_CLIENT_DEFAULT\n,\nextensions\n=\nNone\n)\nAlternative to\nhttpx.request()\nthat streams the response body\ninstead of loading it into memory at once.\nParameters\n: See\nhttpx.request\n.\nSee also:\nStreaming Responses\nSource code in\nhttpx/_client.py\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n@contextmanager\ndef\nstream\n(\nself\n,\nmethod\n:\nstr\n,\nurl\n:\nURL\n|\nstr\n,\n*\n,\ncontent\n:\nRequestContent\n|\nNone\n=\nNone\n,\ndata\n:\nRequestData\n|\nNone\n=\nNone\n,\nfiles\n:\nRequestFiles\n|\nNone\n=\nNone\n,\njson\n:\ntyping\n.\nAny\n|\nNone\n=\nNone\n,\nparams\n:\nQueryParamTypes\n|\nNone\n=\nNone\n,\nheaders\n:\nHeaderTypes\n|\nNone\n=\nNone\n,\ncookies\n:\nCookieTypes\n|\nNone\n=\nNone\n,\nauth\n:\nAuthTypes\n|\nUseClientDefault\n|\nNone\n=\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n:\nbool\n|\nUseClientDefault\n=\nUSE_CLIENT_DEFAULT\n,\ntimeout\n:\nTimeoutTypes\n|\nUseClientDefault\n=\nUSE_CLIENT_DEFAULT\n,\nextensions\n:\nRequestExtensions\n|\nNone\n=\nNone\n,\n)\n->\ntyping\n.\nIterator\n[\nResponse\n]:\n\"\"\"\nAlternative to `httpx.request()` that streams the response body\ninstead of loading it into memory at once.\n**Parameters**: See `httpx.request`.\nSee also: [Streaming Responses][0]\n[0]: /quickstart#streaming-responses\n\"\"\"\nrequest\n=\nself\n.\nbuild_request\n(\nmethod\n=\nmethod\n,\nurl\n=\nurl\n,\ncontent\n=\ncontent\n,\ndata\n=\ndata\n,\nfiles\n=\nfiles\n,\njson\n=\njson\n,\nparams\n=\nparams\n,\nheaders\n=\nheaders\n,\ncookies\n=\ncookies\n,\ntimeout\n=\ntimeout\n,\nextensions\n=\nextensions\n,\n)\nresponse\n=\nself\n.\nsend\n(\nrequest\n=\nrequest\n,\nauth\n=\nauth\n,\nfollow_redirects\n=\nfollow_redirects\n,\nstream\n=\nTrue\n,\n)\ntry\n:\nyield\nresponse\nfinally\n:\nresponse\n.\nclose\n()\nsend\n¶\nsend\n(\nrequest\n,\n*\n,\nstream\n=\nFalse\n,\nauth\n=\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n=\nUSE_CLIENT_DEFAULT\n)\nSend a request.\nThe request is sent as-is, unmodified.\nTypically you'll want to build one with\nClient.build_request()\nso that any client-level configuration is merged into the request,\nbut passing an explicit\nhttpx.Request()\nis supported as well.\nSee also:\nRequest instances\nSource code in\nhttpx/_client.py\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\ndef\nsend\n(\nself\n,\nrequest\n:\nRequest\n,\n*\n,\nstream\n:\nbool\n=\nFalse\n,\nauth\n:\nAuthTypes\n|\nUseClientDefault\n|\nNone\n=\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n:\nbool\n|\nUseClientDefault\n=\nUSE_CLIENT_DEFAULT\n,\n)\n->\nResponse\n:\n\"\"\"\nSend a request.\nThe request is sent as-is, unmodified.\nTypically you'll want to build one with `Client.build_request()`\nso that any client-level configuration is merged into the request,\nbut passing an explicit `httpx.Request()` is supported as well.\nSee also: [Request instances][0]\n[0]: /advanced/clients/#request-instances\n\"\"\"\nif\nself\n.\n_state\n==\nClientState\n.\nCLOSED\n:\nraise\nRuntimeError\n(\n\"Cannot send a request, as the client has been closed.\"\n)\nself\n.\n_state\n=\nClientState\n.\nOPENED\nfollow_redirects\n=\n(\nself\n.\nfollow_redirects\nif\nisinstance\n(\nfollow_redirects\n,\nUseClientDefault\n)\nelse\nfollow_redirects\n)\nself\n.\n_set_timeout\n(\nrequest\n)\nauth\n=\nself\n.\n_build_request_auth\n(\nrequest\n,\nauth\n)\nresponse\n=\nself\n.\n_send_handling_auth\n(\nrequest\n,\nauth\n=\nauth\n,\nfollow_redirects\n=\nfollow_redirects\n,\nhistory\n=\n[],\n)\ntry\n:\nif\nnot\nstream\n:\nresponse\n.\nread\n()\nreturn\nresponse\nexcept\nBaseException\nas\nexc\n:\nresponse\n.\nclose\n()\nraise\nexc\nclose\n¶\nclose\n()\nClose transport and proxies.\nSource code in\nhttpx/_client.py\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\ndef\nclose\n(\nself\n)\n->\nNone\n:\n\"\"\"\nClose transport and proxies.\n\"\"\"\nif\nself\n.\n_state\n!=\nClientState\n.\nCLOSED\n:\nself\n.\n_state\n=\nClientState\n.\nCLOSED\nself\n.\n_transport\n.\nclose\n()\nfor\ntransport\nin\nself\n.\n_mounts\n.\nvalues\n():\nif\ntransport\nis\nnot\nNone\n:\ntransport\n.\nclose\n()\nrequest\n¶\nrequest\n(\nmethod\n,\nurl\n,\n*\n,\ncontent\n=\nNone\n,\ndata\n=\nNone\n,\nfiles\n=\nNone\n,\njson\n=\nNone\n,\nparams\n=\nNone\n,\nheaders\n=\nNone\n,\ncookies\n=\nNone\n,\nauth\n=\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n=\nUSE_CLIENT_DEFAULT\n,\ntimeout\n=\nUSE_CLIENT_DEFAULT\n,\nextensions\n=\nNone\n)\nSource code in\nstarlette/testclient.py\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\ndef\nrequest\n(\n# type: ignore[override]\nself\n,\nmethod\n:\nstr\n,\nurl\n:\nhttpx\n.\n_types\n.\nURLTypes\n,\n*\n,\ncontent\n:\nhttpx\n.\n_types\n.\nRequestContent\n|\nNone\n=\nNone\n,\ndata\n:\n_RequestData\n|\nNone\n=\nNone\n,\nfiles\n:\nhttpx\n.\n_types\n.\nRequestFiles\n|\nNone\n=\nNone\n,\njson\n:\nAny\n=\nNone\n,\nparams\n:\nhttpx\n.\n_types\n.\nQueryParamTypes\n|\nNone\n=\nNone\n,\nheaders\n:\nhttpx\n.\n_types\n.\nHeaderTypes\n|\nNone\n=\nNone\n,\ncookies\n:\nhttpx\n.\n_types\n.\nCookieTypes\n|\nNone\n=\nNone\n,\nauth\n:\nhttpx\n.\n_types\n.\nAuthTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n:\nbool\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\ntimeout\n:\nhttpx\n.\n_types\n.\nTimeoutTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nextensions\n:\ndict\n[\nstr\n,\nAny\n]\n|\nNone\n=\nNone\n,\n)\n->\nhttpx\n.\nResponse\n:\nif\ntimeout\nis\nnot\nhttpx\n.\nUSE_CLIENT_DEFAULT\n:\nwarnings\n.\nwarn\n(\n\"You should not use the 'timeout' argument with the TestClient. \"\n\"See https://github.com/Kludex/starlette/issues/1108 for more information.\"\n,\nDeprecationWarning\n,\n)\nurl\n=\nself\n.\n_merge_url\n(\nurl\n)\nreturn\nsuper\n()\n.\nrequest\n(\nmethod\n,\nurl\n,\ncontent\n=\ncontent\n,\ndata\n=\ndata\n,\nfiles\n=\nfiles\n,\njson\n=\njson\n,\nparams\n=\nparams\n,\nheaders\n=\nheaders\n,\ncookies\n=\ncookies\n,\nauth\n=\nauth\n,\nfollow_redirects\n=\nfollow_redirects\n,\ntimeout\n=\ntimeout\n,\nextensions\n=\nextensions\n,\n)\nget\n¶\nget\n(\nurl\n,\n*\n,\nparams\n=\nNone\n,\nheaders\n=\nNone\n,\ncookies\n=\nNone\n,\nauth\n=\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n=\nUSE_CLIENT_DEFAULT\n,\ntimeout\n=\nUSE_CLIENT_DEFAULT\n,\nextensions\n=\nNone\n)\nSource code in\nstarlette/testclient.py\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\ndef\nget\n(\n# type: ignore[override]\nself\n,\nurl\n:\nhttpx\n.\n_types\n.\nURLTypes\n,\n*\n,\nparams\n:\nhttpx\n.\n_types\n.\nQueryParamTypes\n|\nNone\n=\nNone\n,\nheaders\n:\nhttpx\n.\n_types\n.\nHeaderTypes\n|\nNone\n=\nNone\n,\ncookies\n:\nhttpx\n.\n_types\n.\nCookieTypes\n|\nNone\n=\nNone\n,\nauth\n:\nhttpx\n.\n_types\n.\nAuthTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n:\nbool\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\ntimeout\n:\nhttpx\n.\n_types\n.\nTimeoutTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nextensions\n:\ndict\n[\nstr\n,\nAny\n]\n|\nNone\n=\nNone\n,\n)\n->\nhttpx\n.\nResponse\n:\nreturn\nsuper\n()\n.\nget\n(\nurl\n,\nparams\n=\nparams\n,\nheaders\n=\nheaders\n,\ncookies\n=\ncookies\n,\nauth\n=\nauth\n,\nfollow_redirects\n=\nfollow_redirects\n,\ntimeout\n=\ntimeout\n,\nextensions\n=\nextensions\n,\n)\noptions\n¶\noptions\n(\nurl\n,\n*\n,\nparams\n=\nNone\n,\nheaders\n=\nNone\n,\ncookies\n=\nNone\n,\nauth\n=\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n=\nUSE_CLIENT_DEFAULT\n,\ntimeout\n=\nUSE_CLIENT_DEFAULT\n,\nextensions\n=\nNone\n)\nSource code in\nstarlette/testclient.py\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\ndef\noptions\n(\n# type: ignore[override]\nself\n,\nurl\n:\nhttpx\n.\n_types\n.\nURLTypes\n,\n*\n,\nparams\n:\nhttpx\n.\n_types\n.\nQueryParamTypes\n|\nNone\n=\nNone\n,\nheaders\n:\nhttpx\n.\n_types\n.\nHeaderTypes\n|\nNone\n=\nNone\n,\ncookies\n:\nhttpx\n.\n_types\n.\nCookieTypes\n|\nNone\n=\nNone\n,\nauth\n:\nhttpx\n.\n_types\n.\nAuthTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n:\nbool\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\ntimeout\n:\nhttpx\n.\n_types\n.\nTimeoutTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nextensions\n:\ndict\n[\nstr\n,\nAny\n]\n|\nNone\n=\nNone\n,\n)\n->\nhttpx\n.\nResponse\n:\nreturn\nsuper\n()\n.\noptions\n(\nurl\n,\nparams\n=\nparams\n,\nheaders\n=\nheaders\n,\ncookies\n=\ncookies\n,\nauth\n=\nauth\n,\nfollow_redirects\n=\nfollow_redirects\n,\ntimeout\n=\ntimeout\n,\nextensions\n=\nextensions\n,\n)\nhead\n¶\nhead\n(\nurl\n,\n*\n,\nparams\n=\nNone\n,\nheaders\n=\nNone\n,\ncookies\n=\nNone\n,\nauth\n=\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n=\nUSE_CLIENT_DEFAULT\n,\ntimeout\n=\nUSE_CLIENT_DEFAULT\n,\nextensions\n=\nNone\n)\nSource code in\nstarlette/testclient.py\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\ndef\nhead\n(\n# type: ignore[override]\nself\n,\nurl\n:\nhttpx\n.\n_types\n.\nURLTypes\n,\n*\n,\nparams\n:\nhttpx\n.\n_types\n.\nQueryParamTypes\n|\nNone\n=\nNone\n,\nheaders\n:\nhttpx\n.\n_types\n.\nHeaderTypes\n|\nNone\n=\nNone\n,\ncookies\n:\nhttpx\n.\n_types\n.\nCookieTypes\n|\nNone\n=\nNone\n,\nauth\n:\nhttpx\n.\n_types\n.\nAuthTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n:\nbool\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\ntimeout\n:\nhttpx\n.\n_types\n.\nTimeoutTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nextensions\n:\ndict\n[\nstr\n,\nAny\n]\n|\nNone\n=\nNone\n,\n)\n->\nhttpx\n.\nResponse\n:\nreturn\nsuper\n()\n.\nhead\n(\nurl\n,\nparams\n=\nparams\n,\nheaders\n=\nheaders\n,\ncookies\n=\ncookies\n,\nauth\n=\nauth\n,\nfollow_redirects\n=\nfollow_redirects\n,\ntimeout\n=\ntimeout\n,\nextensions\n=\nextensions\n,\n)\npost\n¶\npost\n(\nurl\n,\n*\n,\ncontent\n=\nNone\n,\ndata\n=\nNone\n,\nfiles\n=\nNone\n,\njson\n=\nNone\n,\nparams\n=\nNone\n,\nheaders\n=\nNone\n,\ncookies\n=\nNone\n,\nauth\n=\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n=\nUSE_CLIENT_DEFAULT\n,\ntimeout\n=\nUSE_CLIENT_DEFAULT\n,\nextensions\n=\nNone\n)\nSource code in\nstarlette/testclient.py\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\ndef\npost\n(\n# type: ignore[override]\nself\n,\nurl\n:\nhttpx\n.\n_types\n.\nURLTypes\n,\n*\n,\ncontent\n:\nhttpx\n.\n_types\n.\nRequestContent\n|\nNone\n=\nNone\n,\ndata\n:\n_RequestData\n|\nNone\n=\nNone\n,\nfiles\n:\nhttpx\n.\n_types\n.\nRequestFiles\n|\nNone\n=\nNone\n,\njson\n:\nAny\n=\nNone\n,\nparams\n:\nhttpx\n.\n_types\n.\nQueryParamTypes\n|\nNone\n=\nNone\n,\nheaders\n:\nhttpx\n.\n_types\n.\nHeaderTypes\n|\nNone\n=\nNone\n,\ncookies\n:\nhttpx\n.\n_types\n.\nCookieTypes\n|\nNone\n=\nNone\n,\nauth\n:\nhttpx\n.\n_types\n.\nAuthTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n:\nbool\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\ntimeout\n:\nhttpx\n.\n_types\n.\nTimeoutTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nextensions\n:\ndict\n[\nstr\n,\nAny\n]\n|\nNone\n=\nNone\n,\n)\n->\nhttpx\n.\nResponse\n:\nreturn\nsuper\n()\n.\npost\n(\nurl\n,\ncontent\n=\ncontent\n,\ndata\n=\ndata\n,\nfiles\n=\nfiles\n,\njson\n=\njson\n,\nparams\n=\nparams\n,\nheaders\n=\nheaders\n,\ncookies\n=\ncookies\n,\nauth\n=\nauth\n,\nfollow_redirects\n=\nfollow_redirects\n,\ntimeout\n=\ntimeout\n,\nextensions\n=\nextensions\n,\n)\nput\n¶\nput\n(\nurl\n,\n*\n,\ncontent\n=\nNone\n,\ndata\n=\nNone\n,\nfiles\n=\nNone\n,\njson\n=\nNone\n,\nparams\n=\nNone\n,\nheaders\n=\nNone\n,\ncookies\n=\nNone\n,\nauth\n=\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n=\nUSE_CLIENT_DEFAULT\n,\ntimeout\n=\nUSE_CLIENT_DEFAULT\n,\nextensions\n=\nNone\n)\nSource code in\nstarlette/testclient.py\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\ndef\nput\n(\n# type: ignore[override]\nself\n,\nurl\n:\nhttpx\n.\n_types\n.\nURLTypes\n,\n*\n,\ncontent\n:\nhttpx\n.\n_types\n.\nRequestContent\n|\nNone\n=\nNone\n,\ndata\n:\n_RequestData\n|\nNone\n=\nNone\n,\nfiles\n:\nhttpx\n.\n_types\n.\nRequestFiles\n|\nNone\n=\nNone\n,\njson\n:\nAny\n=\nNone\n,\nparams\n:\nhttpx\n.\n_types\n.\nQueryParamTypes\n|\nNone\n=\nNone\n,\nheaders\n:\nhttpx\n.\n_types\n.\nHeaderTypes\n|\nNone\n=\nNone\n,\ncookies\n:\nhttpx\n.\n_types\n.\nCookieTypes\n|\nNone\n=\nNone\n,\nauth\n:\nhttpx\n.\n_types\n.\nAuthTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n:\nbool\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\ntimeout\n:\nhttpx\n.\n_types\n.\nTimeoutTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nextensions\n:\ndict\n[\nstr\n,\nAny\n]\n|\nNone\n=\nNone\n,\n)\n->\nhttpx\n.\nResponse\n:\nreturn\nsuper\n()\n.\nput\n(\nurl\n,\ncontent\n=\ncontent\n,\ndata\n=\ndata\n,\nfiles\n=\nfiles\n,\njson\n=\njson\n,\nparams\n=\nparams\n,\nheaders\n=\nheaders\n,\ncookies\n=\ncookies\n,\nauth\n=\nauth\n,\nfollow_redirects\n=\nfollow_redirects\n,\ntimeout\n=\ntimeout\n,\nextensions\n=\nextensions\n,\n)\npatch\n¶\npatch\n(\nurl\n,\n*\n,\ncontent\n=\nNone\n,\ndata\n=\nNone\n,\nfiles\n=\nNone\n,\njson\n=\nNone\n,\nparams\n=\nNone\n,\nheaders\n=\nNone\n,\ncookies\n=\nNone\n,\nauth\n=\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n=\nUSE_CLIENT_DEFAULT\n,\ntimeout\n=\nUSE_CLIENT_DEFAULT\n,\nextensions\n=\nNone\n)\nSource code in\nstarlette/testclient.py\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\ndef\npatch\n(\n# type: ignore[override]\nself\n,\nurl\n:\nhttpx\n.\n_types\n.\nURLTypes\n,\n*\n,\ncontent\n:\nhttpx\n.\n_types\n.\nRequestContent\n|\nNone\n=\nNone\n,\ndata\n:\n_RequestData\n|\nNone\n=\nNone\n,\nfiles\n:\nhttpx\n.\n_types\n.\nRequestFiles\n|\nNone\n=\nNone\n,\njson\n:\nAny\n=\nNone\n,\nparams\n:\nhttpx\n.\n_types\n.\nQueryParamTypes\n|\nNone\n=\nNone\n,\nheaders\n:\nhttpx\n.\n_types\n.\nHeaderTypes\n|\nNone\n=\nNone\n,\ncookies\n:\nhttpx\n.\n_types\n.\nCookieTypes\n|\nNone\n=\nNone\n,\nauth\n:\nhttpx\n.\n_types\n.\nAuthTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n:\nbool\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\ntimeout\n:\nhttpx\n.\n_types\n.\nTimeoutTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nextensions\n:\ndict\n[\nstr\n,\nAny\n]\n|\nNone\n=\nNone\n,\n)\n->\nhttpx\n.\nResponse\n:\nreturn\nsuper\n()\n.\npatch\n(\nurl\n,\ncontent\n=\ncontent\n,\ndata\n=\ndata\n,\nfiles\n=\nfiles\n,\njson\n=\njson\n,\nparams\n=\nparams\n,\nheaders\n=\nheaders\n,\ncookies\n=\ncookies\n,\nauth\n=\nauth\n,\nfollow_redirects\n=\nfollow_redirects\n,\ntimeout\n=\ntimeout\n,\nextensions\n=\nextensions\n,\n)\ndelete\n¶\ndelete\n(\nurl\n,\n*\n,\nparams\n=\nNone\n,\nheaders\n=\nNone\n,\ncookies\n=\nNone\n,\nauth\n=\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n=\nUSE_CLIENT_DEFAULT\n,\ntimeout\n=\nUSE_CLIENT_DEFAULT\n,\nextensions\n=\nNone\n)\nSource code in\nstarlette/testclient.py\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\ndef\ndelete\n(\n# type: ignore[override]\nself\n,\nurl\n:\nhttpx\n.\n_types\n.\nURLTypes\n,\n*\n,\nparams\n:\nhttpx\n.\n_types\n.\nQueryParamTypes\n|\nNone\n=\nNone\n,\nheaders\n:\nhttpx\n.\n_types\n.\nHeaderTypes\n|\nNone\n=\nNone\n,\ncookies\n:\nhttpx\n.\n_types\n.\nCookieTypes\n|\nNone\n=\nNone\n,\nauth\n:\nhttpx\n.\n_types\n.\nAuthTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nfollow_redirects\n:\nbool\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\ntimeout\n:\nhttpx\n.\n_types\n.\nTimeoutTypes\n|\nhttpx\n.\n_client\n.\nUseClientDefault\n=\nhttpx\n.\n_client\n.\nUSE_CLIENT_DEFAULT\n,\nextensions\n:\ndict\n[\nstr\n,\nAny\n]\n|\nNone\n=\nNone\n,\n)\n->\nhttpx\n.\nResponse\n:\nreturn\nsuper\n()\n.\ndelete\n(\nurl\n,\nparams\n=\nparams\n,\nheaders\n=\nheaders\n,\ncookies\n=\ncookies\n,\nauth\n=\nauth\n,\nfollow_redirects\n=\nfollow_redirects\n,\ntimeout\n=\ntimeout\n,\nextensions\n=\nextensions\n,\n)\nwebsocket_connect\n¶\nwebsocket_connect\n(\nurl\n,\nsubprotocols\n=\nNone\n,\n**\nkwargs\n)\nSource code in\nstarlette/testclient.py\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\ndef\nwebsocket_connect\n(\nself\n,\nurl\n:\nstr\n,\nsubprotocols\n:\nSequence\n[\nstr\n]\n|\nNone\n=\nNone\n,\n**\nkwargs\n:\nAny\n,\n)\n->\nWebSocketTestSession\n:\nurl\n=\nurljoin\n(\n\"ws://testserver\"\n,\nurl\n)\nheaders\n=\nkwargs\n.\nget\n(\n\"headers\"\n,\n{})\nheaders\n.\nsetdefault\n(\n\"connection\"\n,\n\"upgrade\"\n)\nheaders\n.\nsetdefault\n(\n\"sec-websocket-key\"\n,\n\"testserver==\"\n)\nheaders\n.\nsetdefault\n(\n\"sec-websocket-version\"\n,\n\"13\"\n)\nif\nsubprotocols\nis\nnot\nNone\n:\nheaders\n.\nsetdefault\n(\n\"sec-websocket-protocol\"\n,\n\", \"\n.\njoin\n(\nsubprotocols\n))\nkwargs\n[\n\"headers\"\n]\n=\nheaders\ntry\n:\nsuper\n()\n.\nrequest\n(\n\"GET\"\n,\nurl\n,\n**\nkwargs\n)\nexcept\n_Upgrade\nas\nexc\n:\nsession\n=\nexc\n.\nsession\nelse\n:\nraise\nRuntimeError\n(\n\"Expected WebSocket upgrade\"\n)\n# pragma: no cover\nreturn\nsession\nlifespan\nasync\n¶\nlifespan\n()\nSource code in\nstarlette/testclient.py\n707\n708\n709\n710\n711\n712\nasync\ndef\nlifespan\n(\nself\n)\n->\nNone\n:\nscope\n=\n{\n\"type\"\n:\n\"lifespan\"\n,\n\"state\"\n:\nself\n.\napp_state\n}\ntry\n:\nawait\nself\n.\napp\n(\nscope\n,\nself\n.\nstream_receive\n.\nreceive\n,\nself\n.\nstream_send\n.\nsend\n)\nfinally\n:\nawait\nself\n.\nstream_send\n.\nsend\n(\nNone\n)\nwait_startup\nasync\n¶\nwait_startup\n()\nSource code in\nstarlette/testclient.py\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\nasync\ndef\nwait_startup\n(\nself\n)\n->\nNone\n:\nawait\nself\n.\nstream_receive\n.\nsend\n({\n\"type\"\n:\n\"lifespan.startup\"\n})\nasync\ndef\nreceive\n()\n->\nAny\n:\nmessage\n=\nawait\nself\n.\nstream_send\n.\nreceive\n()\nif\nmessage\nis\nNone\n:\nself\n.\ntask\n.\nresult\n()\nreturn\nmessage\nmessage\n=\nawait\nreceive\n()\nassert\nmessage\n[\n\"type\"\n]\nin\n(\n\"lifespan.startup.complete\"\n,\n\"lifespan.startup.failed\"\n,\n)\nif\nmessage\n[\n\"type\"\n]\n==\n\"lifespan.startup.failed\"\n:\nawait\nreceive\n()\nwait_shutdown\nasync\n¶\nwait_shutdown\n()\nSource code in\nstarlette/testclient.py\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\nasync\ndef\nwait_shutdown\n(\nself\n)\n->\nNone\n:\nasync\ndef\nreceive\n()\n->\nAny\n:\nmessage\n=\nawait\nself\n.\nstream_send\n.\nreceive\n()\nif\nmessage\nis\nNone\n:\nself\n.\ntask\n.\nresult\n()\nreturn\nmessage\nawait\nself\n.\nstream_receive\n.\nsend\n({\n\"type\"\n:\n\"lifespan.shutdown\"\n})\nmessage\n=\nawait\nreceive\n()\nassert\nmessage\n[\n\"type\"\n]\nin\n(\n\"lifespan.shutdown.complete\"\n,\n\"lifespan.shutdown.failed\"\n,\n)\nif\nmessage\n[\n\"type\"\n]\n==\n\"lifespan.shutdown.failed\"\n:\nawait\nreceive\n()\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/apirouter/",
    "title": "APIRouterclass¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nAPIRouter\nclass\nTable of contents\nAPIRouter\nExample\nwebsocket\nExample\ninclude_router\nExample\nget\nExample\nput\nExample\npost\nExample\ndelete\nExample\noptions\nExample\nhead\nExample\npatch\nExample\ntrace\nExample\non_event\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAPIRouter\nExample\nwebsocket\nExample\ninclude_router\nExample\nget\nExample\nput\nExample\npost\nExample\ndelete\nExample\noptions\nExample\nhead\nExample\npatch\nExample\ntrace\nExample\non_event\nFastAPI\nReference\nAPIRouter\nclass\n¶\nHere's the reference information for the\nAPIRouter\nclass, with all its parameters, attributes and methods.\nYou can import the\nAPIRouter\nclass directly from\nfastapi\n:\nfrom\nfastapi\nimport\nAPIRouter\nfastapi.APIRouter\n¶\nAPIRouter\n(\n*\n,\nprefix\n=\n\"\"\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\ndefault_response_class\n=\nDefault\n(\nJSONResponse\n),\nresponses\n=\nNone\n,\ncallbacks\n=\nNone\n,\nroutes\n=\nNone\n,\nredirect_slashes\n=\nTrue\n,\ndefault\n=\nNone\n,\ndependency_overrides_provider\n=\nNone\n,\nroute_class\n=\nAPIRoute\n,\non_startup\n=\nNone\n,\non_shutdown\n=\nNone\n,\nlifespan\n=\nNone\n,\ndeprecated\n=\nNone\n,\ninclude_in_schema\n=\nTrue\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nBases:\nRouter\nAPIRouter\nclass, used to group\npath operations\n, for example to structure\nan app in multiple files. It would then be included in the\nFastAPI\napp, or\nin another\nAPIRouter\n(ultimately included in the app).\nRead more about it in the\nFastAPI docs for Bigger Applications - Multiple Files\n.\nExample\n¶\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\napp\n=\nFastAPI\n()\nrouter\n=\nAPIRouter\n()\n@router\n.\nget\n(\n\"/users/\"\n,\ntags\n=\n[\n\"users\"\n])\nasync\ndef\nread_users\n():\nreturn\n[{\n\"username\"\n:\n\"Rick\"\n},\n{\n\"username\"\n:\n\"Morty\"\n}]\napp\n.\ninclude_router\n(\nrouter\n)\nPARAMETER\nDESCRIPTION\nprefix\nAn optional path prefix for the router.\nTYPE:\nstr\nDEFAULT:\n''\ntags\nA list of tags to be applied to all the\npath operations\nin this\nrouter.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to all the\npath operations\nin this router.\nRead more about it in the\nFastAPI docs for Bigger Applications - Multiple Files\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\ndefault_response_class\nThe default response class to be used.\nRead more in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nresponses\nAdditional responses to be shown in OpenAPI.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Additional Responses in OpenAPI\n.\nAnd in the\nFastAPI docs for Bigger Applications\n.\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ncallbacks\nOpenAPI callbacks that should apply to all\npath operations\nin this\nrouter.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nroutes\nNote\n: you probably shouldn't use this parameter, it is inherited\nfrom Starlette and supported for compatibility.\nA list of routes to serve incoming HTTP and WebSocket requests.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nredirect_slashes\nWhether to detect and redirect slashes in URLs when the client doesn't\nuse the same format.\nTYPE:\nbool\nDEFAULT:\nTrue\ndefault\nDefault function handler for this router. Used to handle\n404 Not Found errors.\nTYPE:\nOptional\n[\nASGIApp\n]\nDEFAULT:\nNone\ndependency_overrides_provider\nOnly used internally by FastAPI to handle dependency overrides.\nYou shouldn't need to use it. It normally points to the\nFastAPI\napp\nobject.\nTYPE:\nOptional\n[\nAny\n]\nDEFAULT:\nNone\nroute_class\nCustom route (\npath operation\n) class to be used by this router.\nRead more about it in the\nFastAPI docs for Custom Request and APIRoute class\n.\nTYPE:\nType\n[\nAPIRoute\n]\nDEFAULT:\nAPIRoute\non_startup\nA list of startup event handler functions.\nYou should instead use the\nlifespan\nhandlers.\nRead more in the\nFastAPI docs for\nlifespan\n.\nTYPE:\nOptional\n[\nSequence\n[\nCallable\n[[],\nAny\n]]]\nDEFAULT:\nNone\non_shutdown\nA list of shutdown event handler functions.\nYou should instead use the\nlifespan\nhandlers.\nRead more in the\nFastAPI docs for\nlifespan\n.\nTYPE:\nOptional\n[\nSequence\n[\nCallable\n[[],\nAny\n]]]\nDEFAULT:\nNone\nlifespan\nA\nLifespan\ncontext manager handler. This replaces\nstartup\nand\nshutdown\nfunctions with a single context manager.\nRead more in the\nFastAPI docs for\nlifespan\n.\nTYPE:\nOptional\n[\nLifespan\n[\nAny\n]]\nDEFAULT:\nNone\ndeprecated\nMark all\npath operations\nin this router as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\ninclude_in_schema\nTo include (or not) all the\npath operations\nin this router in the\ngenerated OpenAPI.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/routing.py\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\ndef\n__init__\n(\nself\n,\n*\n,\nprefix\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"An optional path prefix for the router.\"\n)]\n=\n\"\"\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to all the *path operations* in this\nrouter.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nparams\n.\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to all the\n*path operations* in this router.\nRead more about it in the\n[FastAPI docs for Bigger Applications - Multiple Files](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n\"\"\"\n),\n]\n=\nNone\n,\ndefault_response_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nThe default response class to be used.\nRead more in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#default-response-class).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses to be shown in OpenAPI.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Additional Responses in OpenAPI](https://fastapi.tiangolo.com/advanced/additional-responses/).\nAnd in the\n[FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nOpenAPI callbacks that should apply to all *path operations* in this\nrouter.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nroutes\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\n**Note**: you probably shouldn't use this parameter, it is inherited\nfrom Starlette and supported for compatibility.\n---\nA list of routes to serve incoming HTTP and WebSocket requests.\n\"\"\"\n),\ndeprecated\n(\n\"\"\"\nYou normally wouldn't use this parameter with FastAPI, it is inherited\nfrom Starlette and supported for compatibility.\nIn FastAPI, you normally would use the *path operation methods*,\nlike `router.get()`, `router.post()`, etc.\n\"\"\"\n),\n]\n=\nNone\n,\nredirect_slashes\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nWhether to detect and redirect slashes in URLs when the client doesn't\nuse the same format.\n\"\"\"\n),\n]\n=\nTrue\n,\ndefault\n:\nAnnotated\n[\nOptional\n[\nASGIApp\n],\nDoc\n(\n\"\"\"\nDefault function handler for this router. Used to handle\n404 Not Found errors.\n\"\"\"\n),\n]\n=\nNone\n,\ndependency_overrides_provider\n:\nAnnotated\n[\nOptional\n[\nAny\n],\nDoc\n(\n\"\"\"\nOnly used internally by FastAPI to handle dependency overrides.\nYou shouldn't need to use it. It normally points to the `FastAPI` app\nobject.\n\"\"\"\n),\n]\n=\nNone\n,\nroute_class\n:\nAnnotated\n[\nType\n[\nAPIRoute\n],\nDoc\n(\n\"\"\"\nCustom route (*path operation*) class to be used by this router.\nRead more about it in the\n[FastAPI docs for Custom Request and APIRoute class](https://fastapi.tiangolo.com/how-to/custom-request-and-route/#custom-apiroute-class-in-a-router).\n\"\"\"\n),\n]\n=\nAPIRoute\n,\non_startup\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nCallable\n[[],\nAny\n]]],\nDoc\n(\n\"\"\"\nA list of startup event handler functions.\nYou should instead use the `lifespan` handlers.\nRead more in the [FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).\n\"\"\"\n),\n]\n=\nNone\n,\non_shutdown\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nCallable\n[[],\nAny\n]]],\nDoc\n(\n\"\"\"\nA list of shutdown event handler functions.\nYou should instead use the `lifespan` handlers.\nRead more in the\n[FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).\n\"\"\"\n),\n]\n=\nNone\n,\n# the generic to Lifespan[AppType] is the type of the top level application\n# which the router cannot know statically, so we use typing.Any\nlifespan\n:\nAnnotated\n[\nOptional\n[\nLifespan\n[\nAny\n]],\nDoc\n(\n\"\"\"\nA `Lifespan` context manager handler. This replaces `startup` and\n`shutdown` functions with a single context manager.\nRead more in the\n[FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark all *path operations* in this router as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nTo include (or not) all the *path operations* in this router in the\ngenerated OpenAPI.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nNone\n:\nsuper\n()\n.\n__init__\n(\nroutes\n=\nroutes\n,\nredirect_slashes\n=\nredirect_slashes\n,\ndefault\n=\ndefault\n,\non_startup\n=\non_startup\n,\non_shutdown\n=\non_shutdown\n,\nlifespan\n=\nlifespan\n,\n)\nif\nprefix\n:\nassert\nprefix\n.\nstartswith\n(\n\"/\"\n),\n\"A path prefix must start with '/'\"\nassert\nnot\nprefix\n.\nendswith\n(\n\"/\"\n),\n(\n\"A path prefix must not end with '/', as the routes will start with '/'\"\n)\nself\n.\nprefix\n=\nprefix\nself\n.\ntags\n:\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]\n=\ntags\nor\n[]\nself\n.\ndependencies\n=\nlist\n(\ndependencies\nor\n[])\nself\n.\ndeprecated\n=\ndeprecated\nself\n.\ninclude_in_schema\n=\ninclude_in_schema\nself\n.\nresponses\n=\nresponses\nor\n{}\nself\n.\ncallbacks\n=\ncallbacks\nor\n[]\nself\n.\ndependency_overrides_provider\n=\ndependency_overrides_provider\nself\n.\nroute_class\n=\nroute_class\nself\n.\ndefault_response_class\n=\ndefault_response_class\nself\n.\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\nwebsocket\n¶\nwebsocket\n(\npath\n,\nname\n=\nNone\n,\n*\n,\ndependencies\n=\nNone\n)\nDecorate a WebSocket function.\nRead more about it in the\nFastAPI docs for WebSockets\n.\nExample\nExample\n¶\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\n,\nWebSocket\napp\n=\nFastAPI\n()\nrouter\n=\nAPIRouter\n()\n@router\n.\nwebsocket\n(\n\"/ws\"\n)\nasync\ndef\nwebsocket_endpoint\n(\nwebsocket\n:\nWebSocket\n):\nawait\nwebsocket\n.\naccept\n()\nwhile\nTrue\n:\ndata\n=\nawait\nwebsocket\n.\nreceive_text\n()\nawait\nwebsocket\n.\nsend_text\n(\nf\n\"Message text was:\n{\ndata\n}\n\"\n)\napp\n.\ninclude_router\n(\nrouter\n)\nPARAMETER\nDESCRIPTION\npath\nWebSocket path.\nTYPE:\nstr\nname\nA name for the WebSocket. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be used for this\nWebSocket.\nRead more about it in the\nFastAPI docs for WebSockets\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nSource code in\nfastapi/routing.py\n1124\n1125\n1126\n1127\n1128\n1129\n1130\n1131\n1132\n1133\n1134\n1135\n1136\n1137\n1138\n1139\n1140\n1141\n1142\n1143\n1144\n1145\n1146\n1147\n1148\n1149\n1150\n1151\n1152\n1153\n1154\n1155\n1156\n1157\n1158\n1159\n1160\n1161\n1162\n1163\n1164\n1165\n1166\n1167\n1168\n1169\n1170\n1171\n1172\n1173\n1174\n1175\n1176\n1177\n1178\n1179\n1180\n1181\n1182\n1183\n1184\n1185\n1186\n1187\n1188\n1189\ndef\nwebsocket\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nWebSocket path.\n\"\"\"\n),\n],\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA name for the WebSocket. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\n*\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nparams\n.\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be used for this\nWebSocket.\nRead more about it in the\n[FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).\n\"\"\"\n),\n]\n=\nNone\n,\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nDecorate a WebSocket function.\nRead more about it in the\n[FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).\n**Example**\n## Example\n```python\nfrom fastapi import APIRouter, FastAPI, WebSocket\napp = FastAPI()\nrouter = APIRouter()\n@router.websocket(\"/ws\")\nasync def websocket_endpoint(websocket: WebSocket):\nawait websocket.accept()\nwhile True:\ndata = await websocket.receive_text()\nawait websocket.send_text(f\"Message text was: {data}\")\napp.include_router(router)\n```\n\"\"\"\ndef\ndecorator\n(\nfunc\n:\nDecoratedCallable\n)\n->\nDecoratedCallable\n:\nself\n.\nadd_api_websocket_route\n(\npath\n,\nfunc\n,\nname\n=\nname\n,\ndependencies\n=\ndependencies\n)\nreturn\nfunc\nreturn\ndecorator\ninclude_router\n¶\ninclude_router\n(\nrouter\n,\n*\n,\nprefix\n=\n\"\"\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\ndefault_response_class\n=\nDefault\n(\nJSONResponse\n),\nresponses\n=\nNone\n,\ncallbacks\n=\nNone\n,\ndeprecated\n=\nNone\n,\ninclude_in_schema\n=\nTrue\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nInclude another\nAPIRouter\nin the same current\nAPIRouter\n.\nRead more about it in the\nFastAPI docs for Bigger Applications\n.\nExample\n¶\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\napp\n=\nFastAPI\n()\ninternal_router\n=\nAPIRouter\n()\nusers_router\n=\nAPIRouter\n()\n@users_router\n.\nget\n(\n\"/users/\"\n)\ndef\nread_users\n():\nreturn\n[{\n\"name\"\n:\n\"Rick\"\n},\n{\n\"name\"\n:\n\"Morty\"\n}]\ninternal_router\n.\ninclude_router\n(\nusers_router\n)\napp\n.\ninclude_router\n(\ninternal_router\n)\nPARAMETER\nDESCRIPTION\nrouter\nThe\nAPIRouter\nto include.\nTYPE:\nAPIRouter\nprefix\nAn optional path prefix for the router.\nTYPE:\nstr\nDEFAULT:\n''\ntags\nA list of tags to be applied to all the\npath operations\nin this\nrouter.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to all the\npath operations\nin this router.\nRead more about it in the\nFastAPI docs for Bigger Applications - Multiple Files\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\ndefault_response_class\nThe default response class to be used.\nRead more in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nresponses\nAdditional responses to be shown in OpenAPI.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Additional Responses in OpenAPI\n.\nAnd in the\nFastAPI docs for Bigger Applications\n.\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ncallbacks\nOpenAPI callbacks that should apply to all\npath operations\nin this\nrouter.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\ndeprecated\nMark all\npath operations\nin this router as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\ninclude_in_schema\nInclude (or not) all the\npath operations\nin this router in the\ngenerated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nbool\nDEFAULT:\nTrue\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/routing.py\n1200\n1201\n1202\n1203\n1204\n1205\n1206\n1207\n1208\n1209\n1210\n1211\n1212\n1213\n1214\n1215\n1216\n1217\n1218\n1219\n1220\n1221\n1222\n1223\n1224\n1225\n1226\n1227\n1228\n1229\n1230\n1231\n1232\n1233\n1234\n1235\n1236\n1237\n1238\n1239\n1240\n1241\n1242\n1243\n1244\n1245\n1246\n1247\n1248\n1249\n1250\n1251\n1252\n1253\n1254\n1255\n1256\n1257\n1258\n1259\n1260\n1261\n1262\n1263\n1264\n1265\n1266\n1267\n1268\n1269\n1270\n1271\n1272\n1273\n1274\n1275\n1276\n1277\n1278\n1279\n1280\n1281\n1282\n1283\n1284\n1285\n1286\n1287\n1288\n1289\n1290\n1291\n1292\n1293\n1294\n1295\n1296\n1297\n1298\n1299\n1300\n1301\n1302\n1303\n1304\n1305\n1306\n1307\n1308\n1309\n1310\n1311\n1312\n1313\n1314\n1315\n1316\n1317\n1318\n1319\n1320\n1321\n1322\n1323\n1324\n1325\n1326\n1327\n1328\n1329\n1330\n1331\n1332\n1333\n1334\n1335\n1336\n1337\n1338\n1339\n1340\n1341\n1342\n1343\n1344\n1345\n1346\n1347\n1348\n1349\n1350\n1351\n1352\n1353\n1354\n1355\n1356\n1357\n1358\n1359\n1360\n1361\n1362\n1363\n1364\n1365\n1366\n1367\n1368\n1369\n1370\n1371\n1372\n1373\n1374\n1375\n1376\n1377\n1378\n1379\n1380\n1381\n1382\n1383\n1384\n1385\n1386\n1387\n1388\n1389\n1390\n1391\n1392\n1393\n1394\n1395\n1396\n1397\n1398\n1399\n1400\n1401\n1402\n1403\n1404\n1405\n1406\n1407\n1408\n1409\n1410\n1411\n1412\n1413\n1414\n1415\n1416\n1417\n1418\n1419\n1420\n1421\n1422\n1423\n1424\n1425\n1426\n1427\n1428\n1429\n1430\n1431\n1432\n1433\n1434\n1435\n1436\n1437\n1438\n1439\n1440\n1441\n1442\ndef\ninclude_router\n(\nself\n,\nrouter\n:\nAnnotated\n[\n\"APIRouter\"\n,\nDoc\n(\n\"The `APIRouter` to include.\"\n)],\n*\n,\nprefix\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"An optional path prefix for the router.\"\n)]\n=\n\"\"\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to all the *path operations* in this\nrouter.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nparams\n.\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to all the\n*path operations* in this router.\nRead more about it in the\n[FastAPI docs for Bigger Applications - Multiple Files](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n\"\"\"\n),\n]\n=\nNone\n,\ndefault_response_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nThe default response class to be used.\nRead more in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#default-response-class).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses to be shown in OpenAPI.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Additional Responses in OpenAPI](https://fastapi.tiangolo.com/advanced/additional-responses/).\nAnd in the\n[FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nOpenAPI callbacks that should apply to all *path operations* in this\nrouter.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark all *path operations* in this router as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude (or not) all the *path operations* in this router in the\ngenerated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nTrue\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nNone\n:\n\"\"\"\nInclude another `APIRouter` in the same current `APIRouter`.\nRead more about it in the\n[FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/).\n## Example\n```python\nfrom fastapi import APIRouter, FastAPI\napp = FastAPI()\ninternal_router = APIRouter()\nusers_router = APIRouter()\n@users_router.get(\"/users/\")\ndef read_users():\nreturn [{\"name\": \"Rick\"}, {\"name\": \"Morty\"}]\ninternal_router.include_router(users_router)\napp.include_router(internal_router)\n```\n\"\"\"\nif\nprefix\n:\nassert\nprefix\n.\nstartswith\n(\n\"/\"\n),\n\"A path prefix must start with '/'\"\nassert\nnot\nprefix\n.\nendswith\n(\n\"/\"\n),\n(\n\"A path prefix must not end with '/', as the routes will start with '/'\"\n)\nelse\n:\nfor\nr\nin\nrouter\n.\nroutes\n:\npath\n=\ngetattr\n(\nr\n,\n\"path\"\n)\n# noqa: B009\nname\n=\ngetattr\n(\nr\n,\n\"name\"\n,\n\"unknown\"\n)\nif\npath\nis\nnot\nNone\nand\nnot\npath\n:\nraise\nFastAPIError\n(\nf\n\"Prefix and path cannot be both empty (path operation:\n{\nname\n}\n)\"\n)\nif\nresponses\nis\nNone\n:\nresponses\n=\n{}\nfor\nroute\nin\nrouter\n.\nroutes\n:\nif\nisinstance\n(\nroute\n,\nAPIRoute\n):\ncombined_responses\n=\n{\n**\nresponses\n,\n**\nroute\n.\nresponses\n}\nuse_response_class\n=\nget_value_or_default\n(\nroute\n.\nresponse_class\n,\nrouter\n.\ndefault_response_class\n,\ndefault_response_class\n,\nself\n.\ndefault_response_class\n,\n)\ncurrent_tags\n=\n[]\nif\ntags\n:\ncurrent_tags\n.\nextend\n(\ntags\n)\nif\nroute\n.\ntags\n:\ncurrent_tags\n.\nextend\n(\nroute\n.\ntags\n)\ncurrent_dependencies\n:\nList\n[\nparams\n.\nDepends\n]\n=\n[]\nif\ndependencies\n:\ncurrent_dependencies\n.\nextend\n(\ndependencies\n)\nif\nroute\n.\ndependencies\n:\ncurrent_dependencies\n.\nextend\n(\nroute\n.\ndependencies\n)\ncurrent_callbacks\n=\n[]\nif\ncallbacks\n:\ncurrent_callbacks\n.\nextend\n(\ncallbacks\n)\nif\nroute\n.\ncallbacks\n:\ncurrent_callbacks\n.\nextend\n(\nroute\n.\ncallbacks\n)\ncurrent_generate_unique_id\n=\nget_value_or_default\n(\nroute\n.\ngenerate_unique_id_function\n,\nrouter\n.\ngenerate_unique_id_function\n,\ngenerate_unique_id_function\n,\nself\n.\ngenerate_unique_id_function\n,\n)\nself\n.\nadd_api_route\n(\nprefix\n+\nroute\n.\npath\n,\nroute\n.\nendpoint\n,\nresponse_model\n=\nroute\n.\nresponse_model\n,\nstatus_code\n=\nroute\n.\nstatus_code\n,\ntags\n=\ncurrent_tags\n,\ndependencies\n=\ncurrent_dependencies\n,\nsummary\n=\nroute\n.\nsummary\n,\ndescription\n=\nroute\n.\ndescription\n,\nresponse_description\n=\nroute\n.\nresponse_description\n,\nresponses\n=\ncombined_responses\n,\ndeprecated\n=\nroute\n.\ndeprecated\nor\ndeprecated\nor\nself\n.\ndeprecated\n,\nmethods\n=\nroute\n.\nmethods\n,\noperation_id\n=\nroute\n.\noperation_id\n,\nresponse_model_include\n=\nroute\n.\nresponse_model_include\n,\nresponse_model_exclude\n=\nroute\n.\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nroute\n.\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nroute\n.\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nroute\n.\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nroute\n.\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\nroute\n.\ninclude_in_schema\nand\nself\n.\ninclude_in_schema\nand\ninclude_in_schema\n,\nresponse_class\n=\nuse_response_class\n,\nname\n=\nroute\n.\nname\n,\nroute_class_override\n=\ntype\n(\nroute\n),\ncallbacks\n=\ncurrent_callbacks\n,\nopenapi_extra\n=\nroute\n.\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ncurrent_generate_unique_id\n,\n)\nelif\nisinstance\n(\nroute\n,\nrouting\n.\nRoute\n):\nmethods\n=\nlist\n(\nroute\n.\nmethods\nor\n[])\nself\n.\nadd_route\n(\nprefix\n+\nroute\n.\npath\n,\nroute\n.\nendpoint\n,\nmethods\n=\nmethods\n,\ninclude_in_schema\n=\nroute\n.\ninclude_in_schema\n,\nname\n=\nroute\n.\nname\n,\n)\nelif\nisinstance\n(\nroute\n,\nAPIWebSocketRoute\n):\ncurrent_dependencies\n=\n[]\nif\ndependencies\n:\ncurrent_dependencies\n.\nextend\n(\ndependencies\n)\nif\nroute\n.\ndependencies\n:\ncurrent_dependencies\n.\nextend\n(\nroute\n.\ndependencies\n)\nself\n.\nadd_api_websocket_route\n(\nprefix\n+\nroute\n.\npath\n,\nroute\n.\nendpoint\n,\ndependencies\n=\ncurrent_dependencies\n,\nname\n=\nroute\n.\nname\n,\n)\nelif\nisinstance\n(\nroute\n,\nrouting\n.\nWebSocketRoute\n):\nself\n.\nadd_websocket_route\n(\nprefix\n+\nroute\n.\npath\n,\nroute\n.\nendpoint\n,\nname\n=\nroute\n.\nname\n)\nfor\nhandler\nin\nrouter\n.\non_startup\n:\nself\n.\nadd_event_handler\n(\n\"startup\"\n,\nhandler\n)\nfor\nhandler\nin\nrouter\n.\non_shutdown\n:\nself\n.\nadd_event_handler\n(\n\"shutdown\"\n,\nhandler\n)\nself\n.\nlifespan_context\n=\n_merge_lifespan_context\n(\nself\n.\nlifespan_context\n,\nrouter\n.\nlifespan_context\n,\n)\nget\n¶\nget\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP GET operation.\nExample\n¶\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\napp\n=\nFastAPI\n()\nrouter\n=\nAPIRouter\n()\n@router\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Empanada\"\n},\n{\n\"name\"\n:\n\"Arepa\"\n}]\napp\n.\ninclude_router\n(\nrouter\n)\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/routing.py\n1444\n1445\n1446\n1447\n1448\n1449\n1450\n1451\n1452\n1453\n1454\n1455\n1456\n1457\n1458\n1459\n1460\n1461\n1462\n1463\n1464\n1465\n1466\n1467\n1468\n1469\n1470\n1471\n1472\n1473\n1474\n1475\n1476\n1477\n1478\n1479\n1480\n1481\n1482\n1483\n1484\n1485\n1486\n1487\n1488\n1489\n1490\n1491\n1492\n1493\n1494\n1495\n1496\n1497\n1498\n1499\n1500\n1501\n1502\n1503\n1504\n1505\n1506\n1507\n1508\n1509\n1510\n1511\n1512\n1513\n1514\n1515\n1516\n1517\n1518\n1519\n1520\n1521\n1522\n1523\n1524\n1525\n1526\n1527\n1528\n1529\n1530\n1531\n1532\n1533\n1534\n1535\n1536\n1537\n1538\n1539\n1540\n1541\n1542\n1543\n1544\n1545\n1546\n1547\n1548\n1549\n1550\n1551\n1552\n1553\n1554\n1555\n1556\n1557\n1558\n1559\n1560\n1561\n1562\n1563\n1564\n1565\n1566\n1567\n1568\n1569\n1570\n1571\n1572\n1573\n1574\n1575\n1576\n1577\n1578\n1579\n1580\n1581\n1582\n1583\n1584\n1585\n1586\n1587\n1588\n1589\n1590\n1591\n1592\n1593\n1594\n1595\n1596\n1597\n1598\n1599\n1600\n1601\n1602\n1603\n1604\n1605\n1606\n1607\n1608\n1609\n1610\n1611\n1612\n1613\n1614\n1615\n1616\n1617\n1618\n1619\n1620\n1621\n1622\n1623\n1624\n1625\n1626\n1627\n1628\n1629\n1630\n1631\n1632\n1633\n1634\n1635\n1636\n1637\n1638\n1639\n1640\n1641\n1642\n1643\n1644\n1645\n1646\n1647\n1648\n1649\n1650\n1651\n1652\n1653\n1654\n1655\n1656\n1657\n1658\n1659\n1660\n1661\n1662\n1663\n1664\n1665\n1666\n1667\n1668\n1669\n1670\n1671\n1672\n1673\n1674\n1675\n1676\n1677\n1678\n1679\n1680\n1681\n1682\n1683\n1684\n1685\n1686\n1687\n1688\n1689\n1690\n1691\n1692\n1693\n1694\n1695\n1696\n1697\n1698\n1699\n1700\n1701\n1702\n1703\n1704\n1705\n1706\n1707\n1708\n1709\n1710\n1711\n1712\n1713\n1714\n1715\n1716\n1717\n1718\n1719\n1720\n1721\n1722\n1723\n1724\n1725\n1726\n1727\n1728\n1729\n1730\n1731\n1732\n1733\n1734\n1735\n1736\n1737\n1738\n1739\n1740\n1741\n1742\n1743\n1744\n1745\n1746\n1747\n1748\n1749\n1750\n1751\n1752\n1753\n1754\n1755\n1756\n1757\n1758\n1759\n1760\n1761\n1762\n1763\n1764\n1765\n1766\n1767\n1768\n1769\n1770\n1771\n1772\n1773\n1774\n1775\n1776\n1777\n1778\n1779\n1780\n1781\n1782\n1783\n1784\n1785\n1786\n1787\n1788\n1789\n1790\n1791\n1792\n1793\n1794\n1795\n1796\n1797\n1798\n1799\n1800\n1801\n1802\n1803\n1804\n1805\n1806\n1807\n1808\n1809\n1810\n1811\n1812\n1813\n1814\n1815\n1816\n1817\n1818\n1819\ndef\nget\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nparams\n.\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP GET operation.\n## Example\n```python\nfrom fastapi import APIRouter, FastAPI\napp = FastAPI()\nrouter = APIRouter()\n@router.get(\"/items/\")\ndef read_items():\nreturn [{\"name\": \"Empanada\"}, {\"name\": \"Arepa\"}]\napp.include_router(router)\n```\n\"\"\"\nreturn\nself\n.\napi_route\n(\npath\n=\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\nmethods\n=\n[\n\"GET\"\n],\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\nput\n¶\nput\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP PUT operation.\nExample\n¶\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\nrouter\n=\nAPIRouter\n()\n@router\n.\nput\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nreplace_item\n(\nitem_id\n:\nstr\n,\nitem\n:\nItem\n):\nreturn\n{\n\"message\"\n:\n\"Item replaced\"\n,\n\"id\"\n:\nitem_id\n}\napp\n.\ninclude_router\n(\nrouter\n)\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/routing.py\n1821\n1822\n1823\n1824\n1825\n1826\n1827\n1828\n1829\n1830\n1831\n1832\n1833\n1834\n1835\n1836\n1837\n1838\n1839\n1840\n1841\n1842\n1843\n1844\n1845\n1846\n1847\n1848\n1849\n1850\n1851\n1852\n1853\n1854\n1855\n1856\n1857\n1858\n1859\n1860\n1861\n1862\n1863\n1864\n1865\n1866\n1867\n1868\n1869\n1870\n1871\n1872\n1873\n1874\n1875\n1876\n1877\n1878\n1879\n1880\n1881\n1882\n1883\n1884\n1885\n1886\n1887\n1888\n1889\n1890\n1891\n1892\n1893\n1894\n1895\n1896\n1897\n1898\n1899\n1900\n1901\n1902\n1903\n1904\n1905\n1906\n1907\n1908\n1909\n1910\n1911\n1912\n1913\n1914\n1915\n1916\n1917\n1918\n1919\n1920\n1921\n1922\n1923\n1924\n1925\n1926\n1927\n1928\n1929\n1930\n1931\n1932\n1933\n1934\n1935\n1936\n1937\n1938\n1939\n1940\n1941\n1942\n1943\n1944\n1945\n1946\n1947\n1948\n1949\n1950\n1951\n1952\n1953\n1954\n1955\n1956\n1957\n1958\n1959\n1960\n1961\n1962\n1963\n1964\n1965\n1966\n1967\n1968\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n1986\n1987\n1988\n1989\n1990\n1991\n1992\n1993\n1994\n1995\n1996\n1997\n1998\n1999\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023\n2024\n2025\n2026\n2027\n2028\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\ndef\nput\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nparams\n.\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP PUT operation.\n## Example\n```python\nfrom fastapi import APIRouter, FastAPI\nfrom pydantic import BaseModel\nclass Item(BaseModel):\nname: str\ndescription: str | None = None\napp = FastAPI()\nrouter = APIRouter()\n@router.put(\"/items/{item_id}\")\ndef replace_item(item_id: str, item: Item):\nreturn {\"message\": \"Item replaced\", \"id\": item_id}\napp.include_router(router)\n```\n\"\"\"\nreturn\nself\n.\napi_route\n(\npath\n=\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\nmethods\n=\n[\n\"PUT\"\n],\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\npost\n¶\npost\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP POST operation.\nExample\n¶\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\nrouter\n=\nAPIRouter\n()\n@router\n.\npost\n(\n\"/items/\"\n)\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\n{\n\"message\"\n:\n\"Item created\"\n}\napp\n.\ninclude_router\n(\nrouter\n)\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/routing.py\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n2505\n2506\n2507\n2508\n2509\n2510\n2511\n2512\n2513\n2514\n2515\n2516\n2517\n2518\n2519\n2520\n2521\n2522\n2523\n2524\n2525\n2526\n2527\n2528\n2529\n2530\n2531\n2532\n2533\n2534\n2535\n2536\n2537\n2538\n2539\n2540\n2541\n2542\n2543\n2544\n2545\n2546\n2547\n2548\n2549\n2550\n2551\n2552\n2553\n2554\n2555\n2556\n2557\n2558\n2559\n2560\n2561\n2562\n2563\n2564\n2565\n2566\n2567\n2568\n2569\n2570\n2571\n2572\n2573\n2574\n2575\n2576\n2577\n2578\n2579\n2580\n2581\n2582\n2583\ndef\npost\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nparams\n.\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP POST operation.\n## Example\n```python\nfrom fastapi import APIRouter, FastAPI\nfrom pydantic import BaseModel\nclass Item(BaseModel):\nname: str\ndescription: str | None = None\napp = FastAPI()\nrouter = APIRouter()\n@router.post(\"/items/\")\ndef create_item(item: Item):\nreturn {\"message\": \"Item created\"}\napp.include_router(router)\n```\n\"\"\"\nreturn\nself\n.\napi_route\n(\npath\n=\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\nmethods\n=\n[\n\"POST\"\n],\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\ndelete\n¶\ndelete\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP DELETE operation.\nExample\n¶\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\napp\n=\nFastAPI\n()\nrouter\n=\nAPIRouter\n()\n@router\n.\ndelete\n(\n\"/items/\n{item_id}\n\"\n)\ndef\ndelete_item\n(\nitem_id\n:\nstr\n):\nreturn\n{\n\"message\"\n:\n\"Item deleted\"\n}\napp\n.\ninclude_router\n(\nrouter\n)\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/routing.py\n2585\n2586\n2587\n2588\n2589\n2590\n2591\n2592\n2593\n2594\n2595\n2596\n2597\n2598\n2599\n2600\n2601\n2602\n2603\n2604\n2605\n2606\n2607\n2608\n2609\n2610\n2611\n2612\n2613\n2614\n2615\n2616\n2617\n2618\n2619\n2620\n2621\n2622\n2623\n2624\n2625\n2626\n2627\n2628\n2629\n2630\n2631\n2632\n2633\n2634\n2635\n2636\n2637\n2638\n2639\n2640\n2641\n2642\n2643\n2644\n2645\n2646\n2647\n2648\n2649\n2650\n2651\n2652\n2653\n2654\n2655\n2656\n2657\n2658\n2659\n2660\n2661\n2662\n2663\n2664\n2665\n2666\n2667\n2668\n2669\n2670\n2671\n2672\n2673\n2674\n2675\n2676\n2677\n2678\n2679\n2680\n2681\n2682\n2683\n2684\n2685\n2686\n2687\n2688\n2689\n2690\n2691\n2692\n2693\n2694\n2695\n2696\n2697\n2698\n2699\n2700\n2701\n2702\n2703\n2704\n2705\n2706\n2707\n2708\n2709\n2710\n2711\n2712\n2713\n2714\n2715\n2716\n2717\n2718\n2719\n2720\n2721\n2722\n2723\n2724\n2725\n2726\n2727\n2728\n2729\n2730\n2731\n2732\n2733\n2734\n2735\n2736\n2737\n2738\n2739\n2740\n2741\n2742\n2743\n2744\n2745\n2746\n2747\n2748\n2749\n2750\n2751\n2752\n2753\n2754\n2755\n2756\n2757\n2758\n2759\n2760\n2761\n2762\n2763\n2764\n2765\n2766\n2767\n2768\n2769\n2770\n2771\n2772\n2773\n2774\n2775\n2776\n2777\n2778\n2779\n2780\n2781\n2782\n2783\n2784\n2785\n2786\n2787\n2788\n2789\n2790\n2791\n2792\n2793\n2794\n2795\n2796\n2797\n2798\n2799\n2800\n2801\n2802\n2803\n2804\n2805\n2806\n2807\n2808\n2809\n2810\n2811\n2812\n2813\n2814\n2815\n2816\n2817\n2818\n2819\n2820\n2821\n2822\n2823\n2824\n2825\n2826\n2827\n2828\n2829\n2830\n2831\n2832\n2833\n2834\n2835\n2836\n2837\n2838\n2839\n2840\n2841\n2842\n2843\n2844\n2845\n2846\n2847\n2848\n2849\n2850\n2851\n2852\n2853\n2854\n2855\n2856\n2857\n2858\n2859\n2860\n2861\n2862\n2863\n2864\n2865\n2866\n2867\n2868\n2869\n2870\n2871\n2872\n2873\n2874\n2875\n2876\n2877\n2878\n2879\n2880\n2881\n2882\n2883\n2884\n2885\n2886\n2887\n2888\n2889\n2890\n2891\n2892\n2893\n2894\n2895\n2896\n2897\n2898\n2899\n2900\n2901\n2902\n2903\n2904\n2905\n2906\n2907\n2908\n2909\n2910\n2911\n2912\n2913\n2914\n2915\n2916\n2917\n2918\n2919\n2920\n2921\n2922\n2923\n2924\n2925\n2926\n2927\n2928\n2929\n2930\n2931\n2932\n2933\n2934\n2935\n2936\n2937\n2938\n2939\n2940\n2941\n2942\n2943\n2944\n2945\n2946\n2947\n2948\n2949\n2950\n2951\n2952\n2953\n2954\n2955\n2956\n2957\n2958\n2959\n2960\ndef\ndelete\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nparams\n.\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP DELETE operation.\n## Example\n```python\nfrom fastapi import APIRouter, FastAPI\napp = FastAPI()\nrouter = APIRouter()\n@router.delete(\"/items/{item_id}\")\ndef delete_item(item_id: str):\nreturn {\"message\": \"Item deleted\"}\napp.include_router(router)\n```\n\"\"\"\nreturn\nself\n.\napi_route\n(\npath\n=\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\nmethods\n=\n[\n\"DELETE\"\n],\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\noptions\n¶\noptions\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP OPTIONS operation.\nExample\n¶\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\napp\n=\nFastAPI\n()\nrouter\n=\nAPIRouter\n()\n@router\n.\noptions\n(\n\"/items/\"\n)\ndef\nget_item_options\n():\nreturn\n{\n\"additions\"\n:\n[\n\"Aji\"\n,\n\"Guacamole\"\n]}\napp\n.\ninclude_router\n(\nrouter\n)\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/routing.py\n2962\n2963\n2964\n2965\n2966\n2967\n2968\n2969\n2970\n2971\n2972\n2973\n2974\n2975\n2976\n2977\n2978\n2979\n2980\n2981\n2982\n2983\n2984\n2985\n2986\n2987\n2988\n2989\n2990\n2991\n2992\n2993\n2994\n2995\n2996\n2997\n2998\n2999\n3000\n3001\n3002\n3003\n3004\n3005\n3006\n3007\n3008\n3009\n3010\n3011\n3012\n3013\n3014\n3015\n3016\n3017\n3018\n3019\n3020\n3021\n3022\n3023\n3024\n3025\n3026\n3027\n3028\n3029\n3030\n3031\n3032\n3033\n3034\n3035\n3036\n3037\n3038\n3039\n3040\n3041\n3042\n3043\n3044\n3045\n3046\n3047\n3048\n3049\n3050\n3051\n3052\n3053\n3054\n3055\n3056\n3057\n3058\n3059\n3060\n3061\n3062\n3063\n3064\n3065\n3066\n3067\n3068\n3069\n3070\n3071\n3072\n3073\n3074\n3075\n3076\n3077\n3078\n3079\n3080\n3081\n3082\n3083\n3084\n3085\n3086\n3087\n3088\n3089\n3090\n3091\n3092\n3093\n3094\n3095\n3096\n3097\n3098\n3099\n3100\n3101\n3102\n3103\n3104\n3105\n3106\n3107\n3108\n3109\n3110\n3111\n3112\n3113\n3114\n3115\n3116\n3117\n3118\n3119\n3120\n3121\n3122\n3123\n3124\n3125\n3126\n3127\n3128\n3129\n3130\n3131\n3132\n3133\n3134\n3135\n3136\n3137\n3138\n3139\n3140\n3141\n3142\n3143\n3144\n3145\n3146\n3147\n3148\n3149\n3150\n3151\n3152\n3153\n3154\n3155\n3156\n3157\n3158\n3159\n3160\n3161\n3162\n3163\n3164\n3165\n3166\n3167\n3168\n3169\n3170\n3171\n3172\n3173\n3174\n3175\n3176\n3177\n3178\n3179\n3180\n3181\n3182\n3183\n3184\n3185\n3186\n3187\n3188\n3189\n3190\n3191\n3192\n3193\n3194\n3195\n3196\n3197\n3198\n3199\n3200\n3201\n3202\n3203\n3204\n3205\n3206\n3207\n3208\n3209\n3210\n3211\n3212\n3213\n3214\n3215\n3216\n3217\n3218\n3219\n3220\n3221\n3222\n3223\n3224\n3225\n3226\n3227\n3228\n3229\n3230\n3231\n3232\n3233\n3234\n3235\n3236\n3237\n3238\n3239\n3240\n3241\n3242\n3243\n3244\n3245\n3246\n3247\n3248\n3249\n3250\n3251\n3252\n3253\n3254\n3255\n3256\n3257\n3258\n3259\n3260\n3261\n3262\n3263\n3264\n3265\n3266\n3267\n3268\n3269\n3270\n3271\n3272\n3273\n3274\n3275\n3276\n3277\n3278\n3279\n3280\n3281\n3282\n3283\n3284\n3285\n3286\n3287\n3288\n3289\n3290\n3291\n3292\n3293\n3294\n3295\n3296\n3297\n3298\n3299\n3300\n3301\n3302\n3303\n3304\n3305\n3306\n3307\n3308\n3309\n3310\n3311\n3312\n3313\n3314\n3315\n3316\n3317\n3318\n3319\n3320\n3321\n3322\n3323\n3324\n3325\n3326\n3327\n3328\n3329\n3330\n3331\n3332\n3333\n3334\n3335\n3336\n3337\ndef\noptions\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nparams\n.\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP OPTIONS operation.\n## Example\n```python\nfrom fastapi import APIRouter, FastAPI\napp = FastAPI()\nrouter = APIRouter()\n@router.options(\"/items/\")\ndef get_item_options():\nreturn {\"additions\": [\"Aji\", \"Guacamole\"]}\napp.include_router(router)\n```\n\"\"\"\nreturn\nself\n.\napi_route\n(\npath\n=\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\nmethods\n=\n[\n\"OPTIONS\"\n],\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\nhead\n¶\nhead\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP HEAD operation.\nExample\n¶\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\nrouter\n=\nAPIRouter\n()\n@router\n.\nhead\n(\n\"/items/\"\n,\nstatus_code\n=\n204\n)\ndef\nget_items_headers\n(\nresponse\n:\nResponse\n):\nresponse\n.\nheaders\n[\n\"X-Cat-Dog\"\n]\n=\n\"Alone in the world\"\napp\n.\ninclude_router\n(\nrouter\n)\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/routing.py\n3339\n3340\n3341\n3342\n3343\n3344\n3345\n3346\n3347\n3348\n3349\n3350\n3351\n3352\n3353\n3354\n3355\n3356\n3357\n3358\n3359\n3360\n3361\n3362\n3363\n3364\n3365\n3366\n3367\n3368\n3369\n3370\n3371\n3372\n3373\n3374\n3375\n3376\n3377\n3378\n3379\n3380\n3381\n3382\n3383\n3384\n3385\n3386\n3387\n3388\n3389\n3390\n3391\n3392\n3393\n3394\n3395\n3396\n3397\n3398\n3399\n3400\n3401\n3402\n3403\n3404\n3405\n3406\n3407\n3408\n3409\n3410\n3411\n3412\n3413\n3414\n3415\n3416\n3417\n3418\n3419\n3420\n3421\n3422\n3423\n3424\n3425\n3426\n3427\n3428\n3429\n3430\n3431\n3432\n3433\n3434\n3435\n3436\n3437\n3438\n3439\n3440\n3441\n3442\n3443\n3444\n3445\n3446\n3447\n3448\n3449\n3450\n3451\n3452\n3453\n3454\n3455\n3456\n3457\n3458\n3459\n3460\n3461\n3462\n3463\n3464\n3465\n3466\n3467\n3468\n3469\n3470\n3471\n3472\n3473\n3474\n3475\n3476\n3477\n3478\n3479\n3480\n3481\n3482\n3483\n3484\n3485\n3486\n3487\n3488\n3489\n3490\n3491\n3492\n3493\n3494\n3495\n3496\n3497\n3498\n3499\n3500\n3501\n3502\n3503\n3504\n3505\n3506\n3507\n3508\n3509\n3510\n3511\n3512\n3513\n3514\n3515\n3516\n3517\n3518\n3519\n3520\n3521\n3522\n3523\n3524\n3525\n3526\n3527\n3528\n3529\n3530\n3531\n3532\n3533\n3534\n3535\n3536\n3537\n3538\n3539\n3540\n3541\n3542\n3543\n3544\n3545\n3546\n3547\n3548\n3549\n3550\n3551\n3552\n3553\n3554\n3555\n3556\n3557\n3558\n3559\n3560\n3561\n3562\n3563\n3564\n3565\n3566\n3567\n3568\n3569\n3570\n3571\n3572\n3573\n3574\n3575\n3576\n3577\n3578\n3579\n3580\n3581\n3582\n3583\n3584\n3585\n3586\n3587\n3588\n3589\n3590\n3591\n3592\n3593\n3594\n3595\n3596\n3597\n3598\n3599\n3600\n3601\n3602\n3603\n3604\n3605\n3606\n3607\n3608\n3609\n3610\n3611\n3612\n3613\n3614\n3615\n3616\n3617\n3618\n3619\n3620\n3621\n3622\n3623\n3624\n3625\n3626\n3627\n3628\n3629\n3630\n3631\n3632\n3633\n3634\n3635\n3636\n3637\n3638\n3639\n3640\n3641\n3642\n3643\n3644\n3645\n3646\n3647\n3648\n3649\n3650\n3651\n3652\n3653\n3654\n3655\n3656\n3657\n3658\n3659\n3660\n3661\n3662\n3663\n3664\n3665\n3666\n3667\n3668\n3669\n3670\n3671\n3672\n3673\n3674\n3675\n3676\n3677\n3678\n3679\n3680\n3681\n3682\n3683\n3684\n3685\n3686\n3687\n3688\n3689\n3690\n3691\n3692\n3693\n3694\n3695\n3696\n3697\n3698\n3699\n3700\n3701\n3702\n3703\n3704\n3705\n3706\n3707\n3708\n3709\n3710\n3711\n3712\n3713\n3714\n3715\n3716\n3717\n3718\n3719\ndef\nhead\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nparams\n.\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP HEAD operation.\n## Example\n```python\nfrom fastapi import APIRouter, FastAPI\nfrom pydantic import BaseModel\nclass Item(BaseModel):\nname: str\ndescription: str | None = None\napp = FastAPI()\nrouter = APIRouter()\n@router.head(\"/items/\", status_code=204)\ndef get_items_headers(response: Response):\nresponse.headers[\"X-Cat-Dog\"] = \"Alone in the world\"\napp.include_router(router)\n```\n\"\"\"\nreturn\nself\n.\napi_route\n(\npath\n=\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\nmethods\n=\n[\n\"HEAD\"\n],\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\npatch\n¶\npatch\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP PATCH operation.\nExample\n¶\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\nrouter\n=\nAPIRouter\n()\n@router\n.\npatch\n(\n\"/items/\"\n)\ndef\nupdate_item\n(\nitem\n:\nItem\n):\nreturn\n{\n\"message\"\n:\n\"Item updated in place\"\n}\napp\n.\ninclude_router\n(\nrouter\n)\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/routing.py\n3721\n3722\n3723\n3724\n3725\n3726\n3727\n3728\n3729\n3730\n3731\n3732\n3733\n3734\n3735\n3736\n3737\n3738\n3739\n3740\n3741\n3742\n3743\n3744\n3745\n3746\n3747\n3748\n3749\n3750\n3751\n3752\n3753\n3754\n3755\n3756\n3757\n3758\n3759\n3760\n3761\n3762\n3763\n3764\n3765\n3766\n3767\n3768\n3769\n3770\n3771\n3772\n3773\n3774\n3775\n3776\n3777\n3778\n3779\n3780\n3781\n3782\n3783\n3784\n3785\n3786\n3787\n3788\n3789\n3790\n3791\n3792\n3793\n3794\n3795\n3796\n3797\n3798\n3799\n3800\n3801\n3802\n3803\n3804\n3805\n3806\n3807\n3808\n3809\n3810\n3811\n3812\n3813\n3814\n3815\n3816\n3817\n3818\n3819\n3820\n3821\n3822\n3823\n3824\n3825\n3826\n3827\n3828\n3829\n3830\n3831\n3832\n3833\n3834\n3835\n3836\n3837\n3838\n3839\n3840\n3841\n3842\n3843\n3844\n3845\n3846\n3847\n3848\n3849\n3850\n3851\n3852\n3853\n3854\n3855\n3856\n3857\n3858\n3859\n3860\n3861\n3862\n3863\n3864\n3865\n3866\n3867\n3868\n3869\n3870\n3871\n3872\n3873\n3874\n3875\n3876\n3877\n3878\n3879\n3880\n3881\n3882\n3883\n3884\n3885\n3886\n3887\n3888\n3889\n3890\n3891\n3892\n3893\n3894\n3895\n3896\n3897\n3898\n3899\n3900\n3901\n3902\n3903\n3904\n3905\n3906\n3907\n3908\n3909\n3910\n3911\n3912\n3913\n3914\n3915\n3916\n3917\n3918\n3919\n3920\n3921\n3922\n3923\n3924\n3925\n3926\n3927\n3928\n3929\n3930\n3931\n3932\n3933\n3934\n3935\n3936\n3937\n3938\n3939\n3940\n3941\n3942\n3943\n3944\n3945\n3946\n3947\n3948\n3949\n3950\n3951\n3952\n3953\n3954\n3955\n3956\n3957\n3958\n3959\n3960\n3961\n3962\n3963\n3964\n3965\n3966\n3967\n3968\n3969\n3970\n3971\n3972\n3973\n3974\n3975\n3976\n3977\n3978\n3979\n3980\n3981\n3982\n3983\n3984\n3985\n3986\n3987\n3988\n3989\n3990\n3991\n3992\n3993\n3994\n3995\n3996\n3997\n3998\n3999\n4000\n4001\n4002\n4003\n4004\n4005\n4006\n4007\n4008\n4009\n4010\n4011\n4012\n4013\n4014\n4015\n4016\n4017\n4018\n4019\n4020\n4021\n4022\n4023\n4024\n4025\n4026\n4027\n4028\n4029\n4030\n4031\n4032\n4033\n4034\n4035\n4036\n4037\n4038\n4039\n4040\n4041\n4042\n4043\n4044\n4045\n4046\n4047\n4048\n4049\n4050\n4051\n4052\n4053\n4054\n4055\n4056\n4057\n4058\n4059\n4060\n4061\n4062\n4063\n4064\n4065\n4066\n4067\n4068\n4069\n4070\n4071\n4072\n4073\n4074\n4075\n4076\n4077\n4078\n4079\n4080\n4081\n4082\n4083\n4084\n4085\n4086\n4087\n4088\n4089\n4090\n4091\n4092\n4093\n4094\n4095\n4096\n4097\n4098\n4099\n4100\n4101\ndef\npatch\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nparams\n.\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP PATCH operation.\n## Example\n```python\nfrom fastapi import APIRouter, FastAPI\nfrom pydantic import BaseModel\nclass Item(BaseModel):\nname: str\ndescription: str | None = None\napp = FastAPI()\nrouter = APIRouter()\n@router.patch(\"/items/\")\ndef update_item(item: Item):\nreturn {\"message\": \"Item updated in place\"}\napp.include_router(router)\n```\n\"\"\"\nreturn\nself\n.\napi_route\n(\npath\n=\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\nmethods\n=\n[\n\"PATCH\"\n],\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\ntrace\n¶\ntrace\n(\npath\n,\n*\n,\nresponse_model\n=\nDefault\n(\nNone\n),\nstatus_code\n=\nNone\n,\ntags\n=\nNone\n,\ndependencies\n=\nNone\n,\nsummary\n=\nNone\n,\ndescription\n=\nNone\n,\nresponse_description\n=\n\"Successful Response\"\n,\nresponses\n=\nNone\n,\ndeprecated\n=\nNone\n,\noperation_id\n=\nNone\n,\nresponse_model_include\n=\nNone\n,\nresponse_model_exclude\n=\nNone\n,\nresponse_model_by_alias\n=\nTrue\n,\nresponse_model_exclude_unset\n=\nFalse\n,\nresponse_model_exclude_defaults\n=\nFalse\n,\nresponse_model_exclude_none\n=\nFalse\n,\ninclude_in_schema\n=\nTrue\n,\nresponse_class\n=\nDefault\n(\nJSONResponse\n),\nname\n=\nNone\n,\ncallbacks\n=\nNone\n,\nopenapi_extra\n=\nNone\n,\ngenerate_unique_id_function\n=\nDefault\n(\ngenerate_unique_id\n)\n)\nAdd a\npath operation\nusing an HTTP TRACE operation.\nExample\n¶\nfrom\nfastapi\nimport\nAPIRouter\n,\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\napp\n=\nFastAPI\n()\nrouter\n=\nAPIRouter\n()\n@router\n.\ntrace\n(\n\"/items/\n{item_id}\n\"\n)\ndef\ntrace_item\n(\nitem_id\n:\nstr\n):\nreturn\nNone\napp\n.\ninclude_router\n(\nrouter\n)\nPARAMETER\nDESCRIPTION\npath\nThe URL path to be used for this\npath operation\n.\nFor example, in\nhttp://example.com/items\n, the path is\n/items\n.\nTYPE:\nstr\nresponse_model\nThe type to use for the response.\nIt could be any valid Pydantic\nfield\ntype. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a\nlist\n,\ndict\n,\netc.\nIt will be used for:\nDocumentation: the generated OpenAPI (and the UI at\n/docs\n) will\n    show it as the response (JSON Schema).\nSerialization: you could return an arbitrary object and the\nresponse_model\nwould be used to serialize that object into the\n    corresponding JSON.\nFiltering: the JSON sent to the client will only contain the data\n    (fields) defined in the\nresponse_model\n. If you returned an object\n    that contains an attribute\npassword\nbut the\nresponse_model\ndoes\n    not include that field, the JSON sent to the client would not have\n    that\npassword\n.\nValidation: whatever you return will be serialized with the\nresponse_model\n, converting any data as necessary to generate the\n    corresponding JSON. But if the data in the object returned is not\n    valid, that would mean a violation of the contract with the client,\n    so it's an error from the API developer. So, FastAPI will raise an\n    error and return a 500 error code (Internal Server Error).\nRead more about it in the\nFastAPI docs for Response Model\n.\nTYPE:\nAny\nDEFAULT:\nDefault\n(None)\nstatus_code\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\nFastAPI docs for Response Status Code\n.\nTYPE:\nOptional\n[\nint\n]\nDEFAULT:\nNone\ntags\nA list of tags to be applied to the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]]\nDEFAULT:\nNone\ndependencies\nA list of dependencies (using\nDepends()\n) to be applied to the\npath operation\n.\nRead more about it in the\nFastAPI docs for Dependencies in path operation decorators\n.\nTYPE:\nOptional\n[\nSequence\n[\nDepends\n]]\nDEFAULT:\nNone\nsummary\nA summary for the\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ndescription\nA description for the\npath operation\n.\nIf not provided, it will be extracted automatically from the docstring\nof the\npath operation function\n.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Path Operation Configuration\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_description\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nstr\nDEFAULT:\n'Successful Response'\nresponses\nAdditional responses that could be returned by this\npath operation\n.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]]\nDEFAULT:\nNone\ndeprecated\nMark this\npath operation\nas deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nTYPE:\nOptional\n[\nbool\n]\nDEFAULT:\nNone\noperation_id\nCustom operation ID to be used by this\npath operation\n.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\ngenerate_unique_id_function\nin the\nFastAPI\nclass.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\nresponse_model_include\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_exclude\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nOptional\n[\nIncEx\n]\nDEFAULT:\nNone\nresponse_model_by_alias\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_model_exclude_unset\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\nresponse_model_exclude_defaults\nin that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_defaults\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from\nresponse_model_exclude_unset\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen\nTrue\n, default values are omitted from the response.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\nresponse_model_exclude_none\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to\nNone\n.\nThis is much simpler (less smart) than\nresponse_model_exclude_unset\nand\nresponse_model_exclude_defaults\n. You probably want to use one of\nthose two instead of this one, as those allow returning\nNone\nvalues\nwhen it makes sense.\nRead more about it in the\nFastAPI docs for Response Model - Return Type\n.\nTYPE:\nbool\nDEFAULT:\nFalse\ninclude_in_schema\nInclude this\npath operation\nin the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for Query Parameters and String Validations\n.\nTYPE:\nbool\nDEFAULT:\nTrue\nresponse_class\nResponse class to be used for this\npath operation\n.\nThis will not be used if you return a response directly.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nTYPE:\nType\n[\nResponse\n]\nDEFAULT:\nDefault\n(\nJSONResponse\n)\nname\nName for this\npath operation\n. Only used internally.\nTYPE:\nOptional\n[\nstr\n]\nDEFAULT:\nNone\ncallbacks\nList of\npath operations\nthat will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at\n/docs\n).\nRead more about it in the\nFastAPI docs for OpenAPI Callbacks\n.\nTYPE:\nOptional\n[\nList\n[\nBaseRoute\n]]\nDEFAULT:\nNone\nopenapi_extra\nExtra metadata to be included in the OpenAPI schema for this\npath\noperation\n.\nRead more about it in the\nFastAPI docs for Path Operation Advanced Configuration\n.\nTYPE:\nOptional\n[\nDict\n[\nstr\n,\nAny\n]]\nDEFAULT:\nNone\ngenerate_unique_id_function\nCustomize the function used to generate unique IDs for the\npath\noperations\nshown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\nFastAPI docs about how to Generate Clients\n.\nTYPE:\nCallable\n[[\nAPIRoute\n],\nstr\n]\nDEFAULT:\nDefault\n(\ngenerate_unique_id\n)\nSource code in\nfastapi/routing.py\n4103\n4104\n4105\n4106\n4107\n4108\n4109\n4110\n4111\n4112\n4113\n4114\n4115\n4116\n4117\n4118\n4119\n4120\n4121\n4122\n4123\n4124\n4125\n4126\n4127\n4128\n4129\n4130\n4131\n4132\n4133\n4134\n4135\n4136\n4137\n4138\n4139\n4140\n4141\n4142\n4143\n4144\n4145\n4146\n4147\n4148\n4149\n4150\n4151\n4152\n4153\n4154\n4155\n4156\n4157\n4158\n4159\n4160\n4161\n4162\n4163\n4164\n4165\n4166\n4167\n4168\n4169\n4170\n4171\n4172\n4173\n4174\n4175\n4176\n4177\n4178\n4179\n4180\n4181\n4182\n4183\n4184\n4185\n4186\n4187\n4188\n4189\n4190\n4191\n4192\n4193\n4194\n4195\n4196\n4197\n4198\n4199\n4200\n4201\n4202\n4203\n4204\n4205\n4206\n4207\n4208\n4209\n4210\n4211\n4212\n4213\n4214\n4215\n4216\n4217\n4218\n4219\n4220\n4221\n4222\n4223\n4224\n4225\n4226\n4227\n4228\n4229\n4230\n4231\n4232\n4233\n4234\n4235\n4236\n4237\n4238\n4239\n4240\n4241\n4242\n4243\n4244\n4245\n4246\n4247\n4248\n4249\n4250\n4251\n4252\n4253\n4254\n4255\n4256\n4257\n4258\n4259\n4260\n4261\n4262\n4263\n4264\n4265\n4266\n4267\n4268\n4269\n4270\n4271\n4272\n4273\n4274\n4275\n4276\n4277\n4278\n4279\n4280\n4281\n4282\n4283\n4284\n4285\n4286\n4287\n4288\n4289\n4290\n4291\n4292\n4293\n4294\n4295\n4296\n4297\n4298\n4299\n4300\n4301\n4302\n4303\n4304\n4305\n4306\n4307\n4308\n4309\n4310\n4311\n4312\n4313\n4314\n4315\n4316\n4317\n4318\n4319\n4320\n4321\n4322\n4323\n4324\n4325\n4326\n4327\n4328\n4329\n4330\n4331\n4332\n4333\n4334\n4335\n4336\n4337\n4338\n4339\n4340\n4341\n4342\n4343\n4344\n4345\n4346\n4347\n4348\n4349\n4350\n4351\n4352\n4353\n4354\n4355\n4356\n4357\n4358\n4359\n4360\n4361\n4362\n4363\n4364\n4365\n4366\n4367\n4368\n4369\n4370\n4371\n4372\n4373\n4374\n4375\n4376\n4377\n4378\n4379\n4380\n4381\n4382\n4383\n4384\n4385\n4386\n4387\n4388\n4389\n4390\n4391\n4392\n4393\n4394\n4395\n4396\n4397\n4398\n4399\n4400\n4401\n4402\n4403\n4404\n4405\n4406\n4407\n4408\n4409\n4410\n4411\n4412\n4413\n4414\n4415\n4416\n4417\n4418\n4419\n4420\n4421\n4422\n4423\n4424\n4425\n4426\n4427\n4428\n4429\n4430\n4431\n4432\n4433\n4434\n4435\n4436\n4437\n4438\n4439\n4440\n4441\n4442\n4443\n4444\n4445\n4446\n4447\n4448\n4449\n4450\n4451\n4452\n4453\n4454\n4455\n4456\n4457\n4458\n4459\n4460\n4461\n4462\n4463\n4464\n4465\n4466\n4467\n4468\n4469\n4470\n4471\n4472\n4473\n4474\n4475\n4476\n4477\n4478\n4479\n4480\n4481\n4482\n4483\ndef\ntrace\n(\nself\n,\npath\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe URL path to be used for this *path operation*.\nFor example, in `http://example.com/items`, the path is `/items`.\n\"\"\"\n),\n],\n*\n,\nresponse_model\n:\nAnnotated\n[\nAny\n,\nDoc\n(\n\"\"\"\nThe type to use for the response.\nIt could be any valid Pydantic *field* type. So, it doesn't have to\nbe a Pydantic model, it could be other things, like a `list`, `dict`,\netc.\nIt will be used for:\n* Documentation: the generated OpenAPI (and the UI at `/docs`) will\nshow it as the response (JSON Schema).\n* Serialization: you could return an arbitrary object and the\n`response_model` would be used to serialize that object into the\ncorresponding JSON.\n* Filtering: the JSON sent to the client will only contain the data\n(fields) defined in the `response_model`. If you returned an object\nthat contains an attribute `password` but the `response_model` does\nnot include that field, the JSON sent to the client would not have\nthat `password`.\n* Validation: whatever you return will be serialized with the\n`response_model`, converting any data as necessary to generate the\ncorresponding JSON. But if the data in the object returned is not\nvalid, that would mean a violation of the contract with the client,\nso it's an error from the API developer. So, FastAPI will raise an\nerror and return a 500 error code (Internal Server Error).\nRead more about it in the\n[FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n\"\"\"\n),\n]\n=\nDefault\n(\nNone\n),\nstatus_code\n:\nAnnotated\n[\nOptional\n[\nint\n],\nDoc\n(\n\"\"\"\nThe default status code to be used for the response.\nYou could override the status code by returning a response directly.\nRead more about it in the\n[FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n\"\"\"\n),\n]\n=\nNone\n,\ntags\n:\nAnnotated\n[\nOptional\n[\nList\n[\nUnion\n[\nstr\n,\nEnum\n]]],\nDoc\n(\n\"\"\"\nA list of tags to be applied to the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n\"\"\"\n),\n]\n=\nNone\n,\ndependencies\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nparams\n.\nDepends\n]],\nDoc\n(\n\"\"\"\nA list of dependencies (using `Depends()`) to be applied to the\n*path operation*.\nRead more about it in the\n[FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n\"\"\"\n),\n]\n=\nNone\n,\nsummary\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA summary for the *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\ndescription\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nA description for the *path operation*.\nIf not provided, it will be extracted automatically from the docstring\nof the *path operation function*.\nIt can contain Markdown.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_description\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe description for the default response.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\n\"Successful Response\"\n,\nresponses\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nUnion\n[\nint\n,\nstr\n],\nDict\n[\nstr\n,\nAny\n]]],\nDoc\n(\n\"\"\"\nAdditional responses that could be returned by this *path operation*.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\ndeprecated\n:\nAnnotated\n[\nOptional\n[\nbool\n],\nDoc\n(\n\"\"\"\nMark this *path operation* as deprecated.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\"\"\"\n),\n]\n=\nNone\n,\noperation_id\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nCustom operation ID to be used by this *path operation*.\nBy default, it is generated automatically.\nIf you provide a custom operation ID, you need to make sure it is\nunique for the whole API.\nYou can customize the\noperation ID generation with the parameter\n`generate_unique_id_function` in the `FastAPI` class.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_include\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to include only certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_exclude\n:\nAnnotated\n[\nOptional\n[\nIncEx\n],\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to exclude certain fields in the\nresponse data.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nNone\n,\nresponse_model_by_alias\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response model\nshould be serialized by alias when an alias is used.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_model_exclude_unset\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that were not set and\nhave their default values. This is different from\n`response_model_exclude_defaults` in that if the fields are set,\nthey will be included in the response, even if the value is the same\nas the default.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_defaults\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data\nshould have all the fields, including the ones that have the same value\nas the default. This is different from `response_model_exclude_unset`\nin that if the fields are set but contain the same default values,\nthey will be excluded from the response.\nWhen `True`, default values are omitted from the response.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n\"\"\"\n),\n]\n=\nFalse\n,\nresponse_model_exclude_none\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nConfiguration passed to Pydantic to define if the response data should\nexclude fields set to `None`.\nThis is much simpler (less smart) than `response_model_exclude_unset`\nand `response_model_exclude_defaults`. You probably want to use one of\nthose two instead of this one, as those allow returning `None` values\nwhen it makes sense.\nRead more about it in the\n[FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n\"\"\"\n),\n]\n=\nFalse\n,\ninclude_in_schema\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nInclude this *path operation* in the generated OpenAPI schema.\nThis affects the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-parameters-from-openapi).\n\"\"\"\n),\n]\n=\nTrue\n,\nresponse_class\n:\nAnnotated\n[\nType\n[\nResponse\n],\nDoc\n(\n\"\"\"\nResponse class to be used for this *path operation*.\nThis will not be used if you return a response directly.\nRead more about it in the\n[FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n\"\"\"\n),\n]\n=\nDefault\n(\nJSONResponse\n),\nname\n:\nAnnotated\n[\nOptional\n[\nstr\n],\nDoc\n(\n\"\"\"\nName for this *path operation*. Only used internally.\n\"\"\"\n),\n]\n=\nNone\n,\ncallbacks\n:\nAnnotated\n[\nOptional\n[\nList\n[\nBaseRoute\n]],\nDoc\n(\n\"\"\"\nList of *path operations* that will be used as OpenAPI callbacks.\nThis is only for OpenAPI documentation, the callbacks won't be used\ndirectly.\nIt will be added to the generated OpenAPI (e.g. visible at `/docs`).\nRead more about it in the\n[FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n\"\"\"\n),\n]\n=\nNone\n,\nopenapi_extra\n:\nAnnotated\n[\nOptional\n[\nDict\n[\nstr\n,\nAny\n]],\nDoc\n(\n\"\"\"\nExtra metadata to be included in the OpenAPI schema for this *path\noperation*.\nRead more about it in the\n[FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n\"\"\"\n),\n]\n=\nNone\n,\ngenerate_unique_id_function\n:\nAnnotated\n[\nCallable\n[[\nAPIRoute\n],\nstr\n],\nDoc\n(\n\"\"\"\nCustomize the function used to generate unique IDs for the *path\noperations* shown in the generated OpenAPI.\nThis is particularly useful when automatically generating clients or\nSDKs for your API.\nRead more about it in the\n[FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n\"\"\"\n),\n]\n=\nDefault\n(\ngenerate_unique_id\n),\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd a *path operation* using an HTTP TRACE operation.\n## Example\n```python\nfrom fastapi import APIRouter, FastAPI\nfrom pydantic import BaseModel\nclass Item(BaseModel):\nname: str\ndescription: str | None = None\napp = FastAPI()\nrouter = APIRouter()\n@router.trace(\"/items/{item_id}\")\ndef trace_item(item_id: str):\nreturn None\napp.include_router(router)\n```\n\"\"\"\nreturn\nself\n.\napi_route\n(\npath\n=\npath\n,\nresponse_model\n=\nresponse_model\n,\nstatus_code\n=\nstatus_code\n,\ntags\n=\ntags\n,\ndependencies\n=\ndependencies\n,\nsummary\n=\nsummary\n,\ndescription\n=\ndescription\n,\nresponse_description\n=\nresponse_description\n,\nresponses\n=\nresponses\n,\ndeprecated\n=\ndeprecated\n,\nmethods\n=\n[\n\"TRACE\"\n],\noperation_id\n=\noperation_id\n,\nresponse_model_include\n=\nresponse_model_include\n,\nresponse_model_exclude\n=\nresponse_model_exclude\n,\nresponse_model_by_alias\n=\nresponse_model_by_alias\n,\nresponse_model_exclude_unset\n=\nresponse_model_exclude_unset\n,\nresponse_model_exclude_defaults\n=\nresponse_model_exclude_defaults\n,\nresponse_model_exclude_none\n=\nresponse_model_exclude_none\n,\ninclude_in_schema\n=\ninclude_in_schema\n,\nresponse_class\n=\nresponse_class\n,\nname\n=\nname\n,\ncallbacks\n=\ncallbacks\n,\nopenapi_extra\n=\nopenapi_extra\n,\ngenerate_unique_id_function\n=\ngenerate_unique_id_function\n,\n)\non_event\n¶\non_event\n(\nevent_type\n)\nAdd an event handler for the router.\non_event\nis deprecated, use\nlifespan\nevent handlers instead.\nRead more about it in the\nFastAPI docs for Lifespan Events\n.\nPARAMETER\nDESCRIPTION\nevent_type\nThe type of event.\nstartup\nor\nshutdown\n.\nTYPE:\nstr\nSource code in\nfastapi/routing.py\n4485\n4486\n4487\n4488\n4489\n4490\n4491\n4492\n4493\n4494\n4495\n4496\n4497\n4498\n4499\n4500\n4501\n4502\n4503\n4504\n4505\n4506\n4507\n4508\n4509\n4510\n4511\n4512\n4513\n4514\n4515\n4516\n4517\n@deprecated\n(\n\"\"\"\non_event is deprecated, use lifespan event handlers instead.\nRead more about it in the\n[FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).\n\"\"\"\n)\ndef\non_event\n(\nself\n,\nevent_type\n:\nAnnotated\n[\nstr\n,\nDoc\n(\n\"\"\"\nThe type of event. `startup` or `shutdown`.\n\"\"\"\n),\n],\n)\n->\nCallable\n[[\nDecoratedCallable\n],\nDecoratedCallable\n]:\n\"\"\"\nAdd an event handler for the router.\n`on_event` is deprecated, use `lifespan` event handlers instead.\nRead more about it in the\n[FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/#alternative-events-deprecated).\n\"\"\"\ndef\ndecorator\n(\nfunc\n:\nDecoratedCallable\n)\n->\nDecoratedCallable\n:\nself\n.\nadd_event_handler\n(\nevent_type\n,\nfunc\n)\nreturn\nfunc\nreturn\ndecorator\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/debugging/",
    "title": "Debugging¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nDebugging\nTable of contents\nCall\nuvicorn\nAbout\n__name__ == \"__main__\"\nMore details\nRun your code with your debugger\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nCall\nuvicorn\nAbout\n__name__ == \"__main__\"\nMore details\nRun your code with your debugger\nFastAPI\nLearn\nTutorial - User Guide\nDebugging\n¶\nYou can connect the debugger in your editor, for example with Visual Studio Code or PyCharm.\nCall\nuvicorn\n¶\nIn your FastAPI application, import and run\nuvicorn\ndirectly:\nPython 3.8+\nimport\nuvicorn\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\ndef\nroot\n():\na\n=\n\"a\"\nb\n=\n\"b\"\n+\na\nreturn\n{\n\"hello world\"\n:\nb\n}\nif\n__name__\n==\n\"__main__\"\n:\nuvicorn\n.\nrun\n(\napp\n,\nhost\n=\n\"0.0.0.0\"\n,\nport\n=\n8000\n)\nAbout\n__name__ == \"__main__\"\n¶\nThe main purpose of the\n__name__ == \"__main__\"\nis to have some code that is executed when your file is called with:\n$\npython\nmyapp.py\nbut is not called when another file imports it, like in:\nfrom\nmyapp\nimport\napp\nMore details\n¶\nLet's say your file is named\nmyapp.py\n.\nIf you run it with:\n$\npython\nmyapp.py\nthen the internal variable\n__name__\nin your file, created automatically by Python, will have as value the string\n\"__main__\"\n.\nSo, the section:\nuvicorn\n.\nrun\n(\napp\n,\nhost\n=\n\"0.0.0.0\"\n,\nport\n=\n8000\n)\nwill run.\nThis won't happen if you import that module (file).\nSo, if you have another file\nimporter.py\nwith:\nfrom\nmyapp\nimport\napp\n# Some more code\nin that case, the automatically created variable\n__name__\ninside of\nmyapp.py\nwill not have the value\n\"__main__\"\n.\nSo, the line:\nuvicorn\n.\nrun\n(\napp\n,\nhost\n=\n\"0.0.0.0\"\n,\nport\n=\n8000\n)\nwill not be executed.\nInfo\nFor more information, check\nthe official Python docs\n.\nRun your code with your debugger\n¶\nBecause you are running the Uvicorn server directly from your code, you can call your Python program (your FastAPI application) directly from the debugger.\nFor example, in Visual Studio Code, you can:\nGo to the \"Debug\" panel.\n\"Add configuration...\".\nSelect \"Python\"\nRun the debugger with the option \"\nPython: Current File (Integrated Terminal)\n\".\nIt will then start the server with your\nFastAPI\ncode, stop at your breakpoints, etc.\nHere's how it might look:\nIf you use Pycharm, you can:\nOpen the \"Run\" menu.\nSelect the option \"Debug...\".\nThen a context menu shows up.\nSelect the file to debug (in this case,\nmain.py\n).\nIt will then start the server with your\nFastAPI\ncode, stop at your breakpoints, etc.\nHere's how it might look:\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/websockets/",
    "title": "WebSockets¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nWebSockets\nTable of contents\nWebSocket\nscope\napp\nurl\nbase_url\nheaders\nquery_params\npath_params\ncookies\nclient\nstate\nclient_state\napplication_state\nurl_for\nreceive\nsend\naccept\nreceive_text\nreceive_bytes\nreceive_json\niter_text\niter_bytes\niter_json\nsend_text\nsend_bytes\nsend_json\nclose\nWebSocketDisconnect\ncode\nreason\nWebSockets - additional classes\nWebSocketDisconnect\ncode\nreason\nWebSocketState\nCONNECTING\nCONNECTED\nDISCONNECTED\nRESPONSE\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nWebSocket\nscope\napp\nurl\nbase_url\nheaders\nquery_params\npath_params\ncookies\nclient\nstate\nclient_state\napplication_state\nurl_for\nreceive\nsend\naccept\nreceive_text\nreceive_bytes\nreceive_json\niter_text\niter_bytes\niter_json\nsend_text\nsend_bytes\nsend_json\nclose\nWebSocketDisconnect\ncode\nreason\nWebSockets - additional classes\nWebSocketDisconnect\ncode\nreason\nWebSocketState\nCONNECTING\nCONNECTED\nDISCONNECTED\nRESPONSE\nFastAPI\nReference\nWebSockets\n¶\nWhen defining WebSockets, you normally declare a parameter of type\nWebSocket\nand with it you can read data from the client and send data to it.\nIt is provided directly by Starlette, but you can import it from\nfastapi\n:\nfrom\nfastapi\nimport\nWebSocket\nTip\nWhen you want to define dependencies that should be compatible with both HTTP and WebSockets, you can define a parameter that takes an\nHTTPConnection\ninstead of a\nRequest\nor a\nWebSocket\n.\nfastapi.WebSocket\n¶\nWebSocket\n(\nscope\n,\nreceive\n,\nsend\n)\nBases:\nHTTPConnection\nSource code in\nstarlette/websockets.py\n27\n28\n29\n30\n31\n32\n33\ndef\n__init__\n(\nself\n,\nscope\n:\nScope\n,\nreceive\n:\nReceive\n,\nsend\n:\nSend\n)\n->\nNone\n:\nsuper\n()\n.\n__init__\n(\nscope\n)\nassert\nscope\n[\n\"type\"\n]\n==\n\"websocket\"\nself\n.\n_receive\n=\nreceive\nself\n.\n_send\n=\nsend\nself\n.\nclient_state\n=\nWebSocketState\n.\nCONNECTING\nself\n.\napplication_state\n=\nWebSocketState\n.\nCONNECTING\nscope\ninstance-attribute\n¶\nscope\n=\nscope\napp\nproperty\n¶\napp\nurl\nproperty\n¶\nurl\nbase_url\nproperty\n¶\nbase_url\nheaders\nproperty\n¶\nheaders\nquery_params\nproperty\n¶\nquery_params\npath_params\nproperty\n¶\npath_params\ncookies\nproperty\n¶\ncookies\nclient\nproperty\n¶\nclient\nstate\nproperty\n¶\nstate\nclient_state\ninstance-attribute\n¶\nclient_state\n=\nCONNECTING\napplication_state\ninstance-attribute\n¶\napplication_state\n=\nCONNECTING\nurl_for\n¶\nurl_for\n(\nname\n,\n/\n,\n**\npath_params\n)\nSource code in\nstarlette/requests.py\n183\n184\n185\n186\n187\n188\ndef\nurl_for\n(\nself\n,\nname\n:\nstr\n,\n/\n,\n**\npath_params\n:\nAny\n)\n->\nURL\n:\nurl_path_provider\n:\nRouter\n|\nStarlette\n|\nNone\n=\nself\n.\nscope\n.\nget\n(\n\"router\"\n)\nor\nself\n.\nscope\n.\nget\n(\n\"app\"\n)\nif\nurl_path_provider\nis\nNone\n:\nraise\nRuntimeError\n(\n\"The `url_for` method can only be used inside a Starlette application or with a router.\"\n)\nurl_path\n=\nurl_path_provider\n.\nurl_path_for\n(\nname\n,\n**\npath_params\n)\nreturn\nurl_path\n.\nmake_absolute_url\n(\nbase_url\n=\nself\n.\nbase_url\n)\nreceive\nasync\n¶\nreceive\n()\nReceive ASGI websocket messages, ensuring valid state transitions.\nSource code in\nstarlette/websockets.py\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\nasync\ndef\nreceive\n(\nself\n)\n->\nMessage\n:\n\"\"\"\nReceive ASGI websocket messages, ensuring valid state transitions.\n\"\"\"\nif\nself\n.\nclient_state\n==\nWebSocketState\n.\nCONNECTING\n:\nmessage\n=\nawait\nself\n.\n_receive\n()\nmessage_type\n=\nmessage\n[\n\"type\"\n]\nif\nmessage_type\n!=\n\"websocket.connect\"\n:\nraise\nRuntimeError\n(\nf\n'Expected ASGI message \"websocket.connect\", but got\n{\nmessage_type\n!r}\n'\n)\nself\n.\nclient_state\n=\nWebSocketState\n.\nCONNECTED\nreturn\nmessage\nelif\nself\n.\nclient_state\n==\nWebSocketState\n.\nCONNECTED\n:\nmessage\n=\nawait\nself\n.\n_receive\n()\nmessage_type\n=\nmessage\n[\n\"type\"\n]\nif\nmessage_type\nnot\nin\n{\n\"websocket.receive\"\n,\n\"websocket.disconnect\"\n}:\nraise\nRuntimeError\n(\nf\n'Expected ASGI message \"websocket.receive\" or \"websocket.disconnect\", but got\n{\nmessage_type\n!r}\n'\n)\nif\nmessage_type\n==\n\"websocket.disconnect\"\n:\nself\n.\nclient_state\n=\nWebSocketState\n.\nDISCONNECTED\nreturn\nmessage\nelse\n:\nraise\nRuntimeError\n(\n'Cannot call \"receive\" once a disconnect message has been received.'\n)\nsend\nasync\n¶\nsend\n(\nmessage\n)\nSend ASGI websocket messages, ensuring valid state transitions.\nSource code in\nstarlette/websockets.py\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\nasync\ndef\nsend\n(\nself\n,\nmessage\n:\nMessage\n)\n->\nNone\n:\n\"\"\"\nSend ASGI websocket messages, ensuring valid state transitions.\n\"\"\"\nif\nself\n.\napplication_state\n==\nWebSocketState\n.\nCONNECTING\n:\nmessage_type\n=\nmessage\n[\n\"type\"\n]\nif\nmessage_type\nnot\nin\n{\n\"websocket.accept\"\n,\n\"websocket.close\"\n,\n\"websocket.http.response.start\"\n}:\nraise\nRuntimeError\n(\n'Expected ASGI message \"websocket.accept\", \"websocket.close\" or \"websocket.http.response.start\", '\nf\n\"but got\n{\nmessage_type\n!r}\n\"\n)\nif\nmessage_type\n==\n\"websocket.close\"\n:\nself\n.\napplication_state\n=\nWebSocketState\n.\nDISCONNECTED\nelif\nmessage_type\n==\n\"websocket.http.response.start\"\n:\nself\n.\napplication_state\n=\nWebSocketState\n.\nRESPONSE\nelse\n:\nself\n.\napplication_state\n=\nWebSocketState\n.\nCONNECTED\nawait\nself\n.\n_send\n(\nmessage\n)\nelif\nself\n.\napplication_state\n==\nWebSocketState\n.\nCONNECTED\n:\nmessage_type\n=\nmessage\n[\n\"type\"\n]\nif\nmessage_type\nnot\nin\n{\n\"websocket.send\"\n,\n\"websocket.close\"\n}:\nraise\nRuntimeError\n(\nf\n'Expected ASGI message \"websocket.send\" or \"websocket.close\", but got\n{\nmessage_type\n!r}\n'\n)\nif\nmessage_type\n==\n\"websocket.close\"\n:\nself\n.\napplication_state\n=\nWebSocketState\n.\nDISCONNECTED\ntry\n:\nawait\nself\n.\n_send\n(\nmessage\n)\nexcept\nOSError\n:\nself\n.\napplication_state\n=\nWebSocketState\n.\nDISCONNECTED\nraise\nWebSocketDisconnect\n(\ncode\n=\n1006\n)\nelif\nself\n.\napplication_state\n==\nWebSocketState\n.\nRESPONSE\n:\nmessage_type\n=\nmessage\n[\n\"type\"\n]\nif\nmessage_type\n!=\n\"websocket.http.response.body\"\n:\nraise\nRuntimeError\n(\nf\n'Expected ASGI message \"websocket.http.response.body\", but got\n{\nmessage_type\n!r}\n'\n)\nif\nnot\nmessage\n.\nget\n(\n\"more_body\"\n,\nFalse\n):\nself\n.\napplication_state\n=\nWebSocketState\n.\nDISCONNECTED\nawait\nself\n.\n_send\n(\nmessage\n)\nelse\n:\nraise\nRuntimeError\n(\n'Cannot call \"send\" once a close message has been sent.'\n)\naccept\nasync\n¶\naccept\n(\nsubprotocol\n=\nNone\n,\nheaders\n=\nNone\n)\nSource code in\nstarlette/websockets.py\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\nasync\ndef\naccept\n(\nself\n,\nsubprotocol\n:\nstr\n|\nNone\n=\nNone\n,\nheaders\n:\nIterable\n[\ntuple\n[\nbytes\n,\nbytes\n]]\n|\nNone\n=\nNone\n,\n)\n->\nNone\n:\nheaders\n=\nheaders\nor\n[]\nif\nself\n.\nclient_state\n==\nWebSocketState\n.\nCONNECTING\n:\n# pragma: no branch\n# If we haven't yet seen the 'connect' message, then wait for it first.\nawait\nself\n.\nreceive\n()\nawait\nself\n.\nsend\n({\n\"type\"\n:\n\"websocket.accept\"\n,\n\"subprotocol\"\n:\nsubprotocol\n,\n\"headers\"\n:\nheaders\n})\nreceive_text\nasync\n¶\nreceive_text\n()\nSource code in\nstarlette/websockets.py\n116\n117\n118\n119\n120\n121\nasync\ndef\nreceive_text\n(\nself\n)\n->\nstr\n:\nif\nself\n.\napplication_state\n!=\nWebSocketState\n.\nCONNECTED\n:\nraise\nRuntimeError\n(\n'WebSocket is not connected. Need to call \"accept\" first.'\n)\nmessage\n=\nawait\nself\n.\nreceive\n()\nself\n.\n_raise_on_disconnect\n(\nmessage\n)\nreturn\ncast\n(\nstr\n,\nmessage\n[\n\"text\"\n])\nreceive_bytes\nasync\n¶\nreceive_bytes\n()\nSource code in\nstarlette/websockets.py\n123\n124\n125\n126\n127\n128\nasync\ndef\nreceive_bytes\n(\nself\n)\n->\nbytes\n:\nif\nself\n.\napplication_state\n!=\nWebSocketState\n.\nCONNECTED\n:\nraise\nRuntimeError\n(\n'WebSocket is not connected. Need to call \"accept\" first.'\n)\nmessage\n=\nawait\nself\n.\nreceive\n()\nself\n.\n_raise_on_disconnect\n(\nmessage\n)\nreturn\ncast\n(\nbytes\n,\nmessage\n[\n\"bytes\"\n])\nreceive_json\nasync\n¶\nreceive_json\n(\nmode\n=\n'text'\n)\nSource code in\nstarlette/websockets.py\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\nasync\ndef\nreceive_json\n(\nself\n,\nmode\n:\nstr\n=\n\"text\"\n)\n->\nAny\n:\nif\nmode\nnot\nin\n{\n\"text\"\n,\n\"binary\"\n}:\nraise\nRuntimeError\n(\n'The \"mode\" argument should be \"text\" or \"binary\".'\n)\nif\nself\n.\napplication_state\n!=\nWebSocketState\n.\nCONNECTED\n:\nraise\nRuntimeError\n(\n'WebSocket is not connected. Need to call \"accept\" first.'\n)\nmessage\n=\nawait\nself\n.\nreceive\n()\nself\n.\n_raise_on_disconnect\n(\nmessage\n)\nif\nmode\n==\n\"text\"\n:\ntext\n=\nmessage\n[\n\"text\"\n]\nelse\n:\ntext\n=\nmessage\n[\n\"bytes\"\n]\n.\ndecode\n(\n\"utf-8\"\n)\nreturn\njson\n.\nloads\n(\ntext\n)\niter_text\nasync\n¶\niter_text\n()\nSource code in\nstarlette/websockets.py\n144\n145\n146\n147\n148\n149\nasync\ndef\niter_text\n(\nself\n)\n->\nAsyncIterator\n[\nstr\n]:\ntry\n:\nwhile\nTrue\n:\nyield\nawait\nself\n.\nreceive_text\n()\nexcept\nWebSocketDisconnect\n:\npass\niter_bytes\nasync\n¶\niter_bytes\n()\nSource code in\nstarlette/websockets.py\n151\n152\n153\n154\n155\n156\nasync\ndef\niter_bytes\n(\nself\n)\n->\nAsyncIterator\n[\nbytes\n]:\ntry\n:\nwhile\nTrue\n:\nyield\nawait\nself\n.\nreceive_bytes\n()\nexcept\nWebSocketDisconnect\n:\npass\niter_json\nasync\n¶\niter_json\n()\nSource code in\nstarlette/websockets.py\n158\n159\n160\n161\n162\n163\nasync\ndef\niter_json\n(\nself\n)\n->\nAsyncIterator\n[\nAny\n]:\ntry\n:\nwhile\nTrue\n:\nyield\nawait\nself\n.\nreceive_json\n()\nexcept\nWebSocketDisconnect\n:\npass\nsend_text\nasync\n¶\nsend_text\n(\ndata\n)\nSource code in\nstarlette/websockets.py\n165\n166\nasync\ndef\nsend_text\n(\nself\n,\ndata\n:\nstr\n)\n->\nNone\n:\nawait\nself\n.\nsend\n({\n\"type\"\n:\n\"websocket.send\"\n,\n\"text\"\n:\ndata\n})\nsend_bytes\nasync\n¶\nsend_bytes\n(\ndata\n)\nSource code in\nstarlette/websockets.py\n168\n169\nasync\ndef\nsend_bytes\n(\nself\n,\ndata\n:\nbytes\n)\n->\nNone\n:\nawait\nself\n.\nsend\n({\n\"type\"\n:\n\"websocket.send\"\n,\n\"bytes\"\n:\ndata\n})\nsend_json\nasync\n¶\nsend_json\n(\ndata\n,\nmode\n=\n'text'\n)\nSource code in\nstarlette/websockets.py\n171\n172\n173\n174\n175\n176\n177\n178\nasync\ndef\nsend_json\n(\nself\n,\ndata\n:\nAny\n,\nmode\n:\nstr\n=\n\"text\"\n)\n->\nNone\n:\nif\nmode\nnot\nin\n{\n\"text\"\n,\n\"binary\"\n}:\nraise\nRuntimeError\n(\n'The \"mode\" argument should be \"text\" or \"binary\".'\n)\ntext\n=\njson\n.\ndumps\n(\ndata\n,\nseparators\n=\n(\n\",\"\n,\n\":\"\n),\nensure_ascii\n=\nFalse\n)\nif\nmode\n==\n\"text\"\n:\nawait\nself\n.\nsend\n({\n\"type\"\n:\n\"websocket.send\"\n,\n\"text\"\n:\ntext\n})\nelse\n:\nawait\nself\n.\nsend\n({\n\"type\"\n:\n\"websocket.send\"\n,\n\"bytes\"\n:\ntext\n.\nencode\n(\n\"utf-8\"\n)})\nclose\nasync\n¶\nclose\n(\ncode\n=\n1000\n,\nreason\n=\nNone\n)\nSource code in\nstarlette/websockets.py\n180\n181\nasync\ndef\nclose\n(\nself\n,\ncode\n:\nint\n=\n1000\n,\nreason\n:\nstr\n|\nNone\n=\nNone\n)\n->\nNone\n:\nawait\nself\n.\nsend\n({\n\"type\"\n:\n\"websocket.close\"\n,\n\"code\"\n:\ncode\n,\n\"reason\"\n:\nreason\nor\n\"\"\n})\nWhen a client disconnects, a\nWebSocketDisconnect\nexception is raised, you can catch it.\nYou can import it directly form\nfastapi\n:\nfrom\nfastapi\nimport\nWebSocketDisconnect\nfastapi.WebSocketDisconnect\n¶\nWebSocketDisconnect\n(\ncode\n=\n1000\n,\nreason\n=\nNone\n)\nBases:\nException\nSource code in\nstarlette/websockets.py\n21\n22\n23\ndef\n__init__\n(\nself\n,\ncode\n:\nint\n=\n1000\n,\nreason\n:\nstr\n|\nNone\n=\nNone\n)\n->\nNone\n:\nself\n.\ncode\n=\ncode\nself\n.\nreason\n=\nreason\nor\n\"\"\ncode\ninstance-attribute\n¶\ncode\n=\ncode\nreason\ninstance-attribute\n¶\nreason\n=\nreason\nor\n''\nWebSockets - additional classes\n¶\nAdditional classes for handling WebSockets.\nProvided directly by Starlette, but you can import it from\nfastapi\n:\nfrom\nfastapi.websockets\nimport\nWebSocketDisconnect\n,\nWebSocketState\nfastapi.websockets.WebSocketDisconnect\n¶\nWebSocketDisconnect\n(\ncode\n=\n1000\n,\nreason\n=\nNone\n)\nBases:\nException\nSource code in\nstarlette/websockets.py\n21\n22\n23\ndef\n__init__\n(\nself\n,\ncode\n:\nint\n=\n1000\n,\nreason\n:\nstr\n|\nNone\n=\nNone\n)\n->\nNone\n:\nself\n.\ncode\n=\ncode\nself\n.\nreason\n=\nreason\nor\n\"\"\ncode\ninstance-attribute\n¶\ncode\n=\ncode\nreason\ninstance-attribute\n¶\nreason\n=\nreason\nor\n''\nfastapi.websockets.WebSocketState\n¶\nBases:\nEnum\nCONNECTING\nclass-attribute\ninstance-attribute\n¶\nCONNECTING\n=\n0\nCONNECTED\nclass-attribute\ninstance-attribute\n¶\nCONNECTED\n=\n1\nDISCONNECTED\nclass-attribute\ninstance-attribute\n¶\nDISCONNECTED\n=\n2\nRESPONSE\nclass-attribute\ninstance-attribute\n¶\nRESPONSE\n=\n3\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/deployment/docker/",
    "title": "FastAPI in Containers - Docker¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nFastAPI in Containers - Docker\nTable of contents\nWhat is a Container\nWhat is a Container Image\nContainer Images\nContainers and Processes\nBuild a Docker Image for FastAPI\nPackage Requirements\nCreate the\nFastAPI\nCode\nDockerfile\nUse\nCMD\n- Exec Form\nDirectory Structure\nBehind a TLS Termination Proxy\nDocker Cache\nBuild the Docker Image\nStart the Docker Container\nCheck it\nInteractive API docs\nAlternative API docs\nBuild a Docker Image with a Single-File FastAPI\nDeployment Concepts\nHTTPS\nRunning on Startup and Restarts\nReplication - Number of Processes\nLoad Balancer\nOne Load Balancer - Multiple Worker Containers\nOne Process per Container\nContainers with Multiple Processes and Special Cases\nA Simple App\nDocker Compose\nMemory\nPrevious Steps Before Starting and Containers\nMultiple Containers\nSingle Container\nBase Docker Image\nDeploy the Container Image\nDocker Image with\nuv\nRecap\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nWhat is a Container\nWhat is a Container Image\nContainer Images\nContainers and Processes\nBuild a Docker Image for FastAPI\nPackage Requirements\nCreate the\nFastAPI\nCode\nDockerfile\nUse\nCMD\n- Exec Form\nDirectory Structure\nBehind a TLS Termination Proxy\nDocker Cache\nBuild the Docker Image\nStart the Docker Container\nCheck it\nInteractive API docs\nAlternative API docs\nBuild a Docker Image with a Single-File FastAPI\nDeployment Concepts\nHTTPS\nRunning on Startup and Restarts\nReplication - Number of Processes\nLoad Balancer\nOne Load Balancer - Multiple Worker Containers\nOne Process per Container\nContainers with Multiple Processes and Special Cases\nA Simple App\nDocker Compose\nMemory\nPrevious Steps Before Starting and Containers\nMultiple Containers\nSingle Container\nBase Docker Image\nDeploy the Container Image\nDocker Image with\nuv\nRecap\nFastAPI\nLearn\nDeployment\nFastAPI in Containers - Docker\n¶\nWhen deploying FastAPI applications a common approach is to build a\nLinux container image\n. It's normally done using\nDocker\n. You can then deploy that container image in one of a few possible ways.\nUsing Linux containers has several advantages including\nsecurity\n,\nreplicability\n,\nsimplicity\n, and others.\nTip\nIn a hurry and already know this stuff? Jump to the\nDockerfile\nbelow 👇\n.\nDockerfile Preview 👀\nFROM\npython:3.9\nWORKDIR\n/code\nCOPY\n./requirements.txt\n/code/requirements.txt\nRUN\npip\ninstall\n--no-cache-dir\n--upgrade\n-r\n/code/requirements.txt\nCOPY\n./app\n/code/app\nCMD\n[\n\"fastapi\"\n,\n\"run\"\n,\n\"app/main.py\"\n,\n\"--port\"\n,\n\"80\"\n]\n# If running behind a proxy like Nginx or Traefik add --proxy-headers\n# CMD [\"fastapi\", \"run\", \"app/main.py\", \"--port\", \"80\", \"--proxy-headers\"]\nWhat is a Container\n¶\nContainers (mainly Linux containers) are a very\nlightweight\nway to package applications including all their dependencies and necessary files while keeping them isolated from other containers (other applications or components) in the same system.\nLinux containers run using the same Linux kernel of the host (machine, virtual machine, cloud server, etc). This just means that they are very lightweight (compared to full virtual machines emulating an entire operating system).\nThis way, containers consume\nlittle resources\n, an amount comparable to running the processes directly (a virtual machine would consume much more).\nContainers also have their own\nisolated\nrunning processes (commonly just one process), file system, and network, simplifying deployment, security, development, etc.\nWhat is a Container Image\n¶\nA\ncontainer\nis run from a\ncontainer image\n.\nA container image is a\nstatic\nversion of all the files, environment variables, and the default command/program that should be present in a container.\nStatic\nhere means that the container\nimage\nis not running, it's not being executed, it's only the packaged files and metadata.\nIn contrast to a \"\ncontainer image\n\" that is the stored static contents, a \"\ncontainer\n\" normally refers to the running instance, the thing that is being\nexecuted\n.\nWhen the\ncontainer\nis started and running (started from a\ncontainer image\n) it could create or change files, environment variables, etc. Those changes will exist only in that container, but would not persist in the underlying container image (would not be saved to disk).\nA container image is comparable to the\nprogram\nfile and contents, e.g.\npython\nand some file\nmain.py\n.\nAnd the\ncontainer\nitself (in contrast to the\ncontainer image\n) is the actual running instance of the image, comparable to a\nprocess\n. In fact, a container is running only when it has a\nprocess running\n(and normally it's only a single process). The container stops when there's no process running in it.\nContainer Images\n¶\nDocker has been one of the main tools to create and manage\ncontainer images\nand\ncontainers\n.\nAnd there's a public\nDocker Hub\nwith pre-made\nofficial container images\nfor many tools, environments, databases, and applications.\nFor example, there's an official\nPython Image\n.\nAnd there are many other images for different things like databases, for example for:\nPostgreSQL\nMySQL\nMongoDB\nRedis\n, etc.\nBy using a pre-made container image it's very easy to\ncombine\nand use different tools. For example, to try out a new database. In most cases, you can use the\nofficial images\n, and just configure them with environment variables.\nThat way, in many cases you can learn about containers and Docker and reuse that knowledge with many different tools and components.\nSo, you would run\nmultiple containers\nwith different things, like a database, a Python application, a web server with a React frontend application, and connect them together via their internal network.\nAll the container management systems (like Docker or Kubernetes) have these networking features integrated into them.\nContainers and Processes\n¶\nA\ncontainer image\nnormally includes in its metadata the default program or command that should be run when the\ncontainer\nis started and the parameters to be passed to that program. Very similar to what would be if it was in the command line.\nWhen a\ncontainer\nis started, it will run that command/program (although you can override it and make it run a different command/program).\nA container is running as long as the\nmain process\n(command or program) is running.\nA container normally has a\nsingle process\n, but it's also possible to start subprocesses from the main process, and that way you will have\nmultiple processes\nin the same container.\nBut it's not possible to have a running container without\nat least one running process\n. If the main process stops, the container stops.\nBuild a Docker Image for FastAPI\n¶\nOkay, let's build something now! 🚀\nI'll show you how to build a\nDocker image\nfor FastAPI\nfrom scratch\n, based on the\nofficial Python\nimage.\nThis is what you would want to do in\nmost cases\n, for example:\nUsing\nKubernetes\nor similar tools\nWhen running on a\nRaspberry Pi\nUsing a cloud service that would run a container image for you, etc.\nPackage Requirements\n¶\nYou would normally have the\npackage requirements\nfor your application in some file.\nIt would depend mainly on the tool you use to\ninstall\nthose requirements.\nThe most common way to do it is to have a file\nrequirements.txt\nwith the package names and their versions, one per line.\nYou would of course use the same ideas you read in\nAbout FastAPI versions\nto set the ranges of versions.\nFor example, your\nrequirements.txt\ncould look like:\nfastapi[standard]>=0.113.0,<0.114.0\npydantic>=2.7.0,<3.0.0\nAnd you would normally install those package dependencies with\npip\n, for example:\n$\npip\ninstall\n-r\nrequirements.txt\n---> 100%\nSuccessfully installed fastapi pydantic\nInfo\nThere are other formats and tools to define and install package dependencies.\nCreate the\nFastAPI\nCode\n¶\nCreate an\napp\ndirectory and enter it.\nCreate an empty file\n__init__.py\n.\nCreate a\nmain.py\nfile with:\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/\"\n)\ndef\nread_root\n():\nreturn\n{\n\"Hello\"\n:\n\"World\"\n}\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\ndef\nread_item\n(\nitem_id\n:\nint\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"q\"\n:\nq\n}\nDockerfile\n¶\nNow in the same project directory create a file\nDockerfile\nwith:\n# (1)!\nFROM\npython:3.9\n# (2)!\nWORKDIR\n/code\n# (3)!\nCOPY\n./requirements.txt\n/code/requirements.txt\n# (4)!\nRUN\npip\ninstall\n--no-cache-dir\n--upgrade\n-r\n/code/requirements.txt\n# (5)!\nCOPY\n./app\n/code/app\n# (6)!\nCMD\n[\n\"fastapi\"\n,\n\"run\"\n,\n\"app/main.py\"\n,\n\"--port\"\n,\n\"80\"\n]\nStart from the official Python base image.\nSet the current working directory to\n/code\n.\nThis is where we'll put the\nrequirements.txt\nfile and the\napp\ndirectory.\nCopy the file with the requirements to the\n/code\ndirectory.\nCopy\nonly\nthe file with the requirements first, not the rest of the code.\nAs this file\ndoesn't change often\n, Docker will detect it and use the\ncache\nfor this step, enabling the cache for the next step too.\nInstall the package dependencies in the requirements file.\nThe\n--no-cache-dir\noption tells\npip\nto not save the downloaded packages locally, as that is only if\npip\nwas going to be run again to install the same packages, but that's not the case when working with containers.\nNote\nThe\n--no-cache-dir\nis only related to\npip\n, it has nothing to do with Docker or containers.\nThe\n--upgrade\noption tells\npip\nto upgrade the packages if they are already installed.\nBecause the previous step copying the file could be detected by the\nDocker cache\n, this step will also\nuse the Docker cache\nwhen available.\nUsing the cache in this step will\nsave\nyou a lot of\ntime\nwhen building the image again and again during development, instead of\ndownloading and installing\nall the dependencies\nevery time\n.\nCopy the\n./app\ndirectory inside the\n/code\ndirectory.\nAs this has all the code which is what\nchanges most frequently\nthe Docker\ncache\nwon't be used for this or any\nfollowing steps\neasily.\nSo, it's important to put this\nnear the end\nof the\nDockerfile\n, to optimize the container image build times.\nSet the\ncommand\nto use\nfastapi run\n, which uses Uvicorn underneath.\nCMD\ntakes a list of strings, each of these strings is what you would type in the command line separated by spaces.\nThis command will be run from the\ncurrent working directory\n, the same\n/code\ndirectory you set above with\nWORKDIR /code\n.\nTip\nReview what each line does by clicking each number bubble in the code. 👆\nWarning\nMake sure to\nalways\nuse the\nexec form\nof the\nCMD\ninstruction, as explained below.\nUse\nCMD\n- Exec Form\n¶\nThe\nCMD\nDocker instruction can be written using two forms:\n✅\nExec\nform:\n# ✅ Do this\nCMD\n[\n\"fastapi\"\n,\n\"run\"\n,\n\"app/main.py\"\n,\n\"--port\"\n,\n\"80\"\n]\n⛔️\nShell\nform:\n# ⛔️ Don't do this\nCMD\nfastapi\nrun\napp/main.py\n--port\n80\nMake sure to always use the\nexec\nform to ensure that FastAPI can shutdown gracefully and\nlifespan events\nare triggered.\nYou can read more about it in the\nDocker docs for shell and exec form\n.\nThis can be quite noticeable when using\ndocker compose\n. See this Docker Compose FAQ section for more technical details:\nWhy do my services take 10 seconds to recreate or stop?\n.\nDirectory Structure\n¶\nYou should now have a directory structure like:\n.\n├── app\n│   ├── __init__.py\n│   └── main.py\n├── Dockerfile\n└── requirements.txt\nBehind a TLS Termination Proxy\n¶\nIf you are running your container behind a TLS Termination Proxy (load balancer) like Nginx or Traefik, add the option\n--proxy-headers\n, this will tell Uvicorn (through the FastAPI CLI) to trust the headers sent by that proxy telling it that the application is running behind HTTPS, etc.\nCMD\n[\n\"fastapi\"\n,\n\"run\"\n,\n\"app/main.py\"\n,\n\"--proxy-headers\"\n,\n\"--port\"\n,\n\"80\"\n]\nDocker Cache\n¶\nThere's an important trick in this\nDockerfile\n, we first copy the\nfile with the dependencies alone\n, not the rest of the code. Let me tell you why is that.\nCOPY\n./requirements.txt\n/code/requirements.txt\nDocker and other tools\nbuild\nthese container images\nincrementally\n, adding\none layer on top of the other\n, starting from the top of the\nDockerfile\nand adding any files created by each of the instructions of the\nDockerfile\n.\nDocker and similar tools also use an\ninternal cache\nwhen building the image, if a file hasn't changed since the last time building the container image, then it will\nreuse the same layer\ncreated the last time, instead of copying the file again and creating a new layer from scratch.\nJust avoiding the copy of files doesn't necessarily improve things too much, but because it used the cache for that step, it can\nuse the cache for the next step\n. For example, it could use the cache for the instruction that installs dependencies with:\nRUN\npip\ninstall\n--no-cache-dir\n--upgrade\n-r\n/code/requirements.txt\nThe file with the package requirements\nwon't change frequently\n. So, by copying only that file, Docker will be able to\nuse the cache\nfor that step.\nAnd then, Docker will be able to\nuse the cache for the next step\nthat downloads and install those dependencies. And here's where we\nsave a lot of time\n. ✨ ...and avoid boredom waiting. 😪😆\nDownloading and installing the package dependencies\ncould take minutes\n, but using the\ncache\nwould\ntake seconds\nat most.\nAnd as you would be building the container image again and again during development to check that your code changes are working, there's a lot of accumulated time this would save.\nThen, near the end of the\nDockerfile\n, we copy all the code. As this is what\nchanges most frequently\n, we put it near the end, because almost always, anything after this step will not be able to use the cache.\nCOPY\n./app\n/code/app\nBuild the Docker Image\n¶\nNow that all the files are in place, let's build the container image.\nGo to the project directory (in where your\nDockerfile\nis, containing your\napp\ndirectory).\nBuild your FastAPI image:\n$\ndocker\nbuild\n-t\nmyimage\n.\n---> 100%\nTip\nNotice the\n.\nat the end, it's equivalent to\n./\n, it tells Docker the directory to use to build the container image.\nIn this case, it's the same current directory (\n.\n).\nStart the Docker Container\n¶\nRun a container based on your image:\n$\ndocker\nrun\n-d\n--name\nmycontainer\n-p\n80\n:80\nmyimage\nCheck it\n¶\nYou should be able to check it in your Docker container's URL, for example:\nhttp://192.168.99.100/items/5?q=somequery\nor\nhttp://127.0.0.1/items/5?q=somequery\n(or equivalent, using your Docker host).\nYou will see something like:\n{\n\"item_id\"\n:\n5\n,\n\"q\"\n:\n\"somequery\"\n}\nInteractive API docs\n¶\nNow you can go to\nhttp://192.168.99.100/docs\nor\nhttp://127.0.0.1/docs\n(or equivalent, using your Docker host).\nYou will see the automatic interactive API documentation (provided by\nSwagger UI\n):\nAlternative API docs\n¶\nAnd you can also go to\nhttp://192.168.99.100/redoc\nor\nhttp://127.0.0.1/redoc\n(or equivalent, using your Docker host).\nYou will see the alternative automatic documentation (provided by\nReDoc\n):\nBuild a Docker Image with a Single-File FastAPI\n¶\nIf your FastAPI is a single file, for example,\nmain.py\nwithout an\n./app\ndirectory, your file structure could look like this:\n.\n├── Dockerfile\n├── main.py\n└── requirements.txt\nThen you would just have to change the corresponding paths to copy the file inside the\nDockerfile\n:\nFROM\npython:3.9\nWORKDIR\n/code\nCOPY\n./requirements.txt\n/code/requirements.txt\nRUN\npip\ninstall\n--no-cache-dir\n--upgrade\n-r\n/code/requirements.txt\n# (1)!\nCOPY\n./main.py\n/code/\n# (2)!\nCMD\n[\n\"fastapi\"\n,\n\"run\"\n,\n\"main.py\"\n,\n\"--port\"\n,\n\"80\"\n]\nCopy the\nmain.py\nfile to the\n/code\ndirectory directly (without any\n./app\ndirectory).\nUse\nfastapi run\nto serve your application in the single file\nmain.py\n.\nWhen you pass the file to\nfastapi run\nit will detect automatically that it is a single file and not part of a package and will know how to import it and serve your FastAPI app. 😎\nDeployment Concepts\n¶\nLet's talk again about some of the same\nDeployment Concepts\nin terms of containers.\nContainers are mainly a tool to simplify the process of\nbuilding and deploying\nan application, but they don't enforce a particular approach to handle these\ndeployment concepts\n, and there are several possible strategies.\nThe\ngood news\nis that with each different strategy there's a way to cover all of the deployment concepts. 🎉\nLet's review these\ndeployment concepts\nin terms of containers:\nHTTPS\nRunning on startup\nRestarts\nReplication (the number of processes running)\nMemory\nPrevious steps before starting\nHTTPS\n¶\nIf we focus just on the\ncontainer image\nfor a FastAPI application (and later the running\ncontainer\n), HTTPS normally would be handled\nexternally\nby another tool.\nIt could be another container, for example with\nTraefik\n, handling\nHTTPS\nand\nautomatic\nacquisition of\ncertificates\n.\nTip\nTraefik has integrations with Docker, Kubernetes, and others, so it's very easy to set up and configure HTTPS for your containers with it.\nAlternatively, HTTPS could be handled by a cloud provider as one of their services (while still running the application in a container).\nRunning on Startup and Restarts\n¶\nThere is normally another tool in charge of\nstarting and running\nyour container.\nIt could be\nDocker\ndirectly,\nDocker Compose\n,\nKubernetes\n, a\ncloud service\n, etc.\nIn most (or all) cases, there's a simple option to enable running the container on startup and enabling restarts on failures. For example, in Docker, it's the command line option\n--restart\n.\nWithout using containers, making applications run on startup and with restarts can be cumbersome and difficult. But when\nworking with containers\nin most cases that functionality is included by default. ✨\nReplication - Number of Processes\n¶\nIf you have a\ncluster\nof machines with\nKubernetes\n, Docker Swarm Mode, Nomad, or another similar complex system to manage distributed containers on multiple machines, then you will probably want to\nhandle replication\nat the\ncluster level\ninstead of using a\nprocess manager\n(like Uvicorn with workers) in each container.\nOne of those distributed container management systems like Kubernetes normally has some integrated way of handling\nreplication of containers\nwhile still supporting\nload balancing\nfor the incoming requests. All at the\ncluster level\n.\nIn those cases, you would probably want to build a\nDocker image from scratch\nas\nexplained above\n, installing your dependencies, and running\na single Uvicorn process\ninstead of using multiple Uvicorn workers.\nLoad Balancer\n¶\nWhen using containers, you would normally have some component\nlistening on the main port\n. It could possibly be another container that is also a\nTLS Termination Proxy\nto handle\nHTTPS\nor some similar tool.\nAs this component would take the\nload\nof requests and distribute that among the workers in a (hopefully)\nbalanced\nway, it is also commonly called a\nLoad Balancer\n.\nTip\nThe same\nTLS Termination Proxy\ncomponent used for HTTPS would probably also be a\nLoad Balancer\n.\nAnd when working with containers, the same system you use to start and manage them would already have internal tools to transmit the\nnetwork communication\n(e.g. HTTP requests) from that\nload balancer\n(that could also be a\nTLS Termination Proxy\n) to the container(s) with your app.\nOne Load Balancer - Multiple Worker Containers\n¶\nWhen working with\nKubernetes\nor similar distributed container management systems, using their internal networking mechanisms would allow the single\nload balancer\nthat is listening on the main\nport\nto transmit communication (requests) to possibly\nmultiple containers\nrunning your app.\nEach of these containers running your app would normally have\njust one process\n(e.g. a Uvicorn process running your FastAPI application). They would all be\nidentical containers\n, running the same thing, but each with its own process, memory, etc. That way you would take advantage of\nparallelization\nin\ndifferent cores\nof the CPU, or even in\ndifferent machines\n.\nAnd the distributed container system with the\nload balancer\nwould\ndistribute the requests\nto each one of the containers with your app\nin turns\n. So, each request could be handled by one of the multiple\nreplicated containers\nrunning your app.\nAnd normally this\nload balancer\nwould be able to handle requests that go to\nother\napps in your cluster (e.g. to a different domain, or under a different URL path prefix), and would transmit that communication to the right containers for\nthat other\napplication running in your cluster.\nOne Process per Container\n¶\nIn this type of scenario, you probably would want to have\na single (Uvicorn) process per container\n, as you would already be handling replication at the cluster level.\nSo, in this case, you\nwould not\nwant to have a multiple workers in the container, for example with the\n--workers\ncommand line option. You would want to have just a\nsingle Uvicorn process\nper container (but probably multiple containers).\nHaving another process manager inside the container (as would be with multiple workers) would only add\nunnecessary complexity\nthat you are most probably already taking care of with your cluster system.\nContainers with Multiple Processes and Special Cases\n¶\nOf course, there are\nspecial cases\nwhere you could want to have\na container\nwith several\nUvicorn worker processes\ninside.\nIn those cases, you can use the\n--workers\ncommand line option to set the number of workers that you want to run:\nFROM\npython:3.9\nWORKDIR\n/code\nCOPY\n./requirements.txt\n/code/requirements.txt\nRUN\npip\ninstall\n--no-cache-dir\n--upgrade\n-r\n/code/requirements.txt\nCOPY\n./app\n/code/app\n# (1)!\nCMD\n[\n\"fastapi\"\n,\n\"run\"\n,\n\"app/main.py\"\n,\n\"--port\"\n,\n\"80\"\n,\n\"--workers\"\n,\n\"4\"\n]\nHere we use the\n--workers\ncommand line option to set the number of workers to 4.\nHere are some examples of when that could make sense:\nA Simple App\n¶\nYou could want a process manager in the container if your application is\nsimple enough\nthat can run it on a\nsingle server\n, not a cluster.\nDocker Compose\n¶\nYou could be deploying to a\nsingle server\n(not a cluster) with\nDocker Compose\n, so you wouldn't have an easy way to manage replication of containers (with Docker Compose) while preserving the shared network and\nload balancing\n.\nThen you could want to have\na single container\nwith a\nprocess manager\nstarting\nseveral worker processes\ninside.\nThe main point is,\nnone\nof these are\nrules written in stone\nthat you have to blindly follow. You can use these ideas to\nevaluate your own use case\nand decide what is the best approach for your system, checking out how to manage the concepts of:\nSecurity - HTTPS\nRunning on startup\nRestarts\nReplication (the number of processes running)\nMemory\nPrevious steps before starting\nMemory\n¶\nIf you run\na single process per container\nyou will have a more or less well-defined, stable, and limited amount of memory consumed by each of those containers (more than one if they are replicated).\nAnd then you can set those same memory limits and requirements in your configurations for your container management system (for example in\nKubernetes\n). That way it will be able to\nreplicate the containers\nin the\navailable machines\ntaking into account the amount of memory needed by them, and the amount available in the machines in the cluster.\nIf your application is\nsimple\n, this will probably\nnot be a problem\n, and you might not need to specify hard memory limits. But if you are\nusing a lot of memory\n(for example with\nmachine learning\nmodels), you should check how much memory you are consuming and adjust the\nnumber of containers\nthat runs in\neach machine\n(and maybe add more machines to your cluster).\nIf you run\nmultiple processes per container\nyou will have to make sure that the number of processes started doesn't\nconsume more memory\nthan what is available.\nPrevious Steps Before Starting and Containers\n¶\nIf you are using containers (e.g. Docker, Kubernetes), then there are two main approaches you can use.\nMultiple Containers\n¶\nIf you have\nmultiple containers\n, probably each one running a\nsingle process\n(for example, in a\nKubernetes\ncluster), then you would probably want to have a\nseparate container\ndoing the work of the\nprevious steps\nin a single container, running a single process,\nbefore\nrunning the replicated worker containers.\nInfo\nIf you are using Kubernetes, this would probably be an\nInit Container\n.\nIf in your use case there's no problem in running those previous steps\nmultiple times in parallel\n(for example if you are not running database migrations, but just checking if the database is ready yet), then you could also just put them in each container right before starting the main process.\nSingle Container\n¶\nIf you have a simple setup, with a\nsingle container\nthat then starts multiple\nworker processes\n(or also just one process), then you could run those previous steps in the same container, right before starting the process with the app.\nBase Docker Image\n¶\nThere used to be an official FastAPI Docker image:\ntiangolo/uvicorn-gunicorn-fastapi\n. But it is now deprecated. ⛔️\nYou should probably\nnot\nuse this base Docker image (or any other similar one).\nIf you are using\nKubernetes\n(or others) and you are already setting\nreplication\nat the cluster level, with multiple\ncontainers\n. In those cases, you are better off\nbuilding an image from scratch\nas described above:\nBuild a Docker Image for FastAPI\n.\nAnd if you need to have multiple workers, you can simply use the\n--workers\ncommand line option.\nTechnical Details\nThe Docker image was created when Uvicorn didn't support managing and restarting dead workers, so it was needed to use Gunicorn with Uvicorn, which added quite some complexity, just to have Gunicorn manage and restart the Uvicorn worker processes.\nBut now that Uvicorn (and the\nfastapi\ncommand) support using\n--workers\n, there's no reason to use a base Docker image instead of building your own (it's pretty much the same amount of code 😅).\nDeploy the Container Image\n¶\nAfter having a Container (Docker) Image there are several ways to deploy it.\nFor example:\nWith\nDocker Compose\nin a single server\nWith a\nKubernetes\ncluster\nWith a Docker Swarm Mode cluster\nWith another tool like Nomad\nWith a cloud service that takes your container image and deploys it\nDocker Image with\nuv\n¶\nIf you are using\nuv\nto install and manage your project, you can follow their\nuv Docker guide\n.\nRecap\n¶\nUsing container systems (e.g. with\nDocker\nand\nKubernetes\n) it becomes fairly straightforward to handle all the\ndeployment concepts\n:\nHTTPS\nRunning on startup\nRestarts\nReplication (the number of processes running)\nMemory\nPrevious steps before starting\nIn most cases, you probably won't want to use any base image, and instead\nbuild a container image from scratch\nbased on the official Python Docker image.\nTaking care of the\norder\nof instructions in the\nDockerfile\nand the\nDocker cache\nyou can\nminimize build times\n, to maximize your productivity (and avoid boredom). 😎\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/how-to/extending-openapi/",
    "title": "Extending OpenAPI¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nExtending OpenAPI\nTable of contents\nThe normal process\nOverriding the defaults\nNormal\nFastAPI\nGenerate the OpenAPI schema\nModify the OpenAPI schema\nCache the OpenAPI schema\nOverride the method\nCheck it\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nThe normal process\nOverriding the defaults\nNormal\nFastAPI\nGenerate the OpenAPI schema\nModify the OpenAPI schema\nCache the OpenAPI schema\nOverride the method\nCheck it\nFastAPI\nLearn\nHow To - Recipes\nExtending OpenAPI\n¶\nThere are some cases where you might need to modify the generated OpenAPI schema.\nIn this section you will see how.\nThe normal process\n¶\nThe normal (default) process, is as follows.\nA\nFastAPI\napplication (instance) has an\n.openapi()\nmethod that is expected to return the OpenAPI schema.\nAs part of the application object creation, a\npath operation\nfor\n/openapi.json\n(or for whatever you set your\nopenapi_url\n) is registered.\nIt just returns a JSON response with the result of the application's\n.openapi()\nmethod.\nBy default, what the method\n.openapi()\ndoes is check the property\n.openapi_schema\nto see if it has contents and return them.\nIf it doesn't, it generates them using the utility function at\nfastapi.openapi.utils.get_openapi\n.\nAnd that function\nget_openapi()\nreceives as parameters:\ntitle\n: The OpenAPI title, shown in the docs.\nversion\n: The version of your API, e.g.\n2.5.0\n.\nopenapi_version\n: The version of the OpenAPI specification used. By default, the latest:\n3.1.0\n.\nsummary\n: A short summary of the API.\ndescription\n: The description of your API, this can include markdown and will be shown in the docs.\nroutes\n: A list of routes, these are each of the registered\npath operations\n. They are taken from\napp.routes\n.\nInfo\nThe parameter\nsummary\nis available in OpenAPI 3.1.0 and above, supported by FastAPI 0.99.0 and above.\nOverriding the defaults\n¶\nUsing the information above, you can use the same utility function to generate the OpenAPI schema and override each part that you need.\nFor example, let's add\nReDoc's OpenAPI extension to include a custom logo\n.\nNormal\nFastAPI\n¶\nFirst, write all your\nFastAPI\napplication as normally:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.openapi.utils\nimport\nget_openapi\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Foo\"\n}]\ndef\ncustom_openapi\n():\nif\napp\n.\nopenapi_schema\n:\nreturn\napp\n.\nopenapi_schema\nopenapi_schema\n=\nget_openapi\n(\ntitle\n=\n\"Custom title\"\n,\nversion\n=\n\"2.5.0\"\n,\nsummary\n=\n\"This is a very custom OpenAPI schema\"\n,\ndescription\n=\n\"Here's a longer description of the custom **OpenAPI** schema\"\n,\nroutes\n=\napp\n.\nroutes\n,\n)\nopenapi_schema\n[\n\"info\"\n][\n\"x-logo\"\n]\n=\n{\n\"url\"\n:\n\"https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png\"\n}\napp\n.\nopenapi_schema\n=\nopenapi_schema\nreturn\napp\n.\nopenapi_schema\napp\n.\nopenapi\n=\ncustom_openapi\nGenerate the OpenAPI schema\n¶\nThen, use the same utility function to generate the OpenAPI schema, inside a\ncustom_openapi()\nfunction:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.openapi.utils\nimport\nget_openapi\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Foo\"\n}]\ndef\ncustom_openapi\n():\nif\napp\n.\nopenapi_schema\n:\nreturn\napp\n.\nopenapi_schema\nopenapi_schema\n=\nget_openapi\n(\ntitle\n=\n\"Custom title\"\n,\nversion\n=\n\"2.5.0\"\n,\nsummary\n=\n\"This is a very custom OpenAPI schema\"\n,\ndescription\n=\n\"Here's a longer description of the custom **OpenAPI** schema\"\n,\nroutes\n=\napp\n.\nroutes\n,\n)\nopenapi_schema\n[\n\"info\"\n][\n\"x-logo\"\n]\n=\n{\n\"url\"\n:\n\"https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png\"\n}\napp\n.\nopenapi_schema\n=\nopenapi_schema\nreturn\napp\n.\nopenapi_schema\napp\n.\nopenapi\n=\ncustom_openapi\nModify the OpenAPI schema\n¶\nNow you can add the ReDoc extension, adding a custom\nx-logo\nto the\ninfo\n\"object\" in the OpenAPI schema:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.openapi.utils\nimport\nget_openapi\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Foo\"\n}]\ndef\ncustom_openapi\n():\nif\napp\n.\nopenapi_schema\n:\nreturn\napp\n.\nopenapi_schema\nopenapi_schema\n=\nget_openapi\n(\ntitle\n=\n\"Custom title\"\n,\nversion\n=\n\"2.5.0\"\n,\nsummary\n=\n\"This is a very custom OpenAPI schema\"\n,\ndescription\n=\n\"Here's a longer description of the custom **OpenAPI** schema\"\n,\nroutes\n=\napp\n.\nroutes\n,\n)\nopenapi_schema\n[\n\"info\"\n][\n\"x-logo\"\n]\n=\n{\n\"url\"\n:\n\"https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png\"\n}\napp\n.\nopenapi_schema\n=\nopenapi_schema\nreturn\napp\n.\nopenapi_schema\napp\n.\nopenapi\n=\ncustom_openapi\nCache the OpenAPI schema\n¶\nYou can use the property\n.openapi_schema\nas a \"cache\", to store your generated schema.\nThat way, your application won't have to generate the schema every time a user opens your API docs.\nIt will be generated only once, and then the same cached schema will be used for the next requests.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.openapi.utils\nimport\nget_openapi\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Foo\"\n}]\ndef\ncustom_openapi\n():\nif\napp\n.\nopenapi_schema\n:\nreturn\napp\n.\nopenapi_schema\nopenapi_schema\n=\nget_openapi\n(\ntitle\n=\n\"Custom title\"\n,\nversion\n=\n\"2.5.0\"\n,\nsummary\n=\n\"This is a very custom OpenAPI schema\"\n,\ndescription\n=\n\"Here's a longer description of the custom **OpenAPI** schema\"\n,\nroutes\n=\napp\n.\nroutes\n,\n)\nopenapi_schema\n[\n\"info\"\n][\n\"x-logo\"\n]\n=\n{\n\"url\"\n:\n\"https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png\"\n}\napp\n.\nopenapi_schema\n=\nopenapi_schema\nreturn\napp\n.\nopenapi_schema\napp\n.\nopenapi\n=\ncustom_openapi\nOverride the method\n¶\nNow you can replace the\n.openapi()\nmethod with your new function.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.openapi.utils\nimport\nget_openapi\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n():\nreturn\n[{\n\"name\"\n:\n\"Foo\"\n}]\ndef\ncustom_openapi\n():\nif\napp\n.\nopenapi_schema\n:\nreturn\napp\n.\nopenapi_schema\nopenapi_schema\n=\nget_openapi\n(\ntitle\n=\n\"Custom title\"\n,\nversion\n=\n\"2.5.0\"\n,\nsummary\n=\n\"This is a very custom OpenAPI schema\"\n,\ndescription\n=\n\"Here's a longer description of the custom **OpenAPI** schema\"\n,\nroutes\n=\napp\n.\nroutes\n,\n)\nopenapi_schema\n[\n\"info\"\n][\n\"x-logo\"\n]\n=\n{\n\"url\"\n:\n\"https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png\"\n}\napp\n.\nopenapi_schema\n=\nopenapi_schema\nreturn\napp\n.\nopenapi_schema\napp\n.\nopenapi\n=\ncustom_openapi\nCheck it\n¶\nOnce you go to\nhttp://127.0.0.1:8000/redoc\nyou will see that you are using your custom logo (in this example,\nFastAPI\n's logo):\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/how-to/migrate-from-pydantic-v1-to-pydantic-v2/",
    "title": "Migrate from Pydantic v1 to Pydantic v2¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nMigrate from Pydantic v1 to Pydantic v2\nTable of contents\nOfficial Guide\nTests\nbump-pydantic\nPydantic v1 in v2\nFastAPI support for Pydantic v1 in v2\nPydantic v1 and v2 on the same app\nPydantic v1 parameters\nMigrate in steps\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nOfficial Guide\nTests\nbump-pydantic\nPydantic v1 in v2\nFastAPI support for Pydantic v1 in v2\nPydantic v1 and v2 on the same app\nPydantic v1 parameters\nMigrate in steps\nFastAPI\nLearn\nHow To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\n¶\nIf you have an old FastAPI app, you might be using Pydantic version 1.\nFastAPI has had support for either Pydantic v1 or v2 since version 0.100.0.\nIf you had installed Pydantic v2, it would use it. If instead you had Pydantic v1, it would use that.\nPydantic v1 is now deprecated and support for it will be removed in the next versions of FastAPI, you should\nmigrate to Pydantic v2\n. This way you will get the latest features, improvements, and fixes.\nWarning\nAlso, the Pydantic team stopped support for Pydantic v1 for the latest versions of Python, starting with\nPython 3.14\n.\nIf you want to use the latest features of Python, you will need to make sure you use Pydantic v2.\nIf you have an old FastAPI app with Pydantic v1, here I'll show you how to migrate it to Pydantic v2, and the\nnew features in FastAPI 0.119.0\nto help you with a gradual migration.\nOfficial Guide\n¶\nPydantic has an official\nMigration Guide\nfrom v1 to v2.\nIt also includes what has changed, how validations are now more correct and strict, possible caveats, etc.\nYou can read it to understand better what has changed.\nTests\n¶\nMake sure you have\ntests\nfor your app and you run them on continuous integration (CI).\nThis way, you can do the upgrade and make sure everything is still working as expected.\nbump-pydantic\n¶\nIn many cases, when you use regular Pydantic models without customizations, you will be able to automate most of the process of migrating from Pydantic v1 to Pydantic v2.\nYou can use\nbump-pydantic\nfrom the same Pydantic team.\nThis tool will help you to automatically change most of the code that needs to be changed.\nAfter this, you can run the tests and check if everything works. If it does, you are done. 😎\nPydantic v1 in v2\n¶\nPydantic v2 includes everything from Pydantic v1 as a submodule\npydantic.v1\n.\nThis means that you can install the latest version of Pydantic v2 and import and use the old Pydantic v1 components from this submodule, as if you had the old Pydantic v1 installed.\nPython 3.10+\nfrom\npydantic.v1\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nsize\n:\nfloat\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\npydantic.v1\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsize\n:\nfloat\nFastAPI support for Pydantic v1 in v2\n¶\nSince FastAPI 0.119.0, there's also partial support for Pydantic v1 from inside of Pydantic v2, to facilitate the migration to v2.\nSo, you could upgrade Pydantic to the latest version 2, and change the imports to use the\npydantic.v1\nsubmodule, and in many cases it would just work.\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic.v1\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nsize\n:\nfloat\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n)\n->\nItem\n:\nreturn\nitem\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic.v1\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsize\n:\nfloat\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n)\n->\nItem\n:\nreturn\nitem\nWarning\nHave in mind that as the Pydantic team no longer supports Pydantic v1 in recent versions of Python, starting from Python 3.14, using\npydantic.v1\nis also not supported in Python 3.14 and above.\nPydantic v1 and v2 on the same app\n¶\nIt's\nnot supported\nby Pydantic to have a model of Pydantic v2 with its own fields defined as Pydantic v1 models or vice versa.\ngraph TB\n    subgraph \"❌ Not Supported\"\n        direction TB\n        subgraph V2[\"Pydantic v2 Model\"]\n            V1Field[\"Pydantic v1 Model\"]\n        end\n        subgraph V1[\"Pydantic v1 Model\"]\n            V2Field[\"Pydantic v2 Model\"]\n        end\n    end\n\n    style V2 fill:#f9fff3\n    style V1 fill:#fff6f0\n    style V1Field fill:#fff6f0\n    style V2Field fill:#f9fff3\n...but, you can have separated models using Pydantic v1 and v2 in the same app.\ngraph TB\n    subgraph \"✅ Supported\"\n        direction TB\n        subgraph V2[\"Pydantic v2 Model\"]\n            V2Field[\"Pydantic v2 Model\"]\n        end\n        subgraph V1[\"Pydantic v1 Model\"]\n            V1Field[\"Pydantic v1 Model\"]\n        end\n    end\n\n    style V2 fill:#f9fff3\n    style V1 fill:#fff6f0\n    style V1Field fill:#fff6f0\n    style V2Field fill:#f9fff3\nIn some cases, it's even possible to have both Pydantic v1 and v2 models in the same\npath operation\nin your FastAPI app:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nas\nBaseModelV2\nfrom\npydantic.v1\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nsize\n:\nfloat\nclass\nItemV2\n(\nBaseModelV2\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nsize\n:\nfloat\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItemV2\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\npydantic\nimport\nBaseModel\nas\nBaseModelV2\nfrom\npydantic.v1\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsize\n:\nfloat\nclass\nItemV2\n(\nBaseModelV2\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsize\n:\nfloat\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nresponse_model\n=\nItemV2\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nItem\n):\nreturn\nitem\nIn this example above, the input model is a Pydantic v1 model, and the output model (defined in\nresponse_model=ItemV2\n) is a Pydantic v2 model.\nPydantic v1 parameters\n¶\nIf you need to use some of the FastAPI-specific tools for parameters like\nBody\n,\nQuery\n,\nForm\n, etc. with Pydantic v1 models, you can import them from\nfastapi.temp_pydantic_v1_params\nwhile you finish the migration to Pydantic v2:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.temp_pydantic_v1_params\nimport\nBody\nfrom\npydantic.v1\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nstr\n|\nNone\n=\nNone\nsize\n:\nfloat\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nembed\n=\nTrue\n)])\n->\nItem\n:\nreturn\nitem\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.temp_pydantic_v1_params\nimport\nBody\nfrom\npydantic.v1\nimport\nBaseModel\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsize\n:\nfloat\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nembed\n=\nTrue\n)])\n->\nItem\n:\nreturn\nitem\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.temp_pydantic_v1_params\nimport\nBody\nfrom\npydantic.v1\nimport\nBaseModel\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nItem\n(\nBaseModel\n):\nname\n:\nstr\ndescription\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsize\n:\nfloat\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n)\nasync\ndef\ncreate_item\n(\nitem\n:\nAnnotated\n[\nItem\n,\nBody\n(\nembed\n=\nTrue\n)])\n->\nItem\n:\nreturn\nitem\nMigrate in steps\n¶\nTip\nFirst try with\nbump-pydantic\n, if your tests pass and that works, then you're done in one command. ✨\nIf\nbump-pydantic\ndoesn't work for your use case, you can use the support for both Pydantic v1 and v2 models in the same app to do the migration to Pydantic v2 gradually.\nYou could fist upgrade Pydantic to use the latest version 2, and change the imports to use\npydantic.v1\nfor all your models.\nThen, you can start migrating your models from Pydantic v1 to v2 in groups, in gradual steps. 🚶\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/response-status-code/",
    "title": "Response Status Code¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nResponse Status Code\nTable of contents\nAbout HTTP status codes\nShortcut to remember the names\nChanging the default\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAbout HTTP status codes\nShortcut to remember the names\nChanging the default\nFastAPI\nLearn\nTutorial - User Guide\nResponse Status Code\n¶\nThe same way you can specify a response model, you can also declare the HTTP status code used for the response with the parameter\nstatus_code\nin any of the\npath operations\n:\n@app.get()\n@app.post()\n@app.put()\n@app.delete()\netc.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nstatus_code\n=\n201\n)\nasync\ndef\ncreate_item\n(\nname\n:\nstr\n):\nreturn\n{\n\"name\"\n:\nname\n}\nNote\nNotice that\nstatus_code\nis a parameter of the \"decorator\" method (\nget\n,\npost\n, etc). Not of your\npath operation function\n, like all the parameters and body.\nThe\nstatus_code\nparameter receives a number with the HTTP status code.\nInfo\nstatus_code\ncan alternatively also receive an\nIntEnum\n, such as Python's\nhttp.HTTPStatus\n.\nIt will:\nReturn that status code in the response.\nDocument it as such in the OpenAPI schema (and so, in the user interfaces):\nNote\nSome response codes (see the next section) indicate that the response does not have a body.\nFastAPI knows this, and will produce OpenAPI docs that state there is no response body.\nAbout HTTP status codes\n¶\nNote\nIf you already know what HTTP status codes are, skip to the next section.\nIn HTTP, you send a numeric status code of 3 digits as part of the response.\nThese status codes have a name associated to recognize them, but the important part is the number.\nIn short:\n100 - 199\nare for \"Information\". You rarely use them directly.  Responses with these status codes cannot have a body.\n200 - 299\nare for \"Successful\" responses. These are the ones you would use the most.\n200\nis the default status code, which means everything was \"OK\".\nAnother example would be\n201\n, \"Created\". It is commonly used after creating a new record in the database.\nA special case is\n204\n, \"No Content\".  This response is used when there is no content to return to the client, and so the response must not have a body.\n300 - 399\nare for \"Redirection\".  Responses with these status codes may or may not have a body, except for\n304\n, \"Not Modified\", which must not have one.\n400 - 499\nare for \"Client error\" responses. These are the second type you would probably use the most.\nAn example is\n404\n, for a \"Not Found\" response.\nFor generic errors from the client, you can just use\n400\n.\n500 - 599\nare for server errors. You almost never use them directly. When something goes wrong at some part in your application code, or server, it will automatically return one of these status codes.\nTip\nTo know more about each status code and which code is for what, check the\nMDN\ndocumentation about HTTP status codes\n.\nShortcut to remember the names\n¶\nLet's see the previous example again:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nstatus_code\n=\n201\n)\nasync\ndef\ncreate_item\n(\nname\n:\nstr\n):\nreturn\n{\n\"name\"\n:\nname\n}\n201\nis the status code for \"Created\".\nBut you don't have to memorize what each of these codes mean.\nYou can use the convenience variables from\nfastapi.status\n.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nstatus\napp\n=\nFastAPI\n()\n@app\n.\npost\n(\n\"/items/\"\n,\nstatus_code\n=\nstatus\n.\nHTTP_201_CREATED\n)\nasync\ndef\ncreate_item\n(\nname\n:\nstr\n):\nreturn\n{\n\"name\"\n:\nname\n}\nThey are just a convenience, they hold the same number, but that way you can use the editor's autocomplete to find them:\nTechnical Details\nYou could also use\nfrom starlette import status\n.\nFastAPI\nprovides the same\nstarlette.status\nas\nfastapi.status\njust as a convenience for you, the developer. But it comes directly from Starlette.\nChanging the default\n¶\nLater, in the\nAdvanced User Guide\n, you will see how to return a different status code than the default you are declaring here.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/",
    "title": "Dependencies in path operation decorators¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nDependencies in path operation decorators\nTable of contents\nAdd\ndependencies\nto the\npath operation decorator\nDependencies errors and return values\nDependency requirements\nRaise exceptions\nReturn values\nDependencies for a group of\npath operations\nGlobal Dependencies\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nAdd\ndependencies\nto the\npath operation decorator\nDependencies errors and return values\nDependency requirements\nRaise exceptions\nReturn values\nDependencies for a group of\npath operations\nGlobal Dependencies\nFastAPI\nLearn\nTutorial - User Guide\nDependencies\nDependencies in path operation decorators\n¶\nIn some cases you don't really need the return value of a dependency inside your\npath operation function\n.\nOr the dependency doesn't return a value.\nBut you still need it to be executed/solved.\nFor those cases, instead of declaring a\npath operation function\nparameter with\nDepends\n, you can add a\nlist\nof\ndependencies\nto the\npath operation decorator\n.\nAdd\ndependencies\nto the\npath operation decorator\n¶\nThe\npath operation decorator\nreceives an optional argument\ndependencies\n.\nIt should be a\nlist\nof\nDepends()\n:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\napp\n=\nFastAPI\n()\nasync\ndef\nverify_token\n(\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\n@app\n.\nget\n(\n\"/items/\"\n,\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Foo\"\n},\n{\n\"item\"\n:\n\"Bar\"\n}]\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nasync\ndef\nverify_token\n(\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\n@app\n.\nget\n(\n\"/items/\"\n,\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Foo\"\n},\n{\n\"item\"\n:\n\"Bar\"\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\napp\n=\nFastAPI\n()\nasync\ndef\nverify_token\n(\nx_token\n:\nstr\n=\nHeader\n()):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nstr\n=\nHeader\n()):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\n@app\n.\nget\n(\n\"/items/\"\n,\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Foo\"\n},\n{\n\"item\"\n:\n\"Bar\"\n}]\nThese dependencies will be executed/solved the same way as normal dependencies. But their value (if they return any) won't be passed to your\npath operation function\n.\nTip\nSome editors check for unused function parameters, and show them as errors.\nUsing these\ndependencies\nin the\npath operation decorator\nyou can make sure they are executed while avoiding editor/tooling errors.\nIt might also help avoid confusion for new developers that see an unused parameter in your code and could think it's unnecessary.\nInfo\nIn this example we use invented custom headers\nX-Key\nand\nX-Token\n.\nBut in real cases, when implementing security, you would get more benefits from using the integrated\nSecurity utilities (the next chapter)\n.\nDependencies errors and return values\n¶\nYou can use the same dependency\nfunctions\nyou use normally.\nDependency requirements\n¶\nThey can declare request requirements (like headers) or other sub-dependencies:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\napp\n=\nFastAPI\n()\nasync\ndef\nverify_token\n(\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\n@app\n.\nget\n(\n\"/items/\"\n,\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Foo\"\n},\n{\n\"item\"\n:\n\"Bar\"\n}]\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nasync\ndef\nverify_token\n(\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\n@app\n.\nget\n(\n\"/items/\"\n,\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Foo\"\n},\n{\n\"item\"\n:\n\"Bar\"\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\napp\n=\nFastAPI\n()\nasync\ndef\nverify_token\n(\nx_token\n:\nstr\n=\nHeader\n()):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nstr\n=\nHeader\n()):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\n@app\n.\nget\n(\n\"/items/\"\n,\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Foo\"\n},\n{\n\"item\"\n:\n\"Bar\"\n}]\nRaise exceptions\n¶\nThese dependencies can\nraise\nexceptions, the same as normal dependencies:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\napp\n=\nFastAPI\n()\nasync\ndef\nverify_token\n(\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\n@app\n.\nget\n(\n\"/items/\"\n,\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Foo\"\n},\n{\n\"item\"\n:\n\"Bar\"\n}]\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nasync\ndef\nverify_token\n(\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\n@app\n.\nget\n(\n\"/items/\"\n,\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Foo\"\n},\n{\n\"item\"\n:\n\"Bar\"\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\napp\n=\nFastAPI\n()\nasync\ndef\nverify_token\n(\nx_token\n:\nstr\n=\nHeader\n()):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nstr\n=\nHeader\n()):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\n@app\n.\nget\n(\n\"/items/\"\n,\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Foo\"\n},\n{\n\"item\"\n:\n\"Bar\"\n}]\nReturn values\n¶\nAnd they can return values or not, the values won't be used.\nSo, you can reuse a normal dependency (that returns a value) you already use somewhere else, and even though the value won't be used, the dependency will be executed:\nPython 3.9+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\napp\n=\nFastAPI\n()\nasync\ndef\nverify_token\n(\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\n@app\n.\nget\n(\n\"/items/\"\n,\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Foo\"\n},\n{\n\"item\"\n:\n\"Bar\"\n}]\n🤓 Other versions and variants\nPython 3.8+\nPython 3.8+ - non-Annotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\nfrom\ntyping_extensions\nimport\nAnnotated\napp\n=\nFastAPI\n()\nasync\ndef\nverify_token\n(\nx_token\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nAnnotated\n[\nstr\n,\nHeader\n()]):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\n@app\n.\nget\n(\n\"/items/\"\n,\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Foo\"\n},\n{\n\"item\"\n:\n\"Bar\"\n}]\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHeader\n,\nHTTPException\napp\n=\nFastAPI\n()\nasync\ndef\nverify_token\n(\nx_token\n:\nstr\n=\nHeader\n()):\nif\nx_token\n!=\n\"fake-super-secret-token\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Token header invalid\"\n)\nasync\ndef\nverify_key\n(\nx_key\n:\nstr\n=\nHeader\n()):\nif\nx_key\n!=\n\"fake-super-secret-key\"\n:\nraise\nHTTPException\n(\nstatus_code\n=\n400\n,\ndetail\n=\n\"X-Key header invalid\"\n)\nreturn\nx_key\n@app\n.\nget\n(\n\"/items/\"\n,\ndependencies\n=\n[\nDepends\n(\nverify_token\n),\nDepends\n(\nverify_key\n)])\nasync\ndef\nread_items\n():\nreturn\n[{\n\"item\"\n:\n\"Foo\"\n},\n{\n\"item\"\n:\n\"Bar\"\n}]\nDependencies for a group of\npath operations\n¶\nLater, when reading about how to structure bigger applications (\nBigger Applications - Multiple Files\n), possibly with multiple files, you will learn how to declare a single\ndependencies\nparameter for a group of\npath operations\n.\nGlobal Dependencies\n¶\nNext we will see how to add dependencies to the whole\nFastAPI\napplication, so that they apply to each\npath operation\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/middleware/",
    "title": "Middleware¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nMiddleware\nTable of contents\nCORSMiddleware\napp\nallow_origins\nallow_methods\nallow_headers\nallow_all_origins\nallow_all_headers\npreflight_explicit_allow_origin\nallow_origin_regex\nsimple_headers\npreflight_headers\nis_allowed_origin\npreflight_response\nsimple_response\nsend\nallow_explicit_origin\nGZipMiddleware\napp\nminimum_size\ncompresslevel\nHTTPSRedirectMiddleware\napp\nTrustedHostMiddleware\napp\nallowed_hosts\nallow_any\nwww_redirect\nWSGIMiddleware\napp\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nCORSMiddleware\napp\nallow_origins\nallow_methods\nallow_headers\nallow_all_origins\nallow_all_headers\npreflight_explicit_allow_origin\nallow_origin_regex\nsimple_headers\npreflight_headers\nis_allowed_origin\npreflight_response\nsimple_response\nsend\nallow_explicit_origin\nGZipMiddleware\napp\nminimum_size\ncompresslevel\nHTTPSRedirectMiddleware\napp\nTrustedHostMiddleware\napp\nallowed_hosts\nallow_any\nwww_redirect\nWSGIMiddleware\napp\nFastAPI\nReference\nMiddleware\n¶\nThere are several middlewares available provided by Starlette directly.\nRead more about them in the\nFastAPI docs for Middleware\n.\nfastapi.middleware.cors.CORSMiddleware\n¶\nCORSMiddleware\n(\napp\n,\nallow_origins\n=\n(),\nallow_methods\n=\n(\n\"GET\"\n,),\nallow_headers\n=\n(),\nallow_credentials\n=\nFalse\n,\nallow_origin_regex\n=\nNone\n,\nexpose_headers\n=\n(),\nmax_age\n=\n600\n,\n)\nSource code in\nstarlette/middleware/cors.py\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\ndef\n__init__\n(\nself\n,\napp\n:\nASGIApp\n,\nallow_origins\n:\nSequence\n[\nstr\n]\n=\n(),\nallow_methods\n:\nSequence\n[\nstr\n]\n=\n(\n\"GET\"\n,),\nallow_headers\n:\nSequence\n[\nstr\n]\n=\n(),\nallow_credentials\n:\nbool\n=\nFalse\n,\nallow_origin_regex\n:\nstr\n|\nNone\n=\nNone\n,\nexpose_headers\n:\nSequence\n[\nstr\n]\n=\n(),\nmax_age\n:\nint\n=\n600\n,\n)\n->\nNone\n:\nif\n\"*\"\nin\nallow_methods\n:\nallow_methods\n=\nALL_METHODS\ncompiled_allow_origin_regex\n=\nNone\nif\nallow_origin_regex\nis\nnot\nNone\n:\ncompiled_allow_origin_regex\n=\nre\n.\ncompile\n(\nallow_origin_regex\n)\nallow_all_origins\n=\n\"*\"\nin\nallow_origins\nallow_all_headers\n=\n\"*\"\nin\nallow_headers\npreflight_explicit_allow_origin\n=\nnot\nallow_all_origins\nor\nallow_credentials\nsimple_headers\n=\n{}\nif\nallow_all_origins\n:\nsimple_headers\n[\n\"Access-Control-Allow-Origin\"\n]\n=\n\"*\"\nif\nallow_credentials\n:\nsimple_headers\n[\n\"Access-Control-Allow-Credentials\"\n]\n=\n\"true\"\nif\nexpose_headers\n:\nsimple_headers\n[\n\"Access-Control-Expose-Headers\"\n]\n=\n\", \"\n.\njoin\n(\nexpose_headers\n)\npreflight_headers\n=\n{}\nif\npreflight_explicit_allow_origin\n:\n# The origin value will be set in preflight_response() if it is allowed.\npreflight_headers\n[\n\"Vary\"\n]\n=\n\"Origin\"\nelse\n:\npreflight_headers\n[\n\"Access-Control-Allow-Origin\"\n]\n=\n\"*\"\npreflight_headers\n.\nupdate\n(\n{\n\"Access-Control-Allow-Methods\"\n:\n\", \"\n.\njoin\n(\nallow_methods\n),\n\"Access-Control-Max-Age\"\n:\nstr\n(\nmax_age\n),\n}\n)\nallow_headers\n=\nsorted\n(\nSAFELISTED_HEADERS\n|\nset\n(\nallow_headers\n))\nif\nallow_headers\nand\nnot\nallow_all_headers\n:\npreflight_headers\n[\n\"Access-Control-Allow-Headers\"\n]\n=\n\", \"\n.\njoin\n(\nallow_headers\n)\nif\nallow_credentials\n:\npreflight_headers\n[\n\"Access-Control-Allow-Credentials\"\n]\n=\n\"true\"\nself\n.\napp\n=\napp\nself\n.\nallow_origins\n=\nallow_origins\nself\n.\nallow_methods\n=\nallow_methods\nself\n.\nallow_headers\n=\n[\nh\n.\nlower\n()\nfor\nh\nin\nallow_headers\n]\nself\n.\nallow_all_origins\n=\nallow_all_origins\nself\n.\nallow_all_headers\n=\nallow_all_headers\nself\n.\npreflight_explicit_allow_origin\n=\npreflight_explicit_allow_origin\nself\n.\nallow_origin_regex\n=\ncompiled_allow_origin_regex\nself\n.\nsimple_headers\n=\nsimple_headers\nself\n.\npreflight_headers\n=\npreflight_headers\napp\ninstance-attribute\n¶\napp\n=\napp\nallow_origins\ninstance-attribute\n¶\nallow_origins\n=\nallow_origins\nallow_methods\ninstance-attribute\n¶\nallow_methods\n=\nallow_methods\nallow_headers\ninstance-attribute\n¶\nallow_headers\n=\n[(\nlower\n())\nfor\nh\nin\nallow_headers\n]\nallow_all_origins\ninstance-attribute\n¶\nallow_all_origins\n=\nallow_all_origins\nallow_all_headers\ninstance-attribute\n¶\nallow_all_headers\n=\nallow_all_headers\npreflight_explicit_allow_origin\ninstance-attribute\n¶\npreflight_explicit_allow_origin\n=\n(\npreflight_explicit_allow_origin\n)\nallow_origin_regex\ninstance-attribute\n¶\nallow_origin_regex\n=\ncompiled_allow_origin_regex\nsimple_headers\ninstance-attribute\n¶\nsimple_headers\n=\nsimple_headers\npreflight_headers\ninstance-attribute\n¶\npreflight_headers\n=\npreflight_headers\nis_allowed_origin\n¶\nis_allowed_origin\n(\norigin\n)\nSource code in\nstarlette/middleware/cors.py\n95\n96\n97\n98\n99\n100\n101\n102\ndef\nis_allowed_origin\n(\nself\n,\norigin\n:\nstr\n)\n->\nbool\n:\nif\nself\n.\nallow_all_origins\n:\nreturn\nTrue\nif\nself\n.\nallow_origin_regex\nis\nnot\nNone\nand\nself\n.\nallow_origin_regex\n.\nfullmatch\n(\norigin\n):\nreturn\nTrue\nreturn\norigin\nin\nself\n.\nallow_origins\npreflight_response\n¶\npreflight_response\n(\nrequest_headers\n)\nSource code in\nstarlette/middleware/cors.py\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\ndef\npreflight_response\n(\nself\n,\nrequest_headers\n:\nHeaders\n)\n->\nResponse\n:\nrequested_origin\n=\nrequest_headers\n[\n\"origin\"\n]\nrequested_method\n=\nrequest_headers\n[\n\"access-control-request-method\"\n]\nrequested_headers\n=\nrequest_headers\n.\nget\n(\n\"access-control-request-headers\"\n)\nheaders\n=\ndict\n(\nself\n.\npreflight_headers\n)\nfailures\n=\n[]\nif\nself\n.\nis_allowed_origin\n(\norigin\n=\nrequested_origin\n):\nif\nself\n.\npreflight_explicit_allow_origin\n:\n# The \"else\" case is already accounted for in self.preflight_headers\n# and the value would be \"*\".\nheaders\n[\n\"Access-Control-Allow-Origin\"\n]\n=\nrequested_origin\nelse\n:\nfailures\n.\nappend\n(\n\"origin\"\n)\nif\nrequested_method\nnot\nin\nself\n.\nallow_methods\n:\nfailures\n.\nappend\n(\n\"method\"\n)\n# If we allow all headers, then we have to mirror back any requested\n# headers in the response.\nif\nself\n.\nallow_all_headers\nand\nrequested_headers\nis\nnot\nNone\n:\nheaders\n[\n\"Access-Control-Allow-Headers\"\n]\n=\nrequested_headers\nelif\nrequested_headers\nis\nnot\nNone\n:\nfor\nheader\nin\n[\nh\n.\nlower\n()\nfor\nh\nin\nrequested_headers\n.\nsplit\n(\n\",\"\n)]:\nif\nheader\n.\nstrip\n()\nnot\nin\nself\n.\nallow_headers\n:\nfailures\n.\nappend\n(\n\"headers\"\n)\nbreak\n# We don't strictly need to use 400 responses here, since its up to\n# the browser to enforce the CORS policy, but its more informative\n# if we do.\nif\nfailures\n:\nfailure_text\n=\n\"Disallowed CORS \"\n+\n\", \"\n.\njoin\n(\nfailures\n)\nreturn\nPlainTextResponse\n(\nfailure_text\n,\nstatus_code\n=\n400\n,\nheaders\n=\nheaders\n)\nreturn\nPlainTextResponse\n(\n\"OK\"\n,\nstatus_code\n=\n200\n,\nheaders\n=\nheaders\n)\nsimple_response\nasync\n¶\nsimple_response\n(\nscope\n,\nreceive\n,\nsend\n,\nrequest_headers\n)\nSource code in\nstarlette/middleware/cors.py\n142\n143\n144\nasync\ndef\nsimple_response\n(\nself\n,\nscope\n:\nScope\n,\nreceive\n:\nReceive\n,\nsend\n:\nSend\n,\nrequest_headers\n:\nHeaders\n)\n->\nNone\n:\nsend\n=\nfunctools\n.\npartial\n(\nself\n.\nsend\n,\nsend\n=\nsend\n,\nrequest_headers\n=\nrequest_headers\n)\nawait\nself\n.\napp\n(\nscope\n,\nreceive\n,\nsend\n)\nsend\nasync\n¶\nsend\n(\nmessage\n,\nsend\n,\nrequest_headers\n)\nSource code in\nstarlette/middleware/cors.py\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\nasync\ndef\nsend\n(\nself\n,\nmessage\n:\nMessage\n,\nsend\n:\nSend\n,\nrequest_headers\n:\nHeaders\n)\n->\nNone\n:\nif\nmessage\n[\n\"type\"\n]\n!=\n\"http.response.start\"\n:\nawait\nsend\n(\nmessage\n)\nreturn\nmessage\n.\nsetdefault\n(\n\"headers\"\n,\n[])\nheaders\n=\nMutableHeaders\n(\nscope\n=\nmessage\n)\nheaders\n.\nupdate\n(\nself\n.\nsimple_headers\n)\norigin\n=\nrequest_headers\n[\n\"Origin\"\n]\nhas_cookie\n=\n\"cookie\"\nin\nrequest_headers\n# If request includes any cookie headers, then we must respond\n# with the specific origin instead of '*'.\nif\nself\n.\nallow_all_origins\nand\nhas_cookie\n:\nself\n.\nallow_explicit_origin\n(\nheaders\n,\norigin\n)\n# If we only allow specific origins, then we have to mirror back\n# the Origin header in the response.\nelif\nnot\nself\n.\nallow_all_origins\nand\nself\n.\nis_allowed_origin\n(\norigin\n=\norigin\n):\nself\n.\nallow_explicit_origin\n(\nheaders\n,\norigin\n)\nawait\nsend\n(\nmessage\n)\nallow_explicit_origin\nstaticmethod\n¶\nallow_explicit_origin\n(\nheaders\n,\norigin\n)\nSource code in\nstarlette/middleware/cors.py\n169\n170\n171\n172\n@staticmethod\ndef\nallow_explicit_origin\n(\nheaders\n:\nMutableHeaders\n,\norigin\n:\nstr\n)\n->\nNone\n:\nheaders\n[\n\"Access-Control-Allow-Origin\"\n]\n=\norigin\nheaders\n.\nadd_vary_header\n(\n\"Origin\"\n)\nIt can be imported from\nfastapi\n:\nfrom\nfastapi.middleware.cors\nimport\nCORSMiddleware\nfastapi.middleware.gzip.GZipMiddleware\n¶\nGZipMiddleware\n(\napp\n,\nminimum_size\n=\n500\n,\ncompresslevel\n=\n9\n)\nSource code in\nstarlette/middleware/gzip.py\n12\n13\n14\n15\ndef\n__init__\n(\nself\n,\napp\n:\nASGIApp\n,\nminimum_size\n:\nint\n=\n500\n,\ncompresslevel\n:\nint\n=\n9\n)\n->\nNone\n:\nself\n.\napp\n=\napp\nself\n.\nminimum_size\n=\nminimum_size\nself\n.\ncompresslevel\n=\ncompresslevel\napp\ninstance-attribute\n¶\napp\n=\napp\nminimum_size\ninstance-attribute\n¶\nminimum_size\n=\nminimum_size\ncompresslevel\ninstance-attribute\n¶\ncompresslevel\n=\ncompresslevel\nIt can be imported from\nfastapi\n:\nfrom\nfastapi.middleware.gzip\nimport\nGZipMiddleware\nfastapi.middleware.httpsredirect.HTTPSRedirectMiddleware\n¶\nHTTPSRedirectMiddleware\n(\napp\n)\nSource code in\nstarlette/middleware/httpsredirect.py\n7\n8\ndef\n__init__\n(\nself\n,\napp\n:\nASGIApp\n)\n->\nNone\n:\nself\n.\napp\n=\napp\napp\ninstance-attribute\n¶\napp\n=\napp\nIt can be imported from\nfastapi\n:\nfrom\nfastapi.middleware.httpsredirect\nimport\nHTTPSRedirectMiddleware\nfastapi.middleware.trustedhost.TrustedHostMiddleware\n¶\nTrustedHostMiddleware\n(\napp\n,\nallowed_hosts\n=\nNone\n,\nwww_redirect\n=\nTrue\n)\nSource code in\nstarlette/middleware/trustedhost.py\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\ndef\n__init__\n(\nself\n,\napp\n:\nASGIApp\n,\nallowed_hosts\n:\nSequence\n[\nstr\n]\n|\nNone\n=\nNone\n,\nwww_redirect\n:\nbool\n=\nTrue\n,\n)\n->\nNone\n:\nif\nallowed_hosts\nis\nNone\n:\nallowed_hosts\n=\n[\n\"*\"\n]\nfor\npattern\nin\nallowed_hosts\n:\nassert\n\"*\"\nnot\nin\npattern\n[\n1\n:],\nENFORCE_DOMAIN_WILDCARD\nif\npattern\n.\nstartswith\n(\n\"*\"\n)\nand\npattern\n!=\n\"*\"\n:\nassert\npattern\n.\nstartswith\n(\n\"*.\"\n),\nENFORCE_DOMAIN_WILDCARD\nself\n.\napp\n=\napp\nself\n.\nallowed_hosts\n=\nlist\n(\nallowed_hosts\n)\nself\n.\nallow_any\n=\n\"*\"\nin\nallowed_hosts\nself\n.\nwww_redirect\n=\nwww_redirect\napp\ninstance-attribute\n¶\napp\n=\napp\nallowed_hosts\ninstance-attribute\n¶\nallowed_hosts\n=\nlist\n(\nallowed_hosts\n)\nallow_any\ninstance-attribute\n¶\nallow_any\n=\n'*'\nin\nallowed_hosts\nwww_redirect\ninstance-attribute\n¶\nwww_redirect\n=\nwww_redirect\nIt can be imported from\nfastapi\n:\nfrom\nfastapi.middleware.trustedhost\nimport\nTrustedHostMiddleware\nfastapi.middleware.wsgi.WSGIMiddleware\n¶\nWSGIMiddleware\n(\napp\n)\nSource code in\nstarlette/middleware/wsgi.py\n75\n76\ndef\n__init__\n(\nself\n,\napp\n:\nCallable\n[\n...\n,\nAny\n])\n->\nNone\n:\nself\n.\napp\n=\napp\napp\ninstance-attribute\n¶\napp\n=\napp\nIt can be imported from\nfastapi\n:\nfrom\nfastapi.middleware.wsgi\nimport\nWSGIMiddleware\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/dependencies/",
    "title": "Dependencies -Depends()andSecurity()¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nDependencies -\nDepends()\nand\nSecurity()\nTable of contents\nDepends()\nDepends\nSecurity()\nSecurity\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nDepends()\nDepends\nSecurity()\nSecurity\nFastAPI\nReference\nDependencies -\nDepends()\nand\nSecurity()\n¶\nDepends()\n¶\nDependencies are handled mainly with the special function\nDepends()\nthat takes a callable.\nHere is the reference for it and its parameters.\nYou can import it directly from\nfastapi\n:\nfrom\nfastapi\nimport\nDepends\nfastapi.Depends\n¶\nDepends\n(\ndependency\n=\nNone\n,\n*\n,\nuse_cache\n=\nTrue\n)\nDeclare a FastAPI dependency.\nIt takes a single \"dependable\" callable (like a function).\nDon't call it directly, FastAPI will call it for you.\nRead more about it in the\nFastAPI docs for Dependencies\n.\nExample\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\napp\n=\nFastAPI\n()\nasync\ndef\ncommon_parameters\n(\nq\n:\nstr\n|\nNone\n=\nNone\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n100\n):\nreturn\n{\n\"q\"\n:\nq\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_items\n(\ncommons\n:\nAnnotated\n[\ndict\n,\nDepends\n(\ncommon_parameters\n)]):\nreturn\ncommons\nPARAMETER\nDESCRIPTION\ndependency\nA \"dependable\" callable (like a function).\nDon't call it directly, FastAPI will call it for you, just pass the object\ndirectly.\nTYPE:\nOptional\n[\nCallable\n[...,\nAny\n]]\nDEFAULT:\nNone\nuse_cache\nBy default, after a dependency is called the first time in a request, if\nthe dependency is declared again for the rest of the request (for example\nif the dependency is needed by several dependencies), the value will be\nre-used for the rest of the request.\nSet\nuse_cache\nto\nFalse\nto disable this behavior and ensure the\ndependency is called again (if declared more than once) in the same request.\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/param_functions.py\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\ndef\nDepends\n(\n# noqa: N802\ndependency\n:\nAnnotated\n[\nOptional\n[\nCallable\n[\n...\n,\nAny\n]],\nDoc\n(\n\"\"\"\nA \"dependable\" callable (like a function).\nDon't call it directly, FastAPI will call it for you, just pass the object\ndirectly.\n\"\"\"\n),\n]\n=\nNone\n,\n*\n,\nuse_cache\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBy default, after a dependency is called the first time in a request, if\nthe dependency is declared again for the rest of the request (for example\nif the dependency is needed by several dependencies), the value will be\nre-used for the rest of the request.\nSet `use_cache` to `False` to disable this behavior and ensure the\ndependency is called again (if declared more than once) in the same request.\n\"\"\"\n),\n]\n=\nTrue\n,\n)\n->\nAny\n:\n\"\"\"\nDeclare a FastAPI dependency.\nIt takes a single \"dependable\" callable (like a function).\nDon't call it directly, FastAPI will call it for you.\nRead more about it in the\n[FastAPI docs for Dependencies](https://fastapi.tiangolo.com/tutorial/dependencies/).\n**Example**\n```python\nfrom typing import Annotated\nfrom fastapi import Depends, FastAPI\napp = FastAPI()\nasync def common_parameters(q: str | None = None, skip: int = 0, limit: int = 100):\nreturn {\"q\": q, \"skip\": skip, \"limit\": limit}\n@app.get(\"/items/\")\nasync def read_items(commons: Annotated[dict, Depends(common_parameters)]):\nreturn commons\n```\n\"\"\"\nreturn\nparams\n.\nDepends\n(\ndependency\n=\ndependency\n,\nuse_cache\n=\nuse_cache\n)\nSecurity()\n¶\nFor many scenarios, you can handle security (authorization, authentication, etc.) with dependencies, using\nDepends()\n.\nBut when you want to also declare OAuth2 scopes, you can use\nSecurity()\ninstead of\nDepends()\n.\nYou can import\nSecurity()\ndirectly from\nfastapi\n:\nfrom\nfastapi\nimport\nSecurity\nfastapi.Security\n¶\nSecurity\n(\ndependency\n=\nNone\n,\n*\n,\nscopes\n=\nNone\n,\nuse_cache\n=\nTrue\n)\nDeclare a FastAPI Security dependency.\nThe only difference with a regular dependency is that it can declare OAuth2\nscopes that will be integrated with OpenAPI and the automatic UI docs (by default\nat\n/docs\n).\nIt takes a single \"dependable\" callable (like a function).\nDon't call it directly, FastAPI will call it for you.\nRead more about it in the\nFastAPI docs for Security\nand\nin the\nFastAPI docs for OAuth2 scopes\n.\nExample\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nSecurity\n,\nFastAPI\nfrom\n.db\nimport\nUser\nfrom\n.security\nimport\nget_current_active_user\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/users/me/items/\"\n)\nasync\ndef\nread_own_items\n(\ncurrent_user\n:\nAnnotated\n[\nUser\n,\nSecurity\n(\nget_current_active_user\n,\nscopes\n=\n[\n\"items\"\n])]\n):\nreturn\n[{\n\"item_id\"\n:\n\"Foo\"\n,\n\"owner\"\n:\ncurrent_user\n.\nusername\n}]\nPARAMETER\nDESCRIPTION\ndependency\nA \"dependable\" callable (like a function).\nDon't call it directly, FastAPI will call it for you, just pass the object\ndirectly.\nTYPE:\nOptional\n[\nCallable\n[...,\nAny\n]]\nDEFAULT:\nNone\nscopes\nOAuth2 scopes required for the\npath operation\nthat uses this Security\ndependency.\nThe term \"scope\" comes from the OAuth2 specification, it seems to be\nintentionally vague and interpretable. It normally refers to permissions,\nin cases to roles.\nThese scopes are integrated with OpenAPI (and the API docs at\n/docs\n).\nSo they are visible in the OpenAPI specification.\n)\nTYPE:\nOptional\n[\nSequence\n[\nstr\n]]\nDEFAULT:\nNone\nuse_cache\nBy default, after a dependency is called the first time in a request, if\nthe dependency is declared again for the rest of the request (for example\nif the dependency is needed by several dependencies), the value will be\nre-used for the rest of the request.\nSet\nuse_cache\nto\nFalse\nto disable this behavior and ensure the\ndependency is called again (if declared more than once) in the same request.\nTYPE:\nbool\nDEFAULT:\nTrue\nSource code in\nfastapi/param_functions.py\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\ndef\nSecurity\n(\n# noqa: N802\ndependency\n:\nAnnotated\n[\nOptional\n[\nCallable\n[\n...\n,\nAny\n]],\nDoc\n(\n\"\"\"\nA \"dependable\" callable (like a function).\nDon't call it directly, FastAPI will call it for you, just pass the object\ndirectly.\n\"\"\"\n),\n]\n=\nNone\n,\n*\n,\nscopes\n:\nAnnotated\n[\nOptional\n[\nSequence\n[\nstr\n]],\nDoc\n(\n\"\"\"\nOAuth2 scopes required for the *path operation* that uses this Security\ndependency.\nThe term \"scope\" comes from the OAuth2 specification, it seems to be\nintentionally vague and interpretable. It normally refers to permissions,\nin cases to roles.\nThese scopes are integrated with OpenAPI (and the API docs at `/docs`).\nSo they are visible in the OpenAPI specification.\n)\n\"\"\"\n),\n]\n=\nNone\n,\nuse_cache\n:\nAnnotated\n[\nbool\n,\nDoc\n(\n\"\"\"\nBy default, after a dependency is called the first time in a request, if\nthe dependency is declared again for the rest of the request (for example\nif the dependency is needed by several dependencies), the value will be\nre-used for the rest of the request.\nSet `use_cache` to `False` to disable this behavior and ensure the\ndependency is called again (if declared more than once) in the same request.\n\"\"\"\n),\n]\n=\nTrue\n,\n)\n->\nAny\n:\n\"\"\"\nDeclare a FastAPI Security dependency.\nThe only difference with a regular dependency is that it can declare OAuth2\nscopes that will be integrated with OpenAPI and the automatic UI docs (by default\nat `/docs`).\nIt takes a single \"dependable\" callable (like a function).\nDon't call it directly, FastAPI will call it for you.\nRead more about it in the\n[FastAPI docs for Security](https://fastapi.tiangolo.com/tutorial/security/) and\nin the\n[FastAPI docs for OAuth2 scopes](https://fastapi.tiangolo.com/advanced/security/oauth2-scopes/).\n**Example**\n```python\nfrom typing import Annotated\nfrom fastapi import Security, FastAPI\nfrom .db import User\nfrom .security import get_current_active_user\napp = FastAPI()\n@app.get(\"/users/me/items/\")\nasync def read_own_items(\ncurrent_user: Annotated[User, Security(get_current_active_user, scopes=[\"items\"])]\n):\nreturn [{\"item_id\": \"Foo\", \"owner\": current_user.username}]\n```\n\"\"\"\nreturn\nparams\n.\nSecurity\n(\ndependency\n=\ndependency\n,\nscopes\n=\nscopes\n,\nuse_cache\n=\nuse_cache\n)\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/learn/",
    "title": "Learn¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nFastAPI\nLearn\nLearn\n¶\nHere are the introductory sections and the tutorials to learn\nFastAPI\n.\nYou could consider this a\nbook\n, a\ncourse\n, the\nofficial\nand recommended way to learn FastAPI. 😎\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/request/",
    "title": "Requestclass¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nRequest\nclass\nTable of contents\nRequest\nscope\napp\nurl\nbase_url\nheaders\nquery_params\npath_params\ncookies\nclient\nsession\nauth\nuser\nstate\nmethod\nreceive\nurl_for\nstream\nbody\njson\nform\nclose\nis_disconnected\nsend_push_promise\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nRequest\nscope\napp\nurl\nbase_url\nheaders\nquery_params\npath_params\ncookies\nclient\nsession\nauth\nuser\nstate\nmethod\nreceive\nurl_for\nstream\nbody\njson\nform\nclose\nis_disconnected\nsend_push_promise\nFastAPI\nReference\nRequest\nclass\n¶\nYou can declare a parameter in a\npath operation function\nor dependency to be of type\nRequest\nand then you can access the raw request object directly, without any validation, etc.\nYou can import it directly from\nfastapi\n:\nfrom\nfastapi\nimport\nRequest\nTip\nWhen you want to define dependencies that should be compatible with both HTTP and WebSockets, you can define a parameter that takes an\nHTTPConnection\ninstead of a\nRequest\nor a\nWebSocket\n.\nfastapi.Request\n¶\nRequest\n(\nscope\n,\nreceive\n=\nempty_receive\n,\nsend\n=\nempty_send\n)\nBases:\nHTTPConnection\nSource code in\nstarlette/requests.py\n202\n203\n204\n205\n206\n207\n208\n209\ndef\n__init__\n(\nself\n,\nscope\n:\nScope\n,\nreceive\n:\nReceive\n=\nempty_receive\n,\nsend\n:\nSend\n=\nempty_send\n):\nsuper\n()\n.\n__init__\n(\nscope\n)\nassert\nscope\n[\n\"type\"\n]\n==\n\"http\"\nself\n.\n_receive\n=\nreceive\nself\n.\n_send\n=\nsend\nself\n.\n_stream_consumed\n=\nFalse\nself\n.\n_is_disconnected\n=\nFalse\nself\n.\n_form\n=\nNone\nscope\ninstance-attribute\n¶\nscope\n=\nscope\napp\nproperty\n¶\napp\nurl\nproperty\n¶\nurl\nbase_url\nproperty\n¶\nbase_url\nheaders\nproperty\n¶\nheaders\nquery_params\nproperty\n¶\nquery_params\npath_params\nproperty\n¶\npath_params\ncookies\nproperty\n¶\ncookies\nclient\nproperty\n¶\nclient\nsession\nproperty\n¶\nsession\nauth\nproperty\n¶\nauth\nuser\nproperty\n¶\nuser\nstate\nproperty\n¶\nstate\nmethod\nproperty\n¶\nmethod\nreceive\nproperty\n¶\nreceive\nurl_for\n¶\nurl_for\n(\nname\n,\n/\n,\n**\npath_params\n)\nSource code in\nstarlette/requests.py\n183\n184\n185\n186\n187\n188\ndef\nurl_for\n(\nself\n,\nname\n:\nstr\n,\n/\n,\n**\npath_params\n:\nAny\n)\n->\nURL\n:\nurl_path_provider\n:\nRouter\n|\nStarlette\n|\nNone\n=\nself\n.\nscope\n.\nget\n(\n\"router\"\n)\nor\nself\n.\nscope\n.\nget\n(\n\"app\"\n)\nif\nurl_path_provider\nis\nNone\n:\nraise\nRuntimeError\n(\n\"The `url_for` method can only be used inside a Starlette application or with a router.\"\n)\nurl_path\n=\nurl_path_provider\n.\nurl_path_for\n(\nname\n,\n**\npath_params\n)\nreturn\nurl_path\n.\nmake_absolute_url\n(\nbase_url\n=\nself\n.\nbase_url\n)\nstream\nasync\n¶\nstream\n()\nSource code in\nstarlette/requests.py\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\nasync\ndef\nstream\n(\nself\n)\n->\nAsyncGenerator\n[\nbytes\n,\nNone\n]:\nif\nhasattr\n(\nself\n,\n\"_body\"\n):\nyield\nself\n.\n_body\nyield\nb\n\"\"\nreturn\nif\nself\n.\n_stream_consumed\n:\nraise\nRuntimeError\n(\n\"Stream consumed\"\n)\nwhile\nnot\nself\n.\n_stream_consumed\n:\nmessage\n=\nawait\nself\n.\n_receive\n()\nif\nmessage\n[\n\"type\"\n]\n==\n\"http.request\"\n:\nbody\n=\nmessage\n.\nget\n(\n\"body\"\n,\nb\n\"\"\n)\nif\nnot\nmessage\n.\nget\n(\n\"more_body\"\n,\nFalse\n):\nself\n.\n_stream_consumed\n=\nTrue\nif\nbody\n:\nyield\nbody\nelif\nmessage\n[\n\"type\"\n]\n==\n\"http.disconnect\"\n:\n# pragma: no branch\nself\n.\n_is_disconnected\n=\nTrue\nraise\nClientDisconnect\n()\nyield\nb\n\"\"\nbody\nasync\n¶\nbody\n()\nSource code in\nstarlette/requests.py\n239\n240\n241\n242\n243\n244\n245\nasync\ndef\nbody\n(\nself\n)\n->\nbytes\n:\nif\nnot\nhasattr\n(\nself\n,\n\"_body\"\n):\nchunks\n:\nlist\n[\nbytes\n]\n=\n[]\nasync\nfor\nchunk\nin\nself\n.\nstream\n():\nchunks\n.\nappend\n(\nchunk\n)\nself\n.\n_body\n=\nb\n\"\"\n.\njoin\n(\nchunks\n)\nreturn\nself\n.\n_body\njson\nasync\n¶\njson\n()\nSource code in\nstarlette/requests.py\n247\n248\n249\n250\n251\nasync\ndef\njson\n(\nself\n)\n->\nAny\n:\nif\nnot\nhasattr\n(\nself\n,\n\"_json\"\n):\n# pragma: no branch\nbody\n=\nawait\nself\n.\nbody\n()\nself\n.\n_json\n=\njson\n.\nloads\n(\nbody\n)\nreturn\nself\n.\n_json\nform\n¶\nform\n(\n*\n,\nmax_files\n=\n1000\n,\nmax_fields\n=\n1000\n,\nmax_part_size\n=\n1024\n*\n1024\n)\nSource code in\nstarlette/requests.py\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\ndef\nform\n(\nself\n,\n*\n,\nmax_files\n:\nint\n|\nfloat\n=\n1000\n,\nmax_fields\n:\nint\n|\nfloat\n=\n1000\n,\nmax_part_size\n:\nint\n=\n1024\n*\n1024\n,\n)\n->\nAwaitableOrContextManager\n[\nFormData\n]:\nreturn\nAwaitableOrContextManagerWrapper\n(\nself\n.\n_get_form\n(\nmax_files\n=\nmax_files\n,\nmax_fields\n=\nmax_fields\n,\nmax_part_size\n=\nmax_part_size\n)\n)\nclose\nasync\n¶\nclose\n()\nSource code in\nstarlette/requests.py\n299\n300\n301\nasync\ndef\nclose\n(\nself\n)\n->\nNone\n:\nif\nself\n.\n_form\nis\nnot\nNone\n:\n# pragma: no branch\nawait\nself\n.\n_form\n.\nclose\n()\nis_disconnected\nasync\n¶\nis_disconnected\n()\nSource code in\nstarlette/requests.py\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\nasync\ndef\nis_disconnected\n(\nself\n)\n->\nbool\n:\nif\nnot\nself\n.\n_is_disconnected\n:\nmessage\n:\nMessage\n=\n{}\n# If message isn't immediately available, move on\nwith\nanyio\n.\nCancelScope\n()\nas\ncs\n:\ncs\n.\ncancel\n()\nmessage\n=\nawait\nself\n.\n_receive\n()\nif\nmessage\n.\nget\n(\n\"type\"\n)\n==\n\"http.disconnect\"\n:\nself\n.\n_is_disconnected\n=\nTrue\nreturn\nself\n.\n_is_disconnected\nsend_push_promise\nasync\n¶\nsend_push_promise\n(\npath\n)\nSource code in\nstarlette/requests.py\n317\n318\n319\n320\n321\n322\n323\nasync\ndef\nsend_push_promise\n(\nself\n,\npath\n:\nstr\n)\n->\nNone\n:\nif\n\"http.response.push\"\nin\nself\n.\nscope\n.\nget\n(\n\"extensions\"\n,\n{}):\nraw_headers\n:\nlist\n[\ntuple\n[\nbytes\n,\nbytes\n]]\n=\n[]\nfor\nname\nin\nSERVER_PUSH_HEADERS_TO_COPY\n:\nfor\nvalue\nin\nself\n.\nheaders\n.\ngetlist\n(\nname\n):\nraw_headers\n.\nappend\n((\nname\n.\nencode\n(\n\"latin-1\"\n),\nvalue\n.\nencode\n(\n\"latin-1\"\n)))\nawait\nself\n.\n_send\n({\n\"type\"\n:\n\"http.response.push\"\n,\n\"path\"\n:\npath\n,\n\"headers\"\n:\nraw_headers\n})\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/advanced/behind-a-proxy/",
    "title": "Behind a Proxy¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nBehind a Proxy\nTable of contents\nProxy Forwarded Headers\nEnable Proxy Forwarded Headers\nRedirects with HTTPS\nHow Proxy Forwarded Headers Work\nProxy with a stripped path prefix\nProviding the\nroot_path\nChecking the current\nroot_path\nSetting the\nroot_path\nin the FastAPI app\nAbout\nroot_path\nAbout proxies with a stripped path prefix\nTesting locally with Traefik\nCheck the responses\nCheck the docs UI\nAdditional servers\nDisable automatic server from\nroot_path\nMounting a sub-application\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nProxy Forwarded Headers\nEnable Proxy Forwarded Headers\nRedirects with HTTPS\nHow Proxy Forwarded Headers Work\nProxy with a stripped path prefix\nProviding the\nroot_path\nChecking the current\nroot_path\nSetting the\nroot_path\nin the FastAPI app\nAbout\nroot_path\nAbout proxies with a stripped path prefix\nTesting locally with Traefik\nCheck the responses\nCheck the docs UI\nAdditional servers\nDisable automatic server from\nroot_path\nMounting a sub-application\nFastAPI\nLearn\nAdvanced User Guide\nBehind a Proxy\n¶\nIn many situations, you would use a\nproxy\nlike Traefik or Nginx in front of your FastAPI app.\nThese proxies could handle HTTPS certificates and other things.\nProxy Forwarded Headers\n¶\nA\nproxy\nin front of your application would normally set some headers on the fly before sending the requests to your\nserver\nto let the server know that the request was\nforwarded\nby the proxy, letting it know the original (public) URL, including the domain, that it is using HTTPS, etc.\nThe\nserver\nprogram (for example\nUvicorn\nvia\nFastAPI CLI\n) is capable of interpreting these headers, and then passing that information to your application.\nBut for security, as the server doesn't know it is behind a trusted proxy, it won't interpret those headers.\nTechnical Details\nThe proxy headers are:\nX-Forwarded-For\nX-Forwarded-Proto\nX-Forwarded-Host\nEnable Proxy Forwarded Headers\n¶\nYou can start FastAPI CLI with the\nCLI Option\n--forwarded-allow-ips\nand pass the IP addresses that should be trusted to read those forwarded headers.\nIf you set it to\n--forwarded-allow-ips=\"*\"\nit would trust all the incoming IPs.\nIf your\nserver\nis behind a trusted\nproxy\nand only the proxy talks to it, this would make it accept whatever is the IP of that\nproxy\n.\n$\nfastapi\nrun\n--forwarded-allow-ips\n=\n\"*\"\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nRedirects with HTTPS\n¶\nFor example, let's say you define a\npath operation\n/items/\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\"\n)\ndef\nread_items\n():\nreturn\n[\n\"plumbus\"\n,\n\"portal gun\"\n]\nIf the client tries to go to\n/items\n, by default, it would be redirected to\n/items/\n.\nBut before setting the\nCLI Option\n--forwarded-allow-ips\nit could redirect to\nhttp://localhost:8000/items/\n.\nBut maybe your application is hosted at\nhttps://mysuperapp.com\n, and the redirection should be to\nhttps://mysuperapp.com/items/\n.\nBy setting\n--proxy-headers\nnow FastAPI would be able to redirect to the right location. 😎\nhttps://mysuperapp.com/items/\nTip\nIf you want to learn more about HTTPS, check the guide\nAbout HTTPS\n.\nHow Proxy Forwarded Headers Work\n¶\nHere's a visual representation of how the\nproxy\nadds forwarded headers between the client and the\napplication server\n:\nsequenceDiagram\n    participant Client\n    participant Proxy as Proxy/Load Balancer\n    participant Server as FastAPI Server\n\n    Client->>Proxy: HTTPS Request<br/>Host: mysuperapp.com<br/>Path: /items\n\n    Note over Proxy: Proxy adds forwarded headers\n\n    Proxy->>Server: HTTP Request<br/>X-Forwarded-For: [client IP]<br/>X-Forwarded-Proto: https<br/>X-Forwarded-Host: mysuperapp.com<br/>Path: /items\n\n    Note over Server: Server interprets headers<br/>(if --forwarded-allow-ips is set)\n\n    Server->>Proxy: HTTP Response<br/>with correct HTTPS URLs\n\n    Proxy->>Client: HTTPS Response\nThe\nproxy\nintercepts the original client request and adds the special\nforwarded\nheaders (\nX-Forwarded-*\n) before passing the request to the\napplication server\n.\nThese headers preserve information about the original request that would otherwise be lost:\nX-Forwarded-For\n: The original client's IP address\nX-Forwarded-Proto\n: The original protocol (\nhttps\n)\nX-Forwarded-Host\n: The original host (\nmysuperapp.com\n)\nWhen\nFastAPI CLI\nis configured with\n--forwarded-allow-ips\n, it trusts these headers and uses them, for example to generate the correct URLs in redirects.\nProxy with a stripped path prefix\n¶\nYou could have a proxy that adds a path prefix to your application.\nIn these cases you can use\nroot_path\nto configure your application.\nThe\nroot_path\nis a mechanism provided by the ASGI specification (that FastAPI is built on, through Starlette).\nThe\nroot_path\nis used to handle these specific cases.\nAnd it's also used internally when mounting sub-applications.\nHaving a proxy with a stripped path prefix, in this case, means that you could declare a path at\n/app\nin your code, but then, you add a layer on top (the proxy) that would put your\nFastAPI\napplication under a path like\n/api/v1\n.\nIn this case, the original path\n/app\nwould actually be served at\n/api/v1/app\n.\nEven though all your code is written assuming there's just\n/app\n.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/app\"\n)\ndef\nread_main\n(\nrequest\n:\nRequest\n):\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n,\n\"root_path\"\n:\nrequest\n.\nscope\n.\nget\n(\n\"root_path\"\n)}\nAnd the proxy would be\n\"stripping\"\nthe\npath prefix\non the fly before transmitting the request to the app server (probably Uvicorn via FastAPI CLI), keeping your application convinced that it is being served at\n/app\n, so that you don't have to update all your code to include the prefix\n/api/v1\n.\nUp to here, everything would work as normally.\nBut then, when you open the integrated docs UI (the frontend), it would expect to get the OpenAPI schema at\n/openapi.json\n, instead of\n/api/v1/openapi.json\n.\nSo, the frontend (that runs in the browser) would try to reach\n/openapi.json\nand wouldn't be able to get the OpenAPI schema.\nBecause we have a proxy with a path prefix of\n/api/v1\nfor our app, the frontend needs to fetch the OpenAPI schema at\n/api/v1/openapi.json\n.\ngraph LR\n\nbrowser(\"Browser\")\nproxy[\"Proxy on http://0.0.0.0:9999/api/v1/app\"]\nserver[\"Server on http://127.0.0.1:8000/app\"]\n\nbrowser --> proxy\nproxy --> server\nTip\nThe IP\n0.0.0.0\nis commonly used to mean that the program listens on all the IPs available in that machine/server.\nThe docs UI would also need the OpenAPI schema to declare that this API\nserver\nis located at\n/api/v1\n(behind the proxy). For example:\n{\n\"openapi\"\n:\n\"3.1.0\"\n,\n// More stuff here\n\"servers\"\n:\n[\n{\n\"url\"\n:\n\"/api/v1\"\n}\n],\n\"paths\"\n:\n{\n// More stuff here\n}\n}\nIn this example, the \"Proxy\" could be something like\nTraefik\n. And the server would be something like FastAPI CLI with\nUvicorn\n, running your FastAPI application.\nProviding the\nroot_path\n¶\nTo achieve this, you can use the command line option\n--root-path\nlike:\n$\nfastapi\nrun\nmain.py\n--forwarded-allow-ips\n=\n\"*\"\n--root-path\n/api/v1\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nIf you use Hypercorn, it also has the option\n--root-path\n.\nTechnical Details\nThe ASGI specification defines a\nroot_path\nfor this use case.\nAnd the\n--root-path\ncommand line option provides that\nroot_path\n.\nChecking the current\nroot_path\n¶\nYou can get the current\nroot_path\nused by your application for each request, it is part of the\nscope\ndictionary (that's part of the ASGI spec).\nHere we are including it in the message just for demonstration purposes.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/app\"\n)\ndef\nread_main\n(\nrequest\n:\nRequest\n):\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n,\n\"root_path\"\n:\nrequest\n.\nscope\n.\nget\n(\n\"root_path\"\n)}\nThen, if you start Uvicorn with:\n$\nfastapi\nrun\nmain.py\n--forwarded-allow-ips\n=\n\"*\"\n--root-path\n/api/v1\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nThe response would be something like:\n{\n\"message\"\n:\n\"Hello World\"\n,\n\"root_path\"\n:\n\"/api/v1\"\n}\nSetting the\nroot_path\nin the FastAPI app\n¶\nAlternatively, if you don't have a way to provide a command line option like\n--root-path\nor equivalent, you can set the\nroot_path\nparameter when creating your FastAPI app:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\napp\n=\nFastAPI\n(\nroot_path\n=\n\"/api/v1\"\n)\n@app\n.\nget\n(\n\"/app\"\n)\ndef\nread_main\n(\nrequest\n:\nRequest\n):\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n,\n\"root_path\"\n:\nrequest\n.\nscope\n.\nget\n(\n\"root_path\"\n)}\nPassing the\nroot_path\nto\nFastAPI\nwould be the equivalent of passing the\n--root-path\ncommand line option to Uvicorn or Hypercorn.\nAbout\nroot_path\n¶\nKeep in mind that the server (Uvicorn) won't use that\nroot_path\nfor anything else than passing it to the app.\nBut if you go with your browser to\nhttp://127.0.0.1:8000/app\nyou will see the normal response:\n{\n\"message\"\n:\n\"Hello World\"\n,\n\"root_path\"\n:\n\"/api/v1\"\n}\nSo, it won't expect to be accessed at\nhttp://127.0.0.1:8000/api/v1/app\n.\nUvicorn will expect the proxy to access Uvicorn at\nhttp://127.0.0.1:8000/app\n, and then it would be the proxy's responsibility to add the extra\n/api/v1\nprefix on top.\nAbout proxies with a stripped path prefix\n¶\nKeep in mind that a proxy with stripped path prefix is only one of the ways to configure it.\nProbably in many cases the default will be that the proxy doesn't have a stripped path prefix.\nIn a case like that (without a stripped path prefix), the proxy would listen on something like\nhttps://myawesomeapp.com\n, and then if the browser goes to\nhttps://myawesomeapp.com/api/v1/app\nand your server (e.g. Uvicorn) listens on\nhttp://127.0.0.1:8000\nthe proxy (without a stripped path prefix) would access Uvicorn at the same path:\nhttp://127.0.0.1:8000/api/v1/app\n.\nTesting locally with Traefik\n¶\nYou can easily run the experiment locally with a stripped path prefix using\nTraefik\n.\nDownload Traefik\n, it's a single binary, you can extract the compressed file and run it directly from the terminal.\nThen create a file\ntraefik.toml\nwith:\n[entryPoints]\n[entryPoints.http]\naddress\n=\n\":9999\"\n[providers]\n[providers.file]\nfilename\n=\n\"routes.toml\"\nThis tells Traefik to listen on port 9999 and to use another file\nroutes.toml\n.\nTip\nWe are using port 9999 instead of the standard HTTP port 80 so that you don't have to run it with admin (\nsudo\n) privileges.\nNow create that other file\nroutes.toml\n:\n[http]\n[http.middlewares]\n[http.middlewares.api-stripprefix.stripPrefix]\nprefixes\n=\n[\n\"/api/v1\"\n]\n[http.routers]\n[http.routers.app-http]\nentryPoints\n=\n[\n\"http\"\n]\nservice\n=\n\"app\"\nrule\n=\n\"PathPrefix(`/api/v1`)\"\nmiddlewares\n=\n[\n\"api-stripprefix\"\n]\n[http.services]\n[http.services.app]\n[http.services.app.loadBalancer]\n[[http.services.app.loadBalancer.servers]]\nurl\n=\n\"http://127.0.0.1:8000\"\nThis file configures Traefik to use the path prefix\n/api/v1\n.\nAnd then Traefik will redirect its requests to your Uvicorn running on\nhttp://127.0.0.1:8000\n.\nNow start Traefik:\n$\n./traefik\n--configFile\n=\ntraefik.toml\nINFO[0000] Configuration loaded from file: /home/user/awesomeapi/traefik.toml\nAnd now start your app, using the\n--root-path\noption:\n$\nfastapi\nrun\nmain.py\n--forwarded-allow-ips\n=\n\"*\"\n--root-path\n/api/v1\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nCheck the responses\n¶\nNow, if you go to the URL with the port for Uvicorn:\nhttp://127.0.0.1:8000/app\n, you will see the normal response:\n{\n\"message\"\n:\n\"Hello World\"\n,\n\"root_path\"\n:\n\"/api/v1\"\n}\nTip\nNotice that even though you are accessing it at\nhttp://127.0.0.1:8000/app\nit shows the\nroot_path\nof\n/api/v1\n, taken from the option\n--root-path\n.\nAnd now open the URL with the port for Traefik, including the path prefix:\nhttp://127.0.0.1:9999/api/v1/app\n.\nWe get the same response:\n{\n\"message\"\n:\n\"Hello World\"\n,\n\"root_path\"\n:\n\"/api/v1\"\n}\nbut this time at the URL with the prefix path provided by the proxy:\n/api/v1\n.\nOf course, the idea here is that everyone would access the app through the proxy, so the version with the path prefix\n/api/v1\nis the \"correct\" one.\nAnd the version without the path prefix (\nhttp://127.0.0.1:8000/app\n), provided by Uvicorn directly, would be exclusively for the\nproxy\n(Traefik) to access it.\nThat demonstrates how the Proxy (Traefik) uses the path prefix and how the server (Uvicorn) uses the\nroot_path\nfrom the option\n--root-path\n.\nCheck the docs UI\n¶\nBut here's the fun part. ✨\nThe \"official\" way to access the app would be through the proxy with the path prefix that we defined. So, as we would expect, if you try the docs UI served by Uvicorn directly, without the path prefix in the URL, it won't work, because it expects to be accessed through the proxy.\nYou can check it at\nhttp://127.0.0.1:8000/docs\n:\nBut if we access the docs UI at the \"official\" URL using the proxy with port\n9999\n, at\n/api/v1/docs\n, it works correctly! 🎉\nYou can check it at\nhttp://127.0.0.1:9999/api/v1/docs\n:\nRight as we wanted it. ✔️\nThis is because FastAPI uses this\nroot_path\nto create the default\nserver\nin OpenAPI with the URL provided by\nroot_path\n.\nAdditional servers\n¶\nWarning\nThis is a more advanced use case. Feel free to skip it.\nBy default,\nFastAPI\nwill create a\nserver\nin the OpenAPI schema with the URL for the\nroot_path\n.\nBut you can also provide other alternative\nservers\n, for example if you want\nthe same\ndocs UI to interact with both a staging and a production environment.\nIf you pass a custom list of\nservers\nand there's a\nroot_path\n(because your API lives behind a proxy),\nFastAPI\nwill insert a \"server\" with this\nroot_path\nat the beginning of the list.\nFor example:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\napp\n=\nFastAPI\n(\nservers\n=\n[\n{\n\"url\"\n:\n\"https://stag.example.com\"\n,\n\"description\"\n:\n\"Staging environment\"\n},\n{\n\"url\"\n:\n\"https://prod.example.com\"\n,\n\"description\"\n:\n\"Production environment\"\n},\n],\nroot_path\n=\n\"/api/v1\"\n,\n)\n@app\n.\nget\n(\n\"/app\"\n)\ndef\nread_main\n(\nrequest\n:\nRequest\n):\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n,\n\"root_path\"\n:\nrequest\n.\nscope\n.\nget\n(\n\"root_path\"\n)}\nWill generate an OpenAPI schema like:\n{\n\"openapi\"\n:\n\"3.1.0\"\n,\n// More stuff here\n\"servers\"\n:\n[\n{\n\"url\"\n:\n\"/api/v1\"\n},\n{\n\"url\"\n:\n\"https://stag.example.com\"\n,\n\"description\"\n:\n\"Staging environment\"\n},\n{\n\"url\"\n:\n\"https://prod.example.com\"\n,\n\"description\"\n:\n\"Production environment\"\n}\n],\n\"paths\"\n:\n{\n// More stuff here\n}\n}\nTip\nNotice the auto-generated server with a\nurl\nvalue of\n/api/v1\n, taken from the\nroot_path\n.\nIn the docs UI at\nhttp://127.0.0.1:9999/api/v1/docs\nit would look like:\nTip\nThe docs UI will interact with the server that you select.\nDisable automatic server from\nroot_path\n¶\nIf you don't want\nFastAPI\nto include an automatic server using the\nroot_path\n, you can use the parameter\nroot_path_in_servers=False\n:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\n,\nRequest\napp\n=\nFastAPI\n(\nservers\n=\n[\n{\n\"url\"\n:\n\"https://stag.example.com\"\n,\n\"description\"\n:\n\"Staging environment\"\n},\n{\n\"url\"\n:\n\"https://prod.example.com\"\n,\n\"description\"\n:\n\"Production environment\"\n},\n],\nroot_path\n=\n\"/api/v1\"\n,\nroot_path_in_servers\n=\nFalse\n,\n)\n@app\n.\nget\n(\n\"/app\"\n)\ndef\nread_main\n(\nrequest\n:\nRequest\n):\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n,\n\"root_path\"\n:\nrequest\n.\nscope\n.\nget\n(\n\"root_path\"\n)}\nand then it won't include it in the OpenAPI schema.\nMounting a sub-application\n¶\nIf you need to mount a sub-application (as described in\nSub Applications - Mounts\n) while also using a proxy with\nroot_path\n, you can do it normally, as you would expect.\nFastAPI will internally use the\nroot_path\nsmartly, so it will just work. ✨\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/deployment/https/",
    "title": "About HTTPS¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nAbout HTTPS\nTable of contents\nLet's Encrypt\nHTTPS for Developers\nDomain Name\nDNS\nTLS Handshake Start\nTLS with SNI Extension\nHTTPS Request\nDecrypt the Request\nHTTP Response\nHTTPS Response\nMultiple Applications\nCertificate Renewal\nProxy Forwarded Headers\nRecap\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nLet's Encrypt\nHTTPS for Developers\nDomain Name\nDNS\nTLS Handshake Start\nTLS with SNI Extension\nHTTPS Request\nDecrypt the Request\nHTTP Response\nHTTPS Response\nMultiple Applications\nCertificate Renewal\nProxy Forwarded Headers\nRecap\nFastAPI\nLearn\nDeployment\nAbout HTTPS\n¶\nIt is easy to assume that HTTPS is something that is just \"enabled\" or not.\nBut it is way more complex than that.\nTip\nIf you are in a hurry or don't care, continue with the next sections for step by step instructions to set everything up with different techniques.\nTo\nlearn the basics of HTTPS\n, from a consumer perspective, check\nhttps://howhttps.works/\n.\nNow, from a\ndeveloper's perspective\n, here are several things to keep in mind while thinking about HTTPS:\nFor HTTPS,\nthe server\nneeds to\nhave \"certificates\"\ngenerated by a\nthird party\n.\nThose certificates are actually\nacquired\nfrom the third party, not \"generated\".\nCertificates have a\nlifetime\n.\nThey\nexpire\n.\nAnd then they need to be\nrenewed\n,\nacquired again\nfrom the third party.\nThe encryption of the connection happens at the\nTCP level\n.\nThat's one layer\nbelow HTTP\n.\nSo, the\ncertificate and encryption\nhandling is done\nbefore HTTP\n.\nTCP doesn't know about \"domains\"\n. Only about IP addresses.\nThe information about the\nspecific domain\nrequested goes in the\nHTTP data\n.\nThe\nHTTPS certificates\n\"certify\" a\ncertain domain\n, but the protocol and encryption happen at the TCP level,\nbefore knowing\nwhich domain is being dealt with.\nBy default\n, that would mean that you can only have\none HTTPS certificate per IP address\n.\nNo matter how big your server is or how small each application you have on it might be.\nThere is a\nsolution\nto this, however.\nThere's an\nextension\nto the\nTLS\nprotocol (the one handling the encryption at the TCP level, before HTTP) called\nSNI\n.\nThis SNI extension allows one single server (with a\nsingle IP address\n) to have\nseveral HTTPS certificates\nand serve\nmultiple HTTPS domains/applications\n.\nFor this to work, a\nsingle\ncomponent (program) running on the server, listening on the\npublic IP address\n, must have\nall the HTTPS certificates\nin the server.\nAfter\nobtaining a secure connection, the communication protocol is\nstill HTTP\n.\nThe contents are\nencrypted\n, even though they are being sent with the\nHTTP protocol\n.\nIt is a common practice to have\none program/HTTP server\nrunning on the server (the machine, host, etc.) and\nmanaging all the HTTPS parts\n: receiving the\nencrypted HTTPS requests\n, sending the\ndecrypted HTTP requests\nto the actual HTTP application running in the same server (the\nFastAPI\napplication, in this case), take the\nHTTP response\nfrom the application,\nencrypt it\nusing the appropriate\nHTTPS certificate\nand sending it back to the client using\nHTTPS\n. This server is often called a\nTLS Termination Proxy\n.\nSome of the options you could use as a TLS Termination Proxy are:\nTraefik (that can also handle certificate renewals)\nCaddy (that can also handle certificate renewals)\nNginx\nHAProxy\nLet's Encrypt\n¶\nBefore Let's Encrypt, these\nHTTPS certificates\nwere sold by trusted third parties.\nThe process to acquire one of these certificates used to be cumbersome, require quite some paperwork and the certificates were quite expensive.\nBut then\nLet's Encrypt\nwas created.\nIt is a project from the Linux Foundation. It provides\nHTTPS certificates for free\n, in an automated way. These certificates use all the standard cryptographic security, and are short-lived (about 3 months), so the\nsecurity is actually better\nbecause of their reduced lifespan.\nThe domains are securely verified and the certificates are generated automatically. This also allows automating the renewal of these certificates.\nThe idea is to automate the acquisition and renewal of these certificates so that you can have\nsecure HTTPS, for free, forever\n.\nHTTPS for Developers\n¶\nHere's an example of how an HTTPS API could look like, step by step, paying attention mainly to the ideas important for developers.\nDomain Name\n¶\nIt would probably all start by you\nacquiring\nsome\ndomain name\n. Then, you would configure it in a DNS server (possibly your same cloud provider).\nYou would probably get a cloud server (a virtual machine) or something similar, and it would have a\nfixed\npublic IP address\n.\nIn the DNS server(s) you would configure a record (an \"\nA record\n\") to point\nyour domain\nto the public\nIP address of your server\n.\nYou would probably do this just once, the first time, when setting everything up.\nTip\nThis Domain Name part is way before HTTPS, but as everything depends on the domain and the IP address, it's worth mentioning it here.\nDNS\n¶\nNow let's focus on all the actual HTTPS parts.\nFirst, the browser would check with the\nDNS servers\nwhat is the\nIP for the domain\n, in this case,\nsomeapp.example.com\n.\nThe DNS servers would tell the browser to use some specific\nIP address\n. That would be the public IP address used by your server, that you configured in the DNS servers.\nTLS Handshake Start\n¶\nThe browser would then communicate with that IP address on\nport 443\n(the HTTPS port).\nThe first part of the communication is just to establish the connection between the client and the server and to decide the cryptographic keys they will use, etc.\nThis interaction between the client and the server to establish the TLS connection is called the\nTLS handshake\n.\nTLS with SNI Extension\n¶\nOnly one process\nin the server can be listening on a specific\nport\nin a specific\nIP address\n. There could be other processes listening on other ports in the same IP address, but only one for each combination of IP address and port.\nTLS (HTTPS) uses the specific port\n443\nby default. So that's the port we would need.\nAs only one process can be listening on this port, the process that would do it would be the\nTLS Termination Proxy\n.\nThe TLS Termination Proxy would have access to one or more\nTLS certificates\n(HTTPS certificates).\nUsing the\nSNI extension\ndiscussed above, the TLS Termination Proxy would check which of the TLS (HTTPS) certificates available it should use for this connection, using the one that matches the domain expected by the client.\nIn this case, it would use the certificate for\nsomeapp.example.com\n.\nThe client already\ntrusts\nthe entity that generated that TLS certificate (in this case Let's Encrypt, but we'll see about that later), so it can\nverify\nthat the certificate is valid.\nThen, using the certificate, the client and the TLS Termination Proxy\ndecide how to encrypt\nthe rest of the\nTCP communication\n. This completes the\nTLS Handshake\npart.\nAfter this, the client and the server have an\nencrypted TCP connection\n, this is what TLS provides. And then they can use that connection to start the actual\nHTTP communication\n.\nAnd that's what\nHTTPS\nis, it's just plain\nHTTP\ninside a\nsecure TLS connection\ninstead of a pure (unencrypted) TCP connection.\nTip\nNotice that the encryption of the communication happens at the\nTCP level\n, not at the HTTP level.\nHTTPS Request\n¶\nNow that the client and server (specifically the browser and the TLS Termination Proxy) have an\nencrypted TCP connection\n, they can start the\nHTTP communication\n.\nSo, the client sends an\nHTTPS request\n. This is just an HTTP request through an encrypted TLS connection.\nDecrypt the Request\n¶\nThe TLS Termination Proxy would use the encryption agreed to\ndecrypt the request\n, and would transmit the\nplain (decrypted) HTTP request\nto the process running the application (for example a process with Uvicorn running the FastAPI application).\nHTTP Response\n¶\nThe application would process the request and send a\nplain (unencrypted) HTTP response\nto the TLS Termination Proxy.\nHTTPS Response\n¶\nThe TLS Termination Proxy would then\nencrypt the response\nusing the cryptography agreed before (that started with the certificate for\nsomeapp.example.com\n), and send it back to the browser.\nNext, the browser would verify that the response is valid and encrypted with the right cryptographic key, etc. It would then\ndecrypt the response\nand process it.\nThe client (browser) will know that the response comes from the correct server because it is using the cryptography they agreed using the\nHTTPS certificate\nbefore.\nMultiple Applications\n¶\nIn the same server (or servers), there could be\nmultiple applications\n, for example, other API programs or a database.\nOnly one process can be handling the specific IP and port (the TLS Termination Proxy in our example) but the other applications/processes can be running on the server(s) too, as long as they don't try to use the same\ncombination of public IP and port\n.\nThat way, the TLS Termination Proxy could handle HTTPS and certificates for\nmultiple domains\n, for multiple applications, and then transmit the requests to the right application in each case.\nCertificate Renewal\n¶\nAt some point in the future, each certificate would\nexpire\n(about 3 months after acquiring it).\nAnd then, there would be another program (in some cases it's another program, in some cases it could be the same TLS Termination Proxy) that would talk to Let's Encrypt, and renew the certificate(s).\nThe\nTLS certificates\nare\nassociated with a domain name\n, not with an IP address.\nSo, to renew the certificates, the renewal program needs to\nprove\nto the authority (Let's Encrypt) that it indeed\n\"owns\" and controls that domain\n.\nTo do that, and to accommodate different application needs, there are several ways it can do it. Some popular ways are:\nModify some DNS records\n.\nFor this, the renewal program needs to support the APIs of the DNS provider, so, depending on the DNS provider you are using, this might or might not be an option.\nRun as a server\n(at least during the certificate acquisition process) on the public IP address associated with the domain.\nAs we said above, only one process can be listening on a specific IP and port.\nThis is one of the reasons why it's very useful when the same TLS Termination Proxy also takes care of the certificate renewal process.\nOtherwise, you might have to stop the TLS Termination Proxy momentarily, start the renewal program to acquire the certificates, then configure them with the TLS Termination Proxy, and then restart the TLS Termination Proxy. This is not ideal, as your app(s) will not be available during the time that the TLS Termination Proxy is off.\nAll this renewal process, while still serving the app, is one of the main reasons why you would want to have a\nseparate system to handle HTTPS\nwith a TLS Termination Proxy instead of just using the TLS certificates with the application server directly (e.g. Uvicorn).\nProxy Forwarded Headers\n¶\nWhen using a proxy to handle HTTPS, your\napplication server\n(for example Uvicorn via FastAPI CLI) doesn't known anything about the HTTPS process, it communicates with plain HTTP with the\nTLS Termination Proxy\n.\nThis\nproxy\nwould normally set some HTTP headers on the fly before transmitting the request to the\napplication server\n, to let the application server know that the request is being\nforwarded\nby the proxy.\nTechnical Details\nThe proxy headers are:\nX-Forwarded-For\nX-Forwarded-Proto\nX-Forwarded-Host\nNevertheless, as the\napplication server\ndoesn't know it is behind a trusted\nproxy\n, by default, it wouldn't trust those headers.\nBut you can configure the\napplication server\nto trust the\nforwarded\nheaders sent by the\nproxy\n. If you are using FastAPI CLI, you can use the\nCLI Option\n--forwarded-allow-ips\nto tell it from which IPs it should trust those\nforwarded\nheaders.\nFor example, if the\napplication server\nis only receiving communication from the trusted\nproxy\n, you can set it to\n--forwarded-allow-ips=\"*\"\nto make it trust all incoming IPs, as it will only receive requests from whatever is the IP used by the\nproxy\n.\nThis way the application would be able to know what is its own public URL, if it is using HTTPS, the domain, etc.\nThis would be useful for example to properly handle redirects.\nTip\nYou can learn more about this in the documentation for\nBehind a Proxy - Enable Proxy Forwarded Headers\nRecap\n¶\nHaving\nHTTPS\nis very important, and quite\ncritical\nin most cases. Most of the effort you as a developer have to put around HTTPS is just about\nunderstanding these concepts\nand how they work.\nBut once you know the basic information of\nHTTPS for developers\nyou can easily combine and configure different tools to help you manage everything in a simple way.\nIn some of the next chapters, I'll show you several concrete examples of how to set up\nHTTPS\nfor\nFastAPI\napplications. 🔒\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/reference/responses/",
    "title": "Custom Response Classes - File, HTML, Redirect, Streaming, etc.¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nTable of contents\nFastAPI Responses\nUJSONResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nORJSONResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nStarlette Responses\nFileResponse\nchunk_size\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nHTMLResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nJSONResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nPlainTextResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nRedirectResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nStreamingResponse\nbody_iterator\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nFastAPI Responses\nUJSONResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nORJSONResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nStarlette Responses\nFileResponse\nchunk_size\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nHTMLResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nJSONResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nPlainTextResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nRedirectResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nResponse\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nStreamingResponse\nbody_iterator\ncharset\nstatus_code\nmedia_type\nbody\nbackground\nheaders\nrender\ninit_headers\nset_cookie\ndelete_cookie\nFastAPI\nReference\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\n¶\nThere are several custom response classes you can use to create an instance and return them directly from your\npath operations\n.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nYou can import them directly from\nfastapi.responses\n:\nfrom\nfastapi.responses\nimport\n(\nFileResponse\n,\nHTMLResponse\n,\nJSONResponse\n,\nORJSONResponse\n,\nPlainTextResponse\n,\nRedirectResponse\n,\nResponse\n,\nStreamingResponse\n,\nUJSONResponse\n,\n)\nFastAPI Responses\n¶\nThere are a couple of custom FastAPI response classes, you can use them to optimize JSON performance.\nfastapi.responses.UJSONResponse\n¶\nUJSONResponse\n(\ncontent\n,\nstatus_code\n=\n200\n,\nheaders\n=\nNone\n,\nmedia_type\n=\nNone\n,\nbackground\n=\nNone\n,\n)\nBases:\nJSONResponse\nJSON response using the high-performance ujson library to serialize data to JSON.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nSource code in\nstarlette/responses.py\n182\n183\n184\n185\n186\n187\n188\n189\n190\ndef\n__init__\n(\nself\n,\ncontent\n:\nAny\n,\nstatus_code\n:\nint\n=\n200\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nmedia_type\n:\nstr\n|\nNone\n=\nNone\n,\nbackground\n:\nBackgroundTask\n|\nNone\n=\nNone\n,\n)\n->\nNone\n:\nsuper\n()\n.\n__init__\n(\ncontent\n,\nstatus_code\n,\nheaders\n,\nmedia_type\n,\nbackground\n)\ncharset\nclass-attribute\ninstance-attribute\n¶\ncharset\n=\n'utf-8'\nstatus_code\ninstance-attribute\n¶\nstatus_code\n=\nstatus_code\nmedia_type\nclass-attribute\ninstance-attribute\n¶\nmedia_type\n=\n'application/json'\nbody\ninstance-attribute\n¶\nbody\n=\nrender\n(\ncontent\n)\nbackground\ninstance-attribute\n¶\nbackground\n=\nbackground\nheaders\nproperty\n¶\nheaders\nrender\n¶\nrender\n(\ncontent\n)\nSource code in\nfastapi/responses.py\n31\n32\n33\ndef\nrender\n(\nself\n,\ncontent\n:\nAny\n)\n->\nbytes\n:\nassert\nujson\nis\nnot\nNone\n,\n\"ujson must be installed to use UJSONResponse\"\nreturn\nujson\n.\ndumps\n(\ncontent\n,\nensure_ascii\n=\nFalse\n)\n.\nencode\n(\n\"utf-8\"\n)\ninit_headers\n¶\ninit_headers\n(\nheaders\n=\nNone\n)\nSource code in\nstarlette/responses.py\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\ndef\ninit_headers\n(\nself\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n)\n->\nNone\n:\nif\nheaders\nis\nNone\n:\nraw_headers\n:\nlist\n[\ntuple\n[\nbytes\n,\nbytes\n]]\n=\n[]\npopulate_content_length\n=\nTrue\npopulate_content_type\n=\nTrue\nelse\n:\nraw_headers\n=\n[(\nk\n.\nlower\n()\n.\nencode\n(\n\"latin-1\"\n),\nv\n.\nencode\n(\n\"latin-1\"\n))\nfor\nk\n,\nv\nin\nheaders\n.\nitems\n()]\nkeys\n=\n[\nh\n[\n0\n]\nfor\nh\nin\nraw_headers\n]\npopulate_content_length\n=\nb\n\"content-length\"\nnot\nin\nkeys\npopulate_content_type\n=\nb\n\"content-type\"\nnot\nin\nkeys\nbody\n=\ngetattr\n(\nself\n,\n\"body\"\n,\nNone\n)\nif\n(\nbody\nis\nnot\nNone\nand\npopulate_content_length\nand\nnot\n(\nself\n.\nstatus_code\n<\n200\nor\nself\n.\nstatus_code\nin\n(\n204\n,\n304\n))\n):\ncontent_length\n=\nstr\n(\nlen\n(\nbody\n))\nraw_headers\n.\nappend\n((\nb\n\"content-length\"\n,\ncontent_length\n.\nencode\n(\n\"latin-1\"\n)))\ncontent_type\n=\nself\n.\nmedia_type\nif\ncontent_type\nis\nnot\nNone\nand\npopulate_content_type\n:\nif\ncontent_type\n.\nstartswith\n(\n\"text/\"\n)\nand\n\"charset=\"\nnot\nin\ncontent_type\n.\nlower\n():\ncontent_type\n+=\n\"; charset=\"\n+\nself\n.\ncharset\nraw_headers\n.\nappend\n((\nb\n\"content-type\"\n,\ncontent_type\n.\nencode\n(\n\"latin-1\"\n)))\nself\n.\nraw_headers\n=\nraw_headers\nset_cookie\n¶\nset_cookie\n(\nkey\n,\nvalue\n=\n\"\"\n,\nmax_age\n=\nNone\n,\nexpires\n=\nNone\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\npartitioned\n=\nFalse\n,\n)\nSource code in\nstarlette/responses.py\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\ndef\nset_cookie\n(\nself\n,\nkey\n:\nstr\n,\nvalue\n:\nstr\n=\n\"\"\n,\nmax_age\n:\nint\n|\nNone\n=\nNone\n,\nexpires\n:\ndatetime\n|\nstr\n|\nint\n|\nNone\n=\nNone\n,\npath\n:\nstr\n|\nNone\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\npartitioned\n:\nbool\n=\nFalse\n,\n)\n->\nNone\n:\ncookie\n:\nhttp\n.\ncookies\n.\nBaseCookie\n[\nstr\n]\n=\nhttp\n.\ncookies\n.\nSimpleCookie\n()\ncookie\n[\nkey\n]\n=\nvalue\nif\nmax_age\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"max-age\"\n]\n=\nmax_age\nif\nexpires\nis\nnot\nNone\n:\nif\nisinstance\n(\nexpires\n,\ndatetime\n):\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nformat_datetime\n(\nexpires\n,\nusegmt\n=\nTrue\n)\nelse\n:\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nexpires\nif\npath\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"path\"\n]\n=\npath\nif\ndomain\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"domain\"\n]\n=\ndomain\nif\nsecure\n:\ncookie\n[\nkey\n][\n\"secure\"\n]\n=\nTrue\nif\nhttponly\n:\ncookie\n[\nkey\n][\n\"httponly\"\n]\n=\nTrue\nif\nsamesite\nis\nnot\nNone\n:\nassert\nsamesite\n.\nlower\n()\nin\n[\n\"strict\"\n,\n\"lax\"\n,\n\"none\"\n,\n],\n\"samesite must be either 'strict', 'lax' or 'none'\"\ncookie\n[\nkey\n][\n\"samesite\"\n]\n=\nsamesite\nif\npartitioned\n:\nif\nsys\n.\nversion_info\n<\n(\n3\n,\n14\n):\nraise\nValueError\n(\n\"Partitioned cookies are only supported in Python 3.14 and above.\"\n)\n# pragma: no cover\ncookie\n[\nkey\n][\n\"partitioned\"\n]\n=\nTrue\n# pragma: no cover\ncookie_val\n=\ncookie\n.\noutput\n(\nheader\n=\n\"\"\n)\n.\nstrip\n()\nself\n.\nraw_headers\n.\nappend\n((\nb\n\"set-cookie\"\n,\ncookie_val\n.\nencode\n(\n\"latin-1\"\n)))\ndelete_cookie\n¶\ndelete_cookie\n(\nkey\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\n)\nSource code in\nstarlette/responses.py\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\ndef\ndelete_cookie\n(\nself\n,\nkey\n:\nstr\n,\npath\n:\nstr\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\n)\n->\nNone\n:\nself\n.\nset_cookie\n(\nkey\n,\nmax_age\n=\n0\n,\nexpires\n=\n0\n,\npath\n=\npath\n,\ndomain\n=\ndomain\n,\nsecure\n=\nsecure\n,\nhttponly\n=\nhttponly\n,\nsamesite\n=\nsamesite\n,\n)\nfastapi.responses.ORJSONResponse\n¶\nORJSONResponse\n(\ncontent\n,\nstatus_code\n=\n200\n,\nheaders\n=\nNone\n,\nmedia_type\n=\nNone\n,\nbackground\n=\nNone\n,\n)\nBases:\nJSONResponse\nJSON response using the high-performance orjson library to serialize data to JSON.\nRead more about it in the\nFastAPI docs for Custom Response - HTML, Stream, File, others\n.\nSource code in\nstarlette/responses.py\n182\n183\n184\n185\n186\n187\n188\n189\n190\ndef\n__init__\n(\nself\n,\ncontent\n:\nAny\n,\nstatus_code\n:\nint\n=\n200\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nmedia_type\n:\nstr\n|\nNone\n=\nNone\n,\nbackground\n:\nBackgroundTask\n|\nNone\n=\nNone\n,\n)\n->\nNone\n:\nsuper\n()\n.\n__init__\n(\ncontent\n,\nstatus_code\n,\nheaders\n,\nmedia_type\n,\nbackground\n)\ncharset\nclass-attribute\ninstance-attribute\n¶\ncharset\n=\n'utf-8'\nstatus_code\ninstance-attribute\n¶\nstatus_code\n=\nstatus_code\nmedia_type\nclass-attribute\ninstance-attribute\n¶\nmedia_type\n=\n'application/json'\nbody\ninstance-attribute\n¶\nbody\n=\nrender\n(\ncontent\n)\nbackground\ninstance-attribute\n¶\nbackground\n=\nbackground\nheaders\nproperty\n¶\nheaders\nrender\n¶\nrender\n(\ncontent\n)\nSource code in\nfastapi/responses.py\n44\n45\n46\n47\n48\ndef\nrender\n(\nself\n,\ncontent\n:\nAny\n)\n->\nbytes\n:\nassert\norjson\nis\nnot\nNone\n,\n\"orjson must be installed to use ORJSONResponse\"\nreturn\norjson\n.\ndumps\n(\ncontent\n,\noption\n=\norjson\n.\nOPT_NON_STR_KEYS\n|\norjson\n.\nOPT_SERIALIZE_NUMPY\n)\ninit_headers\n¶\ninit_headers\n(\nheaders\n=\nNone\n)\nSource code in\nstarlette/responses.py\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\ndef\ninit_headers\n(\nself\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n)\n->\nNone\n:\nif\nheaders\nis\nNone\n:\nraw_headers\n:\nlist\n[\ntuple\n[\nbytes\n,\nbytes\n]]\n=\n[]\npopulate_content_length\n=\nTrue\npopulate_content_type\n=\nTrue\nelse\n:\nraw_headers\n=\n[(\nk\n.\nlower\n()\n.\nencode\n(\n\"latin-1\"\n),\nv\n.\nencode\n(\n\"latin-1\"\n))\nfor\nk\n,\nv\nin\nheaders\n.\nitems\n()]\nkeys\n=\n[\nh\n[\n0\n]\nfor\nh\nin\nraw_headers\n]\npopulate_content_length\n=\nb\n\"content-length\"\nnot\nin\nkeys\npopulate_content_type\n=\nb\n\"content-type\"\nnot\nin\nkeys\nbody\n=\ngetattr\n(\nself\n,\n\"body\"\n,\nNone\n)\nif\n(\nbody\nis\nnot\nNone\nand\npopulate_content_length\nand\nnot\n(\nself\n.\nstatus_code\n<\n200\nor\nself\n.\nstatus_code\nin\n(\n204\n,\n304\n))\n):\ncontent_length\n=\nstr\n(\nlen\n(\nbody\n))\nraw_headers\n.\nappend\n((\nb\n\"content-length\"\n,\ncontent_length\n.\nencode\n(\n\"latin-1\"\n)))\ncontent_type\n=\nself\n.\nmedia_type\nif\ncontent_type\nis\nnot\nNone\nand\npopulate_content_type\n:\nif\ncontent_type\n.\nstartswith\n(\n\"text/\"\n)\nand\n\"charset=\"\nnot\nin\ncontent_type\n.\nlower\n():\ncontent_type\n+=\n\"; charset=\"\n+\nself\n.\ncharset\nraw_headers\n.\nappend\n((\nb\n\"content-type\"\n,\ncontent_type\n.\nencode\n(\n\"latin-1\"\n)))\nself\n.\nraw_headers\n=\nraw_headers\nset_cookie\n¶\nset_cookie\n(\nkey\n,\nvalue\n=\n\"\"\n,\nmax_age\n=\nNone\n,\nexpires\n=\nNone\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\npartitioned\n=\nFalse\n,\n)\nSource code in\nstarlette/responses.py\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\ndef\nset_cookie\n(\nself\n,\nkey\n:\nstr\n,\nvalue\n:\nstr\n=\n\"\"\n,\nmax_age\n:\nint\n|\nNone\n=\nNone\n,\nexpires\n:\ndatetime\n|\nstr\n|\nint\n|\nNone\n=\nNone\n,\npath\n:\nstr\n|\nNone\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\npartitioned\n:\nbool\n=\nFalse\n,\n)\n->\nNone\n:\ncookie\n:\nhttp\n.\ncookies\n.\nBaseCookie\n[\nstr\n]\n=\nhttp\n.\ncookies\n.\nSimpleCookie\n()\ncookie\n[\nkey\n]\n=\nvalue\nif\nmax_age\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"max-age\"\n]\n=\nmax_age\nif\nexpires\nis\nnot\nNone\n:\nif\nisinstance\n(\nexpires\n,\ndatetime\n):\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nformat_datetime\n(\nexpires\n,\nusegmt\n=\nTrue\n)\nelse\n:\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nexpires\nif\npath\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"path\"\n]\n=\npath\nif\ndomain\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"domain\"\n]\n=\ndomain\nif\nsecure\n:\ncookie\n[\nkey\n][\n\"secure\"\n]\n=\nTrue\nif\nhttponly\n:\ncookie\n[\nkey\n][\n\"httponly\"\n]\n=\nTrue\nif\nsamesite\nis\nnot\nNone\n:\nassert\nsamesite\n.\nlower\n()\nin\n[\n\"strict\"\n,\n\"lax\"\n,\n\"none\"\n,\n],\n\"samesite must be either 'strict', 'lax' or 'none'\"\ncookie\n[\nkey\n][\n\"samesite\"\n]\n=\nsamesite\nif\npartitioned\n:\nif\nsys\n.\nversion_info\n<\n(\n3\n,\n14\n):\nraise\nValueError\n(\n\"Partitioned cookies are only supported in Python 3.14 and above.\"\n)\n# pragma: no cover\ncookie\n[\nkey\n][\n\"partitioned\"\n]\n=\nTrue\n# pragma: no cover\ncookie_val\n=\ncookie\n.\noutput\n(\nheader\n=\n\"\"\n)\n.\nstrip\n()\nself\n.\nraw_headers\n.\nappend\n((\nb\n\"set-cookie\"\n,\ncookie_val\n.\nencode\n(\n\"latin-1\"\n)))\ndelete_cookie\n¶\ndelete_cookie\n(\nkey\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\n)\nSource code in\nstarlette/responses.py\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\ndef\ndelete_cookie\n(\nself\n,\nkey\n:\nstr\n,\npath\n:\nstr\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\n)\n->\nNone\n:\nself\n.\nset_cookie\n(\nkey\n,\nmax_age\n=\n0\n,\nexpires\n=\n0\n,\npath\n=\npath\n,\ndomain\n=\ndomain\n,\nsecure\n=\nsecure\n,\nhttponly\n=\nhttponly\n,\nsamesite\n=\nsamesite\n,\n)\nStarlette Responses\n¶\nfastapi.responses.FileResponse\n¶\nFileResponse\n(\npath\n,\nstatus_code\n=\n200\n,\nheaders\n=\nNone\n,\nmedia_type\n=\nNone\n,\nbackground\n=\nNone\n,\nfilename\n=\nNone\n,\nstat_result\n=\nNone\n,\nmethod\n=\nNone\n,\ncontent_disposition_type\n=\n\"attachment\"\n,\n)\nBases:\nResponse\nSource code in\nstarlette/responses.py\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\ndef\n__init__\n(\nself\n,\npath\n:\nstr\n|\nos\n.\nPathLike\n[\nstr\n],\nstatus_code\n:\nint\n=\n200\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nmedia_type\n:\nstr\n|\nNone\n=\nNone\n,\nbackground\n:\nBackgroundTask\n|\nNone\n=\nNone\n,\nfilename\n:\nstr\n|\nNone\n=\nNone\n,\nstat_result\n:\nos\n.\nstat_result\n|\nNone\n=\nNone\n,\nmethod\n:\nstr\n|\nNone\n=\nNone\n,\ncontent_disposition_type\n:\nstr\n=\n\"attachment\"\n,\n)\n->\nNone\n:\nself\n.\npath\n=\npath\nself\n.\nstatus_code\n=\nstatus_code\nself\n.\nfilename\n=\nfilename\nif\nmethod\nis\nnot\nNone\n:\nwarnings\n.\nwarn\n(\n\"The 'method' parameter is not used, and it will be removed.\"\n,\nDeprecationWarning\n,\n)\nif\nmedia_type\nis\nNone\n:\nmedia_type\n=\nguess_type\n(\nfilename\nor\npath\n)[\n0\n]\nor\n\"text/plain\"\nself\n.\nmedia_type\n=\nmedia_type\nself\n.\nbackground\n=\nbackground\nself\n.\ninit_headers\n(\nheaders\n)\nself\n.\nheaders\n.\nsetdefault\n(\n\"accept-ranges\"\n,\n\"bytes\"\n)\nif\nself\n.\nfilename\nis\nnot\nNone\n:\ncontent_disposition_filename\n=\nquote\n(\nself\n.\nfilename\n)\nif\ncontent_disposition_filename\n!=\nself\n.\nfilename\n:\ncontent_disposition\n=\nf\n\"\n{\ncontent_disposition_type\n}\n; filename*=utf-8''\n{\ncontent_disposition_filename\n}\n\"\nelse\n:\ncontent_disposition\n=\nf\n'\n{\ncontent_disposition_type\n}\n; filename=\"\n{\nself\n.\nfilename\n}\n\"'\nself\n.\nheaders\n.\nsetdefault\n(\n\"content-disposition\"\n,\ncontent_disposition\n)\nself\n.\nstat_result\n=\nstat_result\nif\nstat_result\nis\nnot\nNone\n:\nself\n.\nset_stat_headers\n(\nstat_result\n)\nchunk_size\nclass-attribute\ninstance-attribute\n¶\nchunk_size\n=\n64\n*\n1024\ncharset\nclass-attribute\ninstance-attribute\n¶\ncharset\n=\n'utf-8'\nstatus_code\ninstance-attribute\n¶\nstatus_code\n=\nstatus_code\nmedia_type\ninstance-attribute\n¶\nmedia_type\n=\nmedia_type\nbody\ninstance-attribute\n¶\nbody\n=\nrender\n(\ncontent\n)\nbackground\ninstance-attribute\n¶\nbackground\n=\nbackground\nheaders\nproperty\n¶\nheaders\nrender\n¶\nrender\n(\ncontent\n)\nSource code in\nstarlette/responses.py\n50\n51\n52\n53\n54\n55\ndef\nrender\n(\nself\n,\ncontent\n:\nAny\n)\n->\nbytes\n|\nmemoryview\n:\nif\ncontent\nis\nNone\n:\nreturn\nb\n\"\"\nif\nisinstance\n(\ncontent\n,\n(\nbytes\n,\nmemoryview\n)):\nreturn\ncontent\nreturn\ncontent\n.\nencode\n(\nself\n.\ncharset\n)\n# type: ignore\ninit_headers\n¶\ninit_headers\n(\nheaders\n=\nNone\n)\nSource code in\nstarlette/responses.py\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\ndef\ninit_headers\n(\nself\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n)\n->\nNone\n:\nif\nheaders\nis\nNone\n:\nraw_headers\n:\nlist\n[\ntuple\n[\nbytes\n,\nbytes\n]]\n=\n[]\npopulate_content_length\n=\nTrue\npopulate_content_type\n=\nTrue\nelse\n:\nraw_headers\n=\n[(\nk\n.\nlower\n()\n.\nencode\n(\n\"latin-1\"\n),\nv\n.\nencode\n(\n\"latin-1\"\n))\nfor\nk\n,\nv\nin\nheaders\n.\nitems\n()]\nkeys\n=\n[\nh\n[\n0\n]\nfor\nh\nin\nraw_headers\n]\npopulate_content_length\n=\nb\n\"content-length\"\nnot\nin\nkeys\npopulate_content_type\n=\nb\n\"content-type\"\nnot\nin\nkeys\nbody\n=\ngetattr\n(\nself\n,\n\"body\"\n,\nNone\n)\nif\n(\nbody\nis\nnot\nNone\nand\npopulate_content_length\nand\nnot\n(\nself\n.\nstatus_code\n<\n200\nor\nself\n.\nstatus_code\nin\n(\n204\n,\n304\n))\n):\ncontent_length\n=\nstr\n(\nlen\n(\nbody\n))\nraw_headers\n.\nappend\n((\nb\n\"content-length\"\n,\ncontent_length\n.\nencode\n(\n\"latin-1\"\n)))\ncontent_type\n=\nself\n.\nmedia_type\nif\ncontent_type\nis\nnot\nNone\nand\npopulate_content_type\n:\nif\ncontent_type\n.\nstartswith\n(\n\"text/\"\n)\nand\n\"charset=\"\nnot\nin\ncontent_type\n.\nlower\n():\ncontent_type\n+=\n\"; charset=\"\n+\nself\n.\ncharset\nraw_headers\n.\nappend\n((\nb\n\"content-type\"\n,\ncontent_type\n.\nencode\n(\n\"latin-1\"\n)))\nself\n.\nraw_headers\n=\nraw_headers\nset_cookie\n¶\nset_cookie\n(\nkey\n,\nvalue\n=\n\"\"\n,\nmax_age\n=\nNone\n,\nexpires\n=\nNone\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\npartitioned\n=\nFalse\n,\n)\nSource code in\nstarlette/responses.py\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\ndef\nset_cookie\n(\nself\n,\nkey\n:\nstr\n,\nvalue\n:\nstr\n=\n\"\"\n,\nmax_age\n:\nint\n|\nNone\n=\nNone\n,\nexpires\n:\ndatetime\n|\nstr\n|\nint\n|\nNone\n=\nNone\n,\npath\n:\nstr\n|\nNone\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\npartitioned\n:\nbool\n=\nFalse\n,\n)\n->\nNone\n:\ncookie\n:\nhttp\n.\ncookies\n.\nBaseCookie\n[\nstr\n]\n=\nhttp\n.\ncookies\n.\nSimpleCookie\n()\ncookie\n[\nkey\n]\n=\nvalue\nif\nmax_age\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"max-age\"\n]\n=\nmax_age\nif\nexpires\nis\nnot\nNone\n:\nif\nisinstance\n(\nexpires\n,\ndatetime\n):\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nformat_datetime\n(\nexpires\n,\nusegmt\n=\nTrue\n)\nelse\n:\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nexpires\nif\npath\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"path\"\n]\n=\npath\nif\ndomain\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"domain\"\n]\n=\ndomain\nif\nsecure\n:\ncookie\n[\nkey\n][\n\"secure\"\n]\n=\nTrue\nif\nhttponly\n:\ncookie\n[\nkey\n][\n\"httponly\"\n]\n=\nTrue\nif\nsamesite\nis\nnot\nNone\n:\nassert\nsamesite\n.\nlower\n()\nin\n[\n\"strict\"\n,\n\"lax\"\n,\n\"none\"\n,\n],\n\"samesite must be either 'strict', 'lax' or 'none'\"\ncookie\n[\nkey\n][\n\"samesite\"\n]\n=\nsamesite\nif\npartitioned\n:\nif\nsys\n.\nversion_info\n<\n(\n3\n,\n14\n):\nraise\nValueError\n(\n\"Partitioned cookies are only supported in Python 3.14 and above.\"\n)\n# pragma: no cover\ncookie\n[\nkey\n][\n\"partitioned\"\n]\n=\nTrue\n# pragma: no cover\ncookie_val\n=\ncookie\n.\noutput\n(\nheader\n=\n\"\"\n)\n.\nstrip\n()\nself\n.\nraw_headers\n.\nappend\n((\nb\n\"set-cookie\"\n,\ncookie_val\n.\nencode\n(\n\"latin-1\"\n)))\ndelete_cookie\n¶\ndelete_cookie\n(\nkey\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\n)\nSource code in\nstarlette/responses.py\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\ndef\ndelete_cookie\n(\nself\n,\nkey\n:\nstr\n,\npath\n:\nstr\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\n)\n->\nNone\n:\nself\n.\nset_cookie\n(\nkey\n,\nmax_age\n=\n0\n,\nexpires\n=\n0\n,\npath\n=\npath\n,\ndomain\n=\ndomain\n,\nsecure\n=\nsecure\n,\nhttponly\n=\nhttponly\n,\nsamesite\n=\nsamesite\n,\n)\nfastapi.responses.HTMLResponse\n¶\nHTMLResponse\n(\ncontent\n=\nNone\n,\nstatus_code\n=\n200\n,\nheaders\n=\nNone\n,\nmedia_type\n=\nNone\n,\nbackground\n=\nNone\n,\n)\nBases:\nResponse\nSource code in\nstarlette/responses.py\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\ndef\n__init__\n(\nself\n,\ncontent\n:\nAny\n=\nNone\n,\nstatus_code\n:\nint\n=\n200\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nmedia_type\n:\nstr\n|\nNone\n=\nNone\n,\nbackground\n:\nBackgroundTask\n|\nNone\n=\nNone\n,\n)\n->\nNone\n:\nself\n.\nstatus_code\n=\nstatus_code\nif\nmedia_type\nis\nnot\nNone\n:\nself\n.\nmedia_type\n=\nmedia_type\nself\n.\nbackground\n=\nbackground\nself\n.\nbody\n=\nself\n.\nrender\n(\ncontent\n)\nself\n.\ninit_headers\n(\nheaders\n)\ncharset\nclass-attribute\ninstance-attribute\n¶\ncharset\n=\n'utf-8'\nstatus_code\ninstance-attribute\n¶\nstatus_code\n=\nstatus_code\nmedia_type\nclass-attribute\ninstance-attribute\n¶\nmedia_type\n=\n'text/html'\nbody\ninstance-attribute\n¶\nbody\n=\nrender\n(\ncontent\n)\nbackground\ninstance-attribute\n¶\nbackground\n=\nbackground\nheaders\nproperty\n¶\nheaders\nrender\n¶\nrender\n(\ncontent\n)\nSource code in\nstarlette/responses.py\n50\n51\n52\n53\n54\n55\ndef\nrender\n(\nself\n,\ncontent\n:\nAny\n)\n->\nbytes\n|\nmemoryview\n:\nif\ncontent\nis\nNone\n:\nreturn\nb\n\"\"\nif\nisinstance\n(\ncontent\n,\n(\nbytes\n,\nmemoryview\n)):\nreturn\ncontent\nreturn\ncontent\n.\nencode\n(\nself\n.\ncharset\n)\n# type: ignore\ninit_headers\n¶\ninit_headers\n(\nheaders\n=\nNone\n)\nSource code in\nstarlette/responses.py\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\ndef\ninit_headers\n(\nself\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n)\n->\nNone\n:\nif\nheaders\nis\nNone\n:\nraw_headers\n:\nlist\n[\ntuple\n[\nbytes\n,\nbytes\n]]\n=\n[]\npopulate_content_length\n=\nTrue\npopulate_content_type\n=\nTrue\nelse\n:\nraw_headers\n=\n[(\nk\n.\nlower\n()\n.\nencode\n(\n\"latin-1\"\n),\nv\n.\nencode\n(\n\"latin-1\"\n))\nfor\nk\n,\nv\nin\nheaders\n.\nitems\n()]\nkeys\n=\n[\nh\n[\n0\n]\nfor\nh\nin\nraw_headers\n]\npopulate_content_length\n=\nb\n\"content-length\"\nnot\nin\nkeys\npopulate_content_type\n=\nb\n\"content-type\"\nnot\nin\nkeys\nbody\n=\ngetattr\n(\nself\n,\n\"body\"\n,\nNone\n)\nif\n(\nbody\nis\nnot\nNone\nand\npopulate_content_length\nand\nnot\n(\nself\n.\nstatus_code\n<\n200\nor\nself\n.\nstatus_code\nin\n(\n204\n,\n304\n))\n):\ncontent_length\n=\nstr\n(\nlen\n(\nbody\n))\nraw_headers\n.\nappend\n((\nb\n\"content-length\"\n,\ncontent_length\n.\nencode\n(\n\"latin-1\"\n)))\ncontent_type\n=\nself\n.\nmedia_type\nif\ncontent_type\nis\nnot\nNone\nand\npopulate_content_type\n:\nif\ncontent_type\n.\nstartswith\n(\n\"text/\"\n)\nand\n\"charset=\"\nnot\nin\ncontent_type\n.\nlower\n():\ncontent_type\n+=\n\"; charset=\"\n+\nself\n.\ncharset\nraw_headers\n.\nappend\n((\nb\n\"content-type\"\n,\ncontent_type\n.\nencode\n(\n\"latin-1\"\n)))\nself\n.\nraw_headers\n=\nraw_headers\nset_cookie\n¶\nset_cookie\n(\nkey\n,\nvalue\n=\n\"\"\n,\nmax_age\n=\nNone\n,\nexpires\n=\nNone\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\npartitioned\n=\nFalse\n,\n)\nSource code in\nstarlette/responses.py\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\ndef\nset_cookie\n(\nself\n,\nkey\n:\nstr\n,\nvalue\n:\nstr\n=\n\"\"\n,\nmax_age\n:\nint\n|\nNone\n=\nNone\n,\nexpires\n:\ndatetime\n|\nstr\n|\nint\n|\nNone\n=\nNone\n,\npath\n:\nstr\n|\nNone\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\npartitioned\n:\nbool\n=\nFalse\n,\n)\n->\nNone\n:\ncookie\n:\nhttp\n.\ncookies\n.\nBaseCookie\n[\nstr\n]\n=\nhttp\n.\ncookies\n.\nSimpleCookie\n()\ncookie\n[\nkey\n]\n=\nvalue\nif\nmax_age\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"max-age\"\n]\n=\nmax_age\nif\nexpires\nis\nnot\nNone\n:\nif\nisinstance\n(\nexpires\n,\ndatetime\n):\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nformat_datetime\n(\nexpires\n,\nusegmt\n=\nTrue\n)\nelse\n:\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nexpires\nif\npath\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"path\"\n]\n=\npath\nif\ndomain\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"domain\"\n]\n=\ndomain\nif\nsecure\n:\ncookie\n[\nkey\n][\n\"secure\"\n]\n=\nTrue\nif\nhttponly\n:\ncookie\n[\nkey\n][\n\"httponly\"\n]\n=\nTrue\nif\nsamesite\nis\nnot\nNone\n:\nassert\nsamesite\n.\nlower\n()\nin\n[\n\"strict\"\n,\n\"lax\"\n,\n\"none\"\n,\n],\n\"samesite must be either 'strict', 'lax' or 'none'\"\ncookie\n[\nkey\n][\n\"samesite\"\n]\n=\nsamesite\nif\npartitioned\n:\nif\nsys\n.\nversion_info\n<\n(\n3\n,\n14\n):\nraise\nValueError\n(\n\"Partitioned cookies are only supported in Python 3.14 and above.\"\n)\n# pragma: no cover\ncookie\n[\nkey\n][\n\"partitioned\"\n]\n=\nTrue\n# pragma: no cover\ncookie_val\n=\ncookie\n.\noutput\n(\nheader\n=\n\"\"\n)\n.\nstrip\n()\nself\n.\nraw_headers\n.\nappend\n((\nb\n\"set-cookie\"\n,\ncookie_val\n.\nencode\n(\n\"latin-1\"\n)))\ndelete_cookie\n¶\ndelete_cookie\n(\nkey\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\n)\nSource code in\nstarlette/responses.py\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\ndef\ndelete_cookie\n(\nself\n,\nkey\n:\nstr\n,\npath\n:\nstr\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\n)\n->\nNone\n:\nself\n.\nset_cookie\n(\nkey\n,\nmax_age\n=\n0\n,\nexpires\n=\n0\n,\npath\n=\npath\n,\ndomain\n=\ndomain\n,\nsecure\n=\nsecure\n,\nhttponly\n=\nhttponly\n,\nsamesite\n=\nsamesite\n,\n)\nfastapi.responses.JSONResponse\n¶\nJSONResponse\n(\ncontent\n,\nstatus_code\n=\n200\n,\nheaders\n=\nNone\n,\nmedia_type\n=\nNone\n,\nbackground\n=\nNone\n,\n)\nBases:\nResponse\nSource code in\nstarlette/responses.py\n182\n183\n184\n185\n186\n187\n188\n189\n190\ndef\n__init__\n(\nself\n,\ncontent\n:\nAny\n,\nstatus_code\n:\nint\n=\n200\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nmedia_type\n:\nstr\n|\nNone\n=\nNone\n,\nbackground\n:\nBackgroundTask\n|\nNone\n=\nNone\n,\n)\n->\nNone\n:\nsuper\n()\n.\n__init__\n(\ncontent\n,\nstatus_code\n,\nheaders\n,\nmedia_type\n,\nbackground\n)\ncharset\nclass-attribute\ninstance-attribute\n¶\ncharset\n=\n'utf-8'\nstatus_code\ninstance-attribute\n¶\nstatus_code\n=\nstatus_code\nmedia_type\nclass-attribute\ninstance-attribute\n¶\nmedia_type\n=\n'application/json'\nbody\ninstance-attribute\n¶\nbody\n=\nrender\n(\ncontent\n)\nbackground\ninstance-attribute\n¶\nbackground\n=\nbackground\nheaders\nproperty\n¶\nheaders\nrender\n¶\nrender\n(\ncontent\n)\nSource code in\nstarlette/responses.py\n192\n193\n194\n195\n196\n197\n198\n199\ndef\nrender\n(\nself\n,\ncontent\n:\nAny\n)\n->\nbytes\n:\nreturn\njson\n.\ndumps\n(\ncontent\n,\nensure_ascii\n=\nFalse\n,\nallow_nan\n=\nFalse\n,\nindent\n=\nNone\n,\nseparators\n=\n(\n\",\"\n,\n\":\"\n),\n)\n.\nencode\n(\n\"utf-8\"\n)\ninit_headers\n¶\ninit_headers\n(\nheaders\n=\nNone\n)\nSource code in\nstarlette/responses.py\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\ndef\ninit_headers\n(\nself\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n)\n->\nNone\n:\nif\nheaders\nis\nNone\n:\nraw_headers\n:\nlist\n[\ntuple\n[\nbytes\n,\nbytes\n]]\n=\n[]\npopulate_content_length\n=\nTrue\npopulate_content_type\n=\nTrue\nelse\n:\nraw_headers\n=\n[(\nk\n.\nlower\n()\n.\nencode\n(\n\"latin-1\"\n),\nv\n.\nencode\n(\n\"latin-1\"\n))\nfor\nk\n,\nv\nin\nheaders\n.\nitems\n()]\nkeys\n=\n[\nh\n[\n0\n]\nfor\nh\nin\nraw_headers\n]\npopulate_content_length\n=\nb\n\"content-length\"\nnot\nin\nkeys\npopulate_content_type\n=\nb\n\"content-type\"\nnot\nin\nkeys\nbody\n=\ngetattr\n(\nself\n,\n\"body\"\n,\nNone\n)\nif\n(\nbody\nis\nnot\nNone\nand\npopulate_content_length\nand\nnot\n(\nself\n.\nstatus_code\n<\n200\nor\nself\n.\nstatus_code\nin\n(\n204\n,\n304\n))\n):\ncontent_length\n=\nstr\n(\nlen\n(\nbody\n))\nraw_headers\n.\nappend\n((\nb\n\"content-length\"\n,\ncontent_length\n.\nencode\n(\n\"latin-1\"\n)))\ncontent_type\n=\nself\n.\nmedia_type\nif\ncontent_type\nis\nnot\nNone\nand\npopulate_content_type\n:\nif\ncontent_type\n.\nstartswith\n(\n\"text/\"\n)\nand\n\"charset=\"\nnot\nin\ncontent_type\n.\nlower\n():\ncontent_type\n+=\n\"; charset=\"\n+\nself\n.\ncharset\nraw_headers\n.\nappend\n((\nb\n\"content-type\"\n,\ncontent_type\n.\nencode\n(\n\"latin-1\"\n)))\nself\n.\nraw_headers\n=\nraw_headers\nset_cookie\n¶\nset_cookie\n(\nkey\n,\nvalue\n=\n\"\"\n,\nmax_age\n=\nNone\n,\nexpires\n=\nNone\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\npartitioned\n=\nFalse\n,\n)\nSource code in\nstarlette/responses.py\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\ndef\nset_cookie\n(\nself\n,\nkey\n:\nstr\n,\nvalue\n:\nstr\n=\n\"\"\n,\nmax_age\n:\nint\n|\nNone\n=\nNone\n,\nexpires\n:\ndatetime\n|\nstr\n|\nint\n|\nNone\n=\nNone\n,\npath\n:\nstr\n|\nNone\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\npartitioned\n:\nbool\n=\nFalse\n,\n)\n->\nNone\n:\ncookie\n:\nhttp\n.\ncookies\n.\nBaseCookie\n[\nstr\n]\n=\nhttp\n.\ncookies\n.\nSimpleCookie\n()\ncookie\n[\nkey\n]\n=\nvalue\nif\nmax_age\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"max-age\"\n]\n=\nmax_age\nif\nexpires\nis\nnot\nNone\n:\nif\nisinstance\n(\nexpires\n,\ndatetime\n):\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nformat_datetime\n(\nexpires\n,\nusegmt\n=\nTrue\n)\nelse\n:\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nexpires\nif\npath\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"path\"\n]\n=\npath\nif\ndomain\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"domain\"\n]\n=\ndomain\nif\nsecure\n:\ncookie\n[\nkey\n][\n\"secure\"\n]\n=\nTrue\nif\nhttponly\n:\ncookie\n[\nkey\n][\n\"httponly\"\n]\n=\nTrue\nif\nsamesite\nis\nnot\nNone\n:\nassert\nsamesite\n.\nlower\n()\nin\n[\n\"strict\"\n,\n\"lax\"\n,\n\"none\"\n,\n],\n\"samesite must be either 'strict', 'lax' or 'none'\"\ncookie\n[\nkey\n][\n\"samesite\"\n]\n=\nsamesite\nif\npartitioned\n:\nif\nsys\n.\nversion_info\n<\n(\n3\n,\n14\n):\nraise\nValueError\n(\n\"Partitioned cookies are only supported in Python 3.14 and above.\"\n)\n# pragma: no cover\ncookie\n[\nkey\n][\n\"partitioned\"\n]\n=\nTrue\n# pragma: no cover\ncookie_val\n=\ncookie\n.\noutput\n(\nheader\n=\n\"\"\n)\n.\nstrip\n()\nself\n.\nraw_headers\n.\nappend\n((\nb\n\"set-cookie\"\n,\ncookie_val\n.\nencode\n(\n\"latin-1\"\n)))\ndelete_cookie\n¶\ndelete_cookie\n(\nkey\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\n)\nSource code in\nstarlette/responses.py\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\ndef\ndelete_cookie\n(\nself\n,\nkey\n:\nstr\n,\npath\n:\nstr\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\n)\n->\nNone\n:\nself\n.\nset_cookie\n(\nkey\n,\nmax_age\n=\n0\n,\nexpires\n=\n0\n,\npath\n=\npath\n,\ndomain\n=\ndomain\n,\nsecure\n=\nsecure\n,\nhttponly\n=\nhttponly\n,\nsamesite\n=\nsamesite\n,\n)\nfastapi.responses.PlainTextResponse\n¶\nPlainTextResponse\n(\ncontent\n=\nNone\n,\nstatus_code\n=\n200\n,\nheaders\n=\nNone\n,\nmedia_type\n=\nNone\n,\nbackground\n=\nNone\n,\n)\nBases:\nResponse\nSource code in\nstarlette/responses.py\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\ndef\n__init__\n(\nself\n,\ncontent\n:\nAny\n=\nNone\n,\nstatus_code\n:\nint\n=\n200\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nmedia_type\n:\nstr\n|\nNone\n=\nNone\n,\nbackground\n:\nBackgroundTask\n|\nNone\n=\nNone\n,\n)\n->\nNone\n:\nself\n.\nstatus_code\n=\nstatus_code\nif\nmedia_type\nis\nnot\nNone\n:\nself\n.\nmedia_type\n=\nmedia_type\nself\n.\nbackground\n=\nbackground\nself\n.\nbody\n=\nself\n.\nrender\n(\ncontent\n)\nself\n.\ninit_headers\n(\nheaders\n)\ncharset\nclass-attribute\ninstance-attribute\n¶\ncharset\n=\n'utf-8'\nstatus_code\ninstance-attribute\n¶\nstatus_code\n=\nstatus_code\nmedia_type\nclass-attribute\ninstance-attribute\n¶\nmedia_type\n=\n'text/plain'\nbody\ninstance-attribute\n¶\nbody\n=\nrender\n(\ncontent\n)\nbackground\ninstance-attribute\n¶\nbackground\n=\nbackground\nheaders\nproperty\n¶\nheaders\nrender\n¶\nrender\n(\ncontent\n)\nSource code in\nstarlette/responses.py\n50\n51\n52\n53\n54\n55\ndef\nrender\n(\nself\n,\ncontent\n:\nAny\n)\n->\nbytes\n|\nmemoryview\n:\nif\ncontent\nis\nNone\n:\nreturn\nb\n\"\"\nif\nisinstance\n(\ncontent\n,\n(\nbytes\n,\nmemoryview\n)):\nreturn\ncontent\nreturn\ncontent\n.\nencode\n(\nself\n.\ncharset\n)\n# type: ignore\ninit_headers\n¶\ninit_headers\n(\nheaders\n=\nNone\n)\nSource code in\nstarlette/responses.py\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\ndef\ninit_headers\n(\nself\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n)\n->\nNone\n:\nif\nheaders\nis\nNone\n:\nraw_headers\n:\nlist\n[\ntuple\n[\nbytes\n,\nbytes\n]]\n=\n[]\npopulate_content_length\n=\nTrue\npopulate_content_type\n=\nTrue\nelse\n:\nraw_headers\n=\n[(\nk\n.\nlower\n()\n.\nencode\n(\n\"latin-1\"\n),\nv\n.\nencode\n(\n\"latin-1\"\n))\nfor\nk\n,\nv\nin\nheaders\n.\nitems\n()]\nkeys\n=\n[\nh\n[\n0\n]\nfor\nh\nin\nraw_headers\n]\npopulate_content_length\n=\nb\n\"content-length\"\nnot\nin\nkeys\npopulate_content_type\n=\nb\n\"content-type\"\nnot\nin\nkeys\nbody\n=\ngetattr\n(\nself\n,\n\"body\"\n,\nNone\n)\nif\n(\nbody\nis\nnot\nNone\nand\npopulate_content_length\nand\nnot\n(\nself\n.\nstatus_code\n<\n200\nor\nself\n.\nstatus_code\nin\n(\n204\n,\n304\n))\n):\ncontent_length\n=\nstr\n(\nlen\n(\nbody\n))\nraw_headers\n.\nappend\n((\nb\n\"content-length\"\n,\ncontent_length\n.\nencode\n(\n\"latin-1\"\n)))\ncontent_type\n=\nself\n.\nmedia_type\nif\ncontent_type\nis\nnot\nNone\nand\npopulate_content_type\n:\nif\ncontent_type\n.\nstartswith\n(\n\"text/\"\n)\nand\n\"charset=\"\nnot\nin\ncontent_type\n.\nlower\n():\ncontent_type\n+=\n\"; charset=\"\n+\nself\n.\ncharset\nraw_headers\n.\nappend\n((\nb\n\"content-type\"\n,\ncontent_type\n.\nencode\n(\n\"latin-1\"\n)))\nself\n.\nraw_headers\n=\nraw_headers\nset_cookie\n¶\nset_cookie\n(\nkey\n,\nvalue\n=\n\"\"\n,\nmax_age\n=\nNone\n,\nexpires\n=\nNone\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\npartitioned\n=\nFalse\n,\n)\nSource code in\nstarlette/responses.py\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\ndef\nset_cookie\n(\nself\n,\nkey\n:\nstr\n,\nvalue\n:\nstr\n=\n\"\"\n,\nmax_age\n:\nint\n|\nNone\n=\nNone\n,\nexpires\n:\ndatetime\n|\nstr\n|\nint\n|\nNone\n=\nNone\n,\npath\n:\nstr\n|\nNone\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\npartitioned\n:\nbool\n=\nFalse\n,\n)\n->\nNone\n:\ncookie\n:\nhttp\n.\ncookies\n.\nBaseCookie\n[\nstr\n]\n=\nhttp\n.\ncookies\n.\nSimpleCookie\n()\ncookie\n[\nkey\n]\n=\nvalue\nif\nmax_age\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"max-age\"\n]\n=\nmax_age\nif\nexpires\nis\nnot\nNone\n:\nif\nisinstance\n(\nexpires\n,\ndatetime\n):\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nformat_datetime\n(\nexpires\n,\nusegmt\n=\nTrue\n)\nelse\n:\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nexpires\nif\npath\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"path\"\n]\n=\npath\nif\ndomain\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"domain\"\n]\n=\ndomain\nif\nsecure\n:\ncookie\n[\nkey\n][\n\"secure\"\n]\n=\nTrue\nif\nhttponly\n:\ncookie\n[\nkey\n][\n\"httponly\"\n]\n=\nTrue\nif\nsamesite\nis\nnot\nNone\n:\nassert\nsamesite\n.\nlower\n()\nin\n[\n\"strict\"\n,\n\"lax\"\n,\n\"none\"\n,\n],\n\"samesite must be either 'strict', 'lax' or 'none'\"\ncookie\n[\nkey\n][\n\"samesite\"\n]\n=\nsamesite\nif\npartitioned\n:\nif\nsys\n.\nversion_info\n<\n(\n3\n,\n14\n):\nraise\nValueError\n(\n\"Partitioned cookies are only supported in Python 3.14 and above.\"\n)\n# pragma: no cover\ncookie\n[\nkey\n][\n\"partitioned\"\n]\n=\nTrue\n# pragma: no cover\ncookie_val\n=\ncookie\n.\noutput\n(\nheader\n=\n\"\"\n)\n.\nstrip\n()\nself\n.\nraw_headers\n.\nappend\n((\nb\n\"set-cookie\"\n,\ncookie_val\n.\nencode\n(\n\"latin-1\"\n)))\ndelete_cookie\n¶\ndelete_cookie\n(\nkey\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\n)\nSource code in\nstarlette/responses.py\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\ndef\ndelete_cookie\n(\nself\n,\nkey\n:\nstr\n,\npath\n:\nstr\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\n)\n->\nNone\n:\nself\n.\nset_cookie\n(\nkey\n,\nmax_age\n=\n0\n,\nexpires\n=\n0\n,\npath\n=\npath\n,\ndomain\n=\ndomain\n,\nsecure\n=\nsecure\n,\nhttponly\n=\nhttponly\n,\nsamesite\n=\nsamesite\n,\n)\nfastapi.responses.RedirectResponse\n¶\nRedirectResponse\n(\nurl\n,\nstatus_code\n=\n307\n,\nheaders\n=\nNone\n,\nbackground\n=\nNone\n)\nBases:\nResponse\nSource code in\nstarlette/responses.py\n203\n204\n205\n206\n207\n208\n209\n210\n211\ndef\n__init__\n(\nself\n,\nurl\n:\nstr\n|\nURL\n,\nstatus_code\n:\nint\n=\n307\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nbackground\n:\nBackgroundTask\n|\nNone\n=\nNone\n,\n)\n->\nNone\n:\nsuper\n()\n.\n__init__\n(\ncontent\n=\nb\n\"\"\n,\nstatus_code\n=\nstatus_code\n,\nheaders\n=\nheaders\n,\nbackground\n=\nbackground\n)\nself\n.\nheaders\n[\n\"location\"\n]\n=\nquote\n(\nstr\n(\nurl\n),\nsafe\n=\n\":/%#?=@[]!$&'()*+,;\"\n)\ncharset\nclass-attribute\ninstance-attribute\n¶\ncharset\n=\n'utf-8'\nstatus_code\ninstance-attribute\n¶\nstatus_code\n=\nstatus_code\nmedia_type\nclass-attribute\ninstance-attribute\n¶\nmedia_type\n=\nNone\nbody\ninstance-attribute\n¶\nbody\n=\nrender\n(\ncontent\n)\nbackground\ninstance-attribute\n¶\nbackground\n=\nbackground\nheaders\nproperty\n¶\nheaders\nrender\n¶\nrender\n(\ncontent\n)\nSource code in\nstarlette/responses.py\n50\n51\n52\n53\n54\n55\ndef\nrender\n(\nself\n,\ncontent\n:\nAny\n)\n->\nbytes\n|\nmemoryview\n:\nif\ncontent\nis\nNone\n:\nreturn\nb\n\"\"\nif\nisinstance\n(\ncontent\n,\n(\nbytes\n,\nmemoryview\n)):\nreturn\ncontent\nreturn\ncontent\n.\nencode\n(\nself\n.\ncharset\n)\n# type: ignore\ninit_headers\n¶\ninit_headers\n(\nheaders\n=\nNone\n)\nSource code in\nstarlette/responses.py\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\ndef\ninit_headers\n(\nself\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n)\n->\nNone\n:\nif\nheaders\nis\nNone\n:\nraw_headers\n:\nlist\n[\ntuple\n[\nbytes\n,\nbytes\n]]\n=\n[]\npopulate_content_length\n=\nTrue\npopulate_content_type\n=\nTrue\nelse\n:\nraw_headers\n=\n[(\nk\n.\nlower\n()\n.\nencode\n(\n\"latin-1\"\n),\nv\n.\nencode\n(\n\"latin-1\"\n))\nfor\nk\n,\nv\nin\nheaders\n.\nitems\n()]\nkeys\n=\n[\nh\n[\n0\n]\nfor\nh\nin\nraw_headers\n]\npopulate_content_length\n=\nb\n\"content-length\"\nnot\nin\nkeys\npopulate_content_type\n=\nb\n\"content-type\"\nnot\nin\nkeys\nbody\n=\ngetattr\n(\nself\n,\n\"body\"\n,\nNone\n)\nif\n(\nbody\nis\nnot\nNone\nand\npopulate_content_length\nand\nnot\n(\nself\n.\nstatus_code\n<\n200\nor\nself\n.\nstatus_code\nin\n(\n204\n,\n304\n))\n):\ncontent_length\n=\nstr\n(\nlen\n(\nbody\n))\nraw_headers\n.\nappend\n((\nb\n\"content-length\"\n,\ncontent_length\n.\nencode\n(\n\"latin-1\"\n)))\ncontent_type\n=\nself\n.\nmedia_type\nif\ncontent_type\nis\nnot\nNone\nand\npopulate_content_type\n:\nif\ncontent_type\n.\nstartswith\n(\n\"text/\"\n)\nand\n\"charset=\"\nnot\nin\ncontent_type\n.\nlower\n():\ncontent_type\n+=\n\"; charset=\"\n+\nself\n.\ncharset\nraw_headers\n.\nappend\n((\nb\n\"content-type\"\n,\ncontent_type\n.\nencode\n(\n\"latin-1\"\n)))\nself\n.\nraw_headers\n=\nraw_headers\nset_cookie\n¶\nset_cookie\n(\nkey\n,\nvalue\n=\n\"\"\n,\nmax_age\n=\nNone\n,\nexpires\n=\nNone\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\npartitioned\n=\nFalse\n,\n)\nSource code in\nstarlette/responses.py\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\ndef\nset_cookie\n(\nself\n,\nkey\n:\nstr\n,\nvalue\n:\nstr\n=\n\"\"\n,\nmax_age\n:\nint\n|\nNone\n=\nNone\n,\nexpires\n:\ndatetime\n|\nstr\n|\nint\n|\nNone\n=\nNone\n,\npath\n:\nstr\n|\nNone\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\npartitioned\n:\nbool\n=\nFalse\n,\n)\n->\nNone\n:\ncookie\n:\nhttp\n.\ncookies\n.\nBaseCookie\n[\nstr\n]\n=\nhttp\n.\ncookies\n.\nSimpleCookie\n()\ncookie\n[\nkey\n]\n=\nvalue\nif\nmax_age\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"max-age\"\n]\n=\nmax_age\nif\nexpires\nis\nnot\nNone\n:\nif\nisinstance\n(\nexpires\n,\ndatetime\n):\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nformat_datetime\n(\nexpires\n,\nusegmt\n=\nTrue\n)\nelse\n:\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nexpires\nif\npath\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"path\"\n]\n=\npath\nif\ndomain\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"domain\"\n]\n=\ndomain\nif\nsecure\n:\ncookie\n[\nkey\n][\n\"secure\"\n]\n=\nTrue\nif\nhttponly\n:\ncookie\n[\nkey\n][\n\"httponly\"\n]\n=\nTrue\nif\nsamesite\nis\nnot\nNone\n:\nassert\nsamesite\n.\nlower\n()\nin\n[\n\"strict\"\n,\n\"lax\"\n,\n\"none\"\n,\n],\n\"samesite must be either 'strict', 'lax' or 'none'\"\ncookie\n[\nkey\n][\n\"samesite\"\n]\n=\nsamesite\nif\npartitioned\n:\nif\nsys\n.\nversion_info\n<\n(\n3\n,\n14\n):\nraise\nValueError\n(\n\"Partitioned cookies are only supported in Python 3.14 and above.\"\n)\n# pragma: no cover\ncookie\n[\nkey\n][\n\"partitioned\"\n]\n=\nTrue\n# pragma: no cover\ncookie_val\n=\ncookie\n.\noutput\n(\nheader\n=\n\"\"\n)\n.\nstrip\n()\nself\n.\nraw_headers\n.\nappend\n((\nb\n\"set-cookie\"\n,\ncookie_val\n.\nencode\n(\n\"latin-1\"\n)))\ndelete_cookie\n¶\ndelete_cookie\n(\nkey\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\n)\nSource code in\nstarlette/responses.py\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\ndef\ndelete_cookie\n(\nself\n,\nkey\n:\nstr\n,\npath\n:\nstr\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\n)\n->\nNone\n:\nself\n.\nset_cookie\n(\nkey\n,\nmax_age\n=\n0\n,\nexpires\n=\n0\n,\npath\n=\npath\n,\ndomain\n=\ndomain\n,\nsecure\n=\nsecure\n,\nhttponly\n=\nhttponly\n,\nsamesite\n=\nsamesite\n,\n)\nfastapi.responses.Response\n¶\nResponse\n(\ncontent\n=\nNone\n,\nstatus_code\n=\n200\n,\nheaders\n=\nNone\n,\nmedia_type\n=\nNone\n,\nbackground\n=\nNone\n,\n)\nSource code in\nstarlette/responses.py\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\ndef\n__init__\n(\nself\n,\ncontent\n:\nAny\n=\nNone\n,\nstatus_code\n:\nint\n=\n200\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nmedia_type\n:\nstr\n|\nNone\n=\nNone\n,\nbackground\n:\nBackgroundTask\n|\nNone\n=\nNone\n,\n)\n->\nNone\n:\nself\n.\nstatus_code\n=\nstatus_code\nif\nmedia_type\nis\nnot\nNone\n:\nself\n.\nmedia_type\n=\nmedia_type\nself\n.\nbackground\n=\nbackground\nself\n.\nbody\n=\nself\n.\nrender\n(\ncontent\n)\nself\n.\ninit_headers\n(\nheaders\n)\ncharset\nclass-attribute\ninstance-attribute\n¶\ncharset\n=\n'utf-8'\nstatus_code\ninstance-attribute\n¶\nstatus_code\n=\nstatus_code\nmedia_type\nclass-attribute\ninstance-attribute\n¶\nmedia_type\n=\nNone\nbody\ninstance-attribute\n¶\nbody\n=\nrender\n(\ncontent\n)\nbackground\ninstance-attribute\n¶\nbackground\n=\nbackground\nheaders\nproperty\n¶\nheaders\nrender\n¶\nrender\n(\ncontent\n)\nSource code in\nstarlette/responses.py\n50\n51\n52\n53\n54\n55\ndef\nrender\n(\nself\n,\ncontent\n:\nAny\n)\n->\nbytes\n|\nmemoryview\n:\nif\ncontent\nis\nNone\n:\nreturn\nb\n\"\"\nif\nisinstance\n(\ncontent\n,\n(\nbytes\n,\nmemoryview\n)):\nreturn\ncontent\nreturn\ncontent\n.\nencode\n(\nself\n.\ncharset\n)\n# type: ignore\ninit_headers\n¶\ninit_headers\n(\nheaders\n=\nNone\n)\nSource code in\nstarlette/responses.py\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\ndef\ninit_headers\n(\nself\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n)\n->\nNone\n:\nif\nheaders\nis\nNone\n:\nraw_headers\n:\nlist\n[\ntuple\n[\nbytes\n,\nbytes\n]]\n=\n[]\npopulate_content_length\n=\nTrue\npopulate_content_type\n=\nTrue\nelse\n:\nraw_headers\n=\n[(\nk\n.\nlower\n()\n.\nencode\n(\n\"latin-1\"\n),\nv\n.\nencode\n(\n\"latin-1\"\n))\nfor\nk\n,\nv\nin\nheaders\n.\nitems\n()]\nkeys\n=\n[\nh\n[\n0\n]\nfor\nh\nin\nraw_headers\n]\npopulate_content_length\n=\nb\n\"content-length\"\nnot\nin\nkeys\npopulate_content_type\n=\nb\n\"content-type\"\nnot\nin\nkeys\nbody\n=\ngetattr\n(\nself\n,\n\"body\"\n,\nNone\n)\nif\n(\nbody\nis\nnot\nNone\nand\npopulate_content_length\nand\nnot\n(\nself\n.\nstatus_code\n<\n200\nor\nself\n.\nstatus_code\nin\n(\n204\n,\n304\n))\n):\ncontent_length\n=\nstr\n(\nlen\n(\nbody\n))\nraw_headers\n.\nappend\n((\nb\n\"content-length\"\n,\ncontent_length\n.\nencode\n(\n\"latin-1\"\n)))\ncontent_type\n=\nself\n.\nmedia_type\nif\ncontent_type\nis\nnot\nNone\nand\npopulate_content_type\n:\nif\ncontent_type\n.\nstartswith\n(\n\"text/\"\n)\nand\n\"charset=\"\nnot\nin\ncontent_type\n.\nlower\n():\ncontent_type\n+=\n\"; charset=\"\n+\nself\n.\ncharset\nraw_headers\n.\nappend\n((\nb\n\"content-type\"\n,\ncontent_type\n.\nencode\n(\n\"latin-1\"\n)))\nself\n.\nraw_headers\n=\nraw_headers\nset_cookie\n¶\nset_cookie\n(\nkey\n,\nvalue\n=\n\"\"\n,\nmax_age\n=\nNone\n,\nexpires\n=\nNone\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\npartitioned\n=\nFalse\n,\n)\nSource code in\nstarlette/responses.py\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\ndef\nset_cookie\n(\nself\n,\nkey\n:\nstr\n,\nvalue\n:\nstr\n=\n\"\"\n,\nmax_age\n:\nint\n|\nNone\n=\nNone\n,\nexpires\n:\ndatetime\n|\nstr\n|\nint\n|\nNone\n=\nNone\n,\npath\n:\nstr\n|\nNone\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\npartitioned\n:\nbool\n=\nFalse\n,\n)\n->\nNone\n:\ncookie\n:\nhttp\n.\ncookies\n.\nBaseCookie\n[\nstr\n]\n=\nhttp\n.\ncookies\n.\nSimpleCookie\n()\ncookie\n[\nkey\n]\n=\nvalue\nif\nmax_age\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"max-age\"\n]\n=\nmax_age\nif\nexpires\nis\nnot\nNone\n:\nif\nisinstance\n(\nexpires\n,\ndatetime\n):\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nformat_datetime\n(\nexpires\n,\nusegmt\n=\nTrue\n)\nelse\n:\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nexpires\nif\npath\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"path\"\n]\n=\npath\nif\ndomain\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"domain\"\n]\n=\ndomain\nif\nsecure\n:\ncookie\n[\nkey\n][\n\"secure\"\n]\n=\nTrue\nif\nhttponly\n:\ncookie\n[\nkey\n][\n\"httponly\"\n]\n=\nTrue\nif\nsamesite\nis\nnot\nNone\n:\nassert\nsamesite\n.\nlower\n()\nin\n[\n\"strict\"\n,\n\"lax\"\n,\n\"none\"\n,\n],\n\"samesite must be either 'strict', 'lax' or 'none'\"\ncookie\n[\nkey\n][\n\"samesite\"\n]\n=\nsamesite\nif\npartitioned\n:\nif\nsys\n.\nversion_info\n<\n(\n3\n,\n14\n):\nraise\nValueError\n(\n\"Partitioned cookies are only supported in Python 3.14 and above.\"\n)\n# pragma: no cover\ncookie\n[\nkey\n][\n\"partitioned\"\n]\n=\nTrue\n# pragma: no cover\ncookie_val\n=\ncookie\n.\noutput\n(\nheader\n=\n\"\"\n)\n.\nstrip\n()\nself\n.\nraw_headers\n.\nappend\n((\nb\n\"set-cookie\"\n,\ncookie_val\n.\nencode\n(\n\"latin-1\"\n)))\ndelete_cookie\n¶\ndelete_cookie\n(\nkey\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\n)\nSource code in\nstarlette/responses.py\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\ndef\ndelete_cookie\n(\nself\n,\nkey\n:\nstr\n,\npath\n:\nstr\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\n)\n->\nNone\n:\nself\n.\nset_cookie\n(\nkey\n,\nmax_age\n=\n0\n,\nexpires\n=\n0\n,\npath\n=\npath\n,\ndomain\n=\ndomain\n,\nsecure\n=\nsecure\n,\nhttponly\n=\nhttponly\n,\nsamesite\n=\nsamesite\n,\n)\nfastapi.responses.StreamingResponse\n¶\nStreamingResponse\n(\ncontent\n,\nstatus_code\n=\n200\n,\nheaders\n=\nNone\n,\nmedia_type\n=\nNone\n,\nbackground\n=\nNone\n,\n)\nBases:\nResponse\nSource code in\nstarlette/responses.py\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\ndef\n__init__\n(\nself\n,\ncontent\n:\nContentStream\n,\nstatus_code\n:\nint\n=\n200\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n,\nmedia_type\n:\nstr\n|\nNone\n=\nNone\n,\nbackground\n:\nBackgroundTask\n|\nNone\n=\nNone\n,\n)\n->\nNone\n:\nif\nisinstance\n(\ncontent\n,\nAsyncIterable\n):\nself\n.\nbody_iterator\n=\ncontent\nelse\n:\nself\n.\nbody_iterator\n=\niterate_in_threadpool\n(\ncontent\n)\nself\n.\nstatus_code\n=\nstatus_code\nself\n.\nmedia_type\n=\nself\n.\nmedia_type\nif\nmedia_type\nis\nNone\nelse\nmedia_type\nself\n.\nbackground\n=\nbackground\nself\n.\ninit_headers\n(\nheaders\n)\nbody_iterator\ninstance-attribute\n¶\nbody_iterator\ncharset\nclass-attribute\ninstance-attribute\n¶\ncharset\n=\n'utf-8'\nstatus_code\ninstance-attribute\n¶\nstatus_code\n=\nstatus_code\nmedia_type\ninstance-attribute\n¶\nmedia_type\n=\n(\nmedia_type\nif\nmedia_type\nis\nNone\nelse\nmedia_type\n)\nbody\ninstance-attribute\n¶\nbody\n=\nrender\n(\ncontent\n)\nbackground\ninstance-attribute\n¶\nbackground\n=\nbackground\nheaders\nproperty\n¶\nheaders\nrender\n¶\nrender\n(\ncontent\n)\nSource code in\nstarlette/responses.py\n50\n51\n52\n53\n54\n55\ndef\nrender\n(\nself\n,\ncontent\n:\nAny\n)\n->\nbytes\n|\nmemoryview\n:\nif\ncontent\nis\nNone\n:\nreturn\nb\n\"\"\nif\nisinstance\n(\ncontent\n,\n(\nbytes\n,\nmemoryview\n)):\nreturn\ncontent\nreturn\ncontent\n.\nencode\n(\nself\n.\ncharset\n)\n# type: ignore\ninit_headers\n¶\ninit_headers\n(\nheaders\n=\nNone\n)\nSource code in\nstarlette/responses.py\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\ndef\ninit_headers\n(\nself\n,\nheaders\n:\nMapping\n[\nstr\n,\nstr\n]\n|\nNone\n=\nNone\n)\n->\nNone\n:\nif\nheaders\nis\nNone\n:\nraw_headers\n:\nlist\n[\ntuple\n[\nbytes\n,\nbytes\n]]\n=\n[]\npopulate_content_length\n=\nTrue\npopulate_content_type\n=\nTrue\nelse\n:\nraw_headers\n=\n[(\nk\n.\nlower\n()\n.\nencode\n(\n\"latin-1\"\n),\nv\n.\nencode\n(\n\"latin-1\"\n))\nfor\nk\n,\nv\nin\nheaders\n.\nitems\n()]\nkeys\n=\n[\nh\n[\n0\n]\nfor\nh\nin\nraw_headers\n]\npopulate_content_length\n=\nb\n\"content-length\"\nnot\nin\nkeys\npopulate_content_type\n=\nb\n\"content-type\"\nnot\nin\nkeys\nbody\n=\ngetattr\n(\nself\n,\n\"body\"\n,\nNone\n)\nif\n(\nbody\nis\nnot\nNone\nand\npopulate_content_length\nand\nnot\n(\nself\n.\nstatus_code\n<\n200\nor\nself\n.\nstatus_code\nin\n(\n204\n,\n304\n))\n):\ncontent_length\n=\nstr\n(\nlen\n(\nbody\n))\nraw_headers\n.\nappend\n((\nb\n\"content-length\"\n,\ncontent_length\n.\nencode\n(\n\"latin-1\"\n)))\ncontent_type\n=\nself\n.\nmedia_type\nif\ncontent_type\nis\nnot\nNone\nand\npopulate_content_type\n:\nif\ncontent_type\n.\nstartswith\n(\n\"text/\"\n)\nand\n\"charset=\"\nnot\nin\ncontent_type\n.\nlower\n():\ncontent_type\n+=\n\"; charset=\"\n+\nself\n.\ncharset\nraw_headers\n.\nappend\n((\nb\n\"content-type\"\n,\ncontent_type\n.\nencode\n(\n\"latin-1\"\n)))\nself\n.\nraw_headers\n=\nraw_headers\nset_cookie\n¶\nset_cookie\n(\nkey\n,\nvalue\n=\n\"\"\n,\nmax_age\n=\nNone\n,\nexpires\n=\nNone\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\npartitioned\n=\nFalse\n,\n)\nSource code in\nstarlette/responses.py\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\ndef\nset_cookie\n(\nself\n,\nkey\n:\nstr\n,\nvalue\n:\nstr\n=\n\"\"\n,\nmax_age\n:\nint\n|\nNone\n=\nNone\n,\nexpires\n:\ndatetime\n|\nstr\n|\nint\n|\nNone\n=\nNone\n,\npath\n:\nstr\n|\nNone\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\npartitioned\n:\nbool\n=\nFalse\n,\n)\n->\nNone\n:\ncookie\n:\nhttp\n.\ncookies\n.\nBaseCookie\n[\nstr\n]\n=\nhttp\n.\ncookies\n.\nSimpleCookie\n()\ncookie\n[\nkey\n]\n=\nvalue\nif\nmax_age\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"max-age\"\n]\n=\nmax_age\nif\nexpires\nis\nnot\nNone\n:\nif\nisinstance\n(\nexpires\n,\ndatetime\n):\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nformat_datetime\n(\nexpires\n,\nusegmt\n=\nTrue\n)\nelse\n:\ncookie\n[\nkey\n][\n\"expires\"\n]\n=\nexpires\nif\npath\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"path\"\n]\n=\npath\nif\ndomain\nis\nnot\nNone\n:\ncookie\n[\nkey\n][\n\"domain\"\n]\n=\ndomain\nif\nsecure\n:\ncookie\n[\nkey\n][\n\"secure\"\n]\n=\nTrue\nif\nhttponly\n:\ncookie\n[\nkey\n][\n\"httponly\"\n]\n=\nTrue\nif\nsamesite\nis\nnot\nNone\n:\nassert\nsamesite\n.\nlower\n()\nin\n[\n\"strict\"\n,\n\"lax\"\n,\n\"none\"\n,\n],\n\"samesite must be either 'strict', 'lax' or 'none'\"\ncookie\n[\nkey\n][\n\"samesite\"\n]\n=\nsamesite\nif\npartitioned\n:\nif\nsys\n.\nversion_info\n<\n(\n3\n,\n14\n):\nraise\nValueError\n(\n\"Partitioned cookies are only supported in Python 3.14 and above.\"\n)\n# pragma: no cover\ncookie\n[\nkey\n][\n\"partitioned\"\n]\n=\nTrue\n# pragma: no cover\ncookie_val\n=\ncookie\n.\noutput\n(\nheader\n=\n\"\"\n)\n.\nstrip\n()\nself\n.\nraw_headers\n.\nappend\n((\nb\n\"set-cookie\"\n,\ncookie_val\n.\nencode\n(\n\"latin-1\"\n)))\ndelete_cookie\n¶\ndelete_cookie\n(\nkey\n,\npath\n=\n\"/\"\n,\ndomain\n=\nNone\n,\nsecure\n=\nFalse\n,\nhttponly\n=\nFalse\n,\nsamesite\n=\n\"lax\"\n,\n)\nSource code in\nstarlette/responses.py\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\ndef\ndelete_cookie\n(\nself\n,\nkey\n:\nstr\n,\npath\n:\nstr\n=\n\"/\"\n,\ndomain\n:\nstr\n|\nNone\n=\nNone\n,\nsecure\n:\nbool\n=\nFalse\n,\nhttponly\n:\nbool\n=\nFalse\n,\nsamesite\n:\nLiteral\n[\n\"lax\"\n,\n\"strict\"\n,\n\"none\"\n]\n|\nNone\n=\n\"lax\"\n,\n)\n->\nNone\n:\nself\n.\nset_cookie\n(\nkey\n,\nmax_age\n=\n0\n,\nexpires\n=\n0\n,\npath\n=\npath\n,\ndomain\n=\ndomain\n,\nsecure\n=\nsecure\n,\nhttponly\n=\nhttponly\n,\nsamesite\n=\nsamesite\n,\n)\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/cors/",
    "title": "CORS (Cross-Origin Resource Sharing)¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nCORS (Cross-Origin Resource Sharing)\nTable of contents\nOrigin\nSteps\nWildcards\nUse\nCORSMiddleware\nCORS preflight requests\nSimple requests\nMore info\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nOrigin\nSteps\nWildcards\nUse\nCORSMiddleware\nCORS preflight requests\nSimple requests\nMore info\nFastAPI\nLearn\nTutorial - User Guide\nCORS (Cross-Origin Resource Sharing)\n¶\nCORS or \"Cross-Origin Resource Sharing\"\nrefers to the situations when a frontend running in a browser has JavaScript code that communicates with a backend, and the backend is in a different \"origin\" than the frontend.\nOrigin\n¶\nAn origin is the combination of protocol (\nhttp\n,\nhttps\n), domain (\nmyapp.com\n,\nlocalhost\n,\nlocalhost.tiangolo.com\n), and port (\n80\n,\n443\n,\n8080\n).\nSo, all these are different origins:\nhttp://localhost\nhttps://localhost\nhttp://localhost:8080\nEven if they are all in\nlocalhost\n, they use different protocols or ports, so, they are different \"origins\".\nSteps\n¶\nSo, let's say you have a frontend running in your browser at\nhttp://localhost:8080\n, and its JavaScript is trying to communicate with a backend running at\nhttp://localhost\n(because we don't specify a port, the browser will assume the default port\n80\n).\nThen, the browser will send an HTTP\nOPTIONS\nrequest to the\n:80\n-backend, and if the backend sends the appropriate headers authorizing the communication from this different origin (\nhttp://localhost:8080\n) then the\n:8080\n-browser will let the JavaScript in the frontend send its request to the\n:80\n-backend.\nTo achieve this, the\n:80\n-backend must have a list of \"allowed origins\".\nIn this case, the list would have to include\nhttp://localhost:8080\nfor the\n:8080\n-frontend to work correctly.\nWildcards\n¶\nIt's also possible to declare the list as\n\"*\"\n(a \"wildcard\") to say that all are allowed.\nBut that will only allow certain types of communication, excluding everything that involves credentials: Cookies, Authorization headers like those used with Bearer Tokens, etc.\nSo, for everything to work correctly, it's better to specify explicitly the allowed origins.\nUse\nCORSMiddleware\n¶\nYou can configure it in your\nFastAPI\napplication using the\nCORSMiddleware\n.\nImport\nCORSMiddleware\n.\nCreate a list of allowed origins (as strings).\nAdd it as a \"middleware\" to your\nFastAPI\napplication.\nYou can also specify whether your backend allows:\nCredentials (Authorization headers, Cookies, etc).\nSpecific HTTP methods (\nPOST\n,\nPUT\n) or all of them with the wildcard\n\"*\"\n.\nSpecific HTTP headers or all of them with the wildcard\n\"*\"\n.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\nfrom\nfastapi.middleware.cors\nimport\nCORSMiddleware\napp\n=\nFastAPI\n()\norigins\n=\n[\n\"http://localhost.tiangolo.com\"\n,\n\"https://localhost.tiangolo.com\"\n,\n\"http://localhost\"\n,\n\"http://localhost:8080\"\n,\n]\napp\n.\nadd_middleware\n(\nCORSMiddleware\n,\nallow_origins\n=\norigins\n,\nallow_credentials\n=\nTrue\n,\nallow_methods\n=\n[\n\"*\"\n],\nallow_headers\n=\n[\n\"*\"\n],\n)\n@app\n.\nget\n(\n\"/\"\n)\nasync\ndef\nmain\n():\nreturn\n{\n\"message\"\n:\n\"Hello World\"\n}\nThe default parameters used by the\nCORSMiddleware\nimplementation are restrictive by default, so you'll need to explicitly enable particular origins, methods, or headers, in order for browsers to be permitted to use them in a Cross-Domain context.\nThe following arguments are supported:\nallow_origins\n- A list of origins that should be permitted to make cross-origin requests. E.g.\n['https://example.org', 'https://www.example.org']\n. You can use\n['*']\nto allow any origin.\nallow_origin_regex\n- A regex string to match against origins that should be permitted to make cross-origin requests. e.g.\n'https://.*\\.example\\.org'\n.\nallow_methods\n- A list of HTTP methods that should be allowed for cross-origin requests. Defaults to\n['GET']\n. You can use\n['*']\nto allow all standard methods.\nallow_headers\n- A list of HTTP request headers that should be supported for cross-origin requests. Defaults to\n[]\n. You can use\n['*']\nto allow all headers. The\nAccept\n,\nAccept-Language\n,\nContent-Language\nand\nContent-Type\nheaders are always allowed for\nsimple CORS requests\n.\nallow_credentials\n- Indicate that cookies should be supported for cross-origin requests. Defaults to\nFalse\n.\nNone of\nallow_origins\n,\nallow_methods\nand\nallow_headers\ncan be set to\n['*']\nif\nallow_credentials\nis set to\nTrue\n. All of them must be\nexplicitly specified\n.\nexpose_headers\n- Indicate any response headers that should be made accessible to the browser. Defaults to\n[]\n.\nmax_age\n- Sets a maximum time in seconds for browsers to cache CORS responses. Defaults to\n600\n.\nThe middleware responds to two particular types of HTTP request...\nCORS preflight requests\n¶\nThese are any\nOPTIONS\nrequest with\nOrigin\nand\nAccess-Control-Request-Method\nheaders.\nIn this case the middleware will intercept the incoming request and respond with appropriate CORS headers, and either a\n200\nor\n400\nresponse for informational purposes.\nSimple requests\n¶\nAny request with an\nOrigin\nheader. In this case the middleware will pass the request through as normal, but will include appropriate CORS headers on the response.\nMore info\n¶\nFor more info about\nCORS\n, check the\nMozilla CORS documentation\n.\nTechnical Details\nYou could also use\nfrom starlette.middleware.cors import CORSMiddleware\n.\nFastAPI\nprovides several middlewares in\nfastapi.middleware\njust as a convenience for you, the developer. But most of the available middlewares come directly from Starlette.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/sql-databases/",
    "title": "SQL (Relational) Databases¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nSQL (Relational) Databases\nTable of contents\nInstall\nSQLModel\nCreate the App with a Single Model\nCreate Models\nCreate an Engine\nCreate the Tables\nCreate a Session Dependency\nCreate Database Tables on Startup\nCreate a Hero\nRead Heroes\nRead One Hero\nDelete a Hero\nRun the App\nUpdate the App with Multiple Models\nCreate Multiple Models\nHeroBase\n- the base class\nHero\n- the\ntable model\nHeroPublic\n- the public\ndata model\nHeroCreate\n- the\ndata model\nto create a hero\nHeroUpdate\n- the\ndata model\nto update a hero\nCreate with\nHeroCreate\nand return a\nHeroPublic\nRead Heroes with\nHeroPublic\nRead One Hero with\nHeroPublic\nUpdate a Hero with\nHeroUpdate\nDelete a Hero Again\nRun the App Again\nRecap\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nInstall\nSQLModel\nCreate the App with a Single Model\nCreate Models\nCreate an Engine\nCreate the Tables\nCreate a Session Dependency\nCreate Database Tables on Startup\nCreate a Hero\nRead Heroes\nRead One Hero\nDelete a Hero\nRun the App\nUpdate the App with Multiple Models\nCreate Multiple Models\nHeroBase\n- the base class\nHero\n- the\ntable model\nHeroPublic\n- the public\ndata model\nHeroCreate\n- the\ndata model\nto create a hero\nHeroUpdate\n- the\ndata model\nto update a hero\nCreate with\nHeroCreate\nand return a\nHeroPublic\nRead Heroes with\nHeroPublic\nRead One Hero with\nHeroPublic\nUpdate a Hero with\nHeroUpdate\nDelete a Hero Again\nRun the App Again\nRecap\nFastAPI\nLearn\nTutorial - User Guide\nSQL (Relational) Databases\n¶\nFastAPI\ndoesn't require you to use a SQL (relational) database. But you can use\nany database\nthat you want.\nHere we'll see an example using\nSQLModel\n.\nSQLModel\nis built on top of\nSQLAlchemy\nand Pydantic. It was made by the same author of\nFastAPI\nto be the perfect match for FastAPI applications that need to use\nSQL databases\n.\nTip\nYou could use any other SQL or NoSQL database library you want (in some cases called\n\"ORMs\"\n), FastAPI doesn't force you to use anything. 😎\nAs SQLModel is based on SQLAlchemy, you can easily use\nany database supported\nby SQLAlchemy (which makes them also supported by SQLModel), like:\nPostgreSQL\nMySQL\nSQLite\nOracle\nMicrosoft SQL Server, etc.\nIn this example, we'll use\nSQLite\n, because it uses a single file and Python has integrated support. So, you can copy this example and run it as is.\nLater, for your production application, you might want to use a database server like\nPostgreSQL\n.\nTip\nThere is an official project generator with\nFastAPI\nand\nPostgreSQL\nincluding a frontend and more tools:\nhttps://github.com/fastapi/full-stack-fastapi-template\nThis is a very simple and short tutorial, if you want to learn about databases in general, about SQL, or more advanced features, go to the\nSQLModel docs\n.\nInstall\nSQLModel\n¶\nFirst, make sure you create your\nvirtual environment\n, activate it, and then install\nsqlmodel\n:\n$\npip\ninstall\nsqlmodel\n---> 100%\nCreate the App with a Single Model\n¶\nWe'll create the simplest first version of the app with a single\nSQLModel\nmodel first.\nLater we'll improve it increasing security and versatility with\nmultiple models\nbelow. 🤓\nCreate Models\n¶\nImport\nSQLModel\nand create a database model:\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nThe\nHero\nclass is very similar to a Pydantic model (in fact, underneath, it actually\nis a Pydantic model\n).\nThere are a few differences:\ntable=True\ntells SQLModel that this is a\ntable model\n, it should represent a\ntable\nin the SQL database, it's not just a\ndata model\n(as would be any other regular Pydantic class).\nField(primary_key=True)\ntells SQLModel that the\nid\nis the\nprimary key\nin the SQL database (you can learn more about SQL primary keys in the SQLModel docs).\nBy having the type as\nint | None\n, SQLModel will know that this column should be an\nINTEGER\nin the SQL database and that it should be\nNULLABLE\n.\nField(index=True)\ntells SQLModel that it should create a\nSQL index\nfor this column, that would allow faster lookups in the database when reading data filtered by this column.\nSQLModel will know that something declared as\nstr\nwill be a SQL column of type\nTEXT\n(or\nVARCHAR\n, depending on the database).\nCreate an Engine\n¶\nA SQLModel\nengine\n(underneath it's actually a SQLAlchemy\nengine\n) is what\nholds the connections\nto the database.\nYou would have\none single\nengine\nobject\nfor all your code to connect to the same database.\nPython 3.10+\n# Code above omitted 👆\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nUsing\ncheck_same_thread=False\nallows FastAPI to use the same SQLite database in different threads. This is necessary as\none single request\ncould use\nmore than one thread\n(for example in dependencies).\nDon't worry, with the way the code is structured, we'll make sure we use\na single SQLModel\nsession\nper request\nlater, this is actually what the\ncheck_same_thread\nis trying to achieve.\nCreate the Tables\n¶\nWe then add a function that uses\nSQLModel.metadata.create_all(engine)\nto\ncreate the tables\nfor all the\ntable models\n.\nPython 3.10+\n# Code above omitted 👆\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nCreate a Session Dependency\n¶\nA\nSession\nis what stores the\nobjects in memory\nand keeps track of any changes needed in the data, then it\nuses the\nengine\nto communicate with the database.\nWe will create a FastAPI\ndependency\nwith\nyield\nthat will provide a new\nSession\nfor each request. This is what ensures that we use a single session per request. 🤓\nThen we create an\nAnnotated\ndependency\nSessionDep\nto simplify the rest of the code that will use this dependency.\nPython 3.10+\n# Code above omitted 👆\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nCreate Database Tables on Startup\n¶\nWe will create the database tables when the application starts.\nPython 3.10+\n# Code above omitted 👆\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nHere we create the tables on an application startup event.\nFor production you would probably use a migration script that runs before you start your app. 🤓\nTip\nSQLModel will have migration utilities wrapping Alembic, but for now, you can use\nAlembic\ndirectly.\nCreate a Hero\n¶\nBecause each SQLModel model is also a Pydantic model, you can use it in the same\ntype annotations\nthat you could use Pydantic models.\nFor example, if you declare a parameter of type\nHero\n, it will be read from the\nJSON body\n.\nThe same way, you can declare it as the function's\nreturn type\n, and then the shape of the data will show up in the automatic API docs UI.\nPython 3.10+\n# Code above omitted 👆\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nHere we use the\nSessionDep\ndependency (a\nSession\n) to add the new\nHero\nto the\nSession\ninstance, commit the changes to the database, refresh the data in the\nhero\n, and then return it.\nRead Heroes\n¶\nWe can\nread\nHero\ns from the database using a\nselect()\n. We can include a\nlimit\nand\noffset\nto paginate the results.\nPython 3.10+\n# Code above omitted 👆\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nRead One Hero\n¶\nWe can\nread\na single\nHero\n.\nPython 3.10+\n# Code above omitted 👆\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nDelete a Hero\n¶\nWe can also\ndelete\na\nHero\n.\nPython 3.10+\n# Code above omitted 👆\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n)\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nlist\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHero\n(\nSQLModel\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nsecret_name\n:\nstr\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n)\ndef\ncreate_hero\n(\nhero\n:\nHero\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nsession\n.\nadd\n(\nhero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero\n)\nreturn\nhero\n@app\n.\nget\n(\n\"/heroes/\"\n)\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n)\n->\nList\n[\nHero\n]:\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n))\n->\nHero\n:\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nRun the App\n¶\nYou can run the app:\n$\nfastapi\ndev\nmain.py\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nThen go to the\n/docs\nUI, you will see that\nFastAPI\nis using these\nmodels\nto\ndocument\nthe API, and it will use them to\nserialize\nand\nvalidate\nthe data too.\nUpdate the App with Multiple Models\n¶\nNow let's\nrefactor\nthis app a bit to increase\nsecurity\nand\nversatility\n.\nIf you check the previous app, in the UI you can see that, up to now, it lets the client decide the\nid\nof the\nHero\nto create. 😱\nWe shouldn't let that happen, they could overwrite an\nid\nwe already have assigned in the DB. Deciding the\nid\nshould be done by the\nbackend\nor the\ndatabase\n,\nnot by the client\n.\nAdditionally, we create a\nsecret_name\nfor the hero, but so far, we are returning it everywhere, that's not very\nsecret\n... 😅\nWe'll fix these things by adding a few\nextra models\n. Here's where SQLModel will shine. ✨\nCreate Multiple Models\n¶\nIn\nSQLModel\n, any model class that has\ntable=True\nis a\ntable model\n.\nAnd any model class that doesn't have\ntable=True\nis a\ndata model\n, these ones are actually just Pydantic models (with a couple of small extra features). 🤓\nWith SQLModel, we can use\ninheritance\nto\navoid duplicating\nall the fields in all the cases.\nHeroBase\n- the base class\n¶\nLet's start with a\nHeroBase\nmodel that has all the\nfields that are shared\nby all the models:\nname\nage\nPython 3.10+\n# Code above omitted 👆\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nHero\n- the\ntable model\n¶\nThen let's create\nHero\n, the actual\ntable model\n, with the\nextra fields\nthat are not always in the other models:\nid\nsecret_name\nBecause\nHero\ninherits form\nHeroBase\n, it\nalso\nhas the\nfields\ndeclared in\nHeroBase\n, so all the fields for\nHero\nare:\nid\nname\nage\nsecret_name\nPython 3.10+\n# Code above omitted 👆\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nHeroPublic\n- the public\ndata model\n¶\nNext, we create a\nHeroPublic\nmodel, this is the one that will be\nreturned\nto the clients of the API.\nIt has the same fields as\nHeroBase\n, so it won't include\nsecret_name\n.\nFinally, the identity of our heroes is protected! 🥷\nIt also re-declares\nid: int\n. By doing this, we are making a\ncontract\nwith the API clients, so that they can always expect the\nid\nto be there and to be an\nint\n(it will never be\nNone\n).\nTip\nHaving the return model ensure that a value is always available and always\nint\n(not\nNone\n) is very useful for the API clients, they can write much simpler code having this certainty.\nAlso,\nautomatically generated clients\nwill have simpler interfaces, so that the developers communicating with your API can have a much better time working with your API. 😎\nAll the fields in\nHeroPublic\nare the same as in\nHeroBase\n, with\nid\ndeclared as\nint\n(not\nNone\n):\nid\nname\nage\nPython 3.10+\n# Code above omitted 👆\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nHeroCreate\n- the\ndata model\nto create a hero\n¶\nNow we create a\nHeroCreate\nmodel, this is the one that will\nvalidate\nthe data from the clients.\nIt has the same fields as\nHeroBase\n, and it also has\nsecret_name\n.\nNow, when the clients\ncreate a new hero\n, they will send the\nsecret_name\n, it will be stored in the database, but those secret names won't be returned in the API to the clients.\nTip\nThis is how you would handle\npasswords\n. Receive them, but don't return them in the API.\nYou would also\nhash\nthe values of the passwords before storing them,\nnever store them in plain text\n.\nThe fields of\nHeroCreate\nare:\nname\nage\nsecret_name\nPython 3.10+\n# Code above omitted 👆\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nHeroUpdate\n- the\ndata model\nto update a hero\n¶\nWe didn't have a way to\nupdate a hero\nin the previous version of the app, but now with\nmultiple models\n, we can do it. 🎉\nThe\nHeroUpdate\ndata model\nis somewhat special, it has\nall the same fields\nthat would be needed to create a new hero, but all the fields are\noptional\n(they all have a default value). This way, when you update a hero, you can send just the fields that you want to update.\nBecause all the\nfields actually change\n(the type now includes\nNone\nand they now have a default value of\nNone\n), we need to\nre-declare\nthem.\nWe don't really need to inherit from\nHeroBase\nbecause we are re-declaring all the fields. I'll leave it inheriting just for consistency, but this is not necessary. It's more a matter of personal taste. 🤷\nThe fields of\nHeroUpdate\nare:\nname\nage\nsecret_name\nPython 3.10+\n# Code above omitted 👆\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nCreate with\nHeroCreate\nand return a\nHeroPublic\n¶\nNow that we have\nmultiple models\n, we can update the parts of the app that use them.\nWe receive in the request a\nHeroCreate\ndata model\n, and from it, we create a\nHero\ntable model\n.\nThis new\ntable model\nHero\nwill have the fields sent by the client, and will also have an\nid\ngenerated by the database.\nThen we return the same\ntable model\nHero\nas is from the function. But as we declare the\nresponse_model\nwith the\nHeroPublic\ndata model\n,\nFastAPI\nwill use\nHeroPublic\nto validate and serialize the data.\nPython 3.10+\n# Code above omitted 👆\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nNow we use\nresponse_model=HeroPublic\ninstead of the\nreturn type annotation\n-> HeroPublic\nbecause the value that we are returning is actually\nnot\na\nHeroPublic\n.\nIf we had declared\n-> HeroPublic\n, your editor and linter would complain (rightfully so) that you are returning a\nHero\ninstead of a\nHeroPublic\n.\nBy declaring it in\nresponse_model\nwe are telling\nFastAPI\nto do its thing, without interfering with the type annotations and the help from your editor and other tools.\nRead Heroes with\nHeroPublic\n¶\nWe can do the same as before to\nread\nHero\ns, again, we use\nresponse_model=list[HeroPublic]\nto ensure that the data is validated and serialized correctly.\nPython 3.10+\n# Code above omitted 👆\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nRead One Hero with\nHeroPublic\n¶\nWe can\nread\na single hero:\nPython 3.10+\n# Code above omitted 👆\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nUpdate a Hero with\nHeroUpdate\n¶\nWe can\nupdate a hero\n. For this we use an HTTP\nPATCH\noperation.\nAnd in the code, we get a\ndict\nwith all the data sent by the client,\nonly the data sent by the client\n, excluding any values that would be there just for being the default values. To do it we use\nexclude_unset=True\n. This is the main trick. 🪄\nThen we use\nhero_db.sqlmodel_update(hero_data)\nto update the\nhero_db\nwith the data from\nhero_data\n.\nPython 3.10+\n# Code above omitted 👆\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n# Code below omitted 👇\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nDelete a Hero Again\n¶\nDeleting\na hero stays pretty much the same.\nWe won't satisfy the desire to refactor everything in this one. 😅\nPython 3.10+\n# Code above omitted 👆\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n👀 Full file preview\nPython 3.10+\nfrom\ntyping\nimport\nAnnotated\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\n🤓 Other versions and variants\nPython 3.9+\nPython 3.8+\nPython 3.10+ - non-Annotated\nPython 3.9+ - non-Annotated\nPython 3.8+ - non-Annotated\nfrom\ntyping\nimport\nAnnotated\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nfrom\ntyping_extensions\nimport\nAnnotated\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\nSessionDep\n=\nAnnotated\n[\nSession\n,\nDepends\n(\nget_session\n)]\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSessionDep\n):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSessionDep\n,\noffset\n:\nint\n=\n0\n,\nlimit\n:\nAnnotated\n[\nint\n,\nQuery\n(\nle\n=\n100\n)]\n=\n100\n,\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSessionDep\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSessionDep\n):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nint\n|\nNone\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nstr\n|\nNone\n=\nNone\nage\n:\nint\n|\nNone\n=\nNone\nsecret_name\n:\nstr\n|\nNone\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nlist\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nTip\nPrefer to use the\nAnnotated\nversion if possible.\nfrom\ntyping\nimport\nList\n,\nUnion\nfrom\nfastapi\nimport\nDepends\n,\nFastAPI\n,\nHTTPException\n,\nQuery\nfrom\nsqlmodel\nimport\nField\n,\nSession\n,\nSQLModel\n,\ncreate_engine\n,\nselect\nclass\nHeroBase\n(\nSQLModel\n):\nname\n:\nstr\n=\nField\n(\nindex\n=\nTrue\n)\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nindex\n=\nTrue\n)\nclass\nHero\n(\nHeroBase\n,\ntable\n=\nTrue\n):\nid\n:\nUnion\n[\nint\n,\nNone\n]\n=\nField\n(\ndefault\n=\nNone\n,\nprimary_key\n=\nTrue\n)\nsecret_name\n:\nstr\nclass\nHeroPublic\n(\nHeroBase\n):\nid\n:\nint\nclass\nHeroCreate\n(\nHeroBase\n):\nsecret_name\n:\nstr\nclass\nHeroUpdate\n(\nHeroBase\n):\nname\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nage\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\nsecret_name\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\nsqlite_file_name\n=\n\"database.db\"\nsqlite_url\n=\nf\n\"sqlite:///\n{\nsqlite_file_name\n}\n\"\nconnect_args\n=\n{\n\"check_same_thread\"\n:\nFalse\n}\nengine\n=\ncreate_engine\n(\nsqlite_url\n,\nconnect_args\n=\nconnect_args\n)\ndef\ncreate_db_and_tables\n():\nSQLModel\n.\nmetadata\n.\ncreate_all\n(\nengine\n)\ndef\nget_session\n():\nwith\nSession\n(\nengine\n)\nas\nsession\n:\nyield\nsession\napp\n=\nFastAPI\n()\n@app\n.\non_event\n(\n\"startup\"\n)\ndef\non_startup\n():\ncreate_db_and_tables\n()\n@app\n.\npost\n(\n\"/heroes/\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\ncreate_hero\n(\nhero\n:\nHeroCreate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\ndb_hero\n=\nHero\n.\nmodel_validate\n(\nhero\n)\nsession\n.\nadd\n(\ndb_hero\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\ndb_hero\n)\nreturn\ndb_hero\n@app\n.\nget\n(\n\"/heroes/\"\n,\nresponse_model\n=\nList\n[\nHeroPublic\n])\ndef\nread_heroes\n(\nsession\n:\nSession\n=\nDepends\n(\nget_session\n),\noffset\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\nQuery\n(\ndefault\n=\n100\n,\nle\n=\n100\n),\n):\nheroes\n=\nsession\n.\nexec\n(\nselect\n(\nHero\n)\n.\noffset\n(\noffset\n)\n.\nlimit\n(\nlimit\n))\n.\nall\n()\nreturn\nheroes\n@app\n.\nget\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nread_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nreturn\nhero\n@app\n.\npatch\n(\n\"/heroes/\n{hero_id}\n\"\n,\nresponse_model\n=\nHeroPublic\n)\ndef\nupdate_hero\n(\nhero_id\n:\nint\n,\nhero\n:\nHeroUpdate\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)\n):\nhero_db\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero_db\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nhero_data\n=\nhero\n.\nmodel_dump\n(\nexclude_unset\n=\nTrue\n)\nhero_db\n.\nsqlmodel_update\n(\nhero_data\n)\nsession\n.\nadd\n(\nhero_db\n)\nsession\n.\ncommit\n()\nsession\n.\nrefresh\n(\nhero_db\n)\nreturn\nhero_db\n@app\n.\ndelete\n(\n\"/heroes/\n{hero_id}\n\"\n)\ndef\ndelete_hero\n(\nhero_id\n:\nint\n,\nsession\n:\nSession\n=\nDepends\n(\nget_session\n)):\nhero\n=\nsession\n.\nget\n(\nHero\n,\nhero_id\n)\nif\nnot\nhero\n:\nraise\nHTTPException\n(\nstatus_code\n=\n404\n,\ndetail\n=\n\"Hero not found\"\n)\nsession\n.\ndelete\n(\nhero\n)\nsession\n.\ncommit\n()\nreturn\n{\n\"ok\"\n:\nTrue\n}\nRun the App Again\n¶\nYou can run the app again:\n$\nfastapi\ndev\nmain.py\n<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nIf you go to the\n/docs\nAPI UI, you will see that it is now updated, and it won't expect to receive the\nid\nfrom the client when creating a hero, etc.\nRecap\n¶\nYou can use\nSQLModel\nto interact with a SQL database and simplify the code with\ndata models\nand\ntable models\n.\nYou can learn a lot more at the\nSQLModel\ndocs, there's a longer mini\ntutorial on using SQLModel with\nFastAPI\n. 🚀\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/tutorial/query-params/",
    "title": "Query Parameters¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nQuery Parameters\nTable of contents\nDefaults\nOptional parameters\nQuery parameter type conversion\nMultiple path and query parameters\nRequired query parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nDefaults\nOptional parameters\nQuery parameter type conversion\nMultiple path and query parameters\nRequired query parameters\nFastAPI\nLearn\nTutorial - User Guide\nQuery Parameters\n¶\nWhen you declare other function parameters that are not part of the path parameters, they are automatically interpreted as \"query\" parameters.\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\nfake_items_db\n=\n[{\n\"item_name\"\n:\n\"Foo\"\n},\n{\n\"item_name\"\n:\n\"Bar\"\n},\n{\n\"item_name\"\n:\n\"Baz\"\n}]\n@app\n.\nget\n(\n\"/items/\"\n)\nasync\ndef\nread_item\n(\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n=\n10\n):\nreturn\nfake_items_db\n[\nskip\n:\nskip\n+\nlimit\n]\nThe query is the set of key-value pairs that go after the\n?\nin a URL, separated by\n&\ncharacters.\nFor example, in the URL:\nhttp://127.0.0.1:8000/items/?skip=0&limit=10\n...the query parameters are:\nskip\n: with a value of\n0\nlimit\n: with a value of\n10\nAs they are part of the URL, they are \"naturally\" strings.\nBut when you declare them with Python types (in the example above, as\nint\n), they are converted to that type and validated against it.\nAll the same process that applied for path parameters also applies for query parameters:\nEditor support (obviously)\nData\n\"parsing\"\nData validation\nAutomatic documentation\nDefaults\n¶\nAs query parameters are not a fixed part of a path, they can be optional and can have default values.\nIn the example above they have default values of\nskip=0\nand\nlimit=10\n.\nSo, going to the URL:\nhttp://127.0.0.1:8000/items/\nwould be the same as going to:\nhttp://127.0.0.1:8000/items/?skip=0&limit=10\nBut if you go to, for example:\nhttp://127.0.0.1:8000/items/?skip=20\nThe parameter values in your function will be:\nskip=20\n: because you set it in the URL\nlimit=10\n: because that was the default value\nOptional parameters\n¶\nThe same way, you can declare optional query parameters, by setting their default to\nNone\n:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n,\nq\n:\nstr\n|\nNone\n=\nNone\n):\nif\nq\n:\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"q\"\n:\nq\n}\nreturn\n{\n\"item_id\"\n:\nitem_id\n}\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n):\nif\nq\n:\nreturn\n{\n\"item_id\"\n:\nitem_id\n,\n\"q\"\n:\nq\n}\nreturn\n{\n\"item_id\"\n:\nitem_id\n}\nIn this case, the function parameter\nq\nwill be optional, and will be\nNone\nby default.\nCheck\nAlso notice that\nFastAPI\nis smart enough to notice that the path parameter\nitem_id\nis a path parameter and\nq\nis not, so, it's a query parameter.\nQuery parameter type conversion\n¶\nYou can also declare\nbool\ntypes, and they will be converted:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n,\nq\n:\nstr\n|\nNone\n=\nNone\n,\nshort\n:\nbool\n=\nFalse\n):\nitem\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nitem\n.\nupdate\n({\n\"q\"\n:\nq\n})\nif\nnot\nshort\n:\nitem\n.\nupdate\n(\n{\n\"description\"\n:\n\"This is an amazing item that has a long description\"\n}\n)\nreturn\nitem\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_item\n(\nitem_id\n:\nstr\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nshort\n:\nbool\n=\nFalse\n):\nitem\n=\n{\n\"item_id\"\n:\nitem_id\n}\nif\nq\n:\nitem\n.\nupdate\n({\n\"q\"\n:\nq\n})\nif\nnot\nshort\n:\nitem\n.\nupdate\n(\n{\n\"description\"\n:\n\"This is an amazing item that has a long description\"\n}\n)\nreturn\nitem\nIn this case, if you go to:\nhttp://127.0.0.1:8000/items/foo?short=1\nor\nhttp://127.0.0.1:8000/items/foo?short=True\nor\nhttp://127.0.0.1:8000/items/foo?short=true\nor\nhttp://127.0.0.1:8000/items/foo?short=on\nor\nhttp://127.0.0.1:8000/items/foo?short=yes\nor any other case variation (uppercase, first letter in uppercase, etc), your function will see the parameter\nshort\nwith a\nbool\nvalue of\nTrue\n. Otherwise as\nFalse\n.\nMultiple path and query parameters\n¶\nYou can declare multiple path parameters and query parameters at the same time,\nFastAPI\nknows which is which.\nAnd you don't have to declare them in any specific order.\nThey will be detected by name:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/users/\n{user_id}\n/items/\n{item_id}\n\"\n)\nasync\ndef\nread_user_item\n(\nuser_id\n:\nint\n,\nitem_id\n:\nstr\n,\nq\n:\nstr\n|\nNone\n=\nNone\n,\nshort\n:\nbool\n=\nFalse\n):\nitem\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"owner_id\"\n:\nuser_id\n}\nif\nq\n:\nitem\n.\nupdate\n({\n\"q\"\n:\nq\n})\nif\nnot\nshort\n:\nitem\n.\nupdate\n(\n{\n\"description\"\n:\n\"This is an amazing item that has a long description\"\n}\n)\nreturn\nitem\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/users/\n{user_id}\n/items/\n{item_id}\n\"\n)\nasync\ndef\nread_user_item\n(\nuser_id\n:\nint\n,\nitem_id\n:\nstr\n,\nq\n:\nUnion\n[\nstr\n,\nNone\n]\n=\nNone\n,\nshort\n:\nbool\n=\nFalse\n):\nitem\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"owner_id\"\n:\nuser_id\n}\nif\nq\n:\nitem\n.\nupdate\n({\n\"q\"\n:\nq\n})\nif\nnot\nshort\n:\nitem\n.\nupdate\n(\n{\n\"description\"\n:\n\"This is an amazing item that has a long description\"\n}\n)\nreturn\nitem\nRequired query parameters\n¶\nWhen you declare a default value for non-path parameters (for now, we have only seen query parameters), then it is not required.\nIf you don't want to add a specific value but just make it optional, set the default as\nNone\n.\nBut when you want to make a query parameter required, you can just not declare any default value:\nPython 3.8+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_user_item\n(\nitem_id\n:\nstr\n,\nneedy\n:\nstr\n):\nitem\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"needy\"\n:\nneedy\n}\nreturn\nitem\nHere the query parameter\nneedy\nis a required query parameter of type\nstr\n.\nIf you open in your browser a URL like:\nhttp://127.0.0.1:8000/items/foo-item\n...without adding the required parameter\nneedy\n, you will see an error like:\n{\n\"detail\"\n:\n[\n{\n\"type\"\n:\n\"missing\"\n,\n\"loc\"\n:\n[\n\"query\"\n,\n\"needy\"\n],\n\"msg\"\n:\n\"Field required\"\n,\n\"input\"\n:\nnull\n}\n]\n}\nAs\nneedy\nis a required parameter, you would need to set it in the URL:\nhttp://127.0.0.1:8000/items/foo-item?needy=sooooneedy\n...this would work:\n{\n\"item_id\"\n:\n\"foo-item\"\n,\n\"needy\"\n:\n\"sooooneedy\"\n}\nAnd of course, you can define some parameters as required, some as having a default value, and some entirely optional:\nPython 3.10+\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_user_item\n(\nitem_id\n:\nstr\n,\nneedy\n:\nstr\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nint\n|\nNone\n=\nNone\n):\nitem\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"needy\"\n:\nneedy\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\nreturn\nitem\n🤓 Other versions and variants\nPython 3.8+\nfrom\ntyping\nimport\nUnion\nfrom\nfastapi\nimport\nFastAPI\napp\n=\nFastAPI\n()\n@app\n.\nget\n(\n\"/items/\n{item_id}\n\"\n)\nasync\ndef\nread_user_item\n(\nitem_id\n:\nstr\n,\nneedy\n:\nstr\n,\nskip\n:\nint\n=\n0\n,\nlimit\n:\nUnion\n[\nint\n,\nNone\n]\n=\nNone\n):\nitem\n=\n{\n\"item_id\"\n:\nitem_id\n,\n\"needy\"\n:\nneedy\n,\n\"skip\"\n:\nskip\n,\n\"limit\"\n:\nlimit\n}\nreturn\nitem\nIn this case, there are 3 query parameters:\nneedy\n, a required\nstr\n.\nskip\n, an\nint\nwith a default value of\n0\n.\nlimit\n, an optional\nint\n.\nTip\nYou could also use\nEnum\ns the same way as with\nPath Parameters\n.\nBack to top"
  },
  {
    "url": "https://fastapi.tiangolo.com/external-links/",
    "title": "External Links and Articles¶",
    "content": "FastAPI\nfastapi/fastapi\nFastAPI\nFeatures\nLearn\nLearn\nPython Types Intro\nConcurrency and async / await\nEnvironment Variables\nVirtual Environments\nTutorial - User Guide\nTutorial - User Guide\nFirst Steps\nPath Parameters\nQuery Parameters\nRequest Body\nQuery Parameters and String Validations\nPath Parameters and Numeric Validations\nQuery Parameter Models\nBody - Multiple Parameters\nBody - Fields\nBody - Nested Models\nDeclare Request Example Data\nExtra Data Types\nCookie Parameters\nHeader Parameters\nCookie Parameter Models\nHeader Parameter Models\nResponse Model - Return Type\nExtra Models\nResponse Status Code\nForm Data\nForm Models\nRequest Files\nRequest Forms and Files\nHandling Errors\nPath Operation Configuration\nJSON Compatible Encoder\nBody - Updates\nDependencies\nDependencies\nClasses as Dependencies\nSub-dependencies\nDependencies in path operation decorators\nGlobal Dependencies\nDependencies with yield\nSecurity\nSecurity\nSecurity - First Steps\nGet Current User\nSimple OAuth2 with Password and Bearer\nOAuth2 with Password (and hashing), Bearer with JWT tokens\nMiddleware\nCORS (Cross-Origin Resource Sharing)\nSQL (Relational) Databases\nBigger Applications - Multiple Files\nBackground Tasks\nMetadata and Docs URLs\nStatic Files\nTesting\nDebugging\nAdvanced User Guide\nAdvanced User Guide\nPath Operation Advanced Configuration\nAdditional Status Codes\nReturn a Response Directly\nCustom Response - HTML, Stream, File, others\nAdditional Responses in OpenAPI\nResponse Cookies\nResponse Headers\nResponse - Change Status Code\nAdvanced Dependencies\nAdvanced Security\nAdvanced Security\nOAuth2 scopes\nHTTP Basic Auth\nUsing the Request Directly\nUsing Dataclasses\nAdvanced Middleware\nSub Applications - Mounts\nBehind a Proxy\nTemplates\nWebSockets\nLifespan Events\nTesting WebSockets\nTesting Events: lifespan and startup - shutdown\nTesting Dependencies with Overrides\nAsync Tests\nSettings and Environment Variables\nOpenAPI Callbacks\nOpenAPI Webhooks\nIncluding WSGI - Flask, Django, others\nGenerating SDKs\nFastAPI CLI\nDeployment\nDeployment\nAbout FastAPI versions\nAbout HTTPS\nRun a Server Manually\nDeployments Concepts\nDeploy FastAPI on Cloud Providers\nServer Workers - Uvicorn with Workers\nFastAPI in Containers - Docker\nHow To - Recipes\nHow To - Recipes\nGeneral - How To - Recipes\nMigrate from Pydantic v1 to Pydantic v2\nGraphQL\nCustom Request and APIRoute class\nConditional OpenAPI\nExtending OpenAPI\nSeparate OpenAPI Schemas for Input and Output or Not\nCustom Docs UI Static Assets (Self-Hosting)\nConfigure Swagger UI\nTesting a Database\nReference\nReference\nFastAPI\nclass\nRequest Parameters\nStatus Codes\nUploadFile\nclass\nExceptions -\nHTTPException\nand\nWebSocketException\nDependencies -\nDepends()\nand\nSecurity()\nAPIRouter\nclass\nBackground Tasks -\nBackgroundTasks\nRequest\nclass\nWebSockets\nHTTPConnection\nclass\nResponse\nclass\nCustom Response Classes - File, HTML, Redirect, Streaming, etc.\nMiddleware\nOpenAPI\nOpenAPI\nOpenAPI\ndocs\nOpenAPI\nmodels\nSecurity Tools\nEncoders -\njsonable_encoder\nStatic Files -\nStaticFiles\nTemplating -\nJinja2Templates\nTest Client -\nTestClient\nFastAPI People\nResources\nResources\nHelp FastAPI - Get Help\nDevelopment - Contributing\nFull Stack FastAPI Template\nExternal Links and Articles\nExternal Links and Articles\nTable of contents\nArticles\nEnglish\nGerman\nJapanese\nPortuguese\nRussian\nVietnamese\nTaiwanese\nSpanish\nPodcasts\nEnglish\nTalks\nEnglish\nTaiwanese\nGitHub Repositories\nFastAPI and friends newsletter\nRepository Management Tasks\nAbout\nAbout\nAlternatives, Inspiration and Comparisons\nHistory, Design and Future\nBenchmarks\nRepository Management\nRelease Notes\nTable of contents\nArticles\nEnglish\nGerman\nJapanese\nPortuguese\nRussian\nVietnamese\nTaiwanese\nSpanish\nPodcasts\nEnglish\nTalks\nEnglish\nTaiwanese\nGitHub Repositories\nFastAPI\nResources\nExternal Links and Articles\n¶\nFastAPI\nhas a great community constantly growing.\nThere are many posts, articles, tools, and projects, related to\nFastAPI\n.\nHere's an incomplete list of some of them.\nTip\nIf you have an article, project, tool, or anything related to\nFastAPI\nthat is not yet listed here, create a\nPull Request adding it\n.\nArticles\n¶\nEnglish\n¶\nGetting started with logging in FastAPI\nby\nApitally\n.\nHow to profile a FastAPI asynchronous request\nby\nBalthazar Rouberol\n.\nDeploy a Serverless FastAPI App with Neon Postgres and AWS App Runner at any scale\nby\nStephen Siegert - Neon\n.\nBuilding a Machine Learning Microservice with FastAPI\nby\nKurtis Pykes - NVIDIA\n.\nBooking Appointments with Twilio, Notion, and FastAPI\nby\nRavgeet Dhillon - Twilio\n.\nWrite a Python data layer with Azure Cosmos DB and FastAPI\nby\nAbhinav Tripathi - Microsoft Blogs\n.\n10 Tips for adding SQLAlchemy to FastAPI\nby\nDonny Peeters\n.\nTips on migrating from Flask to FastAPI and vice-versa\nby\nJessica Temporal\n.\nExplore How to Effectively Use JWT With FastAPI\nby\nAnkit Anchlia\n.\nInstrument FastAPI with OpenTelemetry tracing and visualize traces in Grafana Tempo.\nby\nNicoló Lino\n.\nML serving and monitoring with FastAPI and Evidently\nby\nMikhail Rozhkov, Elena Samuylova\n.\nFastAPI Tutorial in Visual Studio Code\nby\nVisual Studio Code Team\n.\nFastAPI application monitoring made easy\nby\nApitally\n.\nBuilding a RESTful API with FastAPI: Secure Signup and Login Functionality Included\nby\nJohn Philip\n.\nBuilding a CRUD API with FastAPI and Supabase\nby\nKeshav Malik\n.\nBuild an SMS Spam Classifier Serverless Database with FaunaDB and FastAPI\nby\nAdejumo Ridwan Suleiman\n.\nFastAPI lambda container: serverless simplified\nby\nRaf Rasenberg\n.\nAuthorization on FastAPI with Casbin\nby\nTeresa N. Fontanella De Santis\n.\nHow to monitor FastAPI application performance using Python agent\nby\nNew Relic\n.\nBuilding the Poll App From Django Tutorial With FastAPI And React\nby\nJean-Baptiste Rocher\n.\nSeamless FastAPI Configuration with ConfZ\nby\nSilvan Melchior\n.\n5 Advanced Features of FastAPI You Should Try\nby\nKaustubh Gupta\n.\nDeploying ML Models as API Using FastAPI and Heroku\nby\nKaustubh Gupta\n.\nUsing GitHub Actions to Deploy a FastAPI Project to Heroku\nby\nSomraj Saha\n.\nHow to Create A Fake Certificate Authority And Generate TLS Certs for FastAPI\nby\n@pystar\n.\nBuilding a realtime ticket booking solution with Kafka, FastAPI, and Ably\nby\nBen Gamble\n.\nBuilding simple E-Commerce with NuxtJS and FastAPI\nby\nShahriyar(Shako) Rzayev\n.\nServe a machine learning model using Sklearn, FastAPI and Docker\nby\nRodrigo Arenas\n.\nBuilding an API with FastAPI and Supabase and Deploying on Deta\nby\nYashasvi Singh\n.\nDeploy FastAPI on Ubuntu and Serve using Caddy 2 Web Server\nby\nNavule Pavan Kumar Rao\n.\nPython Facebook messenger webhook with FastAPI on Glitch\nby\nPatrick Ladon\n.\nDeploy a dockerized FastAPI application to AWS\nby\nValon Januzaj\n.\nFastAPI for Flask Users\nby\nAmit Chaudhary\n.\nHow to monitor your FastAPI service\nby\nLouis Guitton\n.\nCreating a CRUD App with FastAPI (Part one)\nby\nPrecious Ndubueze\n.\nBuild And Host Fast Data Science Applications Using FastAPI\nby\nFarhad Malik\n.\nDeploy FastAPI on Azure App Service\nby\nNavule Pavan Kumar Rao\n.\nMachine learning model serving in Python using FastAPI and streamlit\nby\nDavide Fiocco\n.\nIntroducing Dispatch\nby\nNetflix\n.\nUsing FastAPI with Django\nby\nStavros Korokithakis\n.\nBuild a Secure Twilio Webhook with Python and FastAPI\nby\nTwilio\n.\nBuild a web API from scratch with FastAPI - the workshop\nby\nSebastián Ramírez (tiangolo)\n.\nFastAPI + Zeit.co = 🚀\nby\nPaul Sec\n.\nBuild simple API service with Python FastAPI — Part 1\nby\ncuongld2\n.\nMicroservice in Python using FastAPI\nby\nPaurakh Sharma Humagain\n.\nReal-time Notifications with Python and Postgres\nby\nGuillermo Cruz\n.\nCreate and Deploy FastAPI app to Heroku without using Docker\nby\nNavule Pavan Kumar Rao\n.\nAnother Boilerplate to FastAPI: Azure Pipeline CI + Pytest\nby\nArthur Henrique\n.\nDeploy Machine Learning Models with Keras, FastAPI, Redis and Docker\nby\nShane Soh\n.\nTowards Data Science: Deploying Iris Classifications with FastAPI and Docker\nby\nMandy Gu\n.\nTestDriven.io: Developing and Testing an Asynchronous API with FastAPI and Pytest\nby\nMichael Herman\n.\nHow To Deploy Tensorflow 2.0 Models As An API Service With FastAPI & Docker\nby\nBernard Brenyah\n.\nWhy I'm Leaving Flask\nby\nDylan Anthony\n.\nUsing Docker Compose to deploy a lightweight Python REST API with a job queue\nby\nMike Moritz\n.\nA FastAPI and Swagger UI visual cheatsheet\nby\n@euri10\n.\nUber: Ludwig v0.2 Adds New Features and Other Improvements to its Deep Learning Toolbox [including a FastAPI server]\nby\nUber Engineering\n.\nHow to Deploy a Machine Learning Model\nby\nMaarten Grootendorst\n.\nJWT Authentication with FastAPI and AWS Cognito\nby\nJohannes Gontrum\n.\nTop 5 Asynchronous Web Frameworks for Python\nby\nAnkush Thakur\n.\nDeploying a scikit-learn model with ONNX and FastAPI\nby\nNico Axtmann\n.\nFastAPI authentication revisited: Enabling API key authentication\nby\nNils de Bruin\n.\nFastAPI and Scikit-Learn: Easily Deploy Models\nby\nNick Cortale\n.\nIntroduction to the fastapi python framework\nby\nErrieta Kostala\n.\nFastAPI — How to add basic and cookie authentication\nby\nNils de Bruin\n.\nFastAPI — Google as an external authentication provider\nby\nNils de Bruin\n.\nFastAPI/Starlette debug vs prod\nby\nWilliam Hayes\n.\nDeveloping FastAPI Application using K8s & AWS\nby\nMukul Mantosh\n.\nFastapi, Docker(Docker compose) and Postgres\nby\nKrishNa\n.\nDeployment using Docker, Lambda, Aurora, CDK & GH Actions\nby\nDevon Ray\n.\nMastering Soft Delete: Advanced SQLAlchemy Techniques\nby\nShubhendra Kushwaha\n.\nRole based row filtering: Advanced SQLAlchemy Techniques\nby\nShubhendra Kushwaha\n.\nGerman\n¶\nDomain-driven Design mit Python und FastAPI\nby\nMarcel Sander (actidoo)\n.\nInbetriebnahme eines scikit-learn-Modells mit ONNX und FastAPI\nby\nNico Axtmann\n.\nREST-API Programmieren mittels Python und dem FastAPI Modul\nby\nFelix Schürmeyer\n.\nJapanese\n¶\n[FastAPI] Python製のASGI Web フレームワーク FastAPIに入門する\nby\n@bee2\n.\nPythonのWeb frameworkのパフォーマンス比較 (Django, Flask, responder, FastAPI, japronto)\nby\n@bee2\n.\n【第4回】FastAPIチュートリアル: toDoアプリを作ってみよう【管理者ページ改良編】\nby\nライトコードメディア編集部\n.\n【第3回】FastAPIチュートリアル: toDoアプリを作ってみよう【認証・ユーザ登録編】\nby\nライトコードメディア編集部\n.\n【第2回】FastAPIチュートリアル: ToDoアプリを作ってみよう【モデル構築編】\nby\nライトコードメディア編集部\n.\n【第1回】FastAPIチュートリアル: ToDoアプリを作ってみよう【環境構築編】\nby\nライトコードメディア編集部\n.\nフロントエンド開発者向けのDockerによるPython開発環境構築\nby\nHikaru Takahashi\n.\nFastAPIでPOSTされたJSONのレスポンスbodyを受け取る\nby\n@angel_katayoku\n.\nFastAPIをMySQLと接続してDockerで管理してみる\nby\n@angel_katayoku\n.\nFastAPIでCORSを回避\nby\n@angel_katayoku\n.\npython製の最新APIフレームワーク FastAPI を触ってみた\nby\n@ryoryomaru\n.\nFastAPI｜DB接続してCRUDするPython製APIサーバーを構築\nby\n@mtitg\n.\nPortuguese\n¶\nFastAPI do ZERO\nby\nEduardo Mendes\n.\nDicas para migrar uma aplicação de Flask para FastAPI e vice-versa\nby\nJessica Temporal\n.\nRussian\n¶\nFastAPI: знакомимся с фреймворком\nby\nTroy Köhler\n.\nПочему Вы должны попробовать FastAPI?\nby\nprostomarkeloff\n.\nМелкая питонячая радость #2: Starlette - Солидная примочка – FastAPI\nby\nAndrey Korchak\n.\nVietnamese\n¶\nFASTAPI: TRIỂN KHAI BẰNG DOCKER\nby\nNguyễn Nhân\n.\nTaiwanese\n¶\nTortoise ORM / FastAPI 整合快速筆記\nby\nLeon\n.\nSpanish\n¶\nTutorial de FastAPI, ¿el mejor framework de Python?\nby\nEduardo Zepeda\n.\nPodcasts\n¶\nEnglish\n¶\nStarting With FastAPI and Examining Python's Import System - Episode 72\nby\nReal Python\n.\nDo you dare to press \".\"? - Episode 247 - Dan #6: SQLModel - use the same models for SQL and FastAPI\nby\nPython Bytes FM\n.\nBuild The Next Generation Of Python Web Applications With FastAPI - Episode 259 - interview to Sebastían Ramírez (tiangolo)\nby\nPodcast.\n__init__\n.\nFastAPI on PythonBytes\nby\nPython Bytes FM\n.\nTalks\n¶\nEnglish\n¶\nPyCon AU 2023: Testing asynchronous applications with FastAPI and pytest\nby\nJeny Sadadia\n.\n[VIRTUAL] Py.Amsterdam's flying Software Circus: Intro to FastAPI\nby\nSebastián Ramírez (tiangolo)\n.\nPyConBY 2020: Serve ML models easily with FastAPI\nby\nSebastián Ramírez (tiangolo)\n.\nPyCon UK 2019: FastAPI from the ground up\nby\nChris Withers\n.\nTaiwanese\n¶\nPyCon TW 2024: 全方位強化 Python 服務可觀測性：以 FastAPI 和 Grafana Stack 為例\nby\nBlueswen\n.\nGitHub Repositories\n¶\nMost starred GitHub repositories with the topic\nfastapi\n:\n★ 38085 - full-stack-fastapi-template\nby\n@fastapi\n.\n★ 32243 - Hello-Python\nby\n@mouredev\n.\n★ 21754 - serve\nby\n@jina-ai\n.\n★ 19400 - HivisionIDPhotos\nby\n@Zeyi-Lin\n.\n★ 16859 - sqlmodel\nby\n@fastapi\n.\n★ 14452 - Douyin_TikTok_Download_API\nby\n@Evil0ctal\n.\n★ 13613 - fastapi-best-practices\nby\n@zhanymkanov\n.\n★ 10624 - fastapi_mcp\nby\n@tadata-org\n.\n★ 10415 - awesome-fastapi\nby\n@mjhea0\n.\n★ 8879 - FastUI\nby\n@pydantic\n.\n★ 8824 - XHS-Downloader\nby\n@JoeanAmier\n.\n★ 8257 - SurfSense\nby\n@MODSetter\n.\n★ 7367 - FileCodeBox\nby\n@vastsa\n.\n★ 7291 - polar\nby\n@polarsource\n.\n★ 7065 - nonebot2\nby\n@nonebot\n.\n★ 6070 - hatchet\nby\n@hatchet-dev\n.\n★ 5754 - serge\nby\n@serge-chat\n.\n★ 5599 - fastapi-users\nby\n@fastapi-users\n.\n★ 4422 - strawberry\nby\n@strawberry-graphql\n.\n★ 4301 - chatgpt-web-share\nby\n@chatpire\n.\n★ 4197 - poem\nby\n@poem-web\n.\n★ 4144 - dynaconf\nby\n@dynaconf\n.\n★ 4094 - atrilabs-engine\nby\n@Atri-Labs\n.\n★ 3739 - Kokoro-FastAPI\nby\n@remsky\n.\n★ 3614 - logfire\nby\n@pydantic\n.\n★ 3578 - LitServe\nby\n@Lightning-AI\n.\n★ 3496 - datamodel-code-generator\nby\n@koxudaxi\n.\n★ 3459 - farfalle\nby\n@rashadphz\n.\n★ 3456 - fastapi-admin\nby\n@fastapi-admin\n.\n★ 3447 - huma\nby\n@danielgtaylor\n.\n★ 3254 - tracecat\nby\n@TracecatHQ\n.\n★ 3134 - opyrator\nby\n@ml-tooling\n.\n★ 3107 - docarray\nby\n@docarray\n.\n★ 2936 - fastapi-realworld-example-app\nby\n@nsidnev\n.\n★ 2804 - uvicorn-gunicorn-fastapi-docker\nby\n@tiangolo\n.\n★ 2610 - best-of-web-python\nby\n@ml-tooling\n.\n★ 2572 - mcp-context-forge\nby\n@IBM\n.\n★ 2451 - fastapi-react\nby\n@Buuntu\n.\n★ 2441 - RasaGPT\nby\n@paulpierre\n.\n★ 2424 - FastAPI-template\nby\n@s3rius\n.\n★ 2357 - sqladmin\nby\n@aminalaee\n.\n★ 2324 - nextpy\nby\n@dot-agent\n.\n★ 2236 - supabase-py\nby\n@supabase\n.\n★ 2210 - 30-Days-of-Python\nby\n@codingforentrepreneurs\n.\n★ 2171 - langserve\nby\n@langchain-ai\n.\n★ 2164 - fastapi-utils\nby\n@fastapiutils\n.\n★ 2102 - solara\nby\n@widgetti\n.\n★ 1995 - Yuxi-Know\nby\n@xerrors\n.\n★ 1989 - mangum\nby\n@Kludex\n.\n★ 1816 - python-week-2022\nby\n@rochacbruno\n.\n★ 1789 - agentkit\nby\n@BCG-X-Official\n.\n★ 1780 - manage-fastapi\nby\n@ycd\n.\n★ 1777 - ormar\nby\n@collerek\n.\n★ 1707 - openapi-python-client\nby\n@openapi-generators\n.\n★ 1695 - piccolo\nby\n@piccolo-orm\n.\n★ 1695 - vue-fastapi-admin\nby\n@mizhexiaoxiao\n.\n★ 1653 - fastapi-cache\nby\n@long2ice\n.\n★ 1635 - langchain-serve\nby\n@jina-ai\n.\n★ 1624 - termpair\nby\n@cs01\n.\n★ 1620 - slowapi\nby\n@laurentS\n.\n★ 1576 - coronavirus-tracker-api\nby\n@ExpDev07\n.\n★ 1546 - fastapi-crudrouter\nby\n@awtkns\n.\n★ 1516 - FastAPI-boilerplate\nby\n@benavlabs\n.\n★ 1481 - awesome-fastapi-projects\nby\n@Kludex\n.\n★ 1453 - fastapi-pagination\nby\n@uriyyo\n.\n★ 1415 - bracket\nby\n@evroon\n.\n★ 1413 - awesome-python-resources\nby\n@DjangoEx\n.\n★ 1406 - fastapi-boilerplate\nby\n@teamhide\n.\n★ 1346 - budgetml\nby\n@ebhy\n.\n★ 1342 - fastapi-amis-admin\nby\n@amisadmin\n.\n★ 1334 - fastapi-langgraph-agent-production-ready-template\nby\n@wassim249\n.\n★ 1303 - fastapi-tutorial\nby\n@liaogx\n.\n★ 1276 - fastapi_best_architecture\nby\n@fastapi-practices\n.\n★ 1272 - fastcrud\nby\n@benavlabs\n.\n★ 1253 - fastapi-code-generator\nby\n@koxudaxi\n.\n★ 1246 - prometheus-fastapi-instrumentator\nby\n@trallnag\n.\n★ 1221 - bolt-python\nby\n@slackapi\n.\n★ 1220 - bedrock-chat\nby\n@aws-samples\n.\n★ 1202 - fastapi_production_template\nby\n@zhanymkanov\n.\n★ 1193 - fastapi-scaff\nby\n@atpuxiner\n.\n★ 1164 - langchain-extract\nby\n@langchain-ai\n.\n★ 1149 - fastapi-alembic-sqlmodel-async\nby\n@jonra1993\n.\n★ 1133 - odmantic\nby\n@art049\n.\n★ 1122 - restish\nby\n@rest-sh\n.\n★ 1047 - runhouse\nby\n@run-house\n.\n★ 1027 - flock\nby\n@Onelevenvy\n.\n★ 999 - authx\nby\n@yezz123\n.\n★ 999 - autollm\nby\n@viddexa\n.\n★ 995 - lanarky\nby\n@ajndkr\n.\n★ 952 - titiler\nby\n@developmentseed\n.\n★ 946 - energy-forecasting\nby\n@iusztinpaul\n.\n★ 944 - secure\nby\n@TypeError\n.\n★ 934 - langcorn\nby\n@msoedov\n.\n★ 930 - RuoYi-Vue3-FastAPI\nby\n@insistence\n.\n★ 916 - aktools\nby\n@akfamily\n.\n★ 907 - every-pdf\nby\n@DDULDDUCK\n.\n★ 903 - marker-api\nby\n@adithya-s-k\n.\n★ 902 - fastapi-observability\nby\n@blueswen\n.\n★ 900 - fastapi-do-zero\nby\n@dunossauro\n.\nBack to top"
  }
]